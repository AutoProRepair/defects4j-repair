export PATH="/home/tdurieux/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cp -r /home/tdurieux/projects/lang/lang_46 /tmp/lang_46_Genprog;cd /tmp/lang_46_Genprog;defects4j compile;mkdir lib/;cp -r /home/tdurieux/defects4j/framework/projects/lib/* lib/;cp -r /home/tdurieux/defects4j/framework/projects/Lang/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/tdurieux/defects4j-repair/src/python/core/../../../results/Lang/46/Genprog/result
cd /tmp/lang_46_Genprog;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time java  -cp /home/tdurieux/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement -location . -dependencies lib/ -failing org.apache.commons.lang.StringEscapeUtilsTest: -package org.apache.commons -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -javacompliancelevel 3 -maxgen 1000000 -seed 10 -population 1 -srcjavafolder src/java/ -srctestfolder src/test/ -binjavafolder target/classes/ -bintestfolder target/tests/;echo "

Node: `hostname`
";echo "
Date: `date`
";rm -rf /tmp/lang_46_Genprog;

2015-08-06 20:25:27,676 INFO main - End Repair Loops: NOT Found solution
2015-08-06 20:25:27,676 INFO main - 
Number solutions:0
2015-08-06 20:25:27,676 INFO main - 
All variants:
2015-08-06 20:25:27,676 INFO main - f 80.0, [Variant id: 14249, #gens: 12, #ops: 0, parent:-]
2015-08-06 20:25:27,676 INFO main - --Space: LOCAL
org.apache.commons.lang.StringEscapeUtils=150|,
2015-08-06 20:25:27,676 INFO main - 
----stats: 
2015-08-06 20:25:27,676 INFO main - 
spaces navigation: [59]: {(CtIfImpl| size: 150| compiles| LOCAL| INSERT_AFTER) =165, (CtAssignmentImpl| size: 150| compiles| LOCAL| INSERT_BEFORE) =42, (CtSwitchImpl| size: 150| compiles| LOCAL| INSERT_BEFORE) =49, (CtInvocationImpl| size: 150| alreadyanalyzed| LOCAL| INSERT_BEFORE) =65946, (CtReturnImpl| size: 150| notcompiles| LOCAL| INSERT_AFTER) =94, (CtForImpl| size: 150| compiles| LOCAL| INSERT_BEFORE) =43, (CtLocalVariableImpl| size: 150| alreadyanalyzed| LOCAL| INSERT_AFTER) =140118, (CtSwitchImpl| size: 150| notcompiles| LOCAL| INSERT_BEFORE) =36, (CtLocalVariableImpl| size: 150| notcompiles| LOCAL| INSERT_AFTER) =94, (CtLocalVariableImpl| size: 150| alreadyanalyzed| LOCAL| INSERT_BEFORE) =131410, (CtReturnImpl| size: 150| notcompiles| LOCAL| INSERT_BEFORE) =94, (CtAssignmentImpl| size: 150| compiles| LOCAL| INSERT_AFTER) =42, (CtLocalVariableImpl| size: 150| notcompiles| LOCAL| INSERT_BEFORE) =94, (CtAssignmentImpl| size: 150| alreadyanalyzed| LOCAL| INSERT_BEFORE) =64551, (CtReturnImpl| size: 150| compiles| LOCAL| INSERT_AFTER) =76, (CtInvocationImpl| size: 150| compiles| LOCAL| INSERT_AFTER) =42, (CtReturnImpl| size: 150| alreadyanalyzed| LOCAL| INSERT_AFTER) =144512, (CtAssignmentImpl| size: 150| alreadyanalyzed| LOCAL| INSERT_AFTER) =66794, (CtLocalVariableImpl| size: 16| alreadyanalyzed| LOCAL| REPLACE) =14427, (CtForImpl| size: 3| notcompiles| LOCAL| REPLACE) =2, (CtSwitchImpl| size: 3| compiles| LOCAL| REPLACE) =2, (CtReturnImpl| size: 150| alreadyanalyzed| LOCAL| INSERT_BEFORE) =135778, (CtSwitchImpl| size: 3| alreadyanalyzed| LOCAL| REPLACE) =1413, (CtForImpl| size: 150| notcompiles| LOCAL| INSERT_BEFORE) =42, (CtForImpl| size: 3| alreadyanalyzed| LOCAL| REPLACE) =1435, (CtInvocationImpl| size: 39| compiles| LOCAL| REPLACE) =6, (CtReturnImpl| size: 38| notcompiles| LOCAL| REPLACE) =7, (CtReturnImpl| size: 38| compiles| LOCAL| REPLACE) =13, (CtAssignmentImpl| size: 150| notcompiles| LOCAL| INSERT_BEFORE) =43, (CtLocalVariableImpl| size: 150| compiles| LOCAL| INSERT_BEFORE) =73, (CtIfImpl| size: 33| compiles| LOCAL| REPLACE) =28, (CtIfImpl| size: 150| compiles| LOCAL| INSERT_BEFORE) =165, (CtInvocationImpl| size: 39| notcompiles| LOCAL| REPLACE) =21, (CtLocalVariableImpl| size: 150| compiles| LOCAL| INSERT_AFTER) =73, (CtIfImpl| size: 33| alreadyanalyzed| LOCAL| REPLACE) =62736, (CtIfImpl| size: 150| alreadyanalyzed| LOCAL| INSERT_BEFORE) =260652, (CtReturnImpl| size: 38| alreadyanalyzed| LOCAL| REPLACE) =36308, (CtSwitchImpl| size: 150| notcompiles| LOCAL| INSERT_AFTER) =36, (CtSwitchImpl| size: 150| alreadyanalyzed| LOCAL| INSERT_AFTER) =70980, (CtForImpl| size: 150| alreadyanalyzed| LOCAL| INSERT_AFTER) =61001, (CtIfImpl| size: 150| notcompiles| LOCAL| INSERT_BEFORE) =175, (CtLocalVariableImpl| size: 16| compiles| LOCAL| REPLACE) =21, (CtAssignmentImpl| size: 7| notcompiles| LOCAL| REPLACE) =5, (CtInvocationImpl| size: 39| alreadyanalyzed| LOCAL| REPLACE) =18560, (CtInvocationImpl| size: 150| notcompiles| LOCAL| INSERT_AFTER) =43, (CtForImpl| size: 150| compiles| LOCAL| INSERT_AFTER) =43, (CtReturnImpl| size: 150| compiles| LOCAL| INSERT_BEFORE) =76, (CtForImpl| size: 150| alreadyanalyzed| LOCAL| INSERT_BEFORE) =71451, (CtSwitchImpl| size: 150| compiles| LOCAL| INSERT_AFTER) =49, (CtIfImpl| size: 150| notcompiles| LOCAL| INSERT_AFTER) =175, (CtForImpl| size: 150| notcompiles| LOCAL| INSERT_AFTER) =42, (CtSwitchImpl| size: 150| alreadyanalyzed| LOCAL| INSERT_BEFORE) =64359, (CtAssignmentImpl| size: 7| alreadyanalyzed| LOCAL| REPLACE) =3250, (CtInvocationImpl| size: 150| notcompiles| LOCAL| INSERT_BEFORE) =43, (CtIfImpl| size: 33| notcompiles| LOCAL| REPLACE) =36, (CtIfImpl| size: 150| alreadyanalyzed| LOCAL| INSERT_AFTER) =277018, (CtInvocationImpl| size: 150| compiles| LOCAL| INSERT_BEFORE) =42, (CtInvocationImpl| size: 150| alreadyanalyzed| LOCAL| INSERT_AFTER) =66399, (CtAssignmentImpl| size: 150| notcompiles| LOCAL| INSERT_AFTER) =43}
#gen: 7124
#patches: 0
#RightCompilation: 3354
#WrongCompilation: 3613
#FailingTestCaseExecution: 3355
#RegressionTestExecution: 1
#TestcasesExecutedval1: 60390
#TestcasesExecutedval2: 1748
#FailingTestCase: 18
#RegressionTestCases: 1748
#OfAppliedOp: 6967
#NotAppliedOp: 0
#InmutatedGen: 16384
#unfinishValidation: 0
#ing {CtLocalVariableImpl=3826, CtForImpl=1942, CtSwitchImpl=1945, CtAssignmentImpl=1913, CtReturnImpl=4047, CtInvocationImpl=1934, CtIfImpl=7744}
#untilcompile {1=192, 2=138, 3=151, 4=68, 1097=1, 5=41, 6=46, 7=55, 1099=3, 1092=1, 8=15, 9=24, 1093=1, 10=21, 1094=2, 1095=1, 11=13, 1088=3, 12=9, 1089=3, 13=11, 14=8, 1091=1, 15=14, 17=15, 1116=3, 16=92, 1119=1, 19=19, 18=11, 21=4, 20=4, 23=5, 22=8, 25=1, 1108=2, 24=7, 27=1, 26=3, 29=5, 1104=1, 31=2, 30=2, 34=12, 1135=2, 35=12, 1132=3, 32=3, 33=145, 1130=1, 38=69, 39=44, 36=13, 1128=2, 1129=1, 37=7, 1126=2, 42=11, 1127=1, 43=10, 40=13, 1124=1, 1125=1, 41=20, 1122=1, 46=8, 47=1, 1123=1, 1120=2, 44=4, 1121=4, 45=7, 1151=1, 51=3, 50=4, 49=14, 1149=1, 48=3, 1147=2, 55=6, 54=12, 53=1, 1144=1, 52=2, 1143=2, 59=1, 1142=3, 57=4, 1140=2, 56=3, 62=2, 61=2, 60=1, 68=3, 69=2, 71=9, 1037=1, 65=2, 66=8, 1039=2, 67=1, 76=1, 77=4, 1026=3, 78=2, 79=2, 72=11, 1028=1, 1029=1, 73=2, 74=3, 1030=2, 1031=1, 75=3, 84=2, 87=3, 1051=1, 1050=8, 1053=5, 81=3, 80=3, 1052=1, 82=7, 92=2, 1043=1, 95=1, 94=1, 88=3, 90=1, 102=1, 1066=6, 1064=2, 101=1, 96=1, 1069=1, 1058=1, 110=3, 111=1, 1056=2, 109=3, 1057=1, 106=2, 1060=3, 104=2, 1083=11, 1086=5, 113=1, 127=1, 1075=2, 126=1, 124=1, 123=1, 1079=1, 122=1, 120=2, 1223=1, 138=1, 1222=1, 1216=2, 143=1, 1219=3, 142=1, 1226=3, 1236=2, 152=1, 153=76, 154=1, 1238=2, 155=1, 1239=2, 156=2, 157=24, 158=2, 159=2, 1244=1, 144=1, 1246=1, 1241=1, 150=702, 151=1, 1255=3, 169=5, 168=2, 1252=2, 175=2, 174=1, 1249=1, 173=4, 172=1, 163=1, 162=1, 161=2, 1260=1, 160=2, 1259=2, 167=2, 166=66, 1256=1, 164=1, 186=18, 1271=3, 187=1, 1266=1, 190=10, 191=11, 188=61, 1265=1, 189=26, 1278=1, 178=2, 179=1, 1277=1, 177=1, 183=133, 1272=3, 1153=1, 205=3, 204=10, 207=1, 1155=2, 1156=1, 200=1, 1159=1, 1158=1, 202=2, 197=2, 196=3, 199=16, 198=1, 193=8, 192=1, 1164=1, 1167=1, 195=4, 1166=1, 1168=1, 221=14, 1170=1, 222=11, 223=1, 216=15, 1173=3, 1174=1, 218=1, 219=3, 1176=1, 212=1, 214=1, 215=1, 208=1, 209=1, 1183=1, 238=1, 237=2, 234=2, 233=1, 232=1, 231=2, 230=1, 1194=1, 229=2, 228=3, 227=3, 226=2, 1198=1, 1197=1, 225=1, 224=4, 254=6, 1203=6, 255=2, 1200=8, 1206=1, 1207=2, 249=1, 1210=1, 247=2, 1214=1, 1366=1, 287=1, 258=2, 259=2, 262=1, 263=1, 260=2, 1350=1, 264=1, 265=1, 270=1, 269=1, 307=27, 1407=2, 1406=1, 306=3, 309=2, 308=2, 310=5, 1402=4, 1399=2, 317=2, 1393=1, 316=37, 319=6, 318=1, 288=1, 1389=2, 289=1, 1390=1, 290=1, 1391=1, 1385=1, 1386=1, 295=1, 1383=1, 1376=3, 300=378, 303=45, 1307=2, 342=2, 341=6, 340=8, 339=22, 338=58, 1309=1, 336=16, 1308=1, 349=14, 348=2, 1303=1, 1302=1, 346=4, 345=1, 344=2, 1290=4, 1291=2, 324=1, 1294=1, 322=2, 323=4, 1295=2, 1292=1, 1293=1, 1282=1, 335=1, 332=2, 1281=2, 333=88, 1287=1, 1285=1, 373=2, 372=5, 374=4, 369=2, 368=1, 1343=1, 371=14, 1342=1, 380=2, 382=3, 377=5, 376=4, 379=5, 378=3, 1320=2, 356=5, 357=2, 1321=4, 358=3, 352=3, 1326=1, 354=8, 355=1, 1312=3, 1313=4, 366=9, 1315=2, 361=1, 1317=1, 363=1, 410=4, 411=1, 409=3, 412=1, 402=1, 1503=1, 1500=3, 400=1, 401=1, 407=2, 404=5, 405=1, 395=1, 394=1, 392=1, 399=1, 398=1, 387=4, 385=1, 384=1, 391=1, 390=2, 388=2, 443=1, 1533=1, 429=1, 428=1, 479=1, 1424=1, 1425=1, 1428=3, 472=1, 473=3, 1432=1, 1433=1, 469=7, 466=22, 467=1, 465=1, 1437=2, 460=1, 1415=1, 457=12, 456=2, 1419=1, 453=20, 1422=3, 450=181, 1421=2, 509=1, 1459=1, 511=1, 504=6, 505=1, 506=2, 507=3, 502=4, 496=1, 498=3, 499=21, 493=1, 492=2, 495=3, 494=3, 489=24, 488=22, 491=8, 490=6, 486=7, 483=58, 1454=1, 482=2, 550=1, 549=1, 546=1, 557=1, 554=4, 553=1, 565=2, 563=2, 561=1, 560=3, 1650=1, 573=3, 571=1, 570=1, 1653=2, 516=13, 517=1, 519=4, 524=4, 525=1, 526=2, 527=7, 520=1, 521=11, 522=11, 523=2, 532=2, 529=3, 528=1, 530=1, 540=2, 537=4, 539=1, 538=4, 610=3, 608=1, 614=1, 619=5, 616=13, 622=2, 623=3, 1571=6, 633=38, 632=2, 639=17, 638=12, 636=13, 1549=4, 578=1, 582=1, 1546=1, 1540=1, 1542=1, 587=1, 1536=3, 590=1, 591=1, 1566=1, 596=1, 598=1, 600=86, 603=20, 607=20, 1554=1, 606=4, 687=5, 685=1, 682=9, 680=1, 679=2, 678=1, 677=2, 676=1, 675=1, 674=6, 673=1, 672=7, 702=1, 703=1, 699=2, 697=1, 695=1, 692=1, 693=1, 690=1, 691=1, 688=2, 689=2, 655=5, 654=5, 649=9, 648=2, 645=3, 641=4, 640=5, 643=2, 642=5, 668=1, 669=3, 671=11, 666=8, 662=2, 656=2, 658=2, 751=1, 750=59, 739=1, 743=1, 742=2, 760=6, 766=10, 764=1, 753=10, 756=3, 757=6, 713=1, 712=1, 715=2, 1666=1, 705=2, 704=2, 707=1, 711=1, 710=2, 1683=3, 735=1, 720=2, 1688=1, 1689=2, 727=1, 821=8, 822=4, 816=6, 819=1, 829=1, 828=4, 825=2, 824=2, 827=3, 826=3, 804=4, 805=1, 806=2, 807=3, 802=4, 812=1, 815=2, 809=1, 811=1, 791=1, 790=5, 789=11, 788=7, 786=8, 785=1, 799=6, 796=3, 795=2, 793=2, 792=2, 773=3, 769=3, 782=2, 783=21, 780=1, 776=1, 883=1, 887=1, 886=1, 891=1, 892=1, 894=1, 865=2, 867=1, 870=2, 871=1, 875=1, 877=1, 878=1, 849=3, 855=1, 854=3, 852=1, 857=1, 863=3, 862=1, 861=1, 860=1, 835=1, 832=1, 833=2, 838=1, 1800=1, 842=1, 843=1, 840=2, 845=1, 957=2, 952=2, 954=2, 955=1, 948=1, 949=4, 944=1, 946=1, 941=3, 940=2, 943=1, 942=3, 936=5, 939=5, 938=5, 933=11, 928=1, 926=1, 924=1, 919=2, 916=8, 917=2, 912=1, 913=2, 910=4, 908=1, 907=1, 906=1, 903=6, 900=11, 1016=1, 1023=1, 1010=1, 1013=2, 1015=1, 1002=1, 1005=1, 1007=1, 992=2, 997=1, 998=1, 987=2, 990=1, 988=4, 978=3, 979=1, 976=1, 977=3, 982=2, 971=4, 969=1, 974=1, 973=2, 972=3, 961=1, 960=1, 966=2, 964=1}
2015-08-06 20:25:27,677 INFO main - Time Evolution(ms): 3661516
2015-08-06 20:25:27,677 INFO fr.inria.main.AbstractMain - Time Total(ms): 3699484


Node: griffon-91.nancy.grid5000.fr


Date: Thu Aug  6 22:25:28 CEST 2015


