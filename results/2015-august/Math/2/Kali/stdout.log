export PATH="/home/tdurieux/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cp -r /home/tdurieux/projects/math/math_2 /tmp/math_2_Kali;cd /tmp/math_2_Kali;defects4j compile;mkdir lib/;cp -r /home/tdurieux/defects4j/framework/projects/lib/* lib/;cp -r /home/tdurieux/defects4j/framework/projects/Math/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/tdurieux/defects4j-repair/src/python/core/../../../results/Math/2/Kali/result
cd /tmp/math_2_Kali;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time java  -cp /home/tdurieux/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement-remove -location . -dependencies lib/ -failing org.apache.commons.math3.distribution.HypergeometricDistributionTest: -package org.apache.commons -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -javacompliancelevel 5 -maxgen 1000000 -seed 10 -maxtime 60  -scope local  -stopfirst true -flthreshold 0 -population 1 -srcjavafolder src/main/java/ -srctestfolder src/test/java/ -binjavafolder target/classes/ -bintestfolder target/test-classes/;echo "

Node: `hostname`
";echo "
Date: `date`
";rm -rf /tmp/math_2_Kali;

End Repair Loops: Found solution
Solution stored at: ./outputMutation//MainjGenProg-.//src/

Number solutions:5
f (sol): 0.0, [Variant id: 46 (SOL) , #gens: 920, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 49 (SOL) , #gens: 920, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 50 (SOL) , #gens: 920, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 58 (SOL) , #gens: 920, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 61 (SOL) , #gens: 920, #ops: 1, parent:1]

All variants:
f 1.0, [Variant id: 1, #gens: 920, #ops: 0, parent:-]

Solution details
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null

 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 46
 
operation: DELETE
location= org.apache.commons.math3.distribution.AbstractIntegerDistribution
line= 137
original statement= if (tmp < upper) {
	upper = ((int)(java.lang.Math.ceil(tmp))) - 1;
} 
fixed statement= if (tmp < upper) {
	upper = ((int)(java.lang.Math.ceil(tmp))) - 1;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 49
 
operation: REPLACE
location= org.apache.commons.math3.distribution.AbstractIntegerDistribution
line= 137
original statement= if (tmp < upper) {
	upper = ((int)(java.lang.Math.ceil(tmp))) - 1;
} 
fixed statement= if (false) {
	upper = ((int)(java.lang.Math.ceil(tmp))) - 1;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 50
 
operation: DELETE
location= org.apache.commons.math3.distribution.AbstractIntegerDistribution
line= 138
original statement= upper = ((int)(java.lang.Math.ceil(tmp))) - 1
fixed statement= upper = ((int)(java.lang.Math.ceil(tmp))) - 1
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 58
 
operation: DELETE
location= org.apache.commons.math3.distribution.AbstractIntegerDistribution
line= 129
original statement= if (chebyshevApplies) {
	double k = org.apache.commons.math3.util.FastMath.sqrt(((1.0 - p) / p));
	double tmp = mu - (k * sigma);
	if (tmp > lower) {
		lower = ((int)(java.lang.Math.ceil(tmp))) - 1;
	} 
	k = 1.0 / k;
	tmp = mu + (k * sigma);
	if (tmp < upper) {
		upper = ((int)(java.lang.Math.ceil(tmp))) - 1;
	} 
} 
fixed statement= if (chebyshevApplies) {
	double k = org.apache.commons.math3.util.FastMath.sqrt(((1.0 - p) / p));
	double tmp = mu - (k * sigma);
	if (tmp > lower) {
		lower = ((int)(java.lang.Math.ceil(tmp))) - 1;
	} 
	k = 1.0 / k;
	tmp = mu + (k * sigma);
	if (tmp < upper) {
		upper = ((int)(java.lang.Math.ceil(tmp))) - 1;
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 61
 
operation: REPLACE
location= org.apache.commons.math3.distribution.AbstractIntegerDistribution
line= 129
original statement= if (chebyshevApplies) {
	double k = org.apache.commons.math3.util.FastMath.sqrt(((1.0 - p) / p));
	double tmp = mu - (k * sigma);
	if (tmp > lower) {
		lower = ((int)(java.lang.Math.ceil(tmp))) - 1;
	} 
	k = 1.0 / k;
	tmp = mu + (k * sigma);
	if (tmp < upper) {
		upper = ((int)(java.lang.Math.ceil(tmp))) - 1;
	} 
} 
fixed statement= if (false) {
	double k = org.apache.commons.math3.util.FastMath.sqrt(((1.0 - p) / p));
	double tmp = mu - (k * sigma);
	if (tmp > lower) {
		lower = ((int)(java.lang.Math.ceil(tmp))) - 1;
	} 
	k = 1.0 / k;
	tmp = mu + (k * sigma);
	if (tmp < upper) {
		upper = ((int)(java.lang.Math.ceil(tmp))) - 1;
	} 
} 
generation= 1
ingredientScope= -
 

----stats: 

spaces navigation: [0]: {}
#gen: 0
#patches: 5
#RightCompilation: 1777
#WrongCompilation: 343
#FailingTestCaseExecution: 1778
#RegressionTestExecution: 8
#TestcasesExecutedval1: 28432
#TestcasesExecutedval2: 36176
#FailingTestCase: 16
#RegressionTestCases: 5168
#OfAppliedOp: 0
#NotAppliedOp: 0
#InmutatedGen: 0
#unfinishValidation: 1
#ing {}
#untilcompile {}
Time Total(ms): 3661774


Node: griffon-2.nancy.grid5000.fr


Date: Thu Aug 13 20:47:02 CEST 2015


