export PATH="/home/tdurieux/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cp -r /home/tdurieux/projects/math/math_93 /tmp/math_93_Genprog;cd /tmp/math_93_Genprog;defects4j compile;mkdir lib/;cp -r /home/tdurieux/defects4j/framework/projects/lib/* lib/;cp -r /home/tdurieux/defects4j/framework/projects/Math/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/tdurieux/defects4j-repair/src/python/core/../../../results/Math/93/Genprog/result
cd /tmp/math_93_Genprog;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time java  -cp /home/tdurieux/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement -location . -dependencies lib/ -failing org.apache.commons.math.util.MathUtilsTest: -package org.apache.commons -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -javacompliancelevel 6 -maxgen 1000000 -seed 10 -maxtime 165  -scope local  -stopfirst true -flthreshold 0 -population 1 -srcjavafolder src/java/ -srctestfolder src/test/ -binjavafolder target/classes/ -bintestfolder target/test-classes/;echo "

Node: `hostname`
";echo "
Date: `date`
";rm -rf /tmp/math_93_Genprog;

End Repair Loops: NOT Found solution

Number solutions:0

All variants:
f 1.0, [Variant id: 29989, #gens: 920, #ops: 0, parent:-]
--Space: LOCAL
org.apache.commons.math.util.MathUtils=208|,org.apache.commons.math.ConvergingAlgorithmImpl=18|,org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl=38|,org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator=63|,org.apache.commons.math.linear.BigMatrixImpl=479|,org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator=19|,org.apache.commons.math.analysis.polynomials.PolynomialFunction=28|,org.apache.commons.math.ode.AbstractIntegrator=34|,org.apache.commons.math.ode.events.CombinedEventsManager=48|,org.apache.commons.math.ode.sampling.AbstractStepInterpolator=87|,org.apache.commons.math.linear.AbstractRealMatrix=391|,org.apache.commons.math.linear.DenseRealMatrix=648|,org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic=14|,org.apache.commons.math.complex.Complex=140|,org.apache.commons.math.linear.MatrixUtils=61|,org.apache.commons.math.ode.nonstiff.GillStepInterpolator=25|,org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator=30|,org.apache.commons.math.analysis.solvers.BrentSolver=95|,org.apache.commons.math.analysis.solvers.LaguerreSolver=119|,org.apache.commons.math.ode.sampling.DummyStepInterpolator=9|,org.apache.commons.math.ode.ContinuousOutputModel=96|,org.apache.commons.math.MessagesResources_fr=2|,org.apache.commons.math.ode.events.EventState=77|,org.apache.commons.math.linear.TriDiagonalTransformer=84|,

----stats: 

spaces navigation: [59]: {(CtLocalVariableImpl| size: 27| compiles| LOCAL| REPLACE) =41, (CtReturnImpl| size: 62| notcompiles| LOCAL| REPLACE) =91, (CtForImpl| size: 208| notcompiles| LOCAL| INSERT_BEFORE) =102, (CtOperatorAssignmentImpl| size: 6| alreadyanalyzed| LOCAL| REPLACE) =7598, (CtIfImpl| size: 391| compiles| LOCAL| INSERT_BEFORE) =142, (CtIfImpl| size: 39| notcompiles| LOCAL| REPLACE) =64, (CtReturnImpl| size: 208| notcompiles| LOCAL| INSERT_BEFORE) =313, (CtLocalVariableImpl| size: 391| compiles| LOCAL| INSERT_AFTER) =30, (CtLocalVariableImpl| size: 391| alreadyanalyzed| LOCAL| INSERT_AFTER) =44, (CtIfImpl| size: 208| alreadyanalyzed| LOCAL| INSERT_BEFORE) =772804, (CtReturnImpl| size: 208| compiles| LOCAL| INSERT_AFTER) =173, (CtForImpl| size: 208| compiles| LOCAL| INSERT_AFTER) =59, (CtLocalVariableImpl| size: 391| notcompiles| LOCAL| INSERT_AFTER) =65, (CtLocalVariableImpl| size: 208| compiles| LOCAL| INSERT_AFTER) =113, (CtIfImpl| size: 391| alreadyanalyzed| LOCAL| INSERT_BEFORE) =61097, (CtLocalVariableImpl| size: 391| alreadyanalyzed| LOCAL| INSERT_BEFORE) =172, (CtForImpl| size: 208| compiles| LOCAL| INSERT_BEFORE) =59, (CtLocalVariableImpl| size: 208| compiles| LOCAL| INSERT_BEFORE) =113, (CtOperatorAssignmentImpl| size: 208| alreadyanalyzed| LOCAL| INSERT_BEFORE) =245619, (CtOperatorAssignmentImpl| size: 6| notcompiles| LOCAL| REPLACE) =4, (CtIfImpl| size: 208| alreadyanalyzed| LOCAL| INSERT_AFTER) =760722, (CtLocalVariableImpl| size: 208| alreadyanalyzed| LOCAL| INSERT_AFTER) =524526, (CtOperatorAssignmentImpl| size: 208| notcompiles| LOCAL| INSERT_BEFORE) =103, (CtReturnImpl| size: 62| alreadyanalyzed| LOCAL| REPLACE) =260087, (CtReturnImpl| size: 208| alreadyanalyzed| LOCAL| INSERT_AFTER) =818872, (CtReturnImpl| size: 208| alreadyanalyzed| LOCAL| INSERT_BEFORE) =834704, (CtIfImpl| size: 391| notcompiles| LOCAL| INSERT_BEFORE) =366, (CtForImpl| size: 208| alreadyanalyzed| LOCAL| INSERT_AFTER) =234383, (CtLocalVariableImpl| size: 208| notcompiles| LOCAL| INSERT_AFTER) =210, (CtLocalVariableImpl| size: 208| alreadyanalyzed| LOCAL| INSERT_BEFORE) =528569, (CtForImpl| size: 4| alreadyanalyzed| LOCAL| REPLACE) =5262, (CtLocalVariableImpl| size: 391| compiles| LOCAL| INSERT_BEFORE) =47, (CtLocalVariableImpl| size: 391| notcompiles| LOCAL| INSERT_BEFORE) =110, (CtOperatorAssignmentImpl| size: 208| compiles| LOCAL| INSERT_AFTER) =59, (CtForImpl| size: 208| notcompiles| LOCAL| INSERT_AFTER) =102, (CtForImpl| size: 4| notcompiles| LOCAL| REPLACE) =2, (CtOperatorAssignmentImpl| size: 208| alreadyanalyzed| LOCAL| INSERT_AFTER) =243184, (CtIfImpl| size: 208| notcompiles| LOCAL| INSERT_BEFORE) =313, (CtOperatorAssignmentImpl| size: 208| notcompiles| LOCAL| INSERT_AFTER) =103, (CtIfImpl| size: 39| compiles| LOCAL| REPLACE) =4, (CtIfImpl| size: 50| notcompiles| LOCAL| REPLACE) =125, (CtReturnImpl| size: 62| compiles| LOCAL| REPLACE) =59, (CtIfImpl| size: 208| compiles| LOCAL| INSERT_BEFORE) =169, (CtLocalVariableImpl| size: 208| notcompiles| LOCAL| INSERT_BEFORE) =210, (CtForImpl| size: 208| alreadyanalyzed| LOCAL| INSERT_BEFORE) =239670, (CtIfImpl| size: 391| notcompiles| LOCAL| INSERT_AFTER) =366, (CtIfImpl| size: 391| alreadyanalyzed| LOCAL| INSERT_AFTER) =58183, (CtLocalVariableImpl| size: 27| alreadyanalyzed| LOCAL| REPLACE) =70533, (CtIfImpl| size: 208| compiles| LOCAL| INSERT_AFTER) =169, (CtReturnImpl| size: 208| notcompiles| LOCAL| INSERT_AFTER) =313, (CtIfImpl| size: 391| compiles| LOCAL| INSERT_AFTER) =142, (CtIfImpl| size: 208| notcompiles| LOCAL| INSERT_AFTER) =313, (CtReturnImpl| size: 208| compiles| LOCAL| INSERT_BEFORE) =173, (CtLocalVariableImpl| size: 89| compiles| LOCAL| REPLACE) =28, (CtLocalVariableImpl| size: 89| alreadyanalyzed| LOCAL| REPLACE) =62, (CtIfImpl| size: 50| compiles| LOCAL| REPLACE) =3, (CtOperatorAssignmentImpl| size: 208| compiles| LOCAL| INSERT_BEFORE) =59, (CtIfImpl| size: 50| alreadyanalyzed| LOCAL| REPLACE) =189316, (CtIfImpl| size: 39| alreadyanalyzed| LOCAL| REPLACE) =9958}
#gen: 14994
#patches: 0
#RightCompilation: 6789
#WrongCompilation: 8205
#FailingTestCaseExecution: 6790
#RegressionTestExecution: 0
#TestcasesExecutedval1: 285180
#TestcasesExecutedval2: 0
#FailingTestCase: 42
#RegressionTestCases: 0
#OfAppliedOp: 14994
#NotAppliedOp: 0
#InmutatedGen: 38678
#unfinishValidation: 0
#ing {CtLocalVariableImpl=10644, CtForImpl=4916, CtReturnImpl=16725, CtOperatorAssignmentImpl=5013, CtIfImpl=16374}
#untilcompile {1=197, 2=122, 3=104, 4=158, 5=60, 2206=3, 6=119, 2207=3, 7=48, 8=30, 9=37, 10=30, 11=25, 12=21, 2197=1, 13=18, 2198=1, 14=18, 15=10, 17=10, 2184=1, 16=10, 2187=2, 19=9, 18=6, 21=3, 2188=1, 20=6, 23=6, 22=5, 25=3, 24=1, 27=186, 26=2, 29=7, 2180=1, 28=8, 2183=1, 31=16, 30=6, 34=3, 35=2, 32=9, 33=13, 38=2, 36=4, 37=2, 42=3, 43=5, 40=3, 2224=1, 41=3, 46=3, 47=2, 44=1, 45=2, 51=12, 50=275, 49=4, 48=1, 55=7, 54=17, 53=9, 52=6, 2211=1, 59=2, 58=4, 2209=1, 57=2, 2208=1, 56=16, 63=9, 62=319, 2213=1, 61=1, 60=4, 68=24, 2269=2, 69=8, 70=4, 71=4, 64=7, 65=5, 66=25, 2267=1, 67=3, 77=31, 78=2, 72=6, 73=7, 74=2, 85=1, 87=1, 86=2, 81=7, 80=1, 83=4, 82=2, 93=1, 95=1, 94=1, 89=25, 2243=1, 91=1, 90=1, 102=1, 100=11, 2298=2, 97=2, 109=3, 106=1, 2290=1, 118=5, 117=1, 116=9, 115=1, 114=1, 113=1, 112=48, 127=4, 126=1, 125=1, 124=20, 2275=1, 122=3, 120=1, 137=2, 136=1, 2067=1, 139=9, 138=1, 143=1, 2070=1, 129=1, 128=1, 130=4, 2076=1, 135=1, 2048=1, 2049=1, 2050=1, 154=2, 155=1, 159=1, 145=2, 148=1, 151=3, 171=1, 170=1, 169=1, 2096=1, 168=3, 175=1, 174=7, 172=1, 162=4, 2105=1, 160=1, 166=1, 186=2, 2080=2, 2087=1, 2084=1, 189=2, 178=4, 2088=1, 180=1, 181=1, 2132=4, 207=1, 201=5, 2128=1, 203=1, 2142=1, 2139=1, 194=2, 220=1, 222=1, 216=3, 217=2, 218=7, 2115=1, 212=69, 2125=1, 213=1, 214=84, 215=1, 208=1630, 209=2, 210=2, 2167=2, 239=13, 2163=1, 235=190, 232=1, 230=3, 2172=1, 228=1, 2171=1, 227=2, 226=3, 225=1, 2168=1, 224=3, 2150=2, 254=3, 255=1, 252=2, 250=1, 251=1, 2144=1, 2145=1, 2158=1, 2156=1, 245=1, 2154=1, 2155=1, 240=1, 2152=4, 241=13, 274=15, 276=23, 282=1, 280=2, 286=1, 285=42, 258=207, 259=1, 257=2, 2462=1, 262=31, 266=2, 267=1, 264=15, 265=1, 270=312, 268=5, 308=16, 2479=1, 312=6, 314=2, 2471=1, 318=2, 289=3, 290=1, 291=5, 295=1, 297=41, 298=1, 299=1, 301=7, 303=5, 341=1, 339=1, 338=3, 336=1, 351=5, 2502=1, 347=16, 326=7, 324=8, 325=1, 323=1, 320=63, 335=3, 332=27, 330=2, 331=1, 2512=1, 328=1, 2513=1, 373=1, 374=4, 368=1, 370=3, 2532=1, 382=8, 376=1, 2557=1, 358=1, 359=8, 353=2, 366=1, 362=2, 363=2, 408=1, 409=7, 2309=1, 2312=1, 400=1, 2313=1, 401=2, 2318=1, 2322=1, 392=2, 398=2, 2325=1, 397=3, 386=3, 2335=1, 2334=1, 2333=1, 388=1, 442=1, 443=104, 447=16, 436=1, 2353=2, 2352=1, 427=1, 426=10, 429=1, 431=1, 2360=1, 416=851, 2362=1, 418=2, 2365=1, 420=53, 423=1, 422=57, 478=193, 476=3, 472=21, 470=39, 471=2, 469=2, 466=176, 467=1, 463=1, 459=1, 2385=1, 453=6, 2395=1, 449=13, 448=1, 509=8, 511=5, 505=46, 503=1, 497=5, 499=12, 493=43, 494=1, 489=1, 488=5, 485=2, 484=18, 487=1, 2425=1, 482=22, 549=1, 546=5, 544=3, 559=3, 555=16, 567=8, 566=1, 565=1, 561=1, 573=1, 571=4, 570=1, 516=20, 515=3, 524=1, 526=1, 520=4, 522=1, 532=14, 534=14, 528=56, 530=1, 540=28, 543=7, 537=1, 536=1, 538=3, 611=1, 608=1, 609=4, 617=4, 623=2, 620=1, 621=2, 624=449, 630=36, 629=1, 628=48, 634=2, 633=1, 638=1, 636=1, 578=9, 582=5, 584=2, 586=3, 588=1, 590=10, 594=5, 596=4, 599=1, 602=1, 605=9, 606=1, 686=111, 685=1, 684=3, 682=2, 680=19, 678=22, 677=1, 674=104, 701=28, 698=1, 699=1, 696=2, 692=19, 690=16, 652=1, 655=15, 654=1, 651=70, 644=3, 646=1, 671=1, 2563=1, 667=3, 661=1, 656=1, 657=14, 746=3, 751=4, 748=14, 736=52, 742=5, 740=12, 763=21, 767=5, 754=5, 755=3, 752=3, 758=2, 713=43, 712=1, 717=8, 719=6, 705=7, 707=5, 710=1, 728=6, 730=3, 732=2, 723=3, 724=20, 817=3, 829=1, 831=2, 825=7, 804=3, 806=1, 801=1, 802=2, 813=5, 808=1, 810=1, 786=5, 784=1, 798=13, 796=1, 792=2, 774=1, 775=4, 773=2, 769=7, 782=1, 781=1, 778=1, 881=2, 882=69, 887=1, 886=18, 888=13, 894=97, 865=9, 869=4, 875=4, 876=1, 848=6, 854=1, 852=2, 859=47, 863=10, 835=2, 832=201, 838=28, 836=29, 842=3, 840=1, 844=1, 956=12, 958=1, 959=2, 954=3, 948=14, 950=4, 944=55, 943=1, 942=1, 936=8, 938=2, 932=10, 928=1, 931=1, 930=1, 927=4, 925=7, 921=26, 919=2, 915=3, 913=3, 909=19, 908=1, 904=4, 902=2, 900=18, 898=8, 897=1, 896=1, 1016=2, 1021=7, 1022=1, 1010=4, 1012=2, 1013=1, 1014=1, 1000=2, 1002=2, 1004=3, 1006=4, 993=1, 992=1, 994=15, 999=1, 998=4, 986=1, 987=2, 988=1, 989=1, 978=1, 977=2, 982=1, 983=5, 981=2, 971=25, 969=2, 975=1, 963=1, 962=4, 960=3, 966=1, 1100=2, 1102=62, 1096=10, 1097=1, 1098=1, 1092=1, 1094=20, 1095=2, 1089=2, 1090=32, 1117=14, 1112=2, 1108=8, 1110=2, 1106=10, 1135=7, 1133=5, 1130=1, 1129=16, 1127=3, 1123=8, 1121=2, 1150=2, 1148=1, 1146=3, 1144=3, 1140=6, 1138=1, 1136=1, 1033=7, 1037=2, 1039=2, 1027=2, 1031=1, 1048=1, 1050=2, 1040=99, 1044=16, 1047=1, 1046=14, 1067=22, 1071=12, 1056=7, 1062=1, 1060=1, 1083=6, 1082=1, 1087=1, 1073=8, 1072=1, 1078=1, 1077=3, 1220=1, 1217=1, 1218=4, 1229=7, 1224=1, 1236=1, 1237=1, 1239=1, 1235=3, 1244=2, 1245=5, 1246=1, 1247=1, 1241=3, 1243=1, 1255=1, 1254=9, 1253=2, 1252=9, 1251=1, 1248=61, 1258=1, 1257=1, 1256=1, 1270=1, 1268=2, 1264=3, 1279=3, 1275=15, 1273=1, 1153=1, 1152=26, 1155=1, 1156=13, 1158=5, 1162=3, 1164=15, 1167=3, 1166=1, 1168=3, 1170=3, 1171=2, 1173=1, 1174=1, 1175=2, 1177=1, 1178=1, 1179=7, 1183=7, 1185=3, 1191=5, 1190=2, 1189=2, 1195=3, 1194=1, 1193=1, 1198=1, 1197=4, 1202=6, 1201=1, 1206=6, 1210=5, 1208=2, 1214=2, 1215=3, 1212=1, 1213=2, 1375=4, 1372=7, 1370=4, 1367=1, 1366=7, 1364=6, 1362=1, 1360=19, 1358=1, 1354=2, 1352=3, 1348=8, 1346=1, 1347=1, 1405=4, 1402=1, 1397=1, 1396=1, 1399=5, 1398=1, 1393=5, 1392=2, 1394=1, 1391=8, 1384=1, 1387=13, 1382=2, 1376=2, 1378=2, 1306=1, 1304=6, 1311=2, 1310=23, 1309=1, 1308=4, 1298=32, 1297=1, 1303=1, 1302=10, 1291=2, 1289=1, 1294=2, 1295=1, 1293=1, 1282=1, 1280=1, 1281=2, 1286=1, 1284=1, 1337=11, 1341=6, 1343=6, 1342=1, 1329=5, 1331=4, 1332=1, 1335=2, 1320=5, 1321=1, 1325=16, 1312=1, 1314=7, 1316=9, 1318=1, 1493=4, 1490=1, 1489=4, 1503=1, 1500=1, 1496=1, 1478=1, 1477=2, 1476=2, 1474=1, 1472=2, 1487=2, 1486=1, 1484=1, 1483=8, 1481=2, 1524=5, 1522=6, 1532=1, 1533=7, 1535=1, 1528=1, 1529=1, 1509=1, 1511=1, 1510=7, 1505=3, 1504=1, 1507=1, 1506=16, 1517=1, 1516=1, 1518=13, 1513=1, 1512=3, 1426=1, 1424=1, 1430=2, 1431=2, 1428=2, 1429=2, 1434=1, 1432=3, 1438=1, 1437=5, 1410=3, 1409=2, 1415=1, 1414=5, 1413=1, 1412=1, 1416=5, 1423=1, 1422=6, 1421=2, 1456=27, 1457=1, 1458=1, 1459=2, 1460=5, 1462=4, 1464=1, 1466=2, 1467=1, 1469=1, 1470=1, 1441=1, 1443=1, 1442=2, 1445=2, 1444=1, 1449=2, 1448=1, 1450=1, 1453=2, 1455=1, 1642=1, 1640=3, 1646=1, 1647=1, 1634=3, 1635=1, 1632=1, 1633=1, 1638=2, 1659=1, 1663=2, 1661=1, 1651=2, 1649=1, 1652=1, 1611=1, 1613=2, 1615=4, 1601=2, 1602=2, 1603=1, 1606=1, 1607=3, 1624=1, 1626=3, 1629=1, 1631=1, 1630=4, 1618=2, 1623=3, 1622=3, 1580=5, 1578=2, 1576=1, 1577=1, 1574=3, 1575=1, 1572=11, 1573=2, 1568=13, 1569=1, 1599=1, 1598=1, 1595=7, 1591=1, 1590=3, 1586=3, 1585=1, 1584=2, 1549=4, 1551=4, 1544=1, 1545=10, 1541=1, 1536=1, 1537=3, 1539=1, 1566=1, 1561=1, 1560=2, 1562=1, 1557=1, 1556=3, 1558=1, 1553=1, 1552=1, 1766=3, 1765=1, 1764=2, 1770=1, 1769=1, 1775=1, 1774=1, 1773=1, 1772=1, 1778=1, 1779=1, 1776=7, 1777=1, 1782=1, 1783=1, 1780=1, 1787=1, 1784=3, 1785=1, 1788=3, 1728=1, 1730=1, 1732=1, 1735=1, 1734=1, 1736=1, 1738=3, 1741=2, 1743=1, 1742=1, 1745=1, 1746=1, 1751=1, 1753=7, 1754=1, 1756=2, 1759=1, 1701=1, 1699=1, 1698=2, 1696=1, 1708=1, 1706=1, 1705=1, 1704=1, 1718=5, 1714=8, 1712=1, 1726=7, 1722=1, 1720=5, 1721=2, 1668=8, 1671=3, 1670=2, 1664=16, 1677=1, 1676=2, 1679=1, 1673=1, 1674=1, 1685=1, 1681=1, 1693=1, 1688=2, 1691=6, 1919=1, 1905=1, 1904=1, 1907=2, 1906=2, 1909=2, 1899=3, 1901=2, 1903=1, 1891=1, 1882=1, 1880=1, 1886=1, 1874=1, 1872=5, 1879=2, 1878=3, 1876=3, 1867=1, 1865=1, 1870=1, 1862=1, 1863=1, 1860=1, 1861=1, 1855=1, 1854=1, 1850=1, 1844=3, 1846=2, 1840=2, 1837=1, 1839=1, 1832=1, 1834=1, 1835=1, 1828=4, 1830=1, 1824=1, 1823=2, 1822=1, 1818=1, 1817=2, 1815=3, 1813=1, 1812=1, 1811=1, 1809=2, 1805=2, 1802=1, 1796=2, 1794=2, 1792=2, 2034=1, 2036=1, 2037=2, 2038=1, 2017=1, 2019=1, 2021=3, 2025=2, 2029=1, 2028=1, 2031=1, 2030=1, 2001=2, 2004=2, 2011=1, 2009=2, 2015=1, 2013=1, 1986=5, 1984=1, 1994=1, 1993=1, 1999=2, 1996=1, 1972=1, 1974=1, 1969=1, 1980=2, 1977=1, 1978=1, 1956=1, 1953=1, 1965=1, 1967=1, 1960=1, 1963=4, 1942=1, 1940=2, 1936=1, 1937=1, 1951=1, 1948=1, 1946=2, 1947=2, 1944=1, 1927=1, 1924=1, 1922=5, 1934=5, 1933=1, 1930=1, 1929=3, 1928=1}
Time Evolution(ms): 9960986
Time Total(ms): 9985501


Node: graphene-20.nancy.grid5000.fr


Date: Fri Aug 14 00:37:26 CEST 2015


