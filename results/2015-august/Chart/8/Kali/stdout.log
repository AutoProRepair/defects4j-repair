export PATH="/home/tdurieux/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cp -r /home/tdurieux/projects/chart/chart_8 /tmp/chart_8_Kali;cd /tmp/chart_8_Kali;defects4j compile;mkdir lib/;cp -r /home/tdurieux/defects4j/framework/projects/lib/* lib/;cp -r /home/tdurieux/defects4j/framework/projects/Chart/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/tdurieux/defects4j-repair/src/python/core/../../../results/Chart/8/Kali/result
cd /tmp/chart_8_Kali;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time java  -cp /home/tdurieux/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement-remove -location . -dependencies lib/ -failing org.jfree.data.time.junit.WeekTests: -package org.jfree -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -javacompliancelevel 4 -maxgen 1000000 -seed 10 -maxtime 60  -scope local  -stopfirst true -flthreshold 0 -population 1 -srcjavafolder source/ -srctestfolder tests/ -binjavafolder build/ -bintestfolder build-tests/;echo "

Node: `hostname`
";echo "
Date: `date`
";rm -rf /tmp/chart_8_Kali;

End Repair Loops: Found solution
Solution stored at: ./outputMutation//MainjGenProg-.//src/

Number solutions:1967
f (sol): 0.0, [Variant id: 3 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 5 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 7 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 8 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 9 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 10 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 11 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 13 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 15 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 16 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 17 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 18 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 19 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 20 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 21 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 22 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 23 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 24 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 25 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 26 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 27 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 28 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 29 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 30 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 31 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 33 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 34 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 35 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 36 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 37 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 38 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 39 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 40 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 41 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 42 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 43 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 44 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 45 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 46 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 47 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 48 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 49 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 51 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 52 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 53 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 55 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 56 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 57 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 58 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 59 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 60 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 61 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 62 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 63 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 64 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 65 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 66 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 67 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 68 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 69 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 70 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 71 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 72 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 73 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 75 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 76 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 77 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 79 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 80 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 81 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 82 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 83 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 84 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 85 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 86 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 87 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 88 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 89 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 90 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 91 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 92 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 93 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 94 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 95 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 96 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 97 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 98 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 99 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 100 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 101 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 103 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 104 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 105 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 107 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 109 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 110 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 111 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 112 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 113 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 114 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 115 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 116 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 117 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 119 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 120 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 121 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 122 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 123 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 124 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 125 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 126 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 127 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 129 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 130 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 131 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 132 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 133 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 134 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 135 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 136 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 137 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 139 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 140 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 141 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 142 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 143 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 145 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 146 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 147 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 149 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 150 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 151 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 152 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 153 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 154 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 155 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 156 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 157 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 159 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 161 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 162 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 163 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 165 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 166 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 167 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 168 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 169 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 171 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 172 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 173 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 175 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 176 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 177 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 179 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 180 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 181 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 182 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 183 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 184 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 185 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 187 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 189 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 190 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 191 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 193 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 195 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 196 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 197 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 198 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 199 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 201 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 202 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 203 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 204 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 205 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 207 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 208 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 209 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 210 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 211 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 212 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 213 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 214 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 215 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 216 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 217 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 218 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 219 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 221 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 222 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 223 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 224 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 225 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 226 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 227 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 229 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 231 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 232 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 233 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 234 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 235 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 236 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 237 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 238 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 239 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 240 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 241 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 243 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 244 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 245 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 246 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 247 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 248 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 249 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 250 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 251 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 253 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 254 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 255 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 256 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 257 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 258 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 259 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 260 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 261 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 262 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 263 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 264 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 265 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 266 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 267 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 268 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 269 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 271 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 273 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 274 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 275 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 276 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 277 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 278 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 279 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 280 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 281 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 282 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 283 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 284 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 285 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 287 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 289 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 290 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 291 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 293 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 294 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 295 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 297 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 298 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 299 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 300 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 301 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 302 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 303 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 304 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 305 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 307 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 308 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 309 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 310 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 311 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 312 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 313 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 314 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 315 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 316 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 317 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 319 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 320 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 321 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 322 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 323 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 324 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 325 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 326 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 327 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 328 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 329 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 330 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 331 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 332 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 333 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 334 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 335 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 336 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 337 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 338 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 339 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 340 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 341 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 342 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 343 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 344 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 345 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 346 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 347 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 348 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 349 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 350 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 351 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 352 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 353 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 354 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 355 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 356 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 357 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 358 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 359 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 361 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 362 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 363 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 364 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 365 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 366 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 367 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 368 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 369 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 370 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 371 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 372 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 373 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 374 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 375 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 376 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 377 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 378 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 379 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 380 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 381 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 382 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 383 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 384 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 385 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 386 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 387 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 388 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 389 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 390 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 391 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 392 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 393 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 395 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 396 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 397 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 398 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 399 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 400 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 401 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 403 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 404 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 405 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 406 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 407 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 408 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 409 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 410 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 411 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 412 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 413 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 415 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 416 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 417 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 418 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 419 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 420 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 421 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 422 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 423 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 425 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 426 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 427 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 428 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 429 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 430 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 431 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 432 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 433 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 434 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 435 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 436 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 437 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 438 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 439 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 440 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 441 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 443 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 444 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 445 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 446 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 447 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 448 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 449 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 451 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 452 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 453 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 454 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 455 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 456 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 457 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 458 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 459 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 460 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 461 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 463 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 464 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 465 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 466 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 467 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 469 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 470 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 471 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 472 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 473 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 474 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 475 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 476 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 477 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 478 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 479 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 480 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 481 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 482 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 483 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 484 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 485 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 486 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 487 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 489 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 490 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 491 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 492 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 493 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 494 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 495 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 496 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 497 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 498 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 499 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 500 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 501 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 502 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 503 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 504 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 505 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 506 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 507 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 508 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 509 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 510 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 511 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 512 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 513 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 514 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 515 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 516 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 517 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 518 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 519 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 520 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 521 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 522 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 523 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 524 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 525 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 526 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 527 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 528 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 529 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 530 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 531 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 532 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 533 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 534 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 535 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 536 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 537 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 539 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 540 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 541 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 542 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 543 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 544 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 545 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 547 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 548 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 549 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 550 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 551 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 552 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 553 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 554 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 555 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 556 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 557 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 559 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 560 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 561 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 562 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 563 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 564 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 565 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 567 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 569 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 570 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 571 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 572 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 573 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 574 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 575 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 576 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 577 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 579 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 580 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 581 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 582 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 583 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 584 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 585 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 586 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 587 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 589 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 590 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 591 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 592 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 593 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 594 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 595 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 597 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 599 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 600 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 601 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 602 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 603 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 605 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 607 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 608 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 609 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 610 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 611 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 613 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 614 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 615 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 616 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 617 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 618 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 619 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 621 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 622 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 623 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 624 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 625 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 626 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 627 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 628 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 629 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 630 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 631 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 632 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 633 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 634 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 635 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 636 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 637 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 638 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 639 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 640 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 641 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 642 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 643 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 645 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 647 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 648 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 649 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 650 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 651 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 653 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 654 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 655 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 656 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 657 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 659 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 661 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 663 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 665 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 667 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 669 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 670 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 671 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 673 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 674 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 675 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 676 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 677 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 678 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 679 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 680 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 681 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 682 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 683 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 684 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 685 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 686 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 687 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 689 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 690 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 691 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 692 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 693 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 694 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 695 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 696 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 697 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 698 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 699 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 700 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 701 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 702 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 703 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 704 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 705 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 706 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 707 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 709 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 711 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 712 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 713 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 714 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 715 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 717 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 718 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 719 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 720 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 721 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 723 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 725 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 727 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 729 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 730 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 731 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 733 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 734 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 735 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 736 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 737 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 738 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 739 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 740 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 741 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 742 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 743 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 744 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 745 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 746 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 747 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 749 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 750 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 751 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 752 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 753 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 754 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 755 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 756 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 757 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 758 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 759 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 761 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 762 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 763 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 765 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 766 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 767 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 768 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 769 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 770 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 771 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 772 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 773 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 774 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 775 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 777 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 778 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 779 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 780 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 781 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 782 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 783 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 784 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 785 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 786 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 787 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 788 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 789 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 790 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 791 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 792 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 793 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 794 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 795 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 796 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 797 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 798 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 799 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 800 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 801 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 802 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 803 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 804 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 805 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 806 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 807 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 808 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 809 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 810 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 811 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 812 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 813 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 814 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 815 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 816 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 817 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 818 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 819 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 820 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 821 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 822 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 823 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 824 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 825 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 826 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 827 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 828 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 829 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 830 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 831 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 832 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 833 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 834 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 835 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 836 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 837 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 838 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 839 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 840 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 841 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 842 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 843 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 844 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 845 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 846 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 847 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 848 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 849 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 850 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 851 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 852 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 853 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 854 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 855 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 856 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 857 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 858 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 859 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 860 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 861 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 862 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 863 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 864 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 865 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 866 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 867 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 868 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 869 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 870 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 871 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 872 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 873 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 874 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 875 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 876 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 877 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 878 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 879 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 880 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 881 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 882 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 883 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 884 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 885 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 886 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 887 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 888 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 889 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 890 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 891 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 892 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 893 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 895 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 896 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 897 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 898 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 899 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 900 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 901 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 902 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 903 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 904 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 905 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 906 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 907 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 908 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 909 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 910 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 911 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 912 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 913 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 914 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 915 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 916 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 917 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 918 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 919 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 920 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 921 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 922 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 923 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 924 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 925 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 926 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 927 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 928 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 929 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 930 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 931 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 932 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 933 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 934 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 935 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 936 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 937 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 938 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 939 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 940 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 941 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 943 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 945 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 946 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 947 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 949 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 950 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 951 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 953 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 954 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 955 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 956 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 957 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 958 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 959 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 961 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 962 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 963 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 965 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 967 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 968 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 969 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 970 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 971 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 973 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 974 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 975 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 976 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 977 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 978 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 979 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 981 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 983 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 985 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 987 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 988 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 989 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 990 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 991 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 993 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 994 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 995 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 997 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 998 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 999 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1001 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1003 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1004 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1005 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1006 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1007 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1008 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1009 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1010 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1011 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1012 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1013 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1014 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1015 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1017 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1018 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1019 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1021 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1023 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1025 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1026 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1027 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1029 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1031 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1032 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1033 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1034 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1035 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1037 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1038 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1039 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1040 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1041 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1042 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1043 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1044 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1045 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1047 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1049 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1051 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1053 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1054 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1055 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1056 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1057 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1058 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1059 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1061 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1063 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1065 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1067 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1068 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1069 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1070 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1071 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1072 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1073 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1075 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1077 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1079 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1081 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1082 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1083 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1084 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1085 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1086 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1087 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1088 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1089 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1090 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1091 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1092 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1093 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1095 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1097 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1098 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1099 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1100 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1101 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1102 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1103 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1104 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1105 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1106 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1107 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1108 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1109 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1111 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1112 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1113 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1114 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1115 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1116 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1117 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1118 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1119 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1120 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1121 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1122 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1123 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1124 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1125 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1126 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1127 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1128 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1129 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1130 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1131 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1132 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1133 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1134 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1135 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1136 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1137 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1138 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1139 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1140 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1141 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1142 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1143 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1144 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1145 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1147 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1149 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1150 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1151 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1152 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1153 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1154 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1155 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1156 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1157 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1158 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1159 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1160 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1161 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1162 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1163 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1164 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1165 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1166 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1167 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1168 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1169 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1170 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1171 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1172 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1173 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1174 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1175 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1176 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1177 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1178 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1179 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1180 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1181 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1182 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1183 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1184 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1185 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1186 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1187 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1188 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1189 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1190 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1191 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1192 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1193 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1194 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1195 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1196 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1197 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1198 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1199 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1200 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1201 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1202 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1203 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1204 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1205 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1206 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1207 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1208 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1209 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1210 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1211 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1212 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1213 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1214 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1215 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1216 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1217 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1218 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1219 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1220 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1221 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1222 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1223 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1224 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1225 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1226 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1227 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1228 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1229 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1230 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1231 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1232 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1233 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1234 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1235 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1236 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1237 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1238 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1239 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1240 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1241 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1242 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1243 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1245 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1246 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1247 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1249 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1250 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1251 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1252 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1253 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1254 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1255 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1256 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1257 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1259 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1261 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1263 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1265 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1266 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1267 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1268 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1269 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1271 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1273 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1275 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1276 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1277 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1279 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1280 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1281 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1282 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1283 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1284 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1285 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1286 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1287 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1288 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1289 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1290 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1291 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1292 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1293 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1294 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1295 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1296 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1297 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1298 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1299 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1300 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1301 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1302 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1303 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1304 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1305 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1306 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1307 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1308 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1309 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1310 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1311 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1313 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1314 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1315 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1316 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1317 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1319 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1320 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1321 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1322 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1323 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1324 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1325 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1327 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1329 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1331 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1333 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1335 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1337 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1339 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1341 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1343 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1344 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1345 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1346 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1347 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1348 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1349 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1350 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1351 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1353 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1355 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1357 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1359 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1361 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1363 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1364 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1365 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1366 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1367 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1368 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1369 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1370 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1371 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1372 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1373 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1374 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1375 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1376 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1377 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1378 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1379 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1380 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1381 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1382 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1383 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1384 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1385 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1386 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1387 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1388 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1389 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1390 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1391 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1392 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1393 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1394 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1395 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1396 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1397 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1398 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1399 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1400 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1401 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1402 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1403 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1404 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1405 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1406 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1407 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1408 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1409 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1410 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1411 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1412 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1413 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1414 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1415 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1416 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1417 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1418 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1419 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1420 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1421 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1422 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1423 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1424 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1425 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1426 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1427 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1428 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1429 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1430 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1431 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1432 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1433 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1434 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1435 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1436 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1437 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1438 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1439 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1440 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1441 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1442 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1443 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1444 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1445 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1446 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1447 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1448 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1449 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1450 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1451 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1452 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1453 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1455 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1457 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1459 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1461 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1463 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1465 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1466 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1467 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1468 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1469 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1470 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1471 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1472 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1473 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1475 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1476 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1477 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1478 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1479 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1480 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1481 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1482 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1483 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1485 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1486 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1487 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1488 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1489 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1490 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1491 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1492 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1493 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1495 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1496 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1497 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1498 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1499 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1500 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1501 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1502 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1503 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1504 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1505 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1506 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1507 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1508 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1509 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1510 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1511 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1512 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1513 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1514 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1515 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1517 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1518 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1519 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1520 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1521 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1523 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1525 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1527 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1529 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1531 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1533 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1534 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1535 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1536 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1537 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1538 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1539 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1540 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1541 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1542 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1543 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1544 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1545 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1546 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1547 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1549 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1550 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1551 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1552 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1553 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1554 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1555 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1556 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1557 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1559 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1561 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1563 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1564 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1565 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1566 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1567 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1569 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1571 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1572 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1573 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1574 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1575 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1577 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1579 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1580 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1581 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1582 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1583 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1585 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1587 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1588 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1589 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1590 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1591 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1593 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1595 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1597 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1599 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1601 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1603 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1605 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1607 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1609 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1611 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1613 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1615 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1616 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1617 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1618 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1619 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1620 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1621 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1623 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1625 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1626 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1627 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1629 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1630 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1631 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1632 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1633 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1634 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1635 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1636 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1637 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1639 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1640 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1641 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1642 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1643 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1644 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1645 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1647 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1649 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1650 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1651 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1652 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1653 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1654 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1655 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1657 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1659 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1661 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1662 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1663 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1664 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1665 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1666 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1667 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1668 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1669 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1670 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1671 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1672 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1673 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1675 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1677 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1679 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1680 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1681 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1682 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1683 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1685 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1686 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1687 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1688 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1689 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1691 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1692 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1693 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1695 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1697 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1699 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1701 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1703 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1704 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1705 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1706 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1707 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1709 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1710 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1711 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1712 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1713 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1715 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1717 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1718 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1719 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1721 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1723 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1724 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1725 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1726 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1727 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1728 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1729 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1731 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1733 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1735 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1737 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1738 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1739 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1741 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1743 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1744 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1745 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1746 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1747 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1749 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1751 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1753 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1755 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1756 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1757 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1758 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1759 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1760 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1761 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1762 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1763 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1764 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1765 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1766 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1767 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1768 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1769 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1770 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1771 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1773 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1775 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1777 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1779 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1781 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1782 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1783 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1784 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1785 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1786 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1787 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1789 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1791 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1792 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1793 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1794 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1795 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1796 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1797 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1798 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1799 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1800 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1801 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1802 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1803 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1804 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1805 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1806 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1807 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1808 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1809 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1811 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1812 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1813 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1814 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1815 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1816 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1817 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1818 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1819 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1820 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1821 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1822 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1823 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1824 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1825 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1826 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1827 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1828 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1829 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1830 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1831 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1833 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1835 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1836 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1837 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1839 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1841 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1843 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1845 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1847 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1849 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1850 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1851 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1852 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1853 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1854 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1855 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1856 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1857 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1858 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1859 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1860 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1861 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1863 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1864 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1865 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1866 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1867 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1868 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1869 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1870 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1871 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1872 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1873 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1874 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1875 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1876 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1877 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1878 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1879 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1880 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1881 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1882 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1883 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1884 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1885 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1886 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1887 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1889 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1890 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1891 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1892 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1893 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1894 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1895 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1896 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1897 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1898 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1899 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1900 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1901 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1902 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1903 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1904 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1905 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1906 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1907 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1908 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1909 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1910 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1911 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1913 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1915 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1917 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1919 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1921 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1923 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1925 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1927 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1929 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1931 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1933 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1934 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1935 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1937 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1938 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1939 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1940 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1941 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1942 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1943 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1944 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1945 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1947 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1949 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1951 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1952 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1953 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1954 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1955 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1956 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1957 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1958 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1959 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1961 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1962 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1963 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1965 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1967 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1969 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1970 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1971 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1972 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1973 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1974 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1975 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1976 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1977 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1979 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1981 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1983 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1985 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1987 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1989 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1990 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1991 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1992 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1993 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1995 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1996 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1997 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1998 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 1999 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2000 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2001 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2003 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2005 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2007 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2009 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2011 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2012 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2013 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2014 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2015 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2016 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2017 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2018 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2019 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2021 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2023 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2024 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2025 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2027 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2028 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2029 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2030 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2031 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2032 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2033 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2034 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2035 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2037 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2039 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2041 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2043 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2045 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2047 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2049 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2051 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2053 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2055 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2057 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2058 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2059 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2060 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2061 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2063 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2064 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2065 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2066 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2067 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2069 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2070 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2071 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2073 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2075 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2076 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2077 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2078 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2079 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2080 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2081 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2082 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2083 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2084 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2085 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2087 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2089 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2091 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2093 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2095 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2096 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2097 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2098 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2099 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2101 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2102 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2103 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2104 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2105 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2107 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2108 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2109 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2110 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2111 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2112 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2113 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2114 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2115 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2117 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2118 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2119 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2120 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2121 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2123 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2124 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2125 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2126 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2127 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2128 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2129 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2130 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2131 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2133 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2134 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2135 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2136 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2137 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2138 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2139 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2140 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2141 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2143 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2144 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2145 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2146 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2147 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2148 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2149 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2150 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2151 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2152 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2153 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2154 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2155 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2157 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2158 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2159 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2160 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2161 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2163 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2164 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2165 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2166 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2167 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2168 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2169 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2170 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2171 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2173 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2174 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2175 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2176 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2177 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2178 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2179 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2180 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2181 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2182 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2183 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2184 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2185 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2186 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2187 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2188 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2189 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2191 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2192 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2193 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2195 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2197 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2199 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2201 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2203 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2205 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2207 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2209 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2211 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2213 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2214 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2215 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2216 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2217 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2218 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2219 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2221 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2223 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2225 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2227 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2229 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2231 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2233 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2235 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2236 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2237 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2238 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2239 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2241 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2242 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2243 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2244 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2245 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2246 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2247 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2249 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2251 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2253 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2255 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2257 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2259 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2261 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2263 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2265 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2266 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2267 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2268 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2269 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2270 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2271 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2273 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2275 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2277 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2279 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2281 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2283 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2285 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2287 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2289 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2291 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2293 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2295 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2297 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2298 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2299 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2300 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2301 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2303 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2304 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2305 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2306 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2307 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2309 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2310 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2311 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2313 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2315 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2316 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2317 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2318 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2319 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2320 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2321 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2322 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2323 (SOL) , #gens: 894, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 2325 (SOL) , #gens: 894, #ops: 1, parent:1]

All variants:
f 0.0, [Variant id: 1 (SOL) , #gens: 894, #ops: 0, parent:-]

Solution details
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null

 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 3
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 88
original statement= return this.data[0].length
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 5
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 154
original statement= return this.data.length
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 7
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 170
original statement= return this.data[i][j]
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 8
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 184
original statement= this.data[i][j] = mij
fixed statement= this.data[i][j] = mij
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 9
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 184
original statement= this.data[i][j] = mij
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 10
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 185
original statement= fireSeriesChanged()
fixed statement= fireSeriesChanged()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 11
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 185
original statement= fireSeriesChanged()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 13
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 195
original statement= int rows = getRowCount()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 15
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 196
original statement= int columns = getColumnsCount()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 16
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 198
original statement= for (int row = 0 ; row < rows ; row++) {
	for (int column = 0 ; column < columns ; column++) {
		this.data[row][column] = 0.0;
	}
}
fixed statement= for (int row = 0 ; row < rows ; row++) {
	for (int column = 0 ; column < columns ; column++) {
		this.data[row][column] = 0.0;
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 17
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 198
original statement= for (int row = 0 ; row < rows ; row++) {
	for (int column = 0 ; column < columns ; column++) {
		this.data[row][column] = 0.0;
	}
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 18
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 199
original statement= for (int column = 0 ; column < columns ; column++) {
	this.data[row][column] = 0.0;
}
fixed statement= for (int column = 0 ; column < columns ; column++) {
	this.data[row][column] = 0.0;
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 19
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 199
original statement= for (int column = 0 ; column < columns ; column++) {
	this.data[row][column] = 0.0;
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 20
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 200
original statement= this.data[row][column] = 0.0
fixed statement= this.data[row][column] = 0.0
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 21
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 200
original statement= this.data[row][column] = 0.0
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 22
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 203
original statement= fireSeriesChanged()
fixed statement= fireSeriesChanged()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 23
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 203
original statement= fireSeriesChanged()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 24
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 214
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 25
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 214
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 26
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeries
line= 214
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 27
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeries
line= 214
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 28
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 217
original statement= if (!(obj instanceof org.jfree.data.xy.MatrixSeries)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.data.xy.MatrixSeries)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 29
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 217
original statement= if (!(obj instanceof org.jfree.data.xy.MatrixSeries)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 30
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeries
line= 217
original statement= if (!(obj instanceof org.jfree.data.xy.MatrixSeries)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 31
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeries
line= 217
original statement= if (!(obj instanceof org.jfree.data.xy.MatrixSeries)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 33
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 220
original statement= org.jfree.data.xy.MatrixSeries that = ((org.jfree.data.xy.MatrixSeries)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 34
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 221
original statement= if (!((getRowCount()) == (that.getRowCount()))) {
	return false;
} 
fixed statement= if (!((getRowCount()) == (that.getRowCount()))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 35
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 221
original statement= if (!((getRowCount()) == (that.getRowCount()))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 36
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeries
line= 221
original statement= if (!((getRowCount()) == (that.getRowCount()))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 37
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeries
line= 221
original statement= if (!((getRowCount()) == (that.getRowCount()))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 38
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 224
original statement= if (!((getColumnsCount()) == (that.getColumnsCount()))) {
	return false;
} 
fixed statement= if (!((getColumnsCount()) == (that.getColumnsCount()))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 39
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 224
original statement= if (!((getColumnsCount()) == (that.getColumnsCount()))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 40
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeries
line= 224
original statement= if (!((getColumnsCount()) == (that.getColumnsCount()))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 41
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeries
line= 224
original statement= if (!((getColumnsCount()) == (that.getColumnsCount()))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 42
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 227
original statement= for (int r = 0 ; r < (getRowCount()) ; r++) {
	for (int c = 0 ; c < (getColumnsCount()) ; c++) {
		if ((get(r, c)) != (that.get(r, c))) {
			return false;
		} 
	}
}
fixed statement= for (int r = 0 ; r < (getRowCount()) ; r++) {
	for (int c = 0 ; c < (getColumnsCount()) ; c++) {
		if ((get(r, c)) != (that.get(r, c))) {
			return false;
		} 
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 43
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 227
original statement= for (int r = 0 ; r < (getRowCount()) ; r++) {
	for (int c = 0 ; c < (getColumnsCount()) ; c++) {
		if ((get(r, c)) != (that.get(r, c))) {
			return false;
		} 
	}
}
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 44
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 228
original statement= for (int c = 0 ; c < (getColumnsCount()) ; c++) {
	if ((get(r, c)) != (that.get(r, c))) {
		return false;
	} 
}
fixed statement= for (int c = 0 ; c < (getColumnsCount()) ; c++) {
	if ((get(r, c)) != (that.get(r, c))) {
		return false;
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 45
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 228
original statement= for (int c = 0 ; c < (getColumnsCount()) ; c++) {
	if ((get(r, c)) != (that.get(r, c))) {
		return false;
	} 
}
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 46
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 229
original statement= if ((get(r, c)) != (that.get(r, c))) {
	return false;
} 
fixed statement= if ((get(r, c)) != (that.get(r, c))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 47
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 229
original statement= if ((get(r, c)) != (that.get(r, c))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 48
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeries
line= 229
original statement= if ((get(r, c)) != (that.get(r, c))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 49
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeries
line= 229
original statement= if ((get(r, c)) != (that.get(r, c))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 51
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 234
original statement= return super.equals(obj)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 52
 
operation: DELETE
location= org.jfree.data.general.AbstractDataset
line= 170
original statement= notifyListeners(new org.jfree.data.general.DatasetChangeEvent(this , this))
fixed statement= notifyListeners(new org.jfree.data.general.DatasetChangeEvent(this , this))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 53
 
operation: INSERT_BEFORE
location= org.jfree.data.general.AbstractDataset
line= 170
original statement= notifyListeners(new org.jfree.data.general.DatasetChangeEvent(this , this))
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 55
 
operation: INSERT_BEFORE
location= org.jfree.data.general.AbstractDataset
line= 184
original statement= java.lang.Object[] listeners = this.listenerList.getListenerList()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 56
 
operation: DELETE
location= org.jfree.data.general.AbstractDataset
line= 185
original statement= for (int i = (listeners.length) - 2 ; i >= 0 ; i -= 2) {
	if ((listeners[i]) == (org.jfree.data.general.DatasetChangeListener.class)) {
		((org.jfree.data.general.DatasetChangeListener)(listeners[(i + 1)])).datasetChanged(event);
	} 
}
fixed statement= for (int i = (listeners.length) - 2 ; i >= 0 ; i -= 2) {
	if ((listeners[i]) == (org.jfree.data.general.DatasetChangeListener.class)) {
		((org.jfree.data.general.DatasetChangeListener)(listeners[(i + 1)])).datasetChanged(event);
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 57
 
operation: INSERT_BEFORE
location= org.jfree.data.general.AbstractDataset
line= 185
original statement= for (int i = (listeners.length) - 2 ; i >= 0 ; i -= 2) {
	if ((listeners[i]) == (org.jfree.data.general.DatasetChangeListener.class)) {
		((org.jfree.data.general.DatasetChangeListener)(listeners[(i + 1)])).datasetChanged(event);
	} 
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 58
 
operation: DELETE
location= org.jfree.data.general.AbstractDataset
line= 218
original statement= stream.defaultWriteObject()
fixed statement= stream.defaultWriteObject()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 59
 
operation: INSERT_BEFORE
location= org.jfree.data.general.AbstractDataset
line= 218
original statement= stream.defaultWriteObject()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 60
 
operation: DELETE
location= org.jfree.data.general.AbstractDataset
line= 231
original statement= stream.defaultReadObject()
fixed statement= stream.defaultReadObject()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 61
 
operation: INSERT_BEFORE
location= org.jfree.data.general.AbstractDataset
line= 231
original statement= stream.defaultReadObject()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 62
 
operation: DELETE
location= org.jfree.data.general.AbstractDataset
line= 232
original statement= this.listenerList = new javax.swing.event.EventListenerList()
fixed statement= this.listenerList = new javax.swing.event.EventListenerList()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 63
 
operation: INSERT_BEFORE
location= org.jfree.data.general.AbstractDataset
line= 232
original statement= this.listenerList = new javax.swing.event.EventListenerList()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 64
 
operation: DELETE
location= org.jfree.data.general.AbstractDataset
line= 233
original statement= stream.registerValidation(this, 10)
fixed statement= stream.registerValidation(this, 10)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 65
 
operation: INSERT_BEFORE
location= org.jfree.data.general.AbstractDataset
line= 233
original statement= stream.registerValidation(this, 10)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 66
 
operation: DELETE
location= org.jfree.data.general.AbstractDataset
line= 255
original statement= fireDatasetChanged()
fixed statement= fireDatasetChanged()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 67
 
operation: INSERT_BEFORE
location= org.jfree.data.general.AbstractDataset
line= 255
original statement= fireDatasetChanged()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 68
 
operation: DELETE
location= org.jfree.chart.util.ObjectUtilities
line= 125
original statement= if (o1 == o2) {
	return true;
} 
fixed statement= if (o1 == o2) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 69
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 125
original statement= if (o1 == o2) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 70
 
operation: REPLACE
location= org.jfree.chart.util.ObjectUtilities
line= 125
original statement= if (o1 == o2) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 71
 
operation: REPLACE
location= org.jfree.chart.util.ObjectUtilities
line= 125
original statement= if (o1 == o2) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 72
 
operation: DELETE
location= org.jfree.chart.util.ObjectUtilities
line= 126
original statement= return true
fixed statement= return true
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 73
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 126
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 75
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 128
original statement= if (o1 != null) {
	return o1.equals(o2);
} else {
	return false;
}
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 76
 
operation: REPLACE
location= org.jfree.chart.util.ObjectUtilities
line= 128
original statement= if (o1 != null) {
	return o1.equals(o2);
} else {
	return false;
}
fixed statement= if (true) {
	return o1.equals(o2);
} else {
	return false;
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 77
 
operation: REPLACE
location= org.jfree.chart.util.ObjectUtilities
line= 128
original statement= if (o1 != null) {
	return o1.equals(o2);
} else {
	return false;
}
fixed statement= if (false) {
	return o1.equals(o2);
} else {
	return false;
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 79
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 129
original statement= return o1.equals(o2)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 80
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 213
original statement= if (series == null) {
	throw new java.lang.IllegalArgumentException("Cannot add null series.");
} 
fixed statement= if (series == null) {
	throw new java.lang.IllegalArgumentException("Cannot add null series.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 81
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 213
original statement= if (series == null) {
	throw new java.lang.IllegalArgumentException("Cannot add null series.");
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 82
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 213
original statement= if (series == null) {
	throw new java.lang.IllegalArgumentException("Cannot add null series.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Cannot add null series.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 83
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 213
original statement= if (series == null) {
	throw new java.lang.IllegalArgumentException("Cannot add null series.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Cannot add null series.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 84
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 219
original statement= this.seriesList.add(series)
fixed statement= this.seriesList.add(series)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 85
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 219
original statement= this.seriesList.add(series)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 86
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 220
original statement= series.addChangeListener(this)
fixed statement= series.addChangeListener(this)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 87
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 220
original statement= series.addChangeListener(this)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 88
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 221
original statement= fireDatasetChanged()
fixed statement= fireDatasetChanged()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 89
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 221
original statement= fireDatasetChanged()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 90
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 233
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (obj == null) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 91
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 233
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 92
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 233
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 93
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 233
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 94
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 237
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 95
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 237
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 96
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 237
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 97
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 237
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 98
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 241
original statement= if (obj instanceof org.jfree.data.xy.MatrixSeriesCollection) {
	org.jfree.data.xy.MatrixSeriesCollection c = ((org.jfree.data.xy.MatrixSeriesCollection)(obj));
	return org.jfree.chart.util.ObjectUtilities.equal(this.seriesList, c.seriesList);
} 
fixed statement= if (obj instanceof org.jfree.data.xy.MatrixSeriesCollection) {
	org.jfree.data.xy.MatrixSeriesCollection c = ((org.jfree.data.xy.MatrixSeriesCollection)(obj));
	return org.jfree.chart.util.ObjectUtilities.equal(this.seriesList, c.seriesList);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 99
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 241
original statement= if (obj instanceof org.jfree.data.xy.MatrixSeriesCollection) {
	org.jfree.data.xy.MatrixSeriesCollection c = ((org.jfree.data.xy.MatrixSeriesCollection)(obj));
	return org.jfree.chart.util.ObjectUtilities.equal(this.seriesList, c.seriesList);
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 100
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 241
original statement= if (obj instanceof org.jfree.data.xy.MatrixSeriesCollection) {
	org.jfree.data.xy.MatrixSeriesCollection c = ((org.jfree.data.xy.MatrixSeriesCollection)(obj));
	return org.jfree.chart.util.ObjectUtilities.equal(this.seriesList, c.seriesList);
} 
fixed statement= if (true) {
	org.jfree.data.xy.MatrixSeriesCollection c = ((org.jfree.data.xy.MatrixSeriesCollection)(obj));
	return org.jfree.chart.util.ObjectUtilities.equal(this.seriesList, c.seriesList);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 101
 
operation: REPLACE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 241
original statement= if (obj instanceof org.jfree.data.xy.MatrixSeriesCollection) {
	org.jfree.data.xy.MatrixSeriesCollection c = ((org.jfree.data.xy.MatrixSeriesCollection)(obj));
	return org.jfree.chart.util.ObjectUtilities.equal(this.seriesList, c.seriesList);
} 
fixed statement= if (false) {
	org.jfree.data.xy.MatrixSeriesCollection c = ((org.jfree.data.xy.MatrixSeriesCollection)(obj));
	return org.jfree.chart.util.ObjectUtilities.equal(this.seriesList, c.seriesList);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 103
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 242
original statement= org.jfree.data.xy.MatrixSeriesCollection c = ((org.jfree.data.xy.MatrixSeriesCollection)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 104
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 244
original statement= return org.jfree.chart.util.ObjectUtilities.equal(this.seriesList, c.seriesList)
fixed statement= return org.jfree.chart.util.ObjectUtilities.equal(this.seriesList, c.seriesList)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 105
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 244
original statement= return org.jfree.chart.util.ObjectUtilities.equal(this.seriesList, c.seriesList)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 107
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 130
original statement= return this.key
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 109
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 158
original statement= return this.description
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 110
 
operation: DELETE
location= org.jfree.data.general.Series
line= 256
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 111
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 256
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 112
 
operation: REPLACE
location= org.jfree.data.general.Series
line= 256
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 113
 
operation: REPLACE
location= org.jfree.data.general.Series
line= 256
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 114
 
operation: DELETE
location= org.jfree.data.general.Series
line= 259
original statement= if (!(obj instanceof org.jfree.data.general.Series)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.data.general.Series)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 115
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 259
original statement= if (!(obj instanceof org.jfree.data.general.Series)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 116
 
operation: REPLACE
location= org.jfree.data.general.Series
line= 259
original statement= if (!(obj instanceof org.jfree.data.general.Series)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 117
 
operation: REPLACE
location= org.jfree.data.general.Series
line= 259
original statement= if (!(obj instanceof org.jfree.data.general.Series)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 119
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 262
original statement= org.jfree.data.general.Series that = ((org.jfree.data.general.Series)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 120
 
operation: DELETE
location= org.jfree.data.general.Series
line= 263
original statement= if (!(getKey().equals(that.getKey()))) {
	return false;
} 
fixed statement= if (!(getKey().equals(that.getKey()))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 121
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 263
original statement= if (!(getKey().equals(that.getKey()))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 122
 
operation: REPLACE
location= org.jfree.data.general.Series
line= 263
original statement= if (!(getKey().equals(that.getKey()))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 123
 
operation: REPLACE
location= org.jfree.data.general.Series
line= 263
original statement= if (!(getKey().equals(that.getKey()))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 124
 
operation: DELETE
location= org.jfree.data.general.Series
line= 266
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(getDescription(), that.getDescription()))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(getDescription(), that.getDescription()))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 125
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 266
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(getDescription(), that.getDescription()))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 126
 
operation: REPLACE
location= org.jfree.data.general.Series
line= 266
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(getDescription(), that.getDescription()))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 127
 
operation: REPLACE
location= org.jfree.data.general.Series
line= 266
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(getDescription(), that.getDescription()))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 129
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 269
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 130
 
operation: DELETE
location= org.jfree.data.general.Series
line= 295
original statement= this.listeners.add(org.jfree.data.general.SeriesChangeListener.class, listener)
fixed statement= this.listeners.add(org.jfree.data.general.SeriesChangeListener.class, listener)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 131
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 295
original statement= this.listeners.add(org.jfree.data.general.SeriesChangeListener.class, listener)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 132
 
operation: DELETE
location= org.jfree.data.general.Series
line= 313
original statement= if (this.notify) {
	notifyListeners(new org.jfree.data.general.SeriesChangeEvent(this));
} 
fixed statement= if (this.notify) {
	notifyListeners(new org.jfree.data.general.SeriesChangeEvent(this));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 133
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 313
original statement= if (this.notify) {
	notifyListeners(new org.jfree.data.general.SeriesChangeEvent(this));
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 134
 
operation: REPLACE
location= org.jfree.data.general.Series
line= 313
original statement= if (this.notify) {
	notifyListeners(new org.jfree.data.general.SeriesChangeEvent(this));
} 
fixed statement= if (true) {
	notifyListeners(new org.jfree.data.general.SeriesChangeEvent(this));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 135
 
operation: REPLACE
location= org.jfree.data.general.Series
line= 313
original statement= if (this.notify) {
	notifyListeners(new org.jfree.data.general.SeriesChangeEvent(this));
} 
fixed statement= if (false) {
	notifyListeners(new org.jfree.data.general.SeriesChangeEvent(this));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 136
 
operation: DELETE
location= org.jfree.data.general.Series
line= 314
original statement= notifyListeners(new org.jfree.data.general.SeriesChangeEvent(this))
fixed statement= notifyListeners(new org.jfree.data.general.SeriesChangeEvent(this))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 137
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 314
original statement= notifyListeners(new org.jfree.data.general.SeriesChangeEvent(this))
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 139
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 326
original statement= java.lang.Object[] listenerList = this.listeners.getListenerList()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 140
 
operation: DELETE
location= org.jfree.data.general.Series
line= 327
original statement= for (int i = (listenerList.length) - 2 ; i >= 0 ; i -= 2) {
	if ((listenerList[i]) == (org.jfree.data.general.SeriesChangeListener.class)) {
		((org.jfree.data.general.SeriesChangeListener)(listenerList[(i + 1)])).seriesChanged(event);
	} 
}
fixed statement= for (int i = (listenerList.length) - 2 ; i >= 0 ; i -= 2) {
	if ((listenerList[i]) == (org.jfree.data.general.SeriesChangeListener.class)) {
		((org.jfree.data.general.SeriesChangeListener)(listenerList[(i + 1)])).seriesChanged(event);
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 141
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 327
original statement= for (int i = (listenerList.length) - 2 ; i >= 0 ; i -= 2) {
	if ((listenerList[i]) == (org.jfree.data.general.SeriesChangeListener.class)) {
		((org.jfree.data.general.SeriesChangeListener)(listenerList[(i + 1)])).seriesChanged(event);
	} 
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 142
 
operation: DELETE
location= org.jfree.data.general.Series
line= 295
original statement= this.listeners.add(org.jfree.data.general.SeriesChangeListener.class, listener)
fixed statement= this.listeners.add(org.jfree.data.general.SeriesChangeListener.class, listener)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 143
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 295
original statement= this.listeners.add(org.jfree.data.general.SeriesChangeListener.class, listener)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 145
 
operation: INSERT_BEFORE
location= org.jfree.data.general.AbstractDataset
line= 205
original statement= org.jfree.data.general.AbstractDataset clone = ((org.jfree.data.general.AbstractDataset)(super.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 146
 
operation: DELETE
location= org.jfree.data.general.AbstractDataset
line= 206
original statement= clone.listenerList = new javax.swing.event.EventListenerList()
fixed statement= clone.listenerList = new javax.swing.event.EventListenerList()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 147
 
operation: INSERT_BEFORE
location= org.jfree.data.general.AbstractDataset
line= 206
original statement= clone.listenerList = new javax.swing.event.EventListenerList()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 149
 
operation: INSERT_BEFORE
location= org.jfree.data.general.AbstractDataset
line= 207
original statement= return clone
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 150
 
operation: DELETE
location= org.jfree.chart.util.ObjectUtilities
line= 162
original statement= if (object == null) {
	throw new java.lang.IllegalArgumentException("Null \'object\' argument.");
} 
fixed statement= if (object == null) {
	throw new java.lang.IllegalArgumentException("Null \'object\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 151
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 162
original statement= if (object == null) {
	throw new java.lang.IllegalArgumentException("Null \'object\' argument.");
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 152
 
operation: REPLACE
location= org.jfree.chart.util.ObjectUtilities
line= 162
original statement= if (object == null) {
	throw new java.lang.IllegalArgumentException("Null \'object\' argument.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Null \'object\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 153
 
operation: REPLACE
location= org.jfree.chart.util.ObjectUtilities
line= 162
original statement= if (object == null) {
	throw new java.lang.IllegalArgumentException("Null \'object\' argument.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Null \'object\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 154
 
operation: DELETE
location= org.jfree.chart.util.ObjectUtilities
line= 165
original statement= if (object instanceof org.jfree.chart.util.PublicCloneable) {
	final org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(object));
	return pc.clone();
} else {
	try {
		final java.lang.reflect.Method method = object.getClass().getMethod("clone", ((java.lang.Class[])(null)));
		if (java.lang.reflect.Modifier.isPublic(method.getModifiers())) {
			return method.invoke(object, ((java.lang.Object[])(null)));
		} 
	} catch (java.lang.NoSuchMethodException e) {
		e.printStackTrace();
	} catch (java.lang.IllegalAccessException e) {
		e.printStackTrace();
	} catch (java.lang.reflect.InvocationTargetException e) {
		e.printStackTrace();
	}
}
fixed statement= if (object instanceof org.jfree.chart.util.PublicCloneable) {
	final org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(object));
	return pc.clone();
} else {
	try {
		final java.lang.reflect.Method method = object.getClass().getMethod("clone", ((java.lang.Class[])(null)));
		if (java.lang.reflect.Modifier.isPublic(method.getModifiers())) {
			return method.invoke(object, ((java.lang.Object[])(null)));
		} 
	} catch (java.lang.NoSuchMethodException e) {
		e.printStackTrace();
	} catch (java.lang.IllegalAccessException e) {
		e.printStackTrace();
	} catch (java.lang.reflect.InvocationTargetException e) {
		e.printStackTrace();
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 155
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 165
original statement= if (object instanceof org.jfree.chart.util.PublicCloneable) {
	final org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(object));
	return pc.clone();
} else {
	try {
		final java.lang.reflect.Method method = object.getClass().getMethod("clone", ((java.lang.Class[])(null)));
		if (java.lang.reflect.Modifier.isPublic(method.getModifiers())) {
			return method.invoke(object, ((java.lang.Object[])(null)));
		} 
	} catch (java.lang.NoSuchMethodException e) {
		e.printStackTrace();
	} catch (java.lang.IllegalAccessException e) {
		e.printStackTrace();
	} catch (java.lang.reflect.InvocationTargetException e) {
		e.printStackTrace();
	}
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 156
 
operation: REPLACE
location= org.jfree.chart.util.ObjectUtilities
line= 165
original statement= if (object instanceof org.jfree.chart.util.PublicCloneable) {
	final org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(object));
	return pc.clone();
} else {
	try {
		final java.lang.reflect.Method method = object.getClass().getMethod("clone", ((java.lang.Class[])(null)));
		if (java.lang.reflect.Modifier.isPublic(method.getModifiers())) {
			return method.invoke(object, ((java.lang.Object[])(null)));
		} 
	} catch (java.lang.NoSuchMethodException e) {
		e.printStackTrace();
	} catch (java.lang.IllegalAccessException e) {
		e.printStackTrace();
	} catch (java.lang.reflect.InvocationTargetException e) {
		e.printStackTrace();
	}
}
fixed statement= if (true) {
	final org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(object));
	return pc.clone();
} else {
	try {
		final java.lang.reflect.Method method = object.getClass().getMethod("clone", ((java.lang.Class[])(null)));
		if (java.lang.reflect.Modifier.isPublic(method.getModifiers())) {
			return method.invoke(object, ((java.lang.Object[])(null)));
		} 
	} catch (java.lang.NoSuchMethodException e) {
		e.printStackTrace();
	} catch (java.lang.IllegalAccessException e) {
		e.printStackTrace();
	} catch (java.lang.reflect.InvocationTargetException e) {
		e.printStackTrace();
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 157
 
operation: REPLACE
location= org.jfree.chart.util.ObjectUtilities
line= 165
original statement= if (object instanceof org.jfree.chart.util.PublicCloneable) {
	final org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(object));
	return pc.clone();
} else {
	try {
		final java.lang.reflect.Method method = object.getClass().getMethod("clone", ((java.lang.Class[])(null)));
		if (java.lang.reflect.Modifier.isPublic(method.getModifiers())) {
			return method.invoke(object, ((java.lang.Object[])(null)));
		} 
	} catch (java.lang.NoSuchMethodException e) {
		e.printStackTrace();
	} catch (java.lang.IllegalAccessException e) {
		e.printStackTrace();
	} catch (java.lang.reflect.InvocationTargetException e) {
		e.printStackTrace();
	}
}
fixed statement= if (false) {
	final org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(object));
	return pc.clone();
} else {
	try {
		final java.lang.reflect.Method method = object.getClass().getMethod("clone", ((java.lang.Class[])(null)));
		if (java.lang.reflect.Modifier.isPublic(method.getModifiers())) {
			return method.invoke(object, ((java.lang.Object[])(null)));
		} 
	} catch (java.lang.NoSuchMethodException e) {
		e.printStackTrace();
	} catch (java.lang.IllegalAccessException e) {
		e.printStackTrace();
	} catch (java.lang.reflect.InvocationTargetException e) {
		e.printStackTrace();
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 159
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 171
original statement= final java.lang.reflect.Method method = object.getClass().getMethod("clone", ((java.lang.Class[])(null)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 161
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 173
original statement= if (java.lang.reflect.Modifier.isPublic(method.getModifiers())) {
	return method.invoke(object, ((java.lang.Object[])(null)));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 162
 
operation: REPLACE
location= org.jfree.chart.util.ObjectUtilities
line= 173
original statement= if (java.lang.reflect.Modifier.isPublic(method.getModifiers())) {
	return method.invoke(object, ((java.lang.Object[])(null)));
} 
fixed statement= if (true) {
	return method.invoke(object, ((java.lang.Object[])(null)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 163
 
operation: REPLACE
location= org.jfree.chart.util.ObjectUtilities
line= 173
original statement= if (java.lang.reflect.Modifier.isPublic(method.getModifiers())) {
	return method.invoke(object, ((java.lang.Object[])(null)));
} 
fixed statement= if (false) {
	return method.invoke(object, ((java.lang.Object[])(null)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 165
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 174
original statement= return method.invoke(object, ((java.lang.Object[])(null)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 166
 
operation: DELETE
location= org.jfree.chart.util.ObjectUtilities
line= 203
original statement= if (collection == null) {
	throw new java.lang.IllegalArgumentException("Null \'collection\' argument.");
} 
fixed statement= if (collection == null) {
	throw new java.lang.IllegalArgumentException("Null \'collection\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 167
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 203
original statement= if (collection == null) {
	throw new java.lang.IllegalArgumentException("Null \'collection\' argument.");
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 168
 
operation: REPLACE
location= org.jfree.chart.util.ObjectUtilities
line= 203
original statement= if (collection == null) {
	throw new java.lang.IllegalArgumentException("Null \'collection\' argument.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Null \'collection\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 169
 
operation: REPLACE
location= org.jfree.chart.util.ObjectUtilities
line= 203
original statement= if (collection == null) {
	throw new java.lang.IllegalArgumentException("Null \'collection\' argument.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Null \'collection\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 171
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 209
original statement= final java.util.Collection result = ((java.util.Collection)(org.jfree.chart.util.ObjectUtilities.clone(collection)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 172
 
operation: DELETE
location= org.jfree.chart.util.ObjectUtilities
line= 211
original statement= result.clear()
fixed statement= result.clear()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 173
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 211
original statement= result.clear()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 175
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 212
original statement= final java.util.Iterator iterator = collection.iterator()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 176
 
operation: DELETE
location= org.jfree.chart.util.ObjectUtilities
line= 213
original statement= while (iterator.hasNext()) {
	final java.lang.Object item = iterator.next();
	if (item != null) {
		result.add(org.jfree.chart.util.ObjectUtilities.clone(item));
	} else {
		result.add(null);
	}
}
fixed statement= while (iterator.hasNext()) {
	final java.lang.Object item = iterator.next();
	if (item != null) {
		result.add(org.jfree.chart.util.ObjectUtilities.clone(item));
	} else {
		result.add(null);
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 177
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 213
original statement= while (iterator.hasNext()) {
	final java.lang.Object item = iterator.next();
	if (item != null) {
		result.add(org.jfree.chart.util.ObjectUtilities.clone(item));
	} else {
		result.add(null);
	}
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 179
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 214
original statement= final java.lang.Object item = iterator.next()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 180
 
operation: DELETE
location= org.jfree.chart.util.ObjectUtilities
line= 215
original statement= if (item != null) {
	result.add(org.jfree.chart.util.ObjectUtilities.clone(item));
} else {
	result.add(null);
}
fixed statement= if (item != null) {
	result.add(org.jfree.chart.util.ObjectUtilities.clone(item));
} else {
	result.add(null);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 181
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 215
original statement= if (item != null) {
	result.add(org.jfree.chart.util.ObjectUtilities.clone(item));
} else {
	result.add(null);
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 182
 
operation: REPLACE
location= org.jfree.chart.util.ObjectUtilities
line= 215
original statement= if (item != null) {
	result.add(org.jfree.chart.util.ObjectUtilities.clone(item));
} else {
	result.add(null);
}
fixed statement= if (true) {
	result.add(org.jfree.chart.util.ObjectUtilities.clone(item));
} else {
	result.add(null);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 183
 
operation: REPLACE
location= org.jfree.chart.util.ObjectUtilities
line= 215
original statement= if (item != null) {
	result.add(org.jfree.chart.util.ObjectUtilities.clone(item));
} else {
	result.add(null);
}
fixed statement= if (false) {
	result.add(org.jfree.chart.util.ObjectUtilities.clone(item));
} else {
	result.add(null);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 184
 
operation: DELETE
location= org.jfree.chart.util.ObjectUtilities
line= 216
original statement= result.add(org.jfree.chart.util.ObjectUtilities.clone(item))
fixed statement= result.add(org.jfree.chart.util.ObjectUtilities.clone(item))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 185
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 216
original statement= result.add(org.jfree.chart.util.ObjectUtilities.clone(item))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 187
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 222
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 189
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 267
original statement= org.jfree.data.xy.MatrixSeriesCollection clone = ((org.jfree.data.xy.MatrixSeriesCollection)(super.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 190
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 268
original statement= clone.seriesList = ((java.util.List)(org.jfree.chart.util.ObjectUtilities.deepClone(this.seriesList)))
fixed statement= clone.seriesList = ((java.util.List)(org.jfree.chart.util.ObjectUtilities.deepClone(this.seriesList)))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 191
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 268
original statement= clone.seriesList = ((java.util.List)(org.jfree.chart.util.ObjectUtilities.deepClone(this.seriesList)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 193
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeriesCollection
line= 269
original statement= return clone
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 195
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 170
original statement= java.lang.String old = this.description
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 196
 
operation: DELETE
location= org.jfree.data.general.Series
line= 171
original statement= this.description = description
fixed statement= this.description = description
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 197
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 171
original statement= this.description = description
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 198
 
operation: DELETE
location= org.jfree.data.general.Series
line= 172
original statement= this.propertyChangeSupport.firePropertyChange("Description", old, description)
fixed statement= this.propertyChangeSupport.firePropertyChange("Description", old, description)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 199
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 172
original statement= this.propertyChangeSupport.firePropertyChange("Description", old, description)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 201
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 241
original statement= org.jfree.data.general.Series clone = ((org.jfree.data.general.Series)(super.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 202
 
operation: DELETE
location= org.jfree.data.general.Series
line= 242
original statement= clone.listeners = new javax.swing.event.EventListenerList()
fixed statement= clone.listeners = new javax.swing.event.EventListenerList()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 203
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 242
original statement= clone.listeners = new javax.swing.event.EventListenerList()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 204
 
operation: DELETE
location= org.jfree.data.general.Series
line= 243
original statement= clone.propertyChangeSupport = new java.beans.PropertyChangeSupport(clone)
fixed statement= clone.propertyChangeSupport = new java.beans.PropertyChangeSupport(clone)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 205
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 243
original statement= clone.propertyChangeSupport = new java.beans.PropertyChangeSupport(clone)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 207
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 244
original statement= return clone
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 208
 
operation: DELETE
location= org.jfree.data.general.Series
line= 267
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 209
 
operation: INSERT_BEFORE
location= org.jfree.data.general.Series
line= 267
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 210
 
operation: DELETE
location= org.jfree.chart.text.TextAnchor
line= 147
original statement= if (this == obj) {
	return true;
} 
fixed statement= if (this == obj) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 211
 
operation: INSERT_BEFORE
location= org.jfree.chart.text.TextAnchor
line= 147
original statement= if (this == obj) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 212
 
operation: REPLACE
location= org.jfree.chart.text.TextAnchor
line= 147
original statement= if (this == obj) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 213
 
operation: REPLACE
location= org.jfree.chart.text.TextAnchor
line= 147
original statement= if (this == obj) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 214
 
operation: DELETE
location= org.jfree.chart.text.TextAnchor
line= 148
original statement= return true
fixed statement= return true
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 215
 
operation: INSERT_BEFORE
location= org.jfree.chart.text.TextAnchor
line= 148
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 216
 
operation: DELETE
location= org.jfree.chart.text.TextAnchor
line= 150
original statement= if (!(obj instanceof org.jfree.chart.text.TextAnchor)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.chart.text.TextAnchor)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 217
 
operation: INSERT_BEFORE
location= org.jfree.chart.text.TextAnchor
line= 150
original statement= if (!(obj instanceof org.jfree.chart.text.TextAnchor)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 218
 
operation: REPLACE
location= org.jfree.chart.text.TextAnchor
line= 150
original statement= if (!(obj instanceof org.jfree.chart.text.TextAnchor)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 219
 
operation: REPLACE
location= org.jfree.chart.text.TextAnchor
line= 150
original statement= if (!(obj instanceof org.jfree.chart.text.TextAnchor)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 221
 
operation: INSERT_BEFORE
location= org.jfree.chart.text.TextAnchor
line= 154
original statement= org.jfree.chart.text.TextAnchor order = ((org.jfree.chart.text.TextAnchor)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 222
 
operation: DELETE
location= org.jfree.chart.text.TextAnchor
line= 155
original statement= if (!(this.name.equals(order.name))) {
	return false;
} 
fixed statement= if (!(this.name.equals(order.name))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 223
 
operation: INSERT_BEFORE
location= org.jfree.chart.text.TextAnchor
line= 155
original statement= if (!(this.name.equals(order.name))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 224
 
operation: REPLACE
location= org.jfree.chart.text.TextAnchor
line= 155
original statement= if (!(this.name.equals(order.name))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 225
 
operation: REPLACE
location= org.jfree.chart.text.TextAnchor
line= 155
original statement= if (!(this.name.equals(order.name))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 226
 
operation: DELETE
location= org.jfree.chart.text.TextAnchor
line= 156
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 227
 
operation: INSERT_BEFORE
location= org.jfree.chart.text.TextAnchor
line= 156
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 229
 
operation: INSERT_BEFORE
location= org.jfree.chart.text.TextAnchor
line= 159
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 231
 
operation: INSERT_BEFORE
location= org.jfree.chart.text.TextAnchor
line= 179
original statement= org.jfree.chart.text.TextAnchor result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 232
 
operation: DELETE
location= org.jfree.chart.text.TextAnchor
line= 180
original statement= if (equals(org.jfree.chart.text.TextAnchor.TOP_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.TOP_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.TOP_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.TOP_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.TOP_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.TOP_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.CENTER_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER)) {
	result = org.jfree.chart.text.TextAnchor.CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.CENTER_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT;
} 
fixed statement= if (equals(org.jfree.chart.text.TextAnchor.TOP_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.TOP_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.TOP_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.TOP_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.TOP_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.TOP_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.CENTER_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER)) {
	result = org.jfree.chart.text.TextAnchor.CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.CENTER_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 233
 
operation: INSERT_BEFORE
location= org.jfree.chart.text.TextAnchor
line= 180
original statement= if (equals(org.jfree.chart.text.TextAnchor.TOP_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.TOP_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.TOP_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.TOP_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.TOP_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.TOP_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.CENTER_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER)) {
	result = org.jfree.chart.text.TextAnchor.CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.CENTER_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT;
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 234
 
operation: REPLACE
location= org.jfree.chart.text.TextAnchor
line= 180
original statement= if (equals(org.jfree.chart.text.TextAnchor.TOP_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.TOP_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.TOP_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.TOP_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.TOP_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.TOP_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.CENTER_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER)) {
	result = org.jfree.chart.text.TextAnchor.CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.CENTER_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT;
} 
fixed statement= if (true) {
	result = org.jfree.chart.text.TextAnchor.TOP_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.TOP_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.TOP_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.TOP_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.TOP_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.CENTER_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER)) {
	result = org.jfree.chart.text.TextAnchor.CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.CENTER_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 235
 
operation: REPLACE
location= org.jfree.chart.text.TextAnchor
line= 180
original statement= if (equals(org.jfree.chart.text.TextAnchor.TOP_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.TOP_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.TOP_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.TOP_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.TOP_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.TOP_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.CENTER_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER)) {
	result = org.jfree.chart.text.TextAnchor.CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.CENTER_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT;
} 
fixed statement= if (false) {
	result = org.jfree.chart.text.TextAnchor.TOP_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.TOP_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.TOP_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.TOP_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.TOP_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.BASELINE_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.BASELINE_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.CENTER_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER)) {
	result = org.jfree.chart.text.TextAnchor.CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.CENTER_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.CENTER_RIGHT;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER;
} else if (equals(org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT)) {
	result = org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 236
 
operation: DELETE
location= org.jfree.chart.text.TextAnchor
line= 184
original statement= result = org.jfree.chart.text.TextAnchor.TOP_CENTER
fixed statement= result = org.jfree.chart.text.TextAnchor.TOP_CENTER
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 237
 
operation: INSERT_BEFORE
location= org.jfree.chart.text.TextAnchor
line= 184
original statement= result = org.jfree.chart.text.TextAnchor.TOP_CENTER
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 238
 
operation: DELETE
location= org.jfree.chart.text.TextAnchor
line= 193
original statement= result = org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
fixed statement= result = org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 239
 
operation: INSERT_BEFORE
location= org.jfree.chart.text.TextAnchor
line= 193
original statement= result = org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 240
 
operation: DELETE
location= org.jfree.chart.text.TextAnchor
line= 211
original statement= result = org.jfree.chart.text.TextAnchor.CENTER
fixed statement= result = org.jfree.chart.text.TextAnchor.CENTER
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 241
 
operation: INSERT_BEFORE
location= org.jfree.chart.text.TextAnchor
line= 211
original statement= result = org.jfree.chart.text.TextAnchor.CENTER
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 243
 
operation: INSERT_BEFORE
location= org.jfree.chart.text.TextAnchor
line= 225
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 244
 
operation: DELETE
location= org.jfree.chart.labels.ItemLabelPosition
line= 174
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 245
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelPosition
line= 174
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 246
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelPosition
line= 174
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 247
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelPosition
line= 174
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 248
 
operation: DELETE
location= org.jfree.chart.labels.ItemLabelPosition
line= 177
original statement= if (!(obj instanceof org.jfree.chart.labels.ItemLabelPosition)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.chart.labels.ItemLabelPosition)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 249
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelPosition
line= 177
original statement= if (!(obj instanceof org.jfree.chart.labels.ItemLabelPosition)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 250
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelPosition
line= 177
original statement= if (!(obj instanceof org.jfree.chart.labels.ItemLabelPosition)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 251
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelPosition
line= 177
original statement= if (!(obj instanceof org.jfree.chart.labels.ItemLabelPosition)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 253
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelPosition
line= 180
original statement= org.jfree.chart.labels.ItemLabelPosition that = ((org.jfree.chart.labels.ItemLabelPosition)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 254
 
operation: DELETE
location= org.jfree.chart.labels.ItemLabelPosition
line= 181
original statement= if (!(this.itemLabelAnchor.equals(that.itemLabelAnchor))) {
	return false;
} 
fixed statement= if (!(this.itemLabelAnchor.equals(that.itemLabelAnchor))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 255
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelPosition
line= 181
original statement= if (!(this.itemLabelAnchor.equals(that.itemLabelAnchor))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 256
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelPosition
line= 181
original statement= if (!(this.itemLabelAnchor.equals(that.itemLabelAnchor))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 257
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelPosition
line= 181
original statement= if (!(this.itemLabelAnchor.equals(that.itemLabelAnchor))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 258
 
operation: DELETE
location= org.jfree.chart.labels.ItemLabelPosition
line= 184
original statement= if (!(this.textAnchor.equals(that.textAnchor))) {
	return false;
} 
fixed statement= if (!(this.textAnchor.equals(that.textAnchor))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 259
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelPosition
line= 184
original statement= if (!(this.textAnchor.equals(that.textAnchor))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 260
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelPosition
line= 184
original statement= if (!(this.textAnchor.equals(that.textAnchor))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 261
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelPosition
line= 184
original statement= if (!(this.textAnchor.equals(that.textAnchor))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 262
 
operation: DELETE
location= org.jfree.chart.labels.ItemLabelPosition
line= 187
original statement= if (!(this.rotationAnchor.equals(that.rotationAnchor))) {
	return false;
} 
fixed statement= if (!(this.rotationAnchor.equals(that.rotationAnchor))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 263
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelPosition
line= 187
original statement= if (!(this.rotationAnchor.equals(that.rotationAnchor))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 264
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelPosition
line= 187
original statement= if (!(this.rotationAnchor.equals(that.rotationAnchor))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 265
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelPosition
line= 187
original statement= if (!(this.rotationAnchor.equals(that.rotationAnchor))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 266
 
operation: DELETE
location= org.jfree.chart.labels.ItemLabelPosition
line= 190
original statement= if ((this.angle) != (that.angle)) {
	return false;
} 
fixed statement= if ((this.angle) != (that.angle)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 267
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelPosition
line= 190
original statement= if ((this.angle) != (that.angle)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 268
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelPosition
line= 190
original statement= if ((this.angle) != (that.angle)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 269
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelPosition
line= 190
original statement= if ((this.angle) != (that.angle)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 271
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelPosition
line= 193
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 273
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 149
original statement= return this.size
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 274
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 178
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (obj == null) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 275
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 178
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 276
 
operation: REPLACE
location= org.jfree.chart.util.AbstractObjectList
line= 178
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 277
 
operation: REPLACE
location= org.jfree.chart.util.AbstractObjectList
line= 178
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 278
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 182
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 279
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 182
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 280
 
operation: REPLACE
location= org.jfree.chart.util.AbstractObjectList
line= 182
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 281
 
operation: REPLACE
location= org.jfree.chart.util.AbstractObjectList
line= 182
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 282
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 186
original statement= if (!(obj instanceof org.jfree.chart.util.AbstractObjectList)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.chart.util.AbstractObjectList)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 283
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 186
original statement= if (!(obj instanceof org.jfree.chart.util.AbstractObjectList)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 284
 
operation: REPLACE
location= org.jfree.chart.util.AbstractObjectList
line= 186
original statement= if (!(obj instanceof org.jfree.chart.util.AbstractObjectList)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 285
 
operation: REPLACE
location= org.jfree.chart.util.AbstractObjectList
line= 186
original statement= if (!(obj instanceof org.jfree.chart.util.AbstractObjectList)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 287
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 190
original statement= org.jfree.chart.util.AbstractObjectList other = ((org.jfree.chart.util.AbstractObjectList)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 289
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 191
original statement= int listSize = size()
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 290
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 192
original statement= for (int i = 0 ; i < listSize ; i++) {
	if (!(org.jfree.chart.util.ObjectUtilities.equal(get(i), other.get(i)))) {
		return false;
	} 
}
fixed statement= for (int i = 0 ; i < listSize ; i++) {
	if (!(org.jfree.chart.util.ObjectUtilities.equal(get(i), other.get(i)))) {
		return false;
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 291
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 192
original statement= for (int i = 0 ; i < listSize ; i++) {
	if (!(org.jfree.chart.util.ObjectUtilities.equal(get(i), other.get(i)))) {
		return false;
	} 
}
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 293
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 197
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 294
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 255
original statement= stream.defaultWriteObject()
fixed statement= stream.defaultWriteObject()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 295
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 255
original statement= stream.defaultWriteObject()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 297
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 256
original statement= int count = size()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 298
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 257
original statement= stream.writeInt(count)
fixed statement= stream.writeInt(count)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 299
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 257
original statement= stream.writeInt(count)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 300
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 258
original statement= for (int i = 0 ; i < count ; i++) {
	final java.lang.Object object = get(i);
	if ((object != null) && (object instanceof java.io.Serializable)) {
		stream.writeInt(i);
		stream.writeObject(object);
	} else {
		stream.writeInt(-1);
	}
}
fixed statement= for (int i = 0 ; i < count ; i++) {
	final java.lang.Object object = get(i);
	if ((object != null) && (object instanceof java.io.Serializable)) {
		stream.writeInt(i);
		stream.writeObject(object);
	} else {
		stream.writeInt(-1);
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 301
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 258
original statement= for (int i = 0 ; i < count ; i++) {
	final java.lang.Object object = get(i);
	if ((object != null) && (object instanceof java.io.Serializable)) {
		stream.writeInt(i);
		stream.writeObject(object);
	} else {
		stream.writeInt(-1);
	}
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 302
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 282
original statement= stream.defaultReadObject()
fixed statement= stream.defaultReadObject()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 303
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 282
original statement= stream.defaultReadObject()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 304
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 283
original statement= this.objects = new java.lang.Object[this.size]
fixed statement= this.objects = new java.lang.Object[this.size]
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 305
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 283
original statement= this.objects = new java.lang.Object[this.size]
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 307
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 284
original statement= int count = stream.readInt()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 308
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 285
original statement= for (int i = 0 ; i < count ; i++) {
	int index = stream.readInt();
	if (index != (-1)) {
		set(index, stream.readObject());
	} 
}
fixed statement= for (int i = 0 ; i < count ; i++) {
	int index = stream.readInt();
	if (index != (-1)) {
		set(index, stream.readObject());
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 309
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 285
original statement= for (int i = 0 ; i < count ; i++) {
	int index = stream.readInt();
	if (index != (-1)) {
		set(index, stream.readObject());
	} 
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 310
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 882
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 311
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 882
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 312
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 882
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 313
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 882
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 314
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 885
original statement= if (!(obj instanceof org.jfree.chart.renderer.xy.CandlestickRenderer)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.chart.renderer.xy.CandlestickRenderer)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 315
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 885
original statement= if (!(obj instanceof org.jfree.chart.renderer.xy.CandlestickRenderer)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 316
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 885
original statement= if (!(obj instanceof org.jfree.chart.renderer.xy.CandlestickRenderer)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 317
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 885
original statement= if (!(obj instanceof org.jfree.chart.renderer.xy.CandlestickRenderer)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 319
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 888
original statement= org.jfree.chart.renderer.xy.CandlestickRenderer that = ((org.jfree.chart.renderer.xy.CandlestickRenderer)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 320
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 889
original statement= if ((this.candleWidth) != (that.candleWidth)) {
	return false;
} 
fixed statement= if ((this.candleWidth) != (that.candleWidth)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 321
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 889
original statement= if ((this.candleWidth) != (that.candleWidth)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 322
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 889
original statement= if ((this.candleWidth) != (that.candleWidth)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 323
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 889
original statement= if ((this.candleWidth) != (that.candleWidth)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 324
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 892
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.upPaint, that.upPaint))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.upPaint, that.upPaint))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 325
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 892
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.upPaint, that.upPaint))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 326
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 892
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.upPaint, that.upPaint))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 327
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 892
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.upPaint, that.upPaint))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 328
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 895
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.downPaint, that.downPaint))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.downPaint, that.downPaint))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 329
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 895
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.downPaint, that.downPaint))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 330
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 895
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.downPaint, that.downPaint))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 331
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 895
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.downPaint, that.downPaint))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 332
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 898
original statement= if ((this.drawVolume) != (that.drawVolume)) {
	return false;
} 
fixed statement= if ((this.drawVolume) != (that.drawVolume)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 333
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 898
original statement= if ((this.drawVolume) != (that.drawVolume)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 334
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 898
original statement= if ((this.drawVolume) != (that.drawVolume)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 335
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 898
original statement= if ((this.drawVolume) != (that.drawVolume)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 336
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 901
original statement= if ((this.maxCandleWidthInMilliseconds) != (that.maxCandleWidthInMilliseconds)) {
	return false;
} 
fixed statement= if ((this.maxCandleWidthInMilliseconds) != (that.maxCandleWidthInMilliseconds)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 337
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 901
original statement= if ((this.maxCandleWidthInMilliseconds) != (that.maxCandleWidthInMilliseconds)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 338
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 901
original statement= if ((this.maxCandleWidthInMilliseconds) != (that.maxCandleWidthInMilliseconds)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 339
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 901
original statement= if ((this.maxCandleWidthInMilliseconds) != (that.maxCandleWidthInMilliseconds)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 340
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 905
original statement= if ((this.autoWidthMethod) != (that.autoWidthMethod)) {
	return false;
} 
fixed statement= if ((this.autoWidthMethod) != (that.autoWidthMethod)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 341
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 905
original statement= if ((this.autoWidthMethod) != (that.autoWidthMethod)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 342
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 905
original statement= if ((this.autoWidthMethod) != (that.autoWidthMethod)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 343
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 905
original statement= if ((this.autoWidthMethod) != (that.autoWidthMethod)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 344
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 908
original statement= if ((this.autoWidthFactor) != (that.autoWidthFactor)) {
	return false;
} 
fixed statement= if ((this.autoWidthFactor) != (that.autoWidthFactor)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 345
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 908
original statement= if ((this.autoWidthFactor) != (that.autoWidthFactor)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 346
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 908
original statement= if ((this.autoWidthFactor) != (that.autoWidthFactor)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 347
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 908
original statement= if ((this.autoWidthFactor) != (that.autoWidthFactor)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 348
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 911
original statement= if ((this.autoWidthGap) != (that.autoWidthGap)) {
	return false;
} 
fixed statement= if ((this.autoWidthGap) != (that.autoWidthGap)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 349
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 911
original statement= if ((this.autoWidthGap) != (that.autoWidthGap)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 350
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 911
original statement= if ((this.autoWidthGap) != (that.autoWidthGap)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 351
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 911
original statement= if ((this.autoWidthGap) != (that.autoWidthGap)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 352
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 914
original statement= if ((this.useOutlinePaint) != (that.useOutlinePaint)) {
	return false;
} 
fixed statement= if ((this.useOutlinePaint) != (that.useOutlinePaint)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 353
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 914
original statement= if ((this.useOutlinePaint) != (that.useOutlinePaint)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 354
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 914
original statement= if ((this.useOutlinePaint) != (that.useOutlinePaint)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 355
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 914
original statement= if ((this.useOutlinePaint) != (that.useOutlinePaint)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 356
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 917
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.volumePaint, that.volumePaint))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.volumePaint, that.volumePaint))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 357
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 917
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.volumePaint, that.volumePaint))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 358
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 917
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.volumePaint, that.volumePaint))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 359
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 917
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.volumePaint, that.volumePaint))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 361
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 920
original statement= return super.equals(obj)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 362
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 942
original statement= stream.defaultWriteObject()
fixed statement= stream.defaultWriteObject()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 363
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 942
original statement= stream.defaultWriteObject()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 364
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 943
original statement= org.jfree.chart.util.SerialUtilities.writePaint(this.upPaint, stream)
fixed statement= org.jfree.chart.util.SerialUtilities.writePaint(this.upPaint, stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 365
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 943
original statement= org.jfree.chart.util.SerialUtilities.writePaint(this.upPaint, stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 366
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 944
original statement= org.jfree.chart.util.SerialUtilities.writePaint(this.downPaint, stream)
fixed statement= org.jfree.chart.util.SerialUtilities.writePaint(this.downPaint, stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 367
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 944
original statement= org.jfree.chart.util.SerialUtilities.writePaint(this.downPaint, stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 368
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 945
original statement= org.jfree.chart.util.SerialUtilities.writePaint(this.volumePaint, stream)
fixed statement= org.jfree.chart.util.SerialUtilities.writePaint(this.volumePaint, stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 369
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 945
original statement= org.jfree.chart.util.SerialUtilities.writePaint(this.volumePaint, stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 370
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 958
original statement= stream.defaultReadObject()
fixed statement= stream.defaultReadObject()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 371
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 958
original statement= stream.defaultReadObject()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 372
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 959
original statement= this.upPaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
fixed statement= this.upPaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 373
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 959
original statement= this.upPaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 374
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 960
original statement= this.downPaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
fixed statement= this.downPaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 375
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 960
original statement= this.downPaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 376
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 961
original statement= this.volumePaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
fixed statement= this.volumePaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 377
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 961
original statement= this.volumePaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 378
 
operation: DELETE
location= org.jfree.chart.util.StrokeList
line= 103
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (obj == null) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 379
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.StrokeList
line= 103
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 380
 
operation: REPLACE
location= org.jfree.chart.util.StrokeList
line= 103
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 381
 
operation: REPLACE
location= org.jfree.chart.util.StrokeList
line= 103
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 382
 
operation: DELETE
location= org.jfree.chart.util.StrokeList
line= 107
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 383
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.StrokeList
line= 107
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 384
 
operation: REPLACE
location= org.jfree.chart.util.StrokeList
line= 107
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 385
 
operation: REPLACE
location= org.jfree.chart.util.StrokeList
line= 107
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 386
 
operation: DELETE
location= org.jfree.chart.util.StrokeList
line= 111
original statement= if (obj instanceof org.jfree.chart.util.StrokeList) {
	return super.equals(obj);
} 
fixed statement= if (obj instanceof org.jfree.chart.util.StrokeList) {
	return super.equals(obj);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 387
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.StrokeList
line= 111
original statement= if (obj instanceof org.jfree.chart.util.StrokeList) {
	return super.equals(obj);
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 388
 
operation: REPLACE
location= org.jfree.chart.util.StrokeList
line= 111
original statement= if (obj instanceof org.jfree.chart.util.StrokeList) {
	return super.equals(obj);
} 
fixed statement= if (true) {
	return super.equals(obj);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 389
 
operation: REPLACE
location= org.jfree.chart.util.StrokeList
line= 111
original statement= if (obj instanceof org.jfree.chart.util.StrokeList) {
	return super.equals(obj);
} 
fixed statement= if (false) {
	return super.equals(obj);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 390
 
operation: DELETE
location= org.jfree.chart.util.StrokeList
line= 112
original statement= return super.equals(obj)
fixed statement= return super.equals(obj)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 391
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.StrokeList
line= 112
original statement= return super.equals(obj)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 392
 
operation: DELETE
location= org.jfree.chart.util.StrokeList
line= 137
original statement= stream.defaultWriteObject()
fixed statement= stream.defaultWriteObject()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 393
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.StrokeList
line= 137
original statement= stream.defaultWriteObject()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 395
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.StrokeList
line= 138
original statement= int count = size()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 396
 
operation: DELETE
location= org.jfree.chart.util.StrokeList
line= 139
original statement= stream.writeInt(count)
fixed statement= stream.writeInt(count)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 397
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.StrokeList
line= 139
original statement= stream.writeInt(count)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 398
 
operation: DELETE
location= org.jfree.chart.util.StrokeList
line= 140
original statement= for (int i = 0 ; i < count ; i++) {
	java.awt.Stroke stroke = getStroke(i);
	if (stroke != null) {
		stream.writeInt(i);
		org.jfree.chart.util.SerialUtilities.writeStroke(stroke, stream);
	} else {
		stream.writeInt(-1);
	}
}
fixed statement= for (int i = 0 ; i < count ; i++) {
	java.awt.Stroke stroke = getStroke(i);
	if (stroke != null) {
		stream.writeInt(i);
		org.jfree.chart.util.SerialUtilities.writeStroke(stroke, stream);
	} else {
		stream.writeInt(-1);
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 399
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.StrokeList
line= 140
original statement= for (int i = 0 ; i < count ; i++) {
	java.awt.Stroke stroke = getStroke(i);
	if (stroke != null) {
		stream.writeInt(i);
		org.jfree.chart.util.SerialUtilities.writeStroke(stroke, stream);
	} else {
		stream.writeInt(-1);
	}
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 400
 
operation: DELETE
location= org.jfree.chart.util.StrokeList
line= 164
original statement= stream.defaultReadObject()
fixed statement= stream.defaultReadObject()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 401
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.StrokeList
line= 164
original statement= stream.defaultReadObject()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 403
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.StrokeList
line= 165
original statement= int count = stream.readInt()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 404
 
operation: DELETE
location= org.jfree.chart.util.StrokeList
line= 166
original statement= for (int i = 0 ; i < count ; i++) {
	int index = stream.readInt();
	if (index != (-1)) {
		setStroke(index, org.jfree.chart.util.SerialUtilities.readStroke(stream));
	} 
}
fixed statement= for (int i = 0 ; i < count ; i++) {
	int index = stream.readInt();
	if (index != (-1)) {
		setStroke(index, org.jfree.chart.util.SerialUtilities.readStroke(stream));
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 405
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.StrokeList
line= 166
original statement= for (int i = 0 ; i < count ; i++) {
	int index = stream.readInt();
	if (index != (-1)) {
		setStroke(index, org.jfree.chart.util.SerialUtilities.readStroke(stream));
	} 
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 406
 
operation: DELETE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 207
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 407
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 207
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 408
 
operation: REPLACE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 207
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 409
 
operation: REPLACE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 207
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 410
 
operation: DELETE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 210
original statement= if (!(obj instanceof org.jfree.chart.labels.HighLowItemLabelGenerator)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.chart.labels.HighLowItemLabelGenerator)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 411
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 210
original statement= if (!(obj instanceof org.jfree.chart.labels.HighLowItemLabelGenerator)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 412
 
operation: REPLACE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 210
original statement= if (!(obj instanceof org.jfree.chart.labels.HighLowItemLabelGenerator)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 413
 
operation: REPLACE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 210
original statement= if (!(obj instanceof org.jfree.chart.labels.HighLowItemLabelGenerator)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 415
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 213
original statement= org.jfree.chart.labels.HighLowItemLabelGenerator generator = ((org.jfree.chart.labels.HighLowItemLabelGenerator)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 416
 
operation: DELETE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 214
original statement= if (!(this.dateFormatter.equals(generator.dateFormatter))) {
	return false;
} 
fixed statement= if (!(this.dateFormatter.equals(generator.dateFormatter))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 417
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 214
original statement= if (!(this.dateFormatter.equals(generator.dateFormatter))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 418
 
operation: REPLACE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 214
original statement= if (!(this.dateFormatter.equals(generator.dateFormatter))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 419
 
operation: REPLACE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 214
original statement= if (!(this.dateFormatter.equals(generator.dateFormatter))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 420
 
operation: DELETE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 217
original statement= if (!(this.numberFormatter.equals(generator.numberFormatter))) {
	return false;
} 
fixed statement= if (!(this.numberFormatter.equals(generator.numberFormatter))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 421
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 217
original statement= if (!(this.numberFormatter.equals(generator.numberFormatter))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 422
 
operation: REPLACE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 217
original statement= if (!(this.numberFormatter.equals(generator.numberFormatter))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 423
 
operation: REPLACE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 217
original statement= if (!(this.numberFormatter.equals(generator.numberFormatter))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 425
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 220
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 426
 
operation: DELETE
location= org.jfree.chart.util.ShapeList
line= 102
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (obj == null) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 427
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeList
line= 102
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 428
 
operation: REPLACE
location= org.jfree.chart.util.ShapeList
line= 102
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 429
 
operation: REPLACE
location= org.jfree.chart.util.ShapeList
line= 102
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 430
 
operation: DELETE
location= org.jfree.chart.util.ShapeList
line= 106
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 431
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeList
line= 106
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 432
 
operation: REPLACE
location= org.jfree.chart.util.ShapeList
line= 106
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 433
 
operation: REPLACE
location= org.jfree.chart.util.ShapeList
line= 106
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 434
 
operation: DELETE
location= org.jfree.chart.util.ShapeList
line= 110
original statement= if (obj instanceof org.jfree.chart.util.ShapeList) {
	return super.equals(obj);
} 
fixed statement= if (obj instanceof org.jfree.chart.util.ShapeList) {
	return super.equals(obj);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 435
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeList
line= 110
original statement= if (obj instanceof org.jfree.chart.util.ShapeList) {
	return super.equals(obj);
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 436
 
operation: REPLACE
location= org.jfree.chart.util.ShapeList
line= 110
original statement= if (obj instanceof org.jfree.chart.util.ShapeList) {
	return super.equals(obj);
} 
fixed statement= if (true) {
	return super.equals(obj);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 437
 
operation: REPLACE
location= org.jfree.chart.util.ShapeList
line= 110
original statement= if (obj instanceof org.jfree.chart.util.ShapeList) {
	return super.equals(obj);
} 
fixed statement= if (false) {
	return super.equals(obj);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 438
 
operation: DELETE
location= org.jfree.chart.util.ShapeList
line= 111
original statement= return super.equals(obj)
fixed statement= return super.equals(obj)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 439
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeList
line= 111
original statement= return super.equals(obj)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 440
 
operation: DELETE
location= org.jfree.chart.util.ShapeList
line= 136
original statement= stream.defaultWriteObject()
fixed statement= stream.defaultWriteObject()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 441
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeList
line= 136
original statement= stream.defaultWriteObject()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 443
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeList
line= 137
original statement= int count = size()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 444
 
operation: DELETE
location= org.jfree.chart.util.ShapeList
line= 138
original statement= stream.writeInt(count)
fixed statement= stream.writeInt(count)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 445
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeList
line= 138
original statement= stream.writeInt(count)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 446
 
operation: DELETE
location= org.jfree.chart.util.ShapeList
line= 139
original statement= for (int i = 0 ; i < count ; i++) {
	java.awt.Shape shape = getShape(i);
	if (shape != null) {
		stream.writeInt(i);
		org.jfree.chart.util.SerialUtilities.writeShape(shape, stream);
	} else {
		stream.writeInt(-1);
	}
}
fixed statement= for (int i = 0 ; i < count ; i++) {
	java.awt.Shape shape = getShape(i);
	if (shape != null) {
		stream.writeInt(i);
		org.jfree.chart.util.SerialUtilities.writeShape(shape, stream);
	} else {
		stream.writeInt(-1);
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 447
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeList
line= 139
original statement= for (int i = 0 ; i < count ; i++) {
	java.awt.Shape shape = getShape(i);
	if (shape != null) {
		stream.writeInt(i);
		org.jfree.chart.util.SerialUtilities.writeShape(shape, stream);
	} else {
		stream.writeInt(-1);
	}
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 448
 
operation: DELETE
location= org.jfree.chart.util.ShapeList
line= 163
original statement= stream.defaultReadObject()
fixed statement= stream.defaultReadObject()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 449
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeList
line= 163
original statement= stream.defaultReadObject()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 451
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeList
line= 164
original statement= int count = stream.readInt()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 452
 
operation: DELETE
location= org.jfree.chart.util.ShapeList
line= 165
original statement= for (int i = 0 ; i < count ; i++) {
	int index = stream.readInt();
	if (index != (-1)) {
		setShape(index, org.jfree.chart.util.SerialUtilities.readShape(stream));
	} 
}
fixed statement= for (int i = 0 ; i < count ; i++) {
	int index = stream.readInt();
	if (index != (-1)) {
		setShape(index, org.jfree.chart.util.SerialUtilities.readShape(stream));
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 453
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeList
line= 165
original statement= for (int i = 0 ; i < count ; i++) {
	int index = stream.readInt();
	if (index != (-1)) {
		setShape(index, org.jfree.chart.util.SerialUtilities.readShape(stream));
	} 
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 454
 
operation: DELETE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 148
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 455
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 148
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 456
 
operation: REPLACE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 148
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 457
 
operation: REPLACE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 148
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 458
 
operation: DELETE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 151
original statement= if (!(obj instanceof org.jfree.chart.labels.StandardXYSeriesLabelGenerator)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.chart.labels.StandardXYSeriesLabelGenerator)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 459
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 151
original statement= if (!(obj instanceof org.jfree.chart.labels.StandardXYSeriesLabelGenerator)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 460
 
operation: REPLACE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 151
original statement= if (!(obj instanceof org.jfree.chart.labels.StandardXYSeriesLabelGenerator)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 461
 
operation: REPLACE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 151
original statement= if (!(obj instanceof org.jfree.chart.labels.StandardXYSeriesLabelGenerator)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 463
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 154
original statement= org.jfree.chart.labels.StandardXYSeriesLabelGenerator that = ((org.jfree.chart.labels.StandardXYSeriesLabelGenerator)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 464
 
operation: DELETE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 156
original statement= if (!(this.formatPattern.equals(that.formatPattern))) {
	return false;
} 
fixed statement= if (!(this.formatPattern.equals(that.formatPattern))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 465
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 156
original statement= if (!(this.formatPattern.equals(that.formatPattern))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 466
 
operation: REPLACE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 156
original statement= if (!(this.formatPattern.equals(that.formatPattern))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 467
 
operation: REPLACE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 156
original statement= if (!(this.formatPattern.equals(that.formatPattern))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 469
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 159
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 470
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 487
original statement= setBaseToolTipGenerator(generator, true)
fixed statement= setBaseToolTipGenerator(generator, true)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 471
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 487
original statement= setBaseToolTipGenerator(generator, true)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 472
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 503
original statement= this.baseToolTipGenerator = generator
fixed statement= this.baseToolTipGenerator = generator
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 473
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 503
original statement= this.baseToolTipGenerator = generator
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 474
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 504
original statement= if (notify) {
	fireChangeEvent();
} 
fixed statement= if (notify) {
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 475
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 504
original statement= if (notify) {
	fireChangeEvent();
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 476
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 504
original statement= if (notify) {
	fireChangeEvent();
} 
fixed statement= if (true) {
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 477
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 504
original statement= if (notify) {
	fireChangeEvent();
} 
fixed statement= if (false) {
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 478
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 505
original statement= fireChangeEvent()
fixed statement= fireChangeEvent()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 479
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 505
original statement= fireChangeEvent()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 480
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1522
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 481
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1522
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 482
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1522
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 483
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1522
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 484
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1525
original statement= if (!(obj instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 485
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1525
original statement= if (!(obj instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 486
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1525
original statement= if (!(obj instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 487
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1525
original statement= if (!(obj instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 489
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1528
original statement= org.jfree.chart.renderer.xy.AbstractXYItemRenderer that = ((org.jfree.chart.renderer.xy.AbstractXYItemRenderer)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 490
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1529
original statement= if (!(this.itemLabelGeneratorList.equals(that.itemLabelGeneratorList))) {
	return false;
} 
fixed statement= if (!(this.itemLabelGeneratorList.equals(that.itemLabelGeneratorList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 491
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1529
original statement= if (!(this.itemLabelGeneratorList.equals(that.itemLabelGeneratorList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 492
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1529
original statement= if (!(this.itemLabelGeneratorList.equals(that.itemLabelGeneratorList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 493
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1529
original statement= if (!(this.itemLabelGeneratorList.equals(that.itemLabelGeneratorList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 494
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1532
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseItemLabelGenerator, that.baseItemLabelGenerator))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseItemLabelGenerator, that.baseItemLabelGenerator))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 495
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1532
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseItemLabelGenerator, that.baseItemLabelGenerator))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 496
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1532
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseItemLabelGenerator, that.baseItemLabelGenerator))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 497
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1532
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseItemLabelGenerator, that.baseItemLabelGenerator))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 498
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1536
original statement= if (!(this.toolTipGeneratorList.equals(that.toolTipGeneratorList))) {
	return false;
} 
fixed statement= if (!(this.toolTipGeneratorList.equals(that.toolTipGeneratorList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 499
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1536
original statement= if (!(this.toolTipGeneratorList.equals(that.toolTipGeneratorList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 500
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1536
original statement= if (!(this.toolTipGeneratorList.equals(that.toolTipGeneratorList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 501
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1536
original statement= if (!(this.toolTipGeneratorList.equals(that.toolTipGeneratorList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 502
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1539
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseToolTipGenerator, that.baseToolTipGenerator))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseToolTipGenerator, that.baseToolTipGenerator))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 503
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1539
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseToolTipGenerator, that.baseToolTipGenerator))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 504
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1539
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseToolTipGenerator, that.baseToolTipGenerator))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 505
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1539
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseToolTipGenerator, that.baseToolTipGenerator))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 506
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1543
original statement= if (!(this.urlGeneratorList.equals(that.urlGeneratorList))) {
	return false;
} 
fixed statement= if (!(this.urlGeneratorList.equals(that.urlGeneratorList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 507
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1543
original statement= if (!(this.urlGeneratorList.equals(that.urlGeneratorList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 508
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1543
original statement= if (!(this.urlGeneratorList.equals(that.urlGeneratorList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 509
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1543
original statement= if (!(this.urlGeneratorList.equals(that.urlGeneratorList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 510
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1546
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseURLGenerator, that.baseURLGenerator))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseURLGenerator, that.baseURLGenerator))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 511
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1546
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseURLGenerator, that.baseURLGenerator))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 512
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1546
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseURLGenerator, that.baseURLGenerator))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 513
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1546
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseURLGenerator, that.baseURLGenerator))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 514
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1550
original statement= if (!(this.foregroundAnnotations.equals(that.foregroundAnnotations))) {
	return false;
} 
fixed statement= if (!(this.foregroundAnnotations.equals(that.foregroundAnnotations))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 515
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1550
original statement= if (!(this.foregroundAnnotations.equals(that.foregroundAnnotations))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 516
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1550
original statement= if (!(this.foregroundAnnotations.equals(that.foregroundAnnotations))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 517
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1550
original statement= if (!(this.foregroundAnnotations.equals(that.foregroundAnnotations))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 518
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1553
original statement= if (!(this.backgroundAnnotations.equals(that.backgroundAnnotations))) {
	return false;
} 
fixed statement= if (!(this.backgroundAnnotations.equals(that.backgroundAnnotations))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 519
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1553
original statement= if (!(this.backgroundAnnotations.equals(that.backgroundAnnotations))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 520
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1553
original statement= if (!(this.backgroundAnnotations.equals(that.backgroundAnnotations))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 521
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1553
original statement= if (!(this.backgroundAnnotations.equals(that.backgroundAnnotations))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 522
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1556
original statement= if ((this.defaultEntityRadius) != (that.defaultEntityRadius)) {
	return false;
} 
fixed statement= if ((this.defaultEntityRadius) != (that.defaultEntityRadius)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 523
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1556
original statement= if ((this.defaultEntityRadius) != (that.defaultEntityRadius)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 524
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1556
original statement= if ((this.defaultEntityRadius) != (that.defaultEntityRadius)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 525
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1556
original statement= if ((this.defaultEntityRadius) != (that.defaultEntityRadius)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 526
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1559
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemLabelGenerator, that.legendItemLabelGenerator))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemLabelGenerator, that.legendItemLabelGenerator))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 527
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1559
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemLabelGenerator, that.legendItemLabelGenerator))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 528
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1559
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemLabelGenerator, that.legendItemLabelGenerator))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 529
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1559
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemLabelGenerator, that.legendItemLabelGenerator))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 530
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1563
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemToolTipGenerator, that.legendItemToolTipGenerator))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemToolTipGenerator, that.legendItemToolTipGenerator))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 531
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1563
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemToolTipGenerator, that.legendItemToolTipGenerator))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 532
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1563
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemToolTipGenerator, that.legendItemToolTipGenerator))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 533
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1563
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemToolTipGenerator, that.legendItemToolTipGenerator))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 534
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1567
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemURLGenerator, that.legendItemURLGenerator))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemURLGenerator, that.legendItemURLGenerator))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 535
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1567
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemURLGenerator, that.legendItemURLGenerator))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 536
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1567
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemURLGenerator, that.legendItemURLGenerator))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 537
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1567
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.legendItemURLGenerator, that.legendItemURLGenerator))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 539
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1571
original statement= return super.equals(obj)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 540
 
operation: DELETE
location= org.jfree.chart.util.BooleanList
line= 93
original statement= if (obj instanceof org.jfree.chart.util.BooleanList) {
	return super.equals(obj);
} 
fixed statement= if (obj instanceof org.jfree.chart.util.BooleanList) {
	return super.equals(obj);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 541
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.BooleanList
line= 93
original statement= if (obj instanceof org.jfree.chart.util.BooleanList) {
	return super.equals(obj);
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 542
 
operation: REPLACE
location= org.jfree.chart.util.BooleanList
line= 93
original statement= if (obj instanceof org.jfree.chart.util.BooleanList) {
	return super.equals(obj);
} 
fixed statement= if (true) {
	return super.equals(obj);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 543
 
operation: REPLACE
location= org.jfree.chart.util.BooleanList
line= 93
original statement= if (obj instanceof org.jfree.chart.util.BooleanList) {
	return super.equals(obj);
} 
fixed statement= if (false) {
	return super.equals(obj);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 544
 
operation: DELETE
location= org.jfree.chart.util.BooleanList
line= 94
original statement= return super.equals(obj)
fixed statement= return super.equals(obj)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 545
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.BooleanList
line= 94
original statement= return super.equals(obj)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 547
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 177
original statement= return this.name
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 548
 
operation: DELETE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 190
original statement= if (this == o) {
	return true;
} 
fixed statement= if (this == o) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 549
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 190
original statement= if (this == o) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 550
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 190
original statement= if (this == o) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 551
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 190
original statement= if (this == o) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 552
 
operation: DELETE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 191
original statement= return true
fixed statement= return true
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 553
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 191
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 554
 
operation: DELETE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 193
original statement= if (!(o instanceof org.jfree.chart.labels.ItemLabelAnchor)) {
	return false;
} 
fixed statement= if (!(o instanceof org.jfree.chart.labels.ItemLabelAnchor)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 555
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 193
original statement= if (!(o instanceof org.jfree.chart.labels.ItemLabelAnchor)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 556
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 193
original statement= if (!(o instanceof org.jfree.chart.labels.ItemLabelAnchor)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 557
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 193
original statement= if (!(o instanceof org.jfree.chart.labels.ItemLabelAnchor)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 559
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 197
original statement= org.jfree.chart.labels.ItemLabelAnchor order = ((org.jfree.chart.labels.ItemLabelAnchor)(o))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 560
 
operation: DELETE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 198
original statement= if (!(this.name.equals(order.toString()))) {
	return false;
} 
fixed statement= if (!(this.name.equals(order.toString()))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 561
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 198
original statement= if (!(this.name.equals(order.toString()))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 562
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 198
original statement= if (!(this.name.equals(order.toString()))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 563
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 198
original statement= if (!(this.name.equals(order.toString()))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 564
 
operation: DELETE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 199
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 565
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 199
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 567
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 202
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 569
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 214
original statement= org.jfree.chart.labels.ItemLabelAnchor result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 570
 
operation: DELETE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 215
original statement= if (equals(org.jfree.chart.labels.ItemLabelAnchor.CENTER)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.CENTER;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE1;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE2;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE3;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE4;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE5;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE6;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE7;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE8;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE9;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE10;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE11;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE12;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12;
} 
fixed statement= if (equals(org.jfree.chart.labels.ItemLabelAnchor.CENTER)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.CENTER;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE1;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE2;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE3;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE4;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE5;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE6;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE7;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE8;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE9;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE10;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE11;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE12;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 571
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 215
original statement= if (equals(org.jfree.chart.labels.ItemLabelAnchor.CENTER)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.CENTER;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE1;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE2;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE3;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE4;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE5;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE6;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE7;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE8;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE9;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE10;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE11;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE12;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12;
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 572
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 215
original statement= if (equals(org.jfree.chart.labels.ItemLabelAnchor.CENTER)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.CENTER;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE1;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE2;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE3;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE4;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE5;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE6;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE7;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE8;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE9;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE10;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE11;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE12;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12;
} 
fixed statement= if (true) {
	result = org.jfree.chart.labels.ItemLabelAnchor.CENTER;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE1;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE2;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE3;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE4;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE5;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE6;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE7;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE8;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE9;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE10;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE11;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE12;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 573
 
operation: REPLACE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 215
original statement= if (equals(org.jfree.chart.labels.ItemLabelAnchor.CENTER)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.CENTER;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE1;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE2;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE3;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE4;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE5;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE6;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE7;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE8;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE9;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE10;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE11;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE12;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12;
} 
fixed statement= if (false) {
	result = org.jfree.chart.labels.ItemLabelAnchor.CENTER;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE1)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE1;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE2)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE2;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE3)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE3;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE4)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE4;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE5)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE5;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE6)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE6;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE7)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE7;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE8)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE8;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE9)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE9;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE10)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE10;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE11)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE11;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.INSIDE12)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.INSIDE12;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11;
} else if (equals(org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12)) {
	result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 574
 
operation: DELETE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 270
original statement= result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6
fixed statement= result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 575
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 270
original statement= result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 576
 
operation: DELETE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 288
original statement= result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
fixed statement= result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 577
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 288
original statement= result = org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 579
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.ItemLabelAnchor
line= 290
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 580
 
operation: DELETE
location= org.jfree.chart.util.PaintUtilities
line= 76
original statement= if (p1 == null) {
	return p2 == null;
} 
fixed statement= if (p1 == null) {
	return p2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 581
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintUtilities
line= 76
original statement= if (p1 == null) {
	return p2 == null;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 582
 
operation: REPLACE
location= org.jfree.chart.util.PaintUtilities
line= 76
original statement= if (p1 == null) {
	return p2 == null;
} 
fixed statement= if (true) {
	return p2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 583
 
operation: REPLACE
location= org.jfree.chart.util.PaintUtilities
line= 76
original statement= if (p1 == null) {
	return p2 == null;
} 
fixed statement= if (false) {
	return p2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 584
 
operation: DELETE
location= org.jfree.chart.util.PaintUtilities
line= 79
original statement= if (p2 == null) {
	return false;
} 
fixed statement= if (p2 == null) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 585
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintUtilities
line= 79
original statement= if (p2 == null) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 586
 
operation: REPLACE
location= org.jfree.chart.util.PaintUtilities
line= 79
original statement= if (p2 == null) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 587
 
operation: REPLACE
location= org.jfree.chart.util.PaintUtilities
line= 79
original statement= if (p2 == null) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 589
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintUtilities
line= 83
original statement= boolean result = false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 590
 
operation: DELETE
location= org.jfree.chart.util.PaintUtilities
line= 85
original statement= if ((p1 instanceof java.awt.GradientPaint) && (p2 instanceof java.awt.GradientPaint)) {
	java.awt.GradientPaint gp1 = ((java.awt.GradientPaint)(p1));
	java.awt.GradientPaint gp2 = ((java.awt.GradientPaint)(p2));
	result = (((((gp1.getColor1().equals(gp2.getColor1())) && (gp1.getColor2().equals(gp2.getColor2()))) && (gp1.getPoint1().equals(gp2.getPoint1()))) && (gp1.getPoint2().equals(gp2.getPoint2()))) && ((gp1.isCyclic()) == (gp2.isCyclic()))) && ((gp1.getTransparency()) == (gp1.getTransparency()));
} else {
	result = p1.equals(p2);
}
fixed statement= if ((p1 instanceof java.awt.GradientPaint) && (p2 instanceof java.awt.GradientPaint)) {
	java.awt.GradientPaint gp1 = ((java.awt.GradientPaint)(p1));
	java.awt.GradientPaint gp2 = ((java.awt.GradientPaint)(p2));
	result = (((((gp1.getColor1().equals(gp2.getColor1())) && (gp1.getColor2().equals(gp2.getColor2()))) && (gp1.getPoint1().equals(gp2.getPoint1()))) && (gp1.getPoint2().equals(gp2.getPoint2()))) && ((gp1.isCyclic()) == (gp2.isCyclic()))) && ((gp1.getTransparency()) == (gp1.getTransparency()));
} else {
	result = p1.equals(p2);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 591
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintUtilities
line= 85
original statement= if ((p1 instanceof java.awt.GradientPaint) && (p2 instanceof java.awt.GradientPaint)) {
	java.awt.GradientPaint gp1 = ((java.awt.GradientPaint)(p1));
	java.awt.GradientPaint gp2 = ((java.awt.GradientPaint)(p2));
	result = (((((gp1.getColor1().equals(gp2.getColor1())) && (gp1.getColor2().equals(gp2.getColor2()))) && (gp1.getPoint1().equals(gp2.getPoint1()))) && (gp1.getPoint2().equals(gp2.getPoint2()))) && ((gp1.isCyclic()) == (gp2.isCyclic()))) && ((gp1.getTransparency()) == (gp1.getTransparency()));
} else {
	result = p1.equals(p2);
}
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 592
 
operation: REPLACE
location= org.jfree.chart.util.PaintUtilities
line= 85
original statement= if ((p1 instanceof java.awt.GradientPaint) && (p2 instanceof java.awt.GradientPaint)) {
	java.awt.GradientPaint gp1 = ((java.awt.GradientPaint)(p1));
	java.awt.GradientPaint gp2 = ((java.awt.GradientPaint)(p2));
	result = (((((gp1.getColor1().equals(gp2.getColor1())) && (gp1.getColor2().equals(gp2.getColor2()))) && (gp1.getPoint1().equals(gp2.getPoint1()))) && (gp1.getPoint2().equals(gp2.getPoint2()))) && ((gp1.isCyclic()) == (gp2.isCyclic()))) && ((gp1.getTransparency()) == (gp1.getTransparency()));
} else {
	result = p1.equals(p2);
}
fixed statement= if (true) {
	java.awt.GradientPaint gp1 = ((java.awt.GradientPaint)(p1));
	java.awt.GradientPaint gp2 = ((java.awt.GradientPaint)(p2));
	result = (((((gp1.getColor1().equals(gp2.getColor1())) && (gp1.getColor2().equals(gp2.getColor2()))) && (gp1.getPoint1().equals(gp2.getPoint1()))) && (gp1.getPoint2().equals(gp2.getPoint2()))) && ((gp1.isCyclic()) == (gp2.isCyclic()))) && ((gp1.getTransparency()) == (gp1.getTransparency()));
} else {
	result = p1.equals(p2);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 593
 
operation: REPLACE
location= org.jfree.chart.util.PaintUtilities
line= 85
original statement= if ((p1 instanceof java.awt.GradientPaint) && (p2 instanceof java.awt.GradientPaint)) {
	java.awt.GradientPaint gp1 = ((java.awt.GradientPaint)(p1));
	java.awt.GradientPaint gp2 = ((java.awt.GradientPaint)(p2));
	result = (((((gp1.getColor1().equals(gp2.getColor1())) && (gp1.getColor2().equals(gp2.getColor2()))) && (gp1.getPoint1().equals(gp2.getPoint1()))) && (gp1.getPoint2().equals(gp2.getPoint2()))) && ((gp1.isCyclic()) == (gp2.isCyclic()))) && ((gp1.getTransparency()) == (gp1.getTransparency()));
} else {
	result = p1.equals(p2);
}
fixed statement= if (false) {
	java.awt.GradientPaint gp1 = ((java.awt.GradientPaint)(p1));
	java.awt.GradientPaint gp2 = ((java.awt.GradientPaint)(p2));
	result = (((((gp1.getColor1().equals(gp2.getColor1())) && (gp1.getColor2().equals(gp2.getColor2()))) && (gp1.getPoint1().equals(gp2.getPoint1()))) && (gp1.getPoint2().equals(gp2.getPoint2()))) && ((gp1.isCyclic()) == (gp2.isCyclic()))) && ((gp1.getTransparency()) == (gp1.getTransparency()));
} else {
	result = p1.equals(p2);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 594
 
operation: DELETE
location= org.jfree.chart.util.PaintUtilities
line= 96
original statement= result = p1.equals(p2)
fixed statement= result = p1.equals(p2)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 595
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintUtilities
line= 96
original statement= result = p1.equals(p2)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 597
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintUtilities
line= 98
original statement= return result
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 599
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 92
original statement= return java.io.Serializable.class.isAssignableFrom(c)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 600
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 109
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 601
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 109
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 602
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 109
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 603
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 109
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 605
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 112
original statement= java.awt.Paint result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 607
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 113
original statement= boolean isNull = stream.readBoolean()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 608
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 114
original statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (org.jfree.chart.util.SerialUtilities.isSerializable(c)) {
		result = ((java.awt.Paint)(stream.readObject()));
	} else if (c.equals(java.awt.GradientPaint.class)) {
		float x1 = stream.readFloat();
		float y1 = stream.readFloat();
		java.awt.Color c1 = ((java.awt.Color)(stream.readObject()));
		float x2 = stream.readFloat();
		float y2 = stream.readFloat();
		java.awt.Color c2 = ((java.awt.Color)(stream.readObject()));
		boolean isCyclic = stream.readBoolean();
		result = new java.awt.GradientPaint(x1 , y1 , c1 , x2 , y2 , c2 , isCyclic);
	} 
} 
fixed statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (org.jfree.chart.util.SerialUtilities.isSerializable(c)) {
		result = ((java.awt.Paint)(stream.readObject()));
	} else if (c.equals(java.awt.GradientPaint.class)) {
		float x1 = stream.readFloat();
		float y1 = stream.readFloat();
		java.awt.Color c1 = ((java.awt.Color)(stream.readObject()));
		float x2 = stream.readFloat();
		float y2 = stream.readFloat();
		java.awt.Color c2 = ((java.awt.Color)(stream.readObject()));
		boolean isCyclic = stream.readBoolean();
		result = new java.awt.GradientPaint(x1 , y1 , c1 , x2 , y2 , c2 , isCyclic);
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 609
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 114
original statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (org.jfree.chart.util.SerialUtilities.isSerializable(c)) {
		result = ((java.awt.Paint)(stream.readObject()));
	} else if (c.equals(java.awt.GradientPaint.class)) {
		float x1 = stream.readFloat();
		float y1 = stream.readFloat();
		java.awt.Color c1 = ((java.awt.Color)(stream.readObject()));
		float x2 = stream.readFloat();
		float y2 = stream.readFloat();
		java.awt.Color c2 = ((java.awt.Color)(stream.readObject()));
		boolean isCyclic = stream.readBoolean();
		result = new java.awt.GradientPaint(x1 , y1 , c1 , x2 , y2 , c2 , isCyclic);
	} 
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 610
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 114
original statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (org.jfree.chart.util.SerialUtilities.isSerializable(c)) {
		result = ((java.awt.Paint)(stream.readObject()));
	} else if (c.equals(java.awt.GradientPaint.class)) {
		float x1 = stream.readFloat();
		float y1 = stream.readFloat();
		java.awt.Color c1 = ((java.awt.Color)(stream.readObject()));
		float x2 = stream.readFloat();
		float y2 = stream.readFloat();
		java.awt.Color c2 = ((java.awt.Color)(stream.readObject()));
		boolean isCyclic = stream.readBoolean();
		result = new java.awt.GradientPaint(x1 , y1 , c1 , x2 , y2 , c2 , isCyclic);
	} 
} 
fixed statement= if (true) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (org.jfree.chart.util.SerialUtilities.isSerializable(c)) {
		result = ((java.awt.Paint)(stream.readObject()));
	} else if (c.equals(java.awt.GradientPaint.class)) {
		float x1 = stream.readFloat();
		float y1 = stream.readFloat();
		java.awt.Color c1 = ((java.awt.Color)(stream.readObject()));
		float x2 = stream.readFloat();
		float y2 = stream.readFloat();
		java.awt.Color c2 = ((java.awt.Color)(stream.readObject()));
		boolean isCyclic = stream.readBoolean();
		result = new java.awt.GradientPaint(x1 , y1 , c1 , x2 , y2 , c2 , isCyclic);
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 611
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 114
original statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (org.jfree.chart.util.SerialUtilities.isSerializable(c)) {
		result = ((java.awt.Paint)(stream.readObject()));
	} else if (c.equals(java.awt.GradientPaint.class)) {
		float x1 = stream.readFloat();
		float y1 = stream.readFloat();
		java.awt.Color c1 = ((java.awt.Color)(stream.readObject()));
		float x2 = stream.readFloat();
		float y2 = stream.readFloat();
		java.awt.Color c2 = ((java.awt.Color)(stream.readObject()));
		boolean isCyclic = stream.readBoolean();
		result = new java.awt.GradientPaint(x1 , y1 , c1 , x2 , y2 , c2 , isCyclic);
	} 
} 
fixed statement= if (false) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (org.jfree.chart.util.SerialUtilities.isSerializable(c)) {
		result = ((java.awt.Paint)(stream.readObject()));
	} else if (c.equals(java.awt.GradientPaint.class)) {
		float x1 = stream.readFloat();
		float y1 = stream.readFloat();
		java.awt.Color c1 = ((java.awt.Color)(stream.readObject()));
		float x2 = stream.readFloat();
		float y2 = stream.readFloat();
		java.awt.Color c2 = ((java.awt.Color)(stream.readObject()));
		boolean isCyclic = stream.readBoolean();
		result = new java.awt.GradientPaint(x1 , y1 , c1 , x2 , y2 , c2 , isCyclic);
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 613
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 115
original statement= java.lang.Class c = ((java.lang.Class)(stream.readObject()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 614
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 116
original statement= if (org.jfree.chart.util.SerialUtilities.isSerializable(c)) {
	result = ((java.awt.Paint)(stream.readObject()));
} else if (c.equals(java.awt.GradientPaint.class)) {
	float x1 = stream.readFloat();
	float y1 = stream.readFloat();
	java.awt.Color c1 = ((java.awt.Color)(stream.readObject()));
	float x2 = stream.readFloat();
	float y2 = stream.readFloat();
	java.awt.Color c2 = ((java.awt.Color)(stream.readObject()));
	boolean isCyclic = stream.readBoolean();
	result = new java.awt.GradientPaint(x1 , y1 , c1 , x2 , y2 , c2 , isCyclic);
} 
fixed statement= if (org.jfree.chart.util.SerialUtilities.isSerializable(c)) {
	result = ((java.awt.Paint)(stream.readObject()));
} else if (c.equals(java.awt.GradientPaint.class)) {
	float x1 = stream.readFloat();
	float y1 = stream.readFloat();
	java.awt.Color c1 = ((java.awt.Color)(stream.readObject()));
	float x2 = stream.readFloat();
	float y2 = stream.readFloat();
	java.awt.Color c2 = ((java.awt.Color)(stream.readObject()));
	boolean isCyclic = stream.readBoolean();
	result = new java.awt.GradientPaint(x1 , y1 , c1 , x2 , y2 , c2 , isCyclic);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 615
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 116
original statement= if (org.jfree.chart.util.SerialUtilities.isSerializable(c)) {
	result = ((java.awt.Paint)(stream.readObject()));
} else if (c.equals(java.awt.GradientPaint.class)) {
	float x1 = stream.readFloat();
	float y1 = stream.readFloat();
	java.awt.Color c1 = ((java.awt.Color)(stream.readObject()));
	float x2 = stream.readFloat();
	float y2 = stream.readFloat();
	java.awt.Color c2 = ((java.awt.Color)(stream.readObject()));
	boolean isCyclic = stream.readBoolean();
	result = new java.awt.GradientPaint(x1 , y1 , c1 , x2 , y2 , c2 , isCyclic);
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 616
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 116
original statement= if (org.jfree.chart.util.SerialUtilities.isSerializable(c)) {
	result = ((java.awt.Paint)(stream.readObject()));
} else if (c.equals(java.awt.GradientPaint.class)) {
	float x1 = stream.readFloat();
	float y1 = stream.readFloat();
	java.awt.Color c1 = ((java.awt.Color)(stream.readObject()));
	float x2 = stream.readFloat();
	float y2 = stream.readFloat();
	java.awt.Color c2 = ((java.awt.Color)(stream.readObject()));
	boolean isCyclic = stream.readBoolean();
	result = new java.awt.GradientPaint(x1 , y1 , c1 , x2 , y2 , c2 , isCyclic);
} 
fixed statement= if (true) {
	result = ((java.awt.Paint)(stream.readObject()));
} else if (c.equals(java.awt.GradientPaint.class)) {
	float x1 = stream.readFloat();
	float y1 = stream.readFloat();
	java.awt.Color c1 = ((java.awt.Color)(stream.readObject()));
	float x2 = stream.readFloat();
	float y2 = stream.readFloat();
	java.awt.Color c2 = ((java.awt.Color)(stream.readObject()));
	boolean isCyclic = stream.readBoolean();
	result = new java.awt.GradientPaint(x1 , y1 , c1 , x2 , y2 , c2 , isCyclic);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 617
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 116
original statement= if (org.jfree.chart.util.SerialUtilities.isSerializable(c)) {
	result = ((java.awt.Paint)(stream.readObject()));
} else if (c.equals(java.awt.GradientPaint.class)) {
	float x1 = stream.readFloat();
	float y1 = stream.readFloat();
	java.awt.Color c1 = ((java.awt.Color)(stream.readObject()));
	float x2 = stream.readFloat();
	float y2 = stream.readFloat();
	java.awt.Color c2 = ((java.awt.Color)(stream.readObject()));
	boolean isCyclic = stream.readBoolean();
	result = new java.awt.GradientPaint(x1 , y1 , c1 , x2 , y2 , c2 , isCyclic);
} 
fixed statement= if (false) {
	result = ((java.awt.Paint)(stream.readObject()));
} else if (c.equals(java.awt.GradientPaint.class)) {
	float x1 = stream.readFloat();
	float y1 = stream.readFloat();
	java.awt.Color c1 = ((java.awt.Color)(stream.readObject()));
	float x2 = stream.readFloat();
	float y2 = stream.readFloat();
	java.awt.Color c2 = ((java.awt.Color)(stream.readObject()));
	boolean isCyclic = stream.readBoolean();
	result = new java.awt.GradientPaint(x1 , y1 , c1 , x2 , y2 , c2 , isCyclic);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 618
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 117
original statement= result = ((java.awt.Paint)(stream.readObject()))
fixed statement= result = ((java.awt.Paint)(stream.readObject()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 619
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 117
original statement= result = ((java.awt.Paint)(stream.readObject()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 621
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 130
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 622
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 145
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 623
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 145
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 624
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 145
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 625
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 145
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 626
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 148
original statement= if (paint != null) {
	stream.writeBoolean(false);
	stream.writeObject(paint.getClass());
	if (paint instanceof java.io.Serializable) {
		stream.writeObject(paint);
	} else if (paint instanceof java.awt.GradientPaint) {
		java.awt.GradientPaint gp = ((java.awt.GradientPaint)(paint));
		stream.writeFloat(((float)(gp.getPoint1().getX())));
		stream.writeFloat(((float)(gp.getPoint1().getY())));
		stream.writeObject(gp.getColor1());
		stream.writeFloat(((float)(gp.getPoint2().getX())));
		stream.writeFloat(((float)(gp.getPoint2().getY())));
		stream.writeObject(gp.getColor2());
		stream.writeBoolean(gp.isCyclic());
	} 
} else {
	stream.writeBoolean(true);
}
fixed statement= if (paint != null) {
	stream.writeBoolean(false);
	stream.writeObject(paint.getClass());
	if (paint instanceof java.io.Serializable) {
		stream.writeObject(paint);
	} else if (paint instanceof java.awt.GradientPaint) {
		java.awt.GradientPaint gp = ((java.awt.GradientPaint)(paint));
		stream.writeFloat(((float)(gp.getPoint1().getX())));
		stream.writeFloat(((float)(gp.getPoint1().getY())));
		stream.writeObject(gp.getColor1());
		stream.writeFloat(((float)(gp.getPoint2().getX())));
		stream.writeFloat(((float)(gp.getPoint2().getY())));
		stream.writeObject(gp.getColor2());
		stream.writeBoolean(gp.isCyclic());
	} 
} else {
	stream.writeBoolean(true);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 627
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 148
original statement= if (paint != null) {
	stream.writeBoolean(false);
	stream.writeObject(paint.getClass());
	if (paint instanceof java.io.Serializable) {
		stream.writeObject(paint);
	} else if (paint instanceof java.awt.GradientPaint) {
		java.awt.GradientPaint gp = ((java.awt.GradientPaint)(paint));
		stream.writeFloat(((float)(gp.getPoint1().getX())));
		stream.writeFloat(((float)(gp.getPoint1().getY())));
		stream.writeObject(gp.getColor1());
		stream.writeFloat(((float)(gp.getPoint2().getX())));
		stream.writeFloat(((float)(gp.getPoint2().getY())));
		stream.writeObject(gp.getColor2());
		stream.writeBoolean(gp.isCyclic());
	} 
} else {
	stream.writeBoolean(true);
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 628
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 148
original statement= if (paint != null) {
	stream.writeBoolean(false);
	stream.writeObject(paint.getClass());
	if (paint instanceof java.io.Serializable) {
		stream.writeObject(paint);
	} else if (paint instanceof java.awt.GradientPaint) {
		java.awt.GradientPaint gp = ((java.awt.GradientPaint)(paint));
		stream.writeFloat(((float)(gp.getPoint1().getX())));
		stream.writeFloat(((float)(gp.getPoint1().getY())));
		stream.writeObject(gp.getColor1());
		stream.writeFloat(((float)(gp.getPoint2().getX())));
		stream.writeFloat(((float)(gp.getPoint2().getY())));
		stream.writeObject(gp.getColor2());
		stream.writeBoolean(gp.isCyclic());
	} 
} else {
	stream.writeBoolean(true);
}
fixed statement= if (true) {
	stream.writeBoolean(false);
	stream.writeObject(paint.getClass());
	if (paint instanceof java.io.Serializable) {
		stream.writeObject(paint);
	} else if (paint instanceof java.awt.GradientPaint) {
		java.awt.GradientPaint gp = ((java.awt.GradientPaint)(paint));
		stream.writeFloat(((float)(gp.getPoint1().getX())));
		stream.writeFloat(((float)(gp.getPoint1().getY())));
		stream.writeObject(gp.getColor1());
		stream.writeFloat(((float)(gp.getPoint2().getX())));
		stream.writeFloat(((float)(gp.getPoint2().getY())));
		stream.writeObject(gp.getColor2());
		stream.writeBoolean(gp.isCyclic());
	} 
} else {
	stream.writeBoolean(true);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 629
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 148
original statement= if (paint != null) {
	stream.writeBoolean(false);
	stream.writeObject(paint.getClass());
	if (paint instanceof java.io.Serializable) {
		stream.writeObject(paint);
	} else if (paint instanceof java.awt.GradientPaint) {
		java.awt.GradientPaint gp = ((java.awt.GradientPaint)(paint));
		stream.writeFloat(((float)(gp.getPoint1().getX())));
		stream.writeFloat(((float)(gp.getPoint1().getY())));
		stream.writeObject(gp.getColor1());
		stream.writeFloat(((float)(gp.getPoint2().getX())));
		stream.writeFloat(((float)(gp.getPoint2().getY())));
		stream.writeObject(gp.getColor2());
		stream.writeBoolean(gp.isCyclic());
	} 
} else {
	stream.writeBoolean(true);
}
fixed statement= if (false) {
	stream.writeBoolean(false);
	stream.writeObject(paint.getClass());
	if (paint instanceof java.io.Serializable) {
		stream.writeObject(paint);
	} else if (paint instanceof java.awt.GradientPaint) {
		java.awt.GradientPaint gp = ((java.awt.GradientPaint)(paint));
		stream.writeFloat(((float)(gp.getPoint1().getX())));
		stream.writeFloat(((float)(gp.getPoint1().getY())));
		stream.writeObject(gp.getColor1());
		stream.writeFloat(((float)(gp.getPoint2().getX())));
		stream.writeFloat(((float)(gp.getPoint2().getY())));
		stream.writeObject(gp.getColor2());
		stream.writeBoolean(gp.isCyclic());
	} 
} else {
	stream.writeBoolean(true);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 630
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 149
original statement= stream.writeBoolean(false)
fixed statement= stream.writeBoolean(false)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 631
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 149
original statement= stream.writeBoolean(false)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 632
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 150
original statement= stream.writeObject(paint.getClass())
fixed statement= stream.writeObject(paint.getClass())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 633
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 150
original statement= stream.writeObject(paint.getClass())
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 634
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 151
original statement= if (paint instanceof java.io.Serializable) {
	stream.writeObject(paint);
} else if (paint instanceof java.awt.GradientPaint) {
	java.awt.GradientPaint gp = ((java.awt.GradientPaint)(paint));
	stream.writeFloat(((float)(gp.getPoint1().getX())));
	stream.writeFloat(((float)(gp.getPoint1().getY())));
	stream.writeObject(gp.getColor1());
	stream.writeFloat(((float)(gp.getPoint2().getX())));
	stream.writeFloat(((float)(gp.getPoint2().getY())));
	stream.writeObject(gp.getColor2());
	stream.writeBoolean(gp.isCyclic());
} 
fixed statement= if (paint instanceof java.io.Serializable) {
	stream.writeObject(paint);
} else if (paint instanceof java.awt.GradientPaint) {
	java.awt.GradientPaint gp = ((java.awt.GradientPaint)(paint));
	stream.writeFloat(((float)(gp.getPoint1().getX())));
	stream.writeFloat(((float)(gp.getPoint1().getY())));
	stream.writeObject(gp.getColor1());
	stream.writeFloat(((float)(gp.getPoint2().getX())));
	stream.writeFloat(((float)(gp.getPoint2().getY())));
	stream.writeObject(gp.getColor2());
	stream.writeBoolean(gp.isCyclic());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 635
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 151
original statement= if (paint instanceof java.io.Serializable) {
	stream.writeObject(paint);
} else if (paint instanceof java.awt.GradientPaint) {
	java.awt.GradientPaint gp = ((java.awt.GradientPaint)(paint));
	stream.writeFloat(((float)(gp.getPoint1().getX())));
	stream.writeFloat(((float)(gp.getPoint1().getY())));
	stream.writeObject(gp.getColor1());
	stream.writeFloat(((float)(gp.getPoint2().getX())));
	stream.writeFloat(((float)(gp.getPoint2().getY())));
	stream.writeObject(gp.getColor2());
	stream.writeBoolean(gp.isCyclic());
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 636
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 151
original statement= if (paint instanceof java.io.Serializable) {
	stream.writeObject(paint);
} else if (paint instanceof java.awt.GradientPaint) {
	java.awt.GradientPaint gp = ((java.awt.GradientPaint)(paint));
	stream.writeFloat(((float)(gp.getPoint1().getX())));
	stream.writeFloat(((float)(gp.getPoint1().getY())));
	stream.writeObject(gp.getColor1());
	stream.writeFloat(((float)(gp.getPoint2().getX())));
	stream.writeFloat(((float)(gp.getPoint2().getY())));
	stream.writeObject(gp.getColor2());
	stream.writeBoolean(gp.isCyclic());
} 
fixed statement= if (true) {
	stream.writeObject(paint);
} else if (paint instanceof java.awt.GradientPaint) {
	java.awt.GradientPaint gp = ((java.awt.GradientPaint)(paint));
	stream.writeFloat(((float)(gp.getPoint1().getX())));
	stream.writeFloat(((float)(gp.getPoint1().getY())));
	stream.writeObject(gp.getColor1());
	stream.writeFloat(((float)(gp.getPoint2().getX())));
	stream.writeFloat(((float)(gp.getPoint2().getY())));
	stream.writeObject(gp.getColor2());
	stream.writeBoolean(gp.isCyclic());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 637
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 151
original statement= if (paint instanceof java.io.Serializable) {
	stream.writeObject(paint);
} else if (paint instanceof java.awt.GradientPaint) {
	java.awt.GradientPaint gp = ((java.awt.GradientPaint)(paint));
	stream.writeFloat(((float)(gp.getPoint1().getX())));
	stream.writeFloat(((float)(gp.getPoint1().getY())));
	stream.writeObject(gp.getColor1());
	stream.writeFloat(((float)(gp.getPoint2().getX())));
	stream.writeFloat(((float)(gp.getPoint2().getY())));
	stream.writeObject(gp.getColor2());
	stream.writeBoolean(gp.isCyclic());
} 
fixed statement= if (false) {
	stream.writeObject(paint);
} else if (paint instanceof java.awt.GradientPaint) {
	java.awt.GradientPaint gp = ((java.awt.GradientPaint)(paint));
	stream.writeFloat(((float)(gp.getPoint1().getX())));
	stream.writeFloat(((float)(gp.getPoint1().getY())));
	stream.writeObject(gp.getColor1());
	stream.writeFloat(((float)(gp.getPoint2().getX())));
	stream.writeFloat(((float)(gp.getPoint2().getY())));
	stream.writeObject(gp.getColor2());
	stream.writeBoolean(gp.isCyclic());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 638
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 152
original statement= stream.writeObject(paint)
fixed statement= stream.writeObject(paint)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 639
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 152
original statement= stream.writeObject(paint)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 640
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 185
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 641
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 185
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 642
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 185
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 643
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 185
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 645
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 188
original statement= java.awt.Stroke result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 647
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 189
original statement= boolean isNull = stream.readBoolean()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 648
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 190
original statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (c.equals(java.awt.BasicStroke.class)) {
		float width = stream.readFloat();
		int cap = stream.readInt();
		int join = stream.readInt();
		float miterLimit = stream.readFloat();
		float[] dash = ((float[])(stream.readObject()));
		float dashPhase = stream.readFloat();
		result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase);
	} else {
		result = ((java.awt.Stroke)(stream.readObject()));
	}
} 
fixed statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (c.equals(java.awt.BasicStroke.class)) {
		float width = stream.readFloat();
		int cap = stream.readInt();
		int join = stream.readInt();
		float miterLimit = stream.readFloat();
		float[] dash = ((float[])(stream.readObject()));
		float dashPhase = stream.readFloat();
		result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase);
	} else {
		result = ((java.awt.Stroke)(stream.readObject()));
	}
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 649
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 190
original statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (c.equals(java.awt.BasicStroke.class)) {
		float width = stream.readFloat();
		int cap = stream.readInt();
		int join = stream.readInt();
		float miterLimit = stream.readFloat();
		float[] dash = ((float[])(stream.readObject()));
		float dashPhase = stream.readFloat();
		result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase);
	} else {
		result = ((java.awt.Stroke)(stream.readObject()));
	}
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 650
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 190
original statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (c.equals(java.awt.BasicStroke.class)) {
		float width = stream.readFloat();
		int cap = stream.readInt();
		int join = stream.readInt();
		float miterLimit = stream.readFloat();
		float[] dash = ((float[])(stream.readObject()));
		float dashPhase = stream.readFloat();
		result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase);
	} else {
		result = ((java.awt.Stroke)(stream.readObject()));
	}
} 
fixed statement= if (true) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (c.equals(java.awt.BasicStroke.class)) {
		float width = stream.readFloat();
		int cap = stream.readInt();
		int join = stream.readInt();
		float miterLimit = stream.readFloat();
		float[] dash = ((float[])(stream.readObject()));
		float dashPhase = stream.readFloat();
		result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase);
	} else {
		result = ((java.awt.Stroke)(stream.readObject()));
	}
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 651
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 190
original statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (c.equals(java.awt.BasicStroke.class)) {
		float width = stream.readFloat();
		int cap = stream.readInt();
		int join = stream.readInt();
		float miterLimit = stream.readFloat();
		float[] dash = ((float[])(stream.readObject()));
		float dashPhase = stream.readFloat();
		result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase);
	} else {
		result = ((java.awt.Stroke)(stream.readObject()));
	}
} 
fixed statement= if (false) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (c.equals(java.awt.BasicStroke.class)) {
		float width = stream.readFloat();
		int cap = stream.readInt();
		int join = stream.readInt();
		float miterLimit = stream.readFloat();
		float[] dash = ((float[])(stream.readObject()));
		float dashPhase = stream.readFloat();
		result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase);
	} else {
		result = ((java.awt.Stroke)(stream.readObject()));
	}
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 653
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 191
original statement= java.lang.Class c = ((java.lang.Class)(stream.readObject()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 654
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 192
original statement= if (c.equals(java.awt.BasicStroke.class)) {
	float width = stream.readFloat();
	int cap = stream.readInt();
	int join = stream.readInt();
	float miterLimit = stream.readFloat();
	float[] dash = ((float[])(stream.readObject()));
	float dashPhase = stream.readFloat();
	result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase);
} else {
	result = ((java.awt.Stroke)(stream.readObject()));
}
fixed statement= if (c.equals(java.awt.BasicStroke.class)) {
	float width = stream.readFloat();
	int cap = stream.readInt();
	int join = stream.readInt();
	float miterLimit = stream.readFloat();
	float[] dash = ((float[])(stream.readObject()));
	float dashPhase = stream.readFloat();
	result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase);
} else {
	result = ((java.awt.Stroke)(stream.readObject()));
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 655
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 192
original statement= if (c.equals(java.awt.BasicStroke.class)) {
	float width = stream.readFloat();
	int cap = stream.readInt();
	int join = stream.readInt();
	float miterLimit = stream.readFloat();
	float[] dash = ((float[])(stream.readObject()));
	float dashPhase = stream.readFloat();
	result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase);
} else {
	result = ((java.awt.Stroke)(stream.readObject()));
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 656
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 192
original statement= if (c.equals(java.awt.BasicStroke.class)) {
	float width = stream.readFloat();
	int cap = stream.readInt();
	int join = stream.readInt();
	float miterLimit = stream.readFloat();
	float[] dash = ((float[])(stream.readObject()));
	float dashPhase = stream.readFloat();
	result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase);
} else {
	result = ((java.awt.Stroke)(stream.readObject()));
}
fixed statement= if (true) {
	float width = stream.readFloat();
	int cap = stream.readInt();
	int join = stream.readInt();
	float miterLimit = stream.readFloat();
	float[] dash = ((float[])(stream.readObject()));
	float dashPhase = stream.readFloat();
	result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase);
} else {
	result = ((java.awt.Stroke)(stream.readObject()));
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 657
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 192
original statement= if (c.equals(java.awt.BasicStroke.class)) {
	float width = stream.readFloat();
	int cap = stream.readInt();
	int join = stream.readInt();
	float miterLimit = stream.readFloat();
	float[] dash = ((float[])(stream.readObject()));
	float dashPhase = stream.readFloat();
	result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase);
} else {
	result = ((java.awt.Stroke)(stream.readObject()));
}
fixed statement= if (false) {
	float width = stream.readFloat();
	int cap = stream.readInt();
	int join = stream.readInt();
	float miterLimit = stream.readFloat();
	float[] dash = ((float[])(stream.readObject()));
	float dashPhase = stream.readFloat();
	result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase);
} else {
	result = ((java.awt.Stroke)(stream.readObject()));
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 659
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 193
original statement= float width = stream.readFloat()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 661
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 194
original statement= int cap = stream.readInt()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 663
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 195
original statement= int join = stream.readInt()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 665
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 196
original statement= float miterLimit = stream.readFloat()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 667
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 197
original statement= float[] dash = ((float[])(stream.readObject()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 669
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 198
original statement= float dashPhase = stream.readFloat()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 670
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 199
original statement= result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase)
fixed statement= result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 671
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 199
original statement= result = new java.awt.BasicStroke(width , cap , join , miterLimit , dash , dashPhase)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 673
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 206
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 674
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 224
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 675
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 224
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 676
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 224
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 677
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 224
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 678
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 227
original statement= if (stroke != null) {
	stream.writeBoolean(false);
	if (stroke instanceof java.awt.BasicStroke) {
		java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke));
		stream.writeObject(java.awt.BasicStroke.class);
		stream.writeFloat(s.getLineWidth());
		stream.writeInt(s.getEndCap());
		stream.writeInt(s.getLineJoin());
		stream.writeFloat(s.getMiterLimit());
		stream.writeObject(s.getDashArray());
		stream.writeFloat(s.getDashPhase());
	} else {
		stream.writeObject(stroke.getClass());
		stream.writeObject(stroke);
	}
} else {
	stream.writeBoolean(true);
}
fixed statement= if (stroke != null) {
	stream.writeBoolean(false);
	if (stroke instanceof java.awt.BasicStroke) {
		java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke));
		stream.writeObject(java.awt.BasicStroke.class);
		stream.writeFloat(s.getLineWidth());
		stream.writeInt(s.getEndCap());
		stream.writeInt(s.getLineJoin());
		stream.writeFloat(s.getMiterLimit());
		stream.writeObject(s.getDashArray());
		stream.writeFloat(s.getDashPhase());
	} else {
		stream.writeObject(stroke.getClass());
		stream.writeObject(stroke);
	}
} else {
	stream.writeBoolean(true);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 679
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 227
original statement= if (stroke != null) {
	stream.writeBoolean(false);
	if (stroke instanceof java.awt.BasicStroke) {
		java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke));
		stream.writeObject(java.awt.BasicStroke.class);
		stream.writeFloat(s.getLineWidth());
		stream.writeInt(s.getEndCap());
		stream.writeInt(s.getLineJoin());
		stream.writeFloat(s.getMiterLimit());
		stream.writeObject(s.getDashArray());
		stream.writeFloat(s.getDashPhase());
	} else {
		stream.writeObject(stroke.getClass());
		stream.writeObject(stroke);
	}
} else {
	stream.writeBoolean(true);
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 680
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 227
original statement= if (stroke != null) {
	stream.writeBoolean(false);
	if (stroke instanceof java.awt.BasicStroke) {
		java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke));
		stream.writeObject(java.awt.BasicStroke.class);
		stream.writeFloat(s.getLineWidth());
		stream.writeInt(s.getEndCap());
		stream.writeInt(s.getLineJoin());
		stream.writeFloat(s.getMiterLimit());
		stream.writeObject(s.getDashArray());
		stream.writeFloat(s.getDashPhase());
	} else {
		stream.writeObject(stroke.getClass());
		stream.writeObject(stroke);
	}
} else {
	stream.writeBoolean(true);
}
fixed statement= if (true) {
	stream.writeBoolean(false);
	if (stroke instanceof java.awt.BasicStroke) {
		java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke));
		stream.writeObject(java.awt.BasicStroke.class);
		stream.writeFloat(s.getLineWidth());
		stream.writeInt(s.getEndCap());
		stream.writeInt(s.getLineJoin());
		stream.writeFloat(s.getMiterLimit());
		stream.writeObject(s.getDashArray());
		stream.writeFloat(s.getDashPhase());
	} else {
		stream.writeObject(stroke.getClass());
		stream.writeObject(stroke);
	}
} else {
	stream.writeBoolean(true);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 681
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 227
original statement= if (stroke != null) {
	stream.writeBoolean(false);
	if (stroke instanceof java.awt.BasicStroke) {
		java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke));
		stream.writeObject(java.awt.BasicStroke.class);
		stream.writeFloat(s.getLineWidth());
		stream.writeInt(s.getEndCap());
		stream.writeInt(s.getLineJoin());
		stream.writeFloat(s.getMiterLimit());
		stream.writeObject(s.getDashArray());
		stream.writeFloat(s.getDashPhase());
	} else {
		stream.writeObject(stroke.getClass());
		stream.writeObject(stroke);
	}
} else {
	stream.writeBoolean(true);
}
fixed statement= if (false) {
	stream.writeBoolean(false);
	if (stroke instanceof java.awt.BasicStroke) {
		java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke));
		stream.writeObject(java.awt.BasicStroke.class);
		stream.writeFloat(s.getLineWidth());
		stream.writeInt(s.getEndCap());
		stream.writeInt(s.getLineJoin());
		stream.writeFloat(s.getMiterLimit());
		stream.writeObject(s.getDashArray());
		stream.writeFloat(s.getDashPhase());
	} else {
		stream.writeObject(stroke.getClass());
		stream.writeObject(stroke);
	}
} else {
	stream.writeBoolean(true);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 682
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 228
original statement= stream.writeBoolean(false)
fixed statement= stream.writeBoolean(false)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 683
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 228
original statement= stream.writeBoolean(false)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 684
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 229
original statement= if (stroke instanceof java.awt.BasicStroke) {
	java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke));
	stream.writeObject(java.awt.BasicStroke.class);
	stream.writeFloat(s.getLineWidth());
	stream.writeInt(s.getEndCap());
	stream.writeInt(s.getLineJoin());
	stream.writeFloat(s.getMiterLimit());
	stream.writeObject(s.getDashArray());
	stream.writeFloat(s.getDashPhase());
} else {
	stream.writeObject(stroke.getClass());
	stream.writeObject(stroke);
}
fixed statement= if (stroke instanceof java.awt.BasicStroke) {
	java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke));
	stream.writeObject(java.awt.BasicStroke.class);
	stream.writeFloat(s.getLineWidth());
	stream.writeInt(s.getEndCap());
	stream.writeInt(s.getLineJoin());
	stream.writeFloat(s.getMiterLimit());
	stream.writeObject(s.getDashArray());
	stream.writeFloat(s.getDashPhase());
} else {
	stream.writeObject(stroke.getClass());
	stream.writeObject(stroke);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 685
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 229
original statement= if (stroke instanceof java.awt.BasicStroke) {
	java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke));
	stream.writeObject(java.awt.BasicStroke.class);
	stream.writeFloat(s.getLineWidth());
	stream.writeInt(s.getEndCap());
	stream.writeInt(s.getLineJoin());
	stream.writeFloat(s.getMiterLimit());
	stream.writeObject(s.getDashArray());
	stream.writeFloat(s.getDashPhase());
} else {
	stream.writeObject(stroke.getClass());
	stream.writeObject(stroke);
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 686
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 229
original statement= if (stroke instanceof java.awt.BasicStroke) {
	java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke));
	stream.writeObject(java.awt.BasicStroke.class);
	stream.writeFloat(s.getLineWidth());
	stream.writeInt(s.getEndCap());
	stream.writeInt(s.getLineJoin());
	stream.writeFloat(s.getMiterLimit());
	stream.writeObject(s.getDashArray());
	stream.writeFloat(s.getDashPhase());
} else {
	stream.writeObject(stroke.getClass());
	stream.writeObject(stroke);
}
fixed statement= if (true) {
	java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke));
	stream.writeObject(java.awt.BasicStroke.class);
	stream.writeFloat(s.getLineWidth());
	stream.writeInt(s.getEndCap());
	stream.writeInt(s.getLineJoin());
	stream.writeFloat(s.getMiterLimit());
	stream.writeObject(s.getDashArray());
	stream.writeFloat(s.getDashPhase());
} else {
	stream.writeObject(stroke.getClass());
	stream.writeObject(stroke);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 687
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 229
original statement= if (stroke instanceof java.awt.BasicStroke) {
	java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke));
	stream.writeObject(java.awt.BasicStroke.class);
	stream.writeFloat(s.getLineWidth());
	stream.writeInt(s.getEndCap());
	stream.writeInt(s.getLineJoin());
	stream.writeFloat(s.getMiterLimit());
	stream.writeObject(s.getDashArray());
	stream.writeFloat(s.getDashPhase());
} else {
	stream.writeObject(stroke.getClass());
	stream.writeObject(stroke);
}
fixed statement= if (false) {
	java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke));
	stream.writeObject(java.awt.BasicStroke.class);
	stream.writeFloat(s.getLineWidth());
	stream.writeInt(s.getEndCap());
	stream.writeInt(s.getLineJoin());
	stream.writeFloat(s.getMiterLimit());
	stream.writeObject(s.getDashArray());
	stream.writeFloat(s.getDashPhase());
} else {
	stream.writeObject(stroke.getClass());
	stream.writeObject(stroke);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 689
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 230
original statement= java.awt.BasicStroke s = ((java.awt.BasicStroke)(stroke))
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 690
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 231
original statement= stream.writeObject(java.awt.BasicStroke.class)
fixed statement= stream.writeObject(java.awt.BasicStroke.class)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 691
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 231
original statement= stream.writeObject(java.awt.BasicStroke.class)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 692
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 232
original statement= stream.writeFloat(s.getLineWidth())
fixed statement= stream.writeFloat(s.getLineWidth())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 693
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 232
original statement= stream.writeFloat(s.getLineWidth())
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 694
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 233
original statement= stream.writeInt(s.getEndCap())
fixed statement= stream.writeInt(s.getEndCap())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 695
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 233
original statement= stream.writeInt(s.getEndCap())
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 696
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 234
original statement= stream.writeInt(s.getLineJoin())
fixed statement= stream.writeInt(s.getLineJoin())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 697
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 234
original statement= stream.writeInt(s.getLineJoin())
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 698
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 235
original statement= stream.writeFloat(s.getMiterLimit())
fixed statement= stream.writeFloat(s.getMiterLimit())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 699
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 235
original statement= stream.writeFloat(s.getMiterLimit())
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 700
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 236
original statement= stream.writeObject(s.getDashArray())
fixed statement= stream.writeObject(s.getDashArray())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 701
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 236
original statement= stream.writeObject(s.getDashArray())
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 702
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 237
original statement= stream.writeFloat(s.getDashPhase())
fixed statement= stream.writeFloat(s.getDashPhase())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 703
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 237
original statement= stream.writeFloat(s.getDashPhase())
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 704
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 263
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 705
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 263
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 706
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 263
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 707
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 263
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 709
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 266
original statement= java.awt.Shape result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 711
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 267
original statement= boolean isNull = stream.readBoolean()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 712
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 268
original statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (c.equals(java.awt.geom.Line2D.class)) {
		double x1 = stream.readDouble();
		double y1 = stream.readDouble();
		double x2 = stream.readDouble();
		double y2 = stream.readDouble();
		result = new java.awt.geom.Line2D.Double(x1 , y1 , x2 , y2);
	} else if (c.equals(java.awt.geom.Rectangle2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		result = new java.awt.geom.Rectangle2D.Double(x , y , w , h);
	} else if (c.equals(java.awt.geom.Ellipse2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		result = new java.awt.geom.Ellipse2D.Double(x , y , w , h);
	} else if (c.equals(java.awt.geom.Arc2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		double as = stream.readDouble();
		double ae = stream.readDouble();
		int at = stream.readInt();
		result = new java.awt.geom.Arc2D.Double(x , y , w , h , as , ae , at);
	} else if (c.equals(java.awt.geom.GeneralPath.class)) {
		java.awt.geom.GeneralPath gp = new java.awt.geom.GeneralPath();
		float[] args = new float[6];
		boolean hasNext = stream.readBoolean();
		while (!hasNext) {
			int type = stream.readInt();
			for (int i = 0 ; i < 6 ; i++) {
				args[i] = stream.readFloat();
			}
			switch (type) {
				case java.awt.geom.PathIterator.SEG_MOVETO :
					gp.moveTo(args[0], args[1]);
					break;
				case java.awt.geom.PathIterator.SEG_LINETO :
					gp.lineTo(args[0], args[1]);
					break;
				case java.awt.geom.PathIterator.SEG_CUBICTO :
					gp.curveTo(args[0], args[1], args[2], args[3], args[4], args[5]);
					break;
				case java.awt.geom.PathIterator.SEG_QUADTO :
					gp.quadTo(args[0], args[1], args[2], args[3]);
					break;
				case java.awt.geom.PathIterator.SEG_CLOSE :
					gp.closePath();
					break;
				default :
					throw new java.lang.RuntimeException("JFreeChart - No path exists");
			}
			gp.setWindingRule(stream.readInt());
			hasNext = stream.readBoolean();
		}
		result = gp;
	} else {
		result = ((java.awt.Shape)(stream.readObject()));
	}
} 
fixed statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (c.equals(java.awt.geom.Line2D.class)) {
		double x1 = stream.readDouble();
		double y1 = stream.readDouble();
		double x2 = stream.readDouble();
		double y2 = stream.readDouble();
		result = new java.awt.geom.Line2D.Double(x1 , y1 , x2 , y2);
	} else if (c.equals(java.awt.geom.Rectangle2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		result = new java.awt.geom.Rectangle2D.Double(x , y , w , h);
	} else if (c.equals(java.awt.geom.Ellipse2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		result = new java.awt.geom.Ellipse2D.Double(x , y , w , h);
	} else if (c.equals(java.awt.geom.Arc2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		double as = stream.readDouble();
		double ae = stream.readDouble();
		int at = stream.readInt();
		result = new java.awt.geom.Arc2D.Double(x , y , w , h , as , ae , at);
	} else if (c.equals(java.awt.geom.GeneralPath.class)) {
		java.awt.geom.GeneralPath gp = new java.awt.geom.GeneralPath();
		float[] args = new float[6];
		boolean hasNext = stream.readBoolean();
		while (!hasNext) {
			int type = stream.readInt();
			for (int i = 0 ; i < 6 ; i++) {
				args[i] = stream.readFloat();
			}
			switch (type) {
				case java.awt.geom.PathIterator.SEG_MOVETO :
					gp.moveTo(args[0], args[1]);
					break;
				case java.awt.geom.PathIterator.SEG_LINETO :
					gp.lineTo(args[0], args[1]);
					break;
				case java.awt.geom.PathIterator.SEG_CUBICTO :
					gp.curveTo(args[0], args[1], args[2], args[3], args[4], args[5]);
					break;
				case java.awt.geom.PathIterator.SEG_QUADTO :
					gp.quadTo(args[0], args[1], args[2], args[3]);
					break;
				case java.awt.geom.PathIterator.SEG_CLOSE :
					gp.closePath();
					break;
				default :
					throw new java.lang.RuntimeException("JFreeChart - No path exists");
			}
			gp.setWindingRule(stream.readInt());
			hasNext = stream.readBoolean();
		}
		result = gp;
	} else {
		result = ((java.awt.Shape)(stream.readObject()));
	}
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 713
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 268
original statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (c.equals(java.awt.geom.Line2D.class)) {
		double x1 = stream.readDouble();
		double y1 = stream.readDouble();
		double x2 = stream.readDouble();
		double y2 = stream.readDouble();
		result = new java.awt.geom.Line2D.Double(x1 , y1 , x2 , y2);
	} else if (c.equals(java.awt.geom.Rectangle2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		result = new java.awt.geom.Rectangle2D.Double(x , y , w , h);
	} else if (c.equals(java.awt.geom.Ellipse2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		result = new java.awt.geom.Ellipse2D.Double(x , y , w , h);
	} else if (c.equals(java.awt.geom.Arc2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		double as = stream.readDouble();
		double ae = stream.readDouble();
		int at = stream.readInt();
		result = new java.awt.geom.Arc2D.Double(x , y , w , h , as , ae , at);
	} else if (c.equals(java.awt.geom.GeneralPath.class)) {
		java.awt.geom.GeneralPath gp = new java.awt.geom.GeneralPath();
		float[] args = new float[6];
		boolean hasNext = stream.readBoolean();
		while (!hasNext) {
			int type = stream.readInt();
			for (int i = 0 ; i < 6 ; i++) {
				args[i] = stream.readFloat();
			}
			switch (type) {
				case java.awt.geom.PathIterator.SEG_MOVETO :
					gp.moveTo(args[0], args[1]);
					break;
				case java.awt.geom.PathIterator.SEG_LINETO :
					gp.lineTo(args[0], args[1]);
					break;
				case java.awt.geom.PathIterator.SEG_CUBICTO :
					gp.curveTo(args[0], args[1], args[2], args[3], args[4], args[5]);
					break;
				case java.awt.geom.PathIterator.SEG_QUADTO :
					gp.quadTo(args[0], args[1], args[2], args[3]);
					break;
				case java.awt.geom.PathIterator.SEG_CLOSE :
					gp.closePath();
					break;
				default :
					throw new java.lang.RuntimeException("JFreeChart - No path exists");
			}
			gp.setWindingRule(stream.readInt());
			hasNext = stream.readBoolean();
		}
		result = gp;
	} else {
		result = ((java.awt.Shape)(stream.readObject()));
	}
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 714
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 268
original statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (c.equals(java.awt.geom.Line2D.class)) {
		double x1 = stream.readDouble();
		double y1 = stream.readDouble();
		double x2 = stream.readDouble();
		double y2 = stream.readDouble();
		result = new java.awt.geom.Line2D.Double(x1 , y1 , x2 , y2);
	} else if (c.equals(java.awt.geom.Rectangle2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		result = new java.awt.geom.Rectangle2D.Double(x , y , w , h);
	} else if (c.equals(java.awt.geom.Ellipse2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		result = new java.awt.geom.Ellipse2D.Double(x , y , w , h);
	} else if (c.equals(java.awt.geom.Arc2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		double as = stream.readDouble();
		double ae = stream.readDouble();
		int at = stream.readInt();
		result = new java.awt.geom.Arc2D.Double(x , y , w , h , as , ae , at);
	} else if (c.equals(java.awt.geom.GeneralPath.class)) {
		java.awt.geom.GeneralPath gp = new java.awt.geom.GeneralPath();
		float[] args = new float[6];
		boolean hasNext = stream.readBoolean();
		while (!hasNext) {
			int type = stream.readInt();
			for (int i = 0 ; i < 6 ; i++) {
				args[i] = stream.readFloat();
			}
			switch (type) {
				case java.awt.geom.PathIterator.SEG_MOVETO :
					gp.moveTo(args[0], args[1]);
					break;
				case java.awt.geom.PathIterator.SEG_LINETO :
					gp.lineTo(args[0], args[1]);
					break;
				case java.awt.geom.PathIterator.SEG_CUBICTO :
					gp.curveTo(args[0], args[1], args[2], args[3], args[4], args[5]);
					break;
				case java.awt.geom.PathIterator.SEG_QUADTO :
					gp.quadTo(args[0], args[1], args[2], args[3]);
					break;
				case java.awt.geom.PathIterator.SEG_CLOSE :
					gp.closePath();
					break;
				default :
					throw new java.lang.RuntimeException("JFreeChart - No path exists");
			}
			gp.setWindingRule(stream.readInt());
			hasNext = stream.readBoolean();
		}
		result = gp;
	} else {
		result = ((java.awt.Shape)(stream.readObject()));
	}
} 
fixed statement= if (true) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (c.equals(java.awt.geom.Line2D.class)) {
		double x1 = stream.readDouble();
		double y1 = stream.readDouble();
		double x2 = stream.readDouble();
		double y2 = stream.readDouble();
		result = new java.awt.geom.Line2D.Double(x1 , y1 , x2 , y2);
	} else if (c.equals(java.awt.geom.Rectangle2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		result = new java.awt.geom.Rectangle2D.Double(x , y , w , h);
	} else if (c.equals(java.awt.geom.Ellipse2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		result = new java.awt.geom.Ellipse2D.Double(x , y , w , h);
	} else if (c.equals(java.awt.geom.Arc2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		double as = stream.readDouble();
		double ae = stream.readDouble();
		int at = stream.readInt();
		result = new java.awt.geom.Arc2D.Double(x , y , w , h , as , ae , at);
	} else if (c.equals(java.awt.geom.GeneralPath.class)) {
		java.awt.geom.GeneralPath gp = new java.awt.geom.GeneralPath();
		float[] args = new float[6];
		boolean hasNext = stream.readBoolean();
		while (!hasNext) {
			int type = stream.readInt();
			for (int i = 0 ; i < 6 ; i++) {
				args[i] = stream.readFloat();
			}
			switch (type) {
				case java.awt.geom.PathIterator.SEG_MOVETO :
					gp.moveTo(args[0], args[1]);
					break;
				case java.awt.geom.PathIterator.SEG_LINETO :
					gp.lineTo(args[0], args[1]);
					break;
				case java.awt.geom.PathIterator.SEG_CUBICTO :
					gp.curveTo(args[0], args[1], args[2], args[3], args[4], args[5]);
					break;
				case java.awt.geom.PathIterator.SEG_QUADTO :
					gp.quadTo(args[0], args[1], args[2], args[3]);
					break;
				case java.awt.geom.PathIterator.SEG_CLOSE :
					gp.closePath();
					break;
				default :
					throw new java.lang.RuntimeException("JFreeChart - No path exists");
			}
			gp.setWindingRule(stream.readInt());
			hasNext = stream.readBoolean();
		}
		result = gp;
	} else {
		result = ((java.awt.Shape)(stream.readObject()));
	}
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 715
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 268
original statement= if (!isNull) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (c.equals(java.awt.geom.Line2D.class)) {
		double x1 = stream.readDouble();
		double y1 = stream.readDouble();
		double x2 = stream.readDouble();
		double y2 = stream.readDouble();
		result = new java.awt.geom.Line2D.Double(x1 , y1 , x2 , y2);
	} else if (c.equals(java.awt.geom.Rectangle2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		result = new java.awt.geom.Rectangle2D.Double(x , y , w , h);
	} else if (c.equals(java.awt.geom.Ellipse2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		result = new java.awt.geom.Ellipse2D.Double(x , y , w , h);
	} else if (c.equals(java.awt.geom.Arc2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		double as = stream.readDouble();
		double ae = stream.readDouble();
		int at = stream.readInt();
		result = new java.awt.geom.Arc2D.Double(x , y , w , h , as , ae , at);
	} else if (c.equals(java.awt.geom.GeneralPath.class)) {
		java.awt.geom.GeneralPath gp = new java.awt.geom.GeneralPath();
		float[] args = new float[6];
		boolean hasNext = stream.readBoolean();
		while (!hasNext) {
			int type = stream.readInt();
			for (int i = 0 ; i < 6 ; i++) {
				args[i] = stream.readFloat();
			}
			switch (type) {
				case java.awt.geom.PathIterator.SEG_MOVETO :
					gp.moveTo(args[0], args[1]);
					break;
				case java.awt.geom.PathIterator.SEG_LINETO :
					gp.lineTo(args[0], args[1]);
					break;
				case java.awt.geom.PathIterator.SEG_CUBICTO :
					gp.curveTo(args[0], args[1], args[2], args[3], args[4], args[5]);
					break;
				case java.awt.geom.PathIterator.SEG_QUADTO :
					gp.quadTo(args[0], args[1], args[2], args[3]);
					break;
				case java.awt.geom.PathIterator.SEG_CLOSE :
					gp.closePath();
					break;
				default :
					throw new java.lang.RuntimeException("JFreeChart - No path exists");
			}
			gp.setWindingRule(stream.readInt());
			hasNext = stream.readBoolean();
		}
		result = gp;
	} else {
		result = ((java.awt.Shape)(stream.readObject()));
	}
} 
fixed statement= if (false) {
	java.lang.Class c = ((java.lang.Class)(stream.readObject()));
	if (c.equals(java.awt.geom.Line2D.class)) {
		double x1 = stream.readDouble();
		double y1 = stream.readDouble();
		double x2 = stream.readDouble();
		double y2 = stream.readDouble();
		result = new java.awt.geom.Line2D.Double(x1 , y1 , x2 , y2);
	} else if (c.equals(java.awt.geom.Rectangle2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		result = new java.awt.geom.Rectangle2D.Double(x , y , w , h);
	} else if (c.equals(java.awt.geom.Ellipse2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		result = new java.awt.geom.Ellipse2D.Double(x , y , w , h);
	} else if (c.equals(java.awt.geom.Arc2D.class)) {
		double x = stream.readDouble();
		double y = stream.readDouble();
		double w = stream.readDouble();
		double h = stream.readDouble();
		double as = stream.readDouble();
		double ae = stream.readDouble();
		int at = stream.readInt();
		result = new java.awt.geom.Arc2D.Double(x , y , w , h , as , ae , at);
	} else if (c.equals(java.awt.geom.GeneralPath.class)) {
		java.awt.geom.GeneralPath gp = new java.awt.geom.GeneralPath();
		float[] args = new float[6];
		boolean hasNext = stream.readBoolean();
		while (!hasNext) {
			int type = stream.readInt();
			for (int i = 0 ; i < 6 ; i++) {
				args[i] = stream.readFloat();
			}
			switch (type) {
				case java.awt.geom.PathIterator.SEG_MOVETO :
					gp.moveTo(args[0], args[1]);
					break;
				case java.awt.geom.PathIterator.SEG_LINETO :
					gp.lineTo(args[0], args[1]);
					break;
				case java.awt.geom.PathIterator.SEG_CUBICTO :
					gp.curveTo(args[0], args[1], args[2], args[3], args[4], args[5]);
					break;
				case java.awt.geom.PathIterator.SEG_QUADTO :
					gp.quadTo(args[0], args[1], args[2], args[3]);
					break;
				case java.awt.geom.PathIterator.SEG_CLOSE :
					gp.closePath();
					break;
				default :
					throw new java.lang.RuntimeException("JFreeChart - No path exists");
			}
			gp.setWindingRule(stream.readInt());
			hasNext = stream.readBoolean();
		}
		result = gp;
	} else {
		result = ((java.awt.Shape)(stream.readObject()));
	}
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 717
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 269
original statement= java.lang.Class c = ((java.lang.Class)(stream.readObject()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 718
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 270
original statement= if (c.equals(java.awt.geom.Line2D.class)) {
	double x1 = stream.readDouble();
	double y1 = stream.readDouble();
	double x2 = stream.readDouble();
	double y2 = stream.readDouble();
	result = new java.awt.geom.Line2D.Double(x1 , y1 , x2 , y2);
} else if (c.equals(java.awt.geom.Rectangle2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	result = new java.awt.geom.Rectangle2D.Double(x , y , w , h);
} else if (c.equals(java.awt.geom.Ellipse2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	result = new java.awt.geom.Ellipse2D.Double(x , y , w , h);
} else if (c.equals(java.awt.geom.Arc2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	double as = stream.readDouble();
	double ae = stream.readDouble();
	int at = stream.readInt();
	result = new java.awt.geom.Arc2D.Double(x , y , w , h , as , ae , at);
} else if (c.equals(java.awt.geom.GeneralPath.class)) {
	java.awt.geom.GeneralPath gp = new java.awt.geom.GeneralPath();
	float[] args = new float[6];
	boolean hasNext = stream.readBoolean();
	while (!hasNext) {
		int type = stream.readInt();
		for (int i = 0 ; i < 6 ; i++) {
			args[i] = stream.readFloat();
		}
		switch (type) {
			case java.awt.geom.PathIterator.SEG_MOVETO :
				gp.moveTo(args[0], args[1]);
				break;
			case java.awt.geom.PathIterator.SEG_LINETO :
				gp.lineTo(args[0], args[1]);
				break;
			case java.awt.geom.PathIterator.SEG_CUBICTO :
				gp.curveTo(args[0], args[1], args[2], args[3], args[4], args[5]);
				break;
			case java.awt.geom.PathIterator.SEG_QUADTO :
				gp.quadTo(args[0], args[1], args[2], args[3]);
				break;
			case java.awt.geom.PathIterator.SEG_CLOSE :
				gp.closePath();
				break;
			default :
				throw new java.lang.RuntimeException("JFreeChart - No path exists");
		}
		gp.setWindingRule(stream.readInt());
		hasNext = stream.readBoolean();
	}
	result = gp;
} else {
	result = ((java.awt.Shape)(stream.readObject()));
}
fixed statement= if (c.equals(java.awt.geom.Line2D.class)) {
	double x1 = stream.readDouble();
	double y1 = stream.readDouble();
	double x2 = stream.readDouble();
	double y2 = stream.readDouble();
	result = new java.awt.geom.Line2D.Double(x1 , y1 , x2 , y2);
} else if (c.equals(java.awt.geom.Rectangle2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	result = new java.awt.geom.Rectangle2D.Double(x , y , w , h);
} else if (c.equals(java.awt.geom.Ellipse2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	result = new java.awt.geom.Ellipse2D.Double(x , y , w , h);
} else if (c.equals(java.awt.geom.Arc2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	double as = stream.readDouble();
	double ae = stream.readDouble();
	int at = stream.readInt();
	result = new java.awt.geom.Arc2D.Double(x , y , w , h , as , ae , at);
} else if (c.equals(java.awt.geom.GeneralPath.class)) {
	java.awt.geom.GeneralPath gp = new java.awt.geom.GeneralPath();
	float[] args = new float[6];
	boolean hasNext = stream.readBoolean();
	while (!hasNext) {
		int type = stream.readInt();
		for (int i = 0 ; i < 6 ; i++) {
			args[i] = stream.readFloat();
		}
		switch (type) {
			case java.awt.geom.PathIterator.SEG_MOVETO :
				gp.moveTo(args[0], args[1]);
				break;
			case java.awt.geom.PathIterator.SEG_LINETO :
				gp.lineTo(args[0], args[1]);
				break;
			case java.awt.geom.PathIterator.SEG_CUBICTO :
				gp.curveTo(args[0], args[1], args[2], args[3], args[4], args[5]);
				break;
			case java.awt.geom.PathIterator.SEG_QUADTO :
				gp.quadTo(args[0], args[1], args[2], args[3]);
				break;
			case java.awt.geom.PathIterator.SEG_CLOSE :
				gp.closePath();
				break;
			default :
				throw new java.lang.RuntimeException("JFreeChart - No path exists");
		}
		gp.setWindingRule(stream.readInt());
		hasNext = stream.readBoolean();
	}
	result = gp;
} else {
	result = ((java.awt.Shape)(stream.readObject()));
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 719
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 270
original statement= if (c.equals(java.awt.geom.Line2D.class)) {
	double x1 = stream.readDouble();
	double y1 = stream.readDouble();
	double x2 = stream.readDouble();
	double y2 = stream.readDouble();
	result = new java.awt.geom.Line2D.Double(x1 , y1 , x2 , y2);
} else if (c.equals(java.awt.geom.Rectangle2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	result = new java.awt.geom.Rectangle2D.Double(x , y , w , h);
} else if (c.equals(java.awt.geom.Ellipse2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	result = new java.awt.geom.Ellipse2D.Double(x , y , w , h);
} else if (c.equals(java.awt.geom.Arc2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	double as = stream.readDouble();
	double ae = stream.readDouble();
	int at = stream.readInt();
	result = new java.awt.geom.Arc2D.Double(x , y , w , h , as , ae , at);
} else if (c.equals(java.awt.geom.GeneralPath.class)) {
	java.awt.geom.GeneralPath gp = new java.awt.geom.GeneralPath();
	float[] args = new float[6];
	boolean hasNext = stream.readBoolean();
	while (!hasNext) {
		int type = stream.readInt();
		for (int i = 0 ; i < 6 ; i++) {
			args[i] = stream.readFloat();
		}
		switch (type) {
			case java.awt.geom.PathIterator.SEG_MOVETO :
				gp.moveTo(args[0], args[1]);
				break;
			case java.awt.geom.PathIterator.SEG_LINETO :
				gp.lineTo(args[0], args[1]);
				break;
			case java.awt.geom.PathIterator.SEG_CUBICTO :
				gp.curveTo(args[0], args[1], args[2], args[3], args[4], args[5]);
				break;
			case java.awt.geom.PathIterator.SEG_QUADTO :
				gp.quadTo(args[0], args[1], args[2], args[3]);
				break;
			case java.awt.geom.PathIterator.SEG_CLOSE :
				gp.closePath();
				break;
			default :
				throw new java.lang.RuntimeException("JFreeChart - No path exists");
		}
		gp.setWindingRule(stream.readInt());
		hasNext = stream.readBoolean();
	}
	result = gp;
} else {
	result = ((java.awt.Shape)(stream.readObject()));
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 720
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 270
original statement= if (c.equals(java.awt.geom.Line2D.class)) {
	double x1 = stream.readDouble();
	double y1 = stream.readDouble();
	double x2 = stream.readDouble();
	double y2 = stream.readDouble();
	result = new java.awt.geom.Line2D.Double(x1 , y1 , x2 , y2);
} else if (c.equals(java.awt.geom.Rectangle2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	result = new java.awt.geom.Rectangle2D.Double(x , y , w , h);
} else if (c.equals(java.awt.geom.Ellipse2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	result = new java.awt.geom.Ellipse2D.Double(x , y , w , h);
} else if (c.equals(java.awt.geom.Arc2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	double as = stream.readDouble();
	double ae = stream.readDouble();
	int at = stream.readInt();
	result = new java.awt.geom.Arc2D.Double(x , y , w , h , as , ae , at);
} else if (c.equals(java.awt.geom.GeneralPath.class)) {
	java.awt.geom.GeneralPath gp = new java.awt.geom.GeneralPath();
	float[] args = new float[6];
	boolean hasNext = stream.readBoolean();
	while (!hasNext) {
		int type = stream.readInt();
		for (int i = 0 ; i < 6 ; i++) {
			args[i] = stream.readFloat();
		}
		switch (type) {
			case java.awt.geom.PathIterator.SEG_MOVETO :
				gp.moveTo(args[0], args[1]);
				break;
			case java.awt.geom.PathIterator.SEG_LINETO :
				gp.lineTo(args[0], args[1]);
				break;
			case java.awt.geom.PathIterator.SEG_CUBICTO :
				gp.curveTo(args[0], args[1], args[2], args[3], args[4], args[5]);
				break;
			case java.awt.geom.PathIterator.SEG_QUADTO :
				gp.quadTo(args[0], args[1], args[2], args[3]);
				break;
			case java.awt.geom.PathIterator.SEG_CLOSE :
				gp.closePath();
				break;
			default :
				throw new java.lang.RuntimeException("JFreeChart - No path exists");
		}
		gp.setWindingRule(stream.readInt());
		hasNext = stream.readBoolean();
	}
	result = gp;
} else {
	result = ((java.awt.Shape)(stream.readObject()));
}
fixed statement= if (true) {
	double x1 = stream.readDouble();
	double y1 = stream.readDouble();
	double x2 = stream.readDouble();
	double y2 = stream.readDouble();
	result = new java.awt.geom.Line2D.Double(x1 , y1 , x2 , y2);
} else if (c.equals(java.awt.geom.Rectangle2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	result = new java.awt.geom.Rectangle2D.Double(x , y , w , h);
} else if (c.equals(java.awt.geom.Ellipse2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	result = new java.awt.geom.Ellipse2D.Double(x , y , w , h);
} else if (c.equals(java.awt.geom.Arc2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	double as = stream.readDouble();
	double ae = stream.readDouble();
	int at = stream.readInt();
	result = new java.awt.geom.Arc2D.Double(x , y , w , h , as , ae , at);
} else if (c.equals(java.awt.geom.GeneralPath.class)) {
	java.awt.geom.GeneralPath gp = new java.awt.geom.GeneralPath();
	float[] args = new float[6];
	boolean hasNext = stream.readBoolean();
	while (!hasNext) {
		int type = stream.readInt();
		for (int i = 0 ; i < 6 ; i++) {
			args[i] = stream.readFloat();
		}
		switch (type) {
			case java.awt.geom.PathIterator.SEG_MOVETO :
				gp.moveTo(args[0], args[1]);
				break;
			case java.awt.geom.PathIterator.SEG_LINETO :
				gp.lineTo(args[0], args[1]);
				break;
			case java.awt.geom.PathIterator.SEG_CUBICTO :
				gp.curveTo(args[0], args[1], args[2], args[3], args[4], args[5]);
				break;
			case java.awt.geom.PathIterator.SEG_QUADTO :
				gp.quadTo(args[0], args[1], args[2], args[3]);
				break;
			case java.awt.geom.PathIterator.SEG_CLOSE :
				gp.closePath();
				break;
			default :
				throw new java.lang.RuntimeException("JFreeChart - No path exists");
		}
		gp.setWindingRule(stream.readInt());
		hasNext = stream.readBoolean();
	}
	result = gp;
} else {
	result = ((java.awt.Shape)(stream.readObject()));
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 721
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 270
original statement= if (c.equals(java.awt.geom.Line2D.class)) {
	double x1 = stream.readDouble();
	double y1 = stream.readDouble();
	double x2 = stream.readDouble();
	double y2 = stream.readDouble();
	result = new java.awt.geom.Line2D.Double(x1 , y1 , x2 , y2);
} else if (c.equals(java.awt.geom.Rectangle2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	result = new java.awt.geom.Rectangle2D.Double(x , y , w , h);
} else if (c.equals(java.awt.geom.Ellipse2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	result = new java.awt.geom.Ellipse2D.Double(x , y , w , h);
} else if (c.equals(java.awt.geom.Arc2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	double as = stream.readDouble();
	double ae = stream.readDouble();
	int at = stream.readInt();
	result = new java.awt.geom.Arc2D.Double(x , y , w , h , as , ae , at);
} else if (c.equals(java.awt.geom.GeneralPath.class)) {
	java.awt.geom.GeneralPath gp = new java.awt.geom.GeneralPath();
	float[] args = new float[6];
	boolean hasNext = stream.readBoolean();
	while (!hasNext) {
		int type = stream.readInt();
		for (int i = 0 ; i < 6 ; i++) {
			args[i] = stream.readFloat();
		}
		switch (type) {
			case java.awt.geom.PathIterator.SEG_MOVETO :
				gp.moveTo(args[0], args[1]);
				break;
			case java.awt.geom.PathIterator.SEG_LINETO :
				gp.lineTo(args[0], args[1]);
				break;
			case java.awt.geom.PathIterator.SEG_CUBICTO :
				gp.curveTo(args[0], args[1], args[2], args[3], args[4], args[5]);
				break;
			case java.awt.geom.PathIterator.SEG_QUADTO :
				gp.quadTo(args[0], args[1], args[2], args[3]);
				break;
			case java.awt.geom.PathIterator.SEG_CLOSE :
				gp.closePath();
				break;
			default :
				throw new java.lang.RuntimeException("JFreeChart - No path exists");
		}
		gp.setWindingRule(stream.readInt());
		hasNext = stream.readBoolean();
	}
	result = gp;
} else {
	result = ((java.awt.Shape)(stream.readObject()));
}
fixed statement= if (false) {
	double x1 = stream.readDouble();
	double y1 = stream.readDouble();
	double x2 = stream.readDouble();
	double y2 = stream.readDouble();
	result = new java.awt.geom.Line2D.Double(x1 , y1 , x2 , y2);
} else if (c.equals(java.awt.geom.Rectangle2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	result = new java.awt.geom.Rectangle2D.Double(x , y , w , h);
} else if (c.equals(java.awt.geom.Ellipse2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	result = new java.awt.geom.Ellipse2D.Double(x , y , w , h);
} else if (c.equals(java.awt.geom.Arc2D.class)) {
	double x = stream.readDouble();
	double y = stream.readDouble();
	double w = stream.readDouble();
	double h = stream.readDouble();
	double as = stream.readDouble();
	double ae = stream.readDouble();
	int at = stream.readInt();
	result = new java.awt.geom.Arc2D.Double(x , y , w , h , as , ae , at);
} else if (c.equals(java.awt.geom.GeneralPath.class)) {
	java.awt.geom.GeneralPath gp = new java.awt.geom.GeneralPath();
	float[] args = new float[6];
	boolean hasNext = stream.readBoolean();
	while (!hasNext) {
		int type = stream.readInt();
		for (int i = 0 ; i < 6 ; i++) {
			args[i] = stream.readFloat();
		}
		switch (type) {
			case java.awt.geom.PathIterator.SEG_MOVETO :
				gp.moveTo(args[0], args[1]);
				break;
			case java.awt.geom.PathIterator.SEG_LINETO :
				gp.lineTo(args[0], args[1]);
				break;
			case java.awt.geom.PathIterator.SEG_CUBICTO :
				gp.curveTo(args[0], args[1], args[2], args[3], args[4], args[5]);
				break;
			case java.awt.geom.PathIterator.SEG_QUADTO :
				gp.quadTo(args[0], args[1], args[2], args[3]);
				break;
			case java.awt.geom.PathIterator.SEG_CLOSE :
				gp.closePath();
				break;
			default :
				throw new java.lang.RuntimeException("JFreeChart - No path exists");
		}
		gp.setWindingRule(stream.readInt());
		hasNext = stream.readBoolean();
	}
	result = gp;
} else {
	result = ((java.awt.Shape)(stream.readObject()));
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 723
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 278
original statement= double x = stream.readDouble()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 725
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 279
original statement= double y = stream.readDouble()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 727
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 280
original statement= double w = stream.readDouble()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 729
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 281
original statement= double h = stream.readDouble()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 730
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 282
original statement= result = new java.awt.geom.Rectangle2D.Double(x , y , w , h)
fixed statement= result = new java.awt.geom.Rectangle2D.Double(x , y , w , h)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 731
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 282
original statement= result = new java.awt.geom.Rectangle2D.Double(x , y , w , h)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 733
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 340
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 734
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 355
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 735
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 355
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 736
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 355
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 737
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 355
original statement= if (stream == null) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Null \'stream\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 738
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 358
original statement= if (shape != null) {
	stream.writeBoolean(false);
	if (shape instanceof java.awt.geom.Line2D) {
		java.awt.geom.Line2D line = ((java.awt.geom.Line2D)(shape));
		stream.writeObject(java.awt.geom.Line2D.class);
		stream.writeDouble(line.getX1());
		stream.writeDouble(line.getY1());
		stream.writeDouble(line.getX2());
		stream.writeDouble(line.getY2());
	} else if (shape instanceof java.awt.geom.Rectangle2D) {
		java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape));
		stream.writeObject(java.awt.geom.Rectangle2D.class);
		stream.writeDouble(rectangle.getX());
		stream.writeDouble(rectangle.getY());
		stream.writeDouble(rectangle.getWidth());
		stream.writeDouble(rectangle.getHeight());
	} else if (shape instanceof java.awt.geom.Ellipse2D) {
		java.awt.geom.Ellipse2D ellipse = ((java.awt.geom.Ellipse2D)(shape));
		stream.writeObject(java.awt.geom.Ellipse2D.class);
		stream.writeDouble(ellipse.getX());
		stream.writeDouble(ellipse.getY());
		stream.writeDouble(ellipse.getWidth());
		stream.writeDouble(ellipse.getHeight());
	} else if (shape instanceof java.awt.geom.Arc2D) {
		java.awt.geom.Arc2D arc = ((java.awt.geom.Arc2D)(shape));
		stream.writeObject(java.awt.geom.Arc2D.class);
		stream.writeDouble(arc.getX());
		stream.writeDouble(arc.getY());
		stream.writeDouble(arc.getWidth());
		stream.writeDouble(arc.getHeight());
		stream.writeDouble(arc.getAngleStart());
		stream.writeDouble(arc.getAngleExtent());
		stream.writeInt(arc.getArcType());
	} else if (shape instanceof java.awt.geom.GeneralPath) {
		stream.writeObject(java.awt.geom.GeneralPath.class);
		java.awt.geom.PathIterator pi = shape.getPathIterator(null);
		float[] args = new float[6];
		stream.writeBoolean(pi.isDone());
		while (!(pi.isDone())) {
			int type = pi.currentSegment(args);
			stream.writeInt(type);
			for (int i = 0 ; i < 6 ; i++) {
				stream.writeFloat(args[i]);
			}
			stream.writeInt(pi.getWindingRule());
			pi.next();
			stream.writeBoolean(pi.isDone());
		}
	} else {
		stream.writeObject(shape.getClass());
		stream.writeObject(shape);
	}
} else {
	stream.writeBoolean(true);
}
fixed statement= if (shape != null) {
	stream.writeBoolean(false);
	if (shape instanceof java.awt.geom.Line2D) {
		java.awt.geom.Line2D line = ((java.awt.geom.Line2D)(shape));
		stream.writeObject(java.awt.geom.Line2D.class);
		stream.writeDouble(line.getX1());
		stream.writeDouble(line.getY1());
		stream.writeDouble(line.getX2());
		stream.writeDouble(line.getY2());
	} else if (shape instanceof java.awt.geom.Rectangle2D) {
		java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape));
		stream.writeObject(java.awt.geom.Rectangle2D.class);
		stream.writeDouble(rectangle.getX());
		stream.writeDouble(rectangle.getY());
		stream.writeDouble(rectangle.getWidth());
		stream.writeDouble(rectangle.getHeight());
	} else if (shape instanceof java.awt.geom.Ellipse2D) {
		java.awt.geom.Ellipse2D ellipse = ((java.awt.geom.Ellipse2D)(shape));
		stream.writeObject(java.awt.geom.Ellipse2D.class);
		stream.writeDouble(ellipse.getX());
		stream.writeDouble(ellipse.getY());
		stream.writeDouble(ellipse.getWidth());
		stream.writeDouble(ellipse.getHeight());
	} else if (shape instanceof java.awt.geom.Arc2D) {
		java.awt.geom.Arc2D arc = ((java.awt.geom.Arc2D)(shape));
		stream.writeObject(java.awt.geom.Arc2D.class);
		stream.writeDouble(arc.getX());
		stream.writeDouble(arc.getY());
		stream.writeDouble(arc.getWidth());
		stream.writeDouble(arc.getHeight());
		stream.writeDouble(arc.getAngleStart());
		stream.writeDouble(arc.getAngleExtent());
		stream.writeInt(arc.getArcType());
	} else if (shape instanceof java.awt.geom.GeneralPath) {
		stream.writeObject(java.awt.geom.GeneralPath.class);
		java.awt.geom.PathIterator pi = shape.getPathIterator(null);
		float[] args = new float[6];
		stream.writeBoolean(pi.isDone());
		while (!(pi.isDone())) {
			int type = pi.currentSegment(args);
			stream.writeInt(type);
			for (int i = 0 ; i < 6 ; i++) {
				stream.writeFloat(args[i]);
			}
			stream.writeInt(pi.getWindingRule());
			pi.next();
			stream.writeBoolean(pi.isDone());
		}
	} else {
		stream.writeObject(shape.getClass());
		stream.writeObject(shape);
	}
} else {
	stream.writeBoolean(true);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 739
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 358
original statement= if (shape != null) {
	stream.writeBoolean(false);
	if (shape instanceof java.awt.geom.Line2D) {
		java.awt.geom.Line2D line = ((java.awt.geom.Line2D)(shape));
		stream.writeObject(java.awt.geom.Line2D.class);
		stream.writeDouble(line.getX1());
		stream.writeDouble(line.getY1());
		stream.writeDouble(line.getX2());
		stream.writeDouble(line.getY2());
	} else if (shape instanceof java.awt.geom.Rectangle2D) {
		java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape));
		stream.writeObject(java.awt.geom.Rectangle2D.class);
		stream.writeDouble(rectangle.getX());
		stream.writeDouble(rectangle.getY());
		stream.writeDouble(rectangle.getWidth());
		stream.writeDouble(rectangle.getHeight());
	} else if (shape instanceof java.awt.geom.Ellipse2D) {
		java.awt.geom.Ellipse2D ellipse = ((java.awt.geom.Ellipse2D)(shape));
		stream.writeObject(java.awt.geom.Ellipse2D.class);
		stream.writeDouble(ellipse.getX());
		stream.writeDouble(ellipse.getY());
		stream.writeDouble(ellipse.getWidth());
		stream.writeDouble(ellipse.getHeight());
	} else if (shape instanceof java.awt.geom.Arc2D) {
		java.awt.geom.Arc2D arc = ((java.awt.geom.Arc2D)(shape));
		stream.writeObject(java.awt.geom.Arc2D.class);
		stream.writeDouble(arc.getX());
		stream.writeDouble(arc.getY());
		stream.writeDouble(arc.getWidth());
		stream.writeDouble(arc.getHeight());
		stream.writeDouble(arc.getAngleStart());
		stream.writeDouble(arc.getAngleExtent());
		stream.writeInt(arc.getArcType());
	} else if (shape instanceof java.awt.geom.GeneralPath) {
		stream.writeObject(java.awt.geom.GeneralPath.class);
		java.awt.geom.PathIterator pi = shape.getPathIterator(null);
		float[] args = new float[6];
		stream.writeBoolean(pi.isDone());
		while (!(pi.isDone())) {
			int type = pi.currentSegment(args);
			stream.writeInt(type);
			for (int i = 0 ; i < 6 ; i++) {
				stream.writeFloat(args[i]);
			}
			stream.writeInt(pi.getWindingRule());
			pi.next();
			stream.writeBoolean(pi.isDone());
		}
	} else {
		stream.writeObject(shape.getClass());
		stream.writeObject(shape);
	}
} else {
	stream.writeBoolean(true);
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 740
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 358
original statement= if (shape != null) {
	stream.writeBoolean(false);
	if (shape instanceof java.awt.geom.Line2D) {
		java.awt.geom.Line2D line = ((java.awt.geom.Line2D)(shape));
		stream.writeObject(java.awt.geom.Line2D.class);
		stream.writeDouble(line.getX1());
		stream.writeDouble(line.getY1());
		stream.writeDouble(line.getX2());
		stream.writeDouble(line.getY2());
	} else if (shape instanceof java.awt.geom.Rectangle2D) {
		java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape));
		stream.writeObject(java.awt.geom.Rectangle2D.class);
		stream.writeDouble(rectangle.getX());
		stream.writeDouble(rectangle.getY());
		stream.writeDouble(rectangle.getWidth());
		stream.writeDouble(rectangle.getHeight());
	} else if (shape instanceof java.awt.geom.Ellipse2D) {
		java.awt.geom.Ellipse2D ellipse = ((java.awt.geom.Ellipse2D)(shape));
		stream.writeObject(java.awt.geom.Ellipse2D.class);
		stream.writeDouble(ellipse.getX());
		stream.writeDouble(ellipse.getY());
		stream.writeDouble(ellipse.getWidth());
		stream.writeDouble(ellipse.getHeight());
	} else if (shape instanceof java.awt.geom.Arc2D) {
		java.awt.geom.Arc2D arc = ((java.awt.geom.Arc2D)(shape));
		stream.writeObject(java.awt.geom.Arc2D.class);
		stream.writeDouble(arc.getX());
		stream.writeDouble(arc.getY());
		stream.writeDouble(arc.getWidth());
		stream.writeDouble(arc.getHeight());
		stream.writeDouble(arc.getAngleStart());
		stream.writeDouble(arc.getAngleExtent());
		stream.writeInt(arc.getArcType());
	} else if (shape instanceof java.awt.geom.GeneralPath) {
		stream.writeObject(java.awt.geom.GeneralPath.class);
		java.awt.geom.PathIterator pi = shape.getPathIterator(null);
		float[] args = new float[6];
		stream.writeBoolean(pi.isDone());
		while (!(pi.isDone())) {
			int type = pi.currentSegment(args);
			stream.writeInt(type);
			for (int i = 0 ; i < 6 ; i++) {
				stream.writeFloat(args[i]);
			}
			stream.writeInt(pi.getWindingRule());
			pi.next();
			stream.writeBoolean(pi.isDone());
		}
	} else {
		stream.writeObject(shape.getClass());
		stream.writeObject(shape);
	}
} else {
	stream.writeBoolean(true);
}
fixed statement= if (true) {
	stream.writeBoolean(false);
	if (shape instanceof java.awt.geom.Line2D) {
		java.awt.geom.Line2D line = ((java.awt.geom.Line2D)(shape));
		stream.writeObject(java.awt.geom.Line2D.class);
		stream.writeDouble(line.getX1());
		stream.writeDouble(line.getY1());
		stream.writeDouble(line.getX2());
		stream.writeDouble(line.getY2());
	} else if (shape instanceof java.awt.geom.Rectangle2D) {
		java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape));
		stream.writeObject(java.awt.geom.Rectangle2D.class);
		stream.writeDouble(rectangle.getX());
		stream.writeDouble(rectangle.getY());
		stream.writeDouble(rectangle.getWidth());
		stream.writeDouble(rectangle.getHeight());
	} else if (shape instanceof java.awt.geom.Ellipse2D) {
		java.awt.geom.Ellipse2D ellipse = ((java.awt.geom.Ellipse2D)(shape));
		stream.writeObject(java.awt.geom.Ellipse2D.class);
		stream.writeDouble(ellipse.getX());
		stream.writeDouble(ellipse.getY());
		stream.writeDouble(ellipse.getWidth());
		stream.writeDouble(ellipse.getHeight());
	} else if (shape instanceof java.awt.geom.Arc2D) {
		java.awt.geom.Arc2D arc = ((java.awt.geom.Arc2D)(shape));
		stream.writeObject(java.awt.geom.Arc2D.class);
		stream.writeDouble(arc.getX());
		stream.writeDouble(arc.getY());
		stream.writeDouble(arc.getWidth());
		stream.writeDouble(arc.getHeight());
		stream.writeDouble(arc.getAngleStart());
		stream.writeDouble(arc.getAngleExtent());
		stream.writeInt(arc.getArcType());
	} else if (shape instanceof java.awt.geom.GeneralPath) {
		stream.writeObject(java.awt.geom.GeneralPath.class);
		java.awt.geom.PathIterator pi = shape.getPathIterator(null);
		float[] args = new float[6];
		stream.writeBoolean(pi.isDone());
		while (!(pi.isDone())) {
			int type = pi.currentSegment(args);
			stream.writeInt(type);
			for (int i = 0 ; i < 6 ; i++) {
				stream.writeFloat(args[i]);
			}
			stream.writeInt(pi.getWindingRule());
			pi.next();
			stream.writeBoolean(pi.isDone());
		}
	} else {
		stream.writeObject(shape.getClass());
		stream.writeObject(shape);
	}
} else {
	stream.writeBoolean(true);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 741
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 358
original statement= if (shape != null) {
	stream.writeBoolean(false);
	if (shape instanceof java.awt.geom.Line2D) {
		java.awt.geom.Line2D line = ((java.awt.geom.Line2D)(shape));
		stream.writeObject(java.awt.geom.Line2D.class);
		stream.writeDouble(line.getX1());
		stream.writeDouble(line.getY1());
		stream.writeDouble(line.getX2());
		stream.writeDouble(line.getY2());
	} else if (shape instanceof java.awt.geom.Rectangle2D) {
		java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape));
		stream.writeObject(java.awt.geom.Rectangle2D.class);
		stream.writeDouble(rectangle.getX());
		stream.writeDouble(rectangle.getY());
		stream.writeDouble(rectangle.getWidth());
		stream.writeDouble(rectangle.getHeight());
	} else if (shape instanceof java.awt.geom.Ellipse2D) {
		java.awt.geom.Ellipse2D ellipse = ((java.awt.geom.Ellipse2D)(shape));
		stream.writeObject(java.awt.geom.Ellipse2D.class);
		stream.writeDouble(ellipse.getX());
		stream.writeDouble(ellipse.getY());
		stream.writeDouble(ellipse.getWidth());
		stream.writeDouble(ellipse.getHeight());
	} else if (shape instanceof java.awt.geom.Arc2D) {
		java.awt.geom.Arc2D arc = ((java.awt.geom.Arc2D)(shape));
		stream.writeObject(java.awt.geom.Arc2D.class);
		stream.writeDouble(arc.getX());
		stream.writeDouble(arc.getY());
		stream.writeDouble(arc.getWidth());
		stream.writeDouble(arc.getHeight());
		stream.writeDouble(arc.getAngleStart());
		stream.writeDouble(arc.getAngleExtent());
		stream.writeInt(arc.getArcType());
	} else if (shape instanceof java.awt.geom.GeneralPath) {
		stream.writeObject(java.awt.geom.GeneralPath.class);
		java.awt.geom.PathIterator pi = shape.getPathIterator(null);
		float[] args = new float[6];
		stream.writeBoolean(pi.isDone());
		while (!(pi.isDone())) {
			int type = pi.currentSegment(args);
			stream.writeInt(type);
			for (int i = 0 ; i < 6 ; i++) {
				stream.writeFloat(args[i]);
			}
			stream.writeInt(pi.getWindingRule());
			pi.next();
			stream.writeBoolean(pi.isDone());
		}
	} else {
		stream.writeObject(shape.getClass());
		stream.writeObject(shape);
	}
} else {
	stream.writeBoolean(true);
}
fixed statement= if (false) {
	stream.writeBoolean(false);
	if (shape instanceof java.awt.geom.Line2D) {
		java.awt.geom.Line2D line = ((java.awt.geom.Line2D)(shape));
		stream.writeObject(java.awt.geom.Line2D.class);
		stream.writeDouble(line.getX1());
		stream.writeDouble(line.getY1());
		stream.writeDouble(line.getX2());
		stream.writeDouble(line.getY2());
	} else if (shape instanceof java.awt.geom.Rectangle2D) {
		java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape));
		stream.writeObject(java.awt.geom.Rectangle2D.class);
		stream.writeDouble(rectangle.getX());
		stream.writeDouble(rectangle.getY());
		stream.writeDouble(rectangle.getWidth());
		stream.writeDouble(rectangle.getHeight());
	} else if (shape instanceof java.awt.geom.Ellipse2D) {
		java.awt.geom.Ellipse2D ellipse = ((java.awt.geom.Ellipse2D)(shape));
		stream.writeObject(java.awt.geom.Ellipse2D.class);
		stream.writeDouble(ellipse.getX());
		stream.writeDouble(ellipse.getY());
		stream.writeDouble(ellipse.getWidth());
		stream.writeDouble(ellipse.getHeight());
	} else if (shape instanceof java.awt.geom.Arc2D) {
		java.awt.geom.Arc2D arc = ((java.awt.geom.Arc2D)(shape));
		stream.writeObject(java.awt.geom.Arc2D.class);
		stream.writeDouble(arc.getX());
		stream.writeDouble(arc.getY());
		stream.writeDouble(arc.getWidth());
		stream.writeDouble(arc.getHeight());
		stream.writeDouble(arc.getAngleStart());
		stream.writeDouble(arc.getAngleExtent());
		stream.writeInt(arc.getArcType());
	} else if (shape instanceof java.awt.geom.GeneralPath) {
		stream.writeObject(java.awt.geom.GeneralPath.class);
		java.awt.geom.PathIterator pi = shape.getPathIterator(null);
		float[] args = new float[6];
		stream.writeBoolean(pi.isDone());
		while (!(pi.isDone())) {
			int type = pi.currentSegment(args);
			stream.writeInt(type);
			for (int i = 0 ; i < 6 ; i++) {
				stream.writeFloat(args[i]);
			}
			stream.writeInt(pi.getWindingRule());
			pi.next();
			stream.writeBoolean(pi.isDone());
		}
	} else {
		stream.writeObject(shape.getClass());
		stream.writeObject(shape);
	}
} else {
	stream.writeBoolean(true);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 742
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 359
original statement= stream.writeBoolean(false)
fixed statement= stream.writeBoolean(false)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 743
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 359
original statement= stream.writeBoolean(false)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 744
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 360
original statement= if (shape instanceof java.awt.geom.Line2D) {
	java.awt.geom.Line2D line = ((java.awt.geom.Line2D)(shape));
	stream.writeObject(java.awt.geom.Line2D.class);
	stream.writeDouble(line.getX1());
	stream.writeDouble(line.getY1());
	stream.writeDouble(line.getX2());
	stream.writeDouble(line.getY2());
} else if (shape instanceof java.awt.geom.Rectangle2D) {
	java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape));
	stream.writeObject(java.awt.geom.Rectangle2D.class);
	stream.writeDouble(rectangle.getX());
	stream.writeDouble(rectangle.getY());
	stream.writeDouble(rectangle.getWidth());
	stream.writeDouble(rectangle.getHeight());
} else if (shape instanceof java.awt.geom.Ellipse2D) {
	java.awt.geom.Ellipse2D ellipse = ((java.awt.geom.Ellipse2D)(shape));
	stream.writeObject(java.awt.geom.Ellipse2D.class);
	stream.writeDouble(ellipse.getX());
	stream.writeDouble(ellipse.getY());
	stream.writeDouble(ellipse.getWidth());
	stream.writeDouble(ellipse.getHeight());
} else if (shape instanceof java.awt.geom.Arc2D) {
	java.awt.geom.Arc2D arc = ((java.awt.geom.Arc2D)(shape));
	stream.writeObject(java.awt.geom.Arc2D.class);
	stream.writeDouble(arc.getX());
	stream.writeDouble(arc.getY());
	stream.writeDouble(arc.getWidth());
	stream.writeDouble(arc.getHeight());
	stream.writeDouble(arc.getAngleStart());
	stream.writeDouble(arc.getAngleExtent());
	stream.writeInt(arc.getArcType());
} else if (shape instanceof java.awt.geom.GeneralPath) {
	stream.writeObject(java.awt.geom.GeneralPath.class);
	java.awt.geom.PathIterator pi = shape.getPathIterator(null);
	float[] args = new float[6];
	stream.writeBoolean(pi.isDone());
	while (!(pi.isDone())) {
		int type = pi.currentSegment(args);
		stream.writeInt(type);
		for (int i = 0 ; i < 6 ; i++) {
			stream.writeFloat(args[i]);
		}
		stream.writeInt(pi.getWindingRule());
		pi.next();
		stream.writeBoolean(pi.isDone());
	}
} else {
	stream.writeObject(shape.getClass());
	stream.writeObject(shape);
}
fixed statement= if (shape instanceof java.awt.geom.Line2D) {
	java.awt.geom.Line2D line = ((java.awt.geom.Line2D)(shape));
	stream.writeObject(java.awt.geom.Line2D.class);
	stream.writeDouble(line.getX1());
	stream.writeDouble(line.getY1());
	stream.writeDouble(line.getX2());
	stream.writeDouble(line.getY2());
} else if (shape instanceof java.awt.geom.Rectangle2D) {
	java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape));
	stream.writeObject(java.awt.geom.Rectangle2D.class);
	stream.writeDouble(rectangle.getX());
	stream.writeDouble(rectangle.getY());
	stream.writeDouble(rectangle.getWidth());
	stream.writeDouble(rectangle.getHeight());
} else if (shape instanceof java.awt.geom.Ellipse2D) {
	java.awt.geom.Ellipse2D ellipse = ((java.awt.geom.Ellipse2D)(shape));
	stream.writeObject(java.awt.geom.Ellipse2D.class);
	stream.writeDouble(ellipse.getX());
	stream.writeDouble(ellipse.getY());
	stream.writeDouble(ellipse.getWidth());
	stream.writeDouble(ellipse.getHeight());
} else if (shape instanceof java.awt.geom.Arc2D) {
	java.awt.geom.Arc2D arc = ((java.awt.geom.Arc2D)(shape));
	stream.writeObject(java.awt.geom.Arc2D.class);
	stream.writeDouble(arc.getX());
	stream.writeDouble(arc.getY());
	stream.writeDouble(arc.getWidth());
	stream.writeDouble(arc.getHeight());
	stream.writeDouble(arc.getAngleStart());
	stream.writeDouble(arc.getAngleExtent());
	stream.writeInt(arc.getArcType());
} else if (shape instanceof java.awt.geom.GeneralPath) {
	stream.writeObject(java.awt.geom.GeneralPath.class);
	java.awt.geom.PathIterator pi = shape.getPathIterator(null);
	float[] args = new float[6];
	stream.writeBoolean(pi.isDone());
	while (!(pi.isDone())) {
		int type = pi.currentSegment(args);
		stream.writeInt(type);
		for (int i = 0 ; i < 6 ; i++) {
			stream.writeFloat(args[i]);
		}
		stream.writeInt(pi.getWindingRule());
		pi.next();
		stream.writeBoolean(pi.isDone());
	}
} else {
	stream.writeObject(shape.getClass());
	stream.writeObject(shape);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 745
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 360
original statement= if (shape instanceof java.awt.geom.Line2D) {
	java.awt.geom.Line2D line = ((java.awt.geom.Line2D)(shape));
	stream.writeObject(java.awt.geom.Line2D.class);
	stream.writeDouble(line.getX1());
	stream.writeDouble(line.getY1());
	stream.writeDouble(line.getX2());
	stream.writeDouble(line.getY2());
} else if (shape instanceof java.awt.geom.Rectangle2D) {
	java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape));
	stream.writeObject(java.awt.geom.Rectangle2D.class);
	stream.writeDouble(rectangle.getX());
	stream.writeDouble(rectangle.getY());
	stream.writeDouble(rectangle.getWidth());
	stream.writeDouble(rectangle.getHeight());
} else if (shape instanceof java.awt.geom.Ellipse2D) {
	java.awt.geom.Ellipse2D ellipse = ((java.awt.geom.Ellipse2D)(shape));
	stream.writeObject(java.awt.geom.Ellipse2D.class);
	stream.writeDouble(ellipse.getX());
	stream.writeDouble(ellipse.getY());
	stream.writeDouble(ellipse.getWidth());
	stream.writeDouble(ellipse.getHeight());
} else if (shape instanceof java.awt.geom.Arc2D) {
	java.awt.geom.Arc2D arc = ((java.awt.geom.Arc2D)(shape));
	stream.writeObject(java.awt.geom.Arc2D.class);
	stream.writeDouble(arc.getX());
	stream.writeDouble(arc.getY());
	stream.writeDouble(arc.getWidth());
	stream.writeDouble(arc.getHeight());
	stream.writeDouble(arc.getAngleStart());
	stream.writeDouble(arc.getAngleExtent());
	stream.writeInt(arc.getArcType());
} else if (shape instanceof java.awt.geom.GeneralPath) {
	stream.writeObject(java.awt.geom.GeneralPath.class);
	java.awt.geom.PathIterator pi = shape.getPathIterator(null);
	float[] args = new float[6];
	stream.writeBoolean(pi.isDone());
	while (!(pi.isDone())) {
		int type = pi.currentSegment(args);
		stream.writeInt(type);
		for (int i = 0 ; i < 6 ; i++) {
			stream.writeFloat(args[i]);
		}
		stream.writeInt(pi.getWindingRule());
		pi.next();
		stream.writeBoolean(pi.isDone());
	}
} else {
	stream.writeObject(shape.getClass());
	stream.writeObject(shape);
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 746
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 360
original statement= if (shape instanceof java.awt.geom.Line2D) {
	java.awt.geom.Line2D line = ((java.awt.geom.Line2D)(shape));
	stream.writeObject(java.awt.geom.Line2D.class);
	stream.writeDouble(line.getX1());
	stream.writeDouble(line.getY1());
	stream.writeDouble(line.getX2());
	stream.writeDouble(line.getY2());
} else if (shape instanceof java.awt.geom.Rectangle2D) {
	java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape));
	stream.writeObject(java.awt.geom.Rectangle2D.class);
	stream.writeDouble(rectangle.getX());
	stream.writeDouble(rectangle.getY());
	stream.writeDouble(rectangle.getWidth());
	stream.writeDouble(rectangle.getHeight());
} else if (shape instanceof java.awt.geom.Ellipse2D) {
	java.awt.geom.Ellipse2D ellipse = ((java.awt.geom.Ellipse2D)(shape));
	stream.writeObject(java.awt.geom.Ellipse2D.class);
	stream.writeDouble(ellipse.getX());
	stream.writeDouble(ellipse.getY());
	stream.writeDouble(ellipse.getWidth());
	stream.writeDouble(ellipse.getHeight());
} else if (shape instanceof java.awt.geom.Arc2D) {
	java.awt.geom.Arc2D arc = ((java.awt.geom.Arc2D)(shape));
	stream.writeObject(java.awt.geom.Arc2D.class);
	stream.writeDouble(arc.getX());
	stream.writeDouble(arc.getY());
	stream.writeDouble(arc.getWidth());
	stream.writeDouble(arc.getHeight());
	stream.writeDouble(arc.getAngleStart());
	stream.writeDouble(arc.getAngleExtent());
	stream.writeInt(arc.getArcType());
} else if (shape instanceof java.awt.geom.GeneralPath) {
	stream.writeObject(java.awt.geom.GeneralPath.class);
	java.awt.geom.PathIterator pi = shape.getPathIterator(null);
	float[] args = new float[6];
	stream.writeBoolean(pi.isDone());
	while (!(pi.isDone())) {
		int type = pi.currentSegment(args);
		stream.writeInt(type);
		for (int i = 0 ; i < 6 ; i++) {
			stream.writeFloat(args[i]);
		}
		stream.writeInt(pi.getWindingRule());
		pi.next();
		stream.writeBoolean(pi.isDone());
	}
} else {
	stream.writeObject(shape.getClass());
	stream.writeObject(shape);
}
fixed statement= if (true) {
	java.awt.geom.Line2D line = ((java.awt.geom.Line2D)(shape));
	stream.writeObject(java.awt.geom.Line2D.class);
	stream.writeDouble(line.getX1());
	stream.writeDouble(line.getY1());
	stream.writeDouble(line.getX2());
	stream.writeDouble(line.getY2());
} else if (shape instanceof java.awt.geom.Rectangle2D) {
	java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape));
	stream.writeObject(java.awt.geom.Rectangle2D.class);
	stream.writeDouble(rectangle.getX());
	stream.writeDouble(rectangle.getY());
	stream.writeDouble(rectangle.getWidth());
	stream.writeDouble(rectangle.getHeight());
} else if (shape instanceof java.awt.geom.Ellipse2D) {
	java.awt.geom.Ellipse2D ellipse = ((java.awt.geom.Ellipse2D)(shape));
	stream.writeObject(java.awt.geom.Ellipse2D.class);
	stream.writeDouble(ellipse.getX());
	stream.writeDouble(ellipse.getY());
	stream.writeDouble(ellipse.getWidth());
	stream.writeDouble(ellipse.getHeight());
} else if (shape instanceof java.awt.geom.Arc2D) {
	java.awt.geom.Arc2D arc = ((java.awt.geom.Arc2D)(shape));
	stream.writeObject(java.awt.geom.Arc2D.class);
	stream.writeDouble(arc.getX());
	stream.writeDouble(arc.getY());
	stream.writeDouble(arc.getWidth());
	stream.writeDouble(arc.getHeight());
	stream.writeDouble(arc.getAngleStart());
	stream.writeDouble(arc.getAngleExtent());
	stream.writeInt(arc.getArcType());
} else if (shape instanceof java.awt.geom.GeneralPath) {
	stream.writeObject(java.awt.geom.GeneralPath.class);
	java.awt.geom.PathIterator pi = shape.getPathIterator(null);
	float[] args = new float[6];
	stream.writeBoolean(pi.isDone());
	while (!(pi.isDone())) {
		int type = pi.currentSegment(args);
		stream.writeInt(type);
		for (int i = 0 ; i < 6 ; i++) {
			stream.writeFloat(args[i]);
		}
		stream.writeInt(pi.getWindingRule());
		pi.next();
		stream.writeBoolean(pi.isDone());
	}
} else {
	stream.writeObject(shape.getClass());
	stream.writeObject(shape);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 747
 
operation: REPLACE
location= org.jfree.chart.util.SerialUtilities
line= 360
original statement= if (shape instanceof java.awt.geom.Line2D) {
	java.awt.geom.Line2D line = ((java.awt.geom.Line2D)(shape));
	stream.writeObject(java.awt.geom.Line2D.class);
	stream.writeDouble(line.getX1());
	stream.writeDouble(line.getY1());
	stream.writeDouble(line.getX2());
	stream.writeDouble(line.getY2());
} else if (shape instanceof java.awt.geom.Rectangle2D) {
	java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape));
	stream.writeObject(java.awt.geom.Rectangle2D.class);
	stream.writeDouble(rectangle.getX());
	stream.writeDouble(rectangle.getY());
	stream.writeDouble(rectangle.getWidth());
	stream.writeDouble(rectangle.getHeight());
} else if (shape instanceof java.awt.geom.Ellipse2D) {
	java.awt.geom.Ellipse2D ellipse = ((java.awt.geom.Ellipse2D)(shape));
	stream.writeObject(java.awt.geom.Ellipse2D.class);
	stream.writeDouble(ellipse.getX());
	stream.writeDouble(ellipse.getY());
	stream.writeDouble(ellipse.getWidth());
	stream.writeDouble(ellipse.getHeight());
} else if (shape instanceof java.awt.geom.Arc2D) {
	java.awt.geom.Arc2D arc = ((java.awt.geom.Arc2D)(shape));
	stream.writeObject(java.awt.geom.Arc2D.class);
	stream.writeDouble(arc.getX());
	stream.writeDouble(arc.getY());
	stream.writeDouble(arc.getWidth());
	stream.writeDouble(arc.getHeight());
	stream.writeDouble(arc.getAngleStart());
	stream.writeDouble(arc.getAngleExtent());
	stream.writeInt(arc.getArcType());
} else if (shape instanceof java.awt.geom.GeneralPath) {
	stream.writeObject(java.awt.geom.GeneralPath.class);
	java.awt.geom.PathIterator pi = shape.getPathIterator(null);
	float[] args = new float[6];
	stream.writeBoolean(pi.isDone());
	while (!(pi.isDone())) {
		int type = pi.currentSegment(args);
		stream.writeInt(type);
		for (int i = 0 ; i < 6 ; i++) {
			stream.writeFloat(args[i]);
		}
		stream.writeInt(pi.getWindingRule());
		pi.next();
		stream.writeBoolean(pi.isDone());
	}
} else {
	stream.writeObject(shape.getClass());
	stream.writeObject(shape);
}
fixed statement= if (false) {
	java.awt.geom.Line2D line = ((java.awt.geom.Line2D)(shape));
	stream.writeObject(java.awt.geom.Line2D.class);
	stream.writeDouble(line.getX1());
	stream.writeDouble(line.getY1());
	stream.writeDouble(line.getX2());
	stream.writeDouble(line.getY2());
} else if (shape instanceof java.awt.geom.Rectangle2D) {
	java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape));
	stream.writeObject(java.awt.geom.Rectangle2D.class);
	stream.writeDouble(rectangle.getX());
	stream.writeDouble(rectangle.getY());
	stream.writeDouble(rectangle.getWidth());
	stream.writeDouble(rectangle.getHeight());
} else if (shape instanceof java.awt.geom.Ellipse2D) {
	java.awt.geom.Ellipse2D ellipse = ((java.awt.geom.Ellipse2D)(shape));
	stream.writeObject(java.awt.geom.Ellipse2D.class);
	stream.writeDouble(ellipse.getX());
	stream.writeDouble(ellipse.getY());
	stream.writeDouble(ellipse.getWidth());
	stream.writeDouble(ellipse.getHeight());
} else if (shape instanceof java.awt.geom.Arc2D) {
	java.awt.geom.Arc2D arc = ((java.awt.geom.Arc2D)(shape));
	stream.writeObject(java.awt.geom.Arc2D.class);
	stream.writeDouble(arc.getX());
	stream.writeDouble(arc.getY());
	stream.writeDouble(arc.getWidth());
	stream.writeDouble(arc.getHeight());
	stream.writeDouble(arc.getAngleStart());
	stream.writeDouble(arc.getAngleExtent());
	stream.writeInt(arc.getArcType());
} else if (shape instanceof java.awt.geom.GeneralPath) {
	stream.writeObject(java.awt.geom.GeneralPath.class);
	java.awt.geom.PathIterator pi = shape.getPathIterator(null);
	float[] args = new float[6];
	stream.writeBoolean(pi.isDone());
	while (!(pi.isDone())) {
		int type = pi.currentSegment(args);
		stream.writeInt(type);
		for (int i = 0 ; i < 6 ; i++) {
			stream.writeFloat(args[i]);
		}
		stream.writeInt(pi.getWindingRule());
		pi.next();
		stream.writeBoolean(pi.isDone());
	}
} else {
	stream.writeObject(shape.getClass());
	stream.writeObject(shape);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 749
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 369
original statement= java.awt.geom.Rectangle2D rectangle = ((java.awt.geom.Rectangle2D)(shape))
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 750
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 370
original statement= stream.writeObject(java.awt.geom.Rectangle2D.class)
fixed statement= stream.writeObject(java.awt.geom.Rectangle2D.class)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 751
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 370
original statement= stream.writeObject(java.awt.geom.Rectangle2D.class)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 752
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 371
original statement= stream.writeDouble(rectangle.getX())
fixed statement= stream.writeDouble(rectangle.getX())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 753
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 371
original statement= stream.writeDouble(rectangle.getX())
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 754
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 372
original statement= stream.writeDouble(rectangle.getY())
fixed statement= stream.writeDouble(rectangle.getY())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 755
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 372
original statement= stream.writeDouble(rectangle.getY())
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 756
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 373
original statement= stream.writeDouble(rectangle.getWidth())
fixed statement= stream.writeDouble(rectangle.getWidth())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 757
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 373
original statement= stream.writeDouble(rectangle.getWidth())
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 758
 
operation: DELETE
location= org.jfree.chart.util.SerialUtilities
line= 374
original statement= stream.writeDouble(rectangle.getHeight())
fixed statement= stream.writeDouble(rectangle.getHeight())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 759
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 374
original statement= stream.writeDouble(rectangle.getHeight())
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 761
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.SerialUtilities
line= 92
original statement= return java.io.Serializable.class.isAssignableFrom(c)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 762
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2435
original statement= notifyListeners(new org.jfree.chart.event.RendererChangeEvent(this))
fixed statement= notifyListeners(new org.jfree.chart.event.RendererChangeEvent(this))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 763
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2435
original statement= notifyListeners(new org.jfree.chart.event.RendererChangeEvent(this))
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 765
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2444
original statement= java.lang.Object[] ls = this.listenerList.getListenerList()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 766
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2445
original statement= for (int i = (ls.length) - 2 ; i >= 0 ; i -= 2) {
	if ((ls[i]) == (org.jfree.chart.event.RendererChangeListener.class)) {
		((org.jfree.chart.event.RendererChangeListener)(ls[(i + 1)])).rendererChanged(event);
	} 
}
fixed statement= for (int i = (ls.length) - 2 ; i >= 0 ; i -= 2) {
	if ((ls[i]) == (org.jfree.chart.event.RendererChangeListener.class)) {
		((org.jfree.chart.event.RendererChangeListener)(ls[(i + 1)])).rendererChanged(event);
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 767
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2445
original statement= for (int i = (ls.length) - 2 ; i >= 0 ; i -= 2) {
	if ((ls[i]) == (org.jfree.chart.event.RendererChangeListener.class)) {
		((org.jfree.chart.event.RendererChangeListener)(ls[(i + 1)])).rendererChanged(event);
	} 
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 768
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2460
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 769
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2460
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 770
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2460
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 771
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2460
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 772
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2463
original statement= if (!(obj instanceof org.jfree.chart.renderer.AbstractRenderer)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.chart.renderer.AbstractRenderer)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 773
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2463
original statement= if (!(obj instanceof org.jfree.chart.renderer.AbstractRenderer)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 774
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2463
original statement= if (!(obj instanceof org.jfree.chart.renderer.AbstractRenderer)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 775
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2463
original statement= if (!(obj instanceof org.jfree.chart.renderer.AbstractRenderer)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 777
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2466
original statement= org.jfree.chart.renderer.AbstractRenderer that = ((org.jfree.chart.renderer.AbstractRenderer)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 778
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2467
original statement= if (!(this.seriesVisibleList.equals(that.seriesVisibleList))) {
	return false;
} 
fixed statement= if (!(this.seriesVisibleList.equals(that.seriesVisibleList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 779
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2467
original statement= if (!(this.seriesVisibleList.equals(that.seriesVisibleList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 780
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2467
original statement= if (!(this.seriesVisibleList.equals(that.seriesVisibleList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 781
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2467
original statement= if (!(this.seriesVisibleList.equals(that.seriesVisibleList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 782
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2470
original statement= if ((this.baseSeriesVisible) != (that.baseSeriesVisible)) {
	return false;
} 
fixed statement= if ((this.baseSeriesVisible) != (that.baseSeriesVisible)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 783
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2470
original statement= if ((this.baseSeriesVisible) != (that.baseSeriesVisible)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 784
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2470
original statement= if ((this.baseSeriesVisible) != (that.baseSeriesVisible)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 785
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2470
original statement= if ((this.baseSeriesVisible) != (that.baseSeriesVisible)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 786
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2473
original statement= if (!(this.seriesVisibleInLegendList.equals(that.seriesVisibleInLegendList))) {
	return false;
} 
fixed statement= if (!(this.seriesVisibleInLegendList.equals(that.seriesVisibleInLegendList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 787
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2473
original statement= if (!(this.seriesVisibleInLegendList.equals(that.seriesVisibleInLegendList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 788
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2473
original statement= if (!(this.seriesVisibleInLegendList.equals(that.seriesVisibleInLegendList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 789
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2473
original statement= if (!(this.seriesVisibleInLegendList.equals(that.seriesVisibleInLegendList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 790
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2477
original statement= if ((this.baseSeriesVisibleInLegend) != (that.baseSeriesVisibleInLegend)) {
	return false;
} 
fixed statement= if ((this.baseSeriesVisibleInLegend) != (that.baseSeriesVisibleInLegend)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 791
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2477
original statement= if ((this.baseSeriesVisibleInLegend) != (that.baseSeriesVisibleInLegend)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 792
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2477
original statement= if ((this.baseSeriesVisibleInLegend) != (that.baseSeriesVisibleInLegend)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 793
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2477
original statement= if ((this.baseSeriesVisibleInLegend) != (that.baseSeriesVisibleInLegend)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 794
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2480
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.paintList, that.paintList))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.paintList, that.paintList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 795
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2480
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.paintList, that.paintList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 796
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2480
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.paintList, that.paintList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 797
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2480
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.paintList, that.paintList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 798
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2483
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.basePaint, that.basePaint))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.basePaint, that.basePaint))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 799
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2483
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.basePaint, that.basePaint))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 800
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2483
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.basePaint, that.basePaint))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 801
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2483
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.basePaint, that.basePaint))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 802
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2486
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.fillPaintList, that.fillPaintList))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.fillPaintList, that.fillPaintList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 803
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2486
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.fillPaintList, that.fillPaintList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 804
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2486
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.fillPaintList, that.fillPaintList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 805
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2486
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.fillPaintList, that.fillPaintList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 806
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2489
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseFillPaint, that.baseFillPaint))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseFillPaint, that.baseFillPaint))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 807
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2489
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseFillPaint, that.baseFillPaint))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 808
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2489
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseFillPaint, that.baseFillPaint))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 809
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2489
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseFillPaint, that.baseFillPaint))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 810
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2492
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.outlinePaintList, that.outlinePaintList))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.outlinePaintList, that.outlinePaintList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 811
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2492
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.outlinePaintList, that.outlinePaintList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 812
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2492
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.outlinePaintList, that.outlinePaintList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 813
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2492
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.outlinePaintList, that.outlinePaintList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 814
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2496
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseOutlinePaint, that.baseOutlinePaint))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseOutlinePaint, that.baseOutlinePaint))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 815
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2496
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseOutlinePaint, that.baseOutlinePaint))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 816
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2496
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseOutlinePaint, that.baseOutlinePaint))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 817
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2496
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseOutlinePaint, that.baseOutlinePaint))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 818
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2500
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.strokeList, that.strokeList))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.strokeList, that.strokeList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 819
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2500
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.strokeList, that.strokeList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 820
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2500
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.strokeList, that.strokeList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 821
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2500
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.strokeList, that.strokeList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 822
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2503
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseStroke, that.baseStroke))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseStroke, that.baseStroke))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 823
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2503
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseStroke, that.baseStroke))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 824
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2503
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseStroke, that.baseStroke))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 825
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2503
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseStroke, that.baseStroke))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 826
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2506
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.outlineStrokeList, that.outlineStrokeList))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.outlineStrokeList, that.outlineStrokeList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 827
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2506
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.outlineStrokeList, that.outlineStrokeList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 828
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2506
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.outlineStrokeList, that.outlineStrokeList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 829
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2506
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.outlineStrokeList, that.outlineStrokeList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 830
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2510
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseOutlineStroke, that.baseOutlineStroke))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseOutlineStroke, that.baseOutlineStroke))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 831
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2510
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseOutlineStroke, that.baseOutlineStroke))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 832
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2510
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseOutlineStroke, that.baseOutlineStroke))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 833
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2510
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseOutlineStroke, that.baseOutlineStroke))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 834
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2515
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.shapeList, that.shapeList))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.shapeList, that.shapeList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 835
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2515
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.shapeList, that.shapeList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 836
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2515
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.shapeList, that.shapeList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 837
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2515
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.shapeList, that.shapeList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 838
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2518
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseShape, that.baseShape))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseShape, that.baseShape))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 839
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2518
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseShape, that.baseShape))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 840
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2518
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseShape, that.baseShape))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 841
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2518
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseShape, that.baseShape))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 842
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2521
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelsVisibleList, that.itemLabelsVisibleList))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelsVisibleList, that.itemLabelsVisibleList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 843
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2521
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelsVisibleList, that.itemLabelsVisibleList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 844
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2521
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelsVisibleList, that.itemLabelsVisibleList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 845
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2521
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelsVisibleList, that.itemLabelsVisibleList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 846
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2525
original statement= if ((this.baseItemLabelsVisible) != (that.baseItemLabelsVisible)) {
	return false;
} 
fixed statement= if ((this.baseItemLabelsVisible) != (that.baseItemLabelsVisible)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 847
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2525
original statement= if ((this.baseItemLabelsVisible) != (that.baseItemLabelsVisible)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 848
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2525
original statement= if ((this.baseItemLabelsVisible) != (that.baseItemLabelsVisible)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 849
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2525
original statement= if ((this.baseItemLabelsVisible) != (that.baseItemLabelsVisible)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 850
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2528
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelFontList, that.itemLabelFontList))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelFontList, that.itemLabelFontList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 851
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2528
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelFontList, that.itemLabelFontList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 852
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2528
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelFontList, that.itemLabelFontList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 853
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2528
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelFontList, that.itemLabelFontList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 854
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2532
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseItemLabelFont, that.baseItemLabelFont))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseItemLabelFont, that.baseItemLabelFont))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 855
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2532
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseItemLabelFont, that.baseItemLabelFont))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 856
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2532
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseItemLabelFont, that.baseItemLabelFont))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 857
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2532
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseItemLabelFont, that.baseItemLabelFont))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 858
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2536
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelPaintList, that.itemLabelPaintList))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelPaintList, that.itemLabelPaintList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 859
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2536
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelPaintList, that.itemLabelPaintList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 860
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2536
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelPaintList, that.itemLabelPaintList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 861
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2536
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.itemLabelPaintList, that.itemLabelPaintList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 862
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2540
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseItemLabelPaint, that.baseItemLabelPaint))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseItemLabelPaint, that.baseItemLabelPaint))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 863
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2540
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseItemLabelPaint, that.baseItemLabelPaint))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 864
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2540
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseItemLabelPaint, that.baseItemLabelPaint))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 865
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2540
original statement= if (!(org.jfree.chart.util.PaintUtilities.equal(this.baseItemLabelPaint, that.baseItemLabelPaint))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 866
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2544
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.positiveItemLabelPositionList, that.positiveItemLabelPositionList))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.positiveItemLabelPositionList, that.positiveItemLabelPositionList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 867
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2544
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.positiveItemLabelPositionList, that.positiveItemLabelPositionList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 868
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2544
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.positiveItemLabelPositionList, that.positiveItemLabelPositionList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 869
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2544
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.positiveItemLabelPositionList, that.positiveItemLabelPositionList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 870
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2548
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.basePositiveItemLabelPosition, that.basePositiveItemLabelPosition))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.basePositiveItemLabelPosition, that.basePositiveItemLabelPosition))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 871
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2548
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.basePositiveItemLabelPosition, that.basePositiveItemLabelPosition))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 872
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2548
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.basePositiveItemLabelPosition, that.basePositiveItemLabelPosition))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 873
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2548
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.basePositiveItemLabelPosition, that.basePositiveItemLabelPosition))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 874
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2552
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.negativeItemLabelPositionList, that.negativeItemLabelPositionList))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.negativeItemLabelPositionList, that.negativeItemLabelPositionList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 875
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2552
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.negativeItemLabelPositionList, that.negativeItemLabelPositionList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 876
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2552
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.negativeItemLabelPositionList, that.negativeItemLabelPositionList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 877
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2552
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.negativeItemLabelPositionList, that.negativeItemLabelPositionList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 878
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2556
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseNegativeItemLabelPosition, that.baseNegativeItemLabelPosition))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseNegativeItemLabelPosition, that.baseNegativeItemLabelPosition))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 879
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2556
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseNegativeItemLabelPosition, that.baseNegativeItemLabelPosition))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 880
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2556
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseNegativeItemLabelPosition, that.baseNegativeItemLabelPosition))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 881
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2556
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.baseNegativeItemLabelPosition, that.baseNegativeItemLabelPosition))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 882
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2560
original statement= if ((this.itemLabelAnchorOffset) != (that.itemLabelAnchorOffset)) {
	return false;
} 
fixed statement= if ((this.itemLabelAnchorOffset) != (that.itemLabelAnchorOffset)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 883
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2560
original statement= if ((this.itemLabelAnchorOffset) != (that.itemLabelAnchorOffset)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 884
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2560
original statement= if ((this.itemLabelAnchorOffset) != (that.itemLabelAnchorOffset)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 885
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2560
original statement= if ((this.itemLabelAnchorOffset) != (that.itemLabelAnchorOffset)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 886
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2563
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.createEntitiesList, that.createEntitiesList))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.createEntitiesList, that.createEntitiesList))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 887
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2563
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.createEntitiesList, that.createEntitiesList))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 888
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2563
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.createEntitiesList, that.createEntitiesList))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 889
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2563
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.createEntitiesList, that.createEntitiesList))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 890
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2567
original statement= if ((this.baseCreateEntities) != (that.baseCreateEntities)) {
	return false;
} 
fixed statement= if ((this.baseCreateEntities) != (that.baseCreateEntities)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 891
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2567
original statement= if ((this.baseCreateEntities) != (that.baseCreateEntities)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 892
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2567
original statement= if ((this.baseCreateEntities) != (that.baseCreateEntities)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 893
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2567
original statement= if ((this.baseCreateEntities) != (that.baseCreateEntities)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 895
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2570
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 896
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2721
original statement= stream.defaultWriteObject()
fixed statement= stream.defaultWriteObject()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 897
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2721
original statement= stream.defaultWriteObject()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 898
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2722
original statement= org.jfree.chart.util.SerialUtilities.writePaint(this.basePaint, stream)
fixed statement= org.jfree.chart.util.SerialUtilities.writePaint(this.basePaint, stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 899
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2722
original statement= org.jfree.chart.util.SerialUtilities.writePaint(this.basePaint, stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 900
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2723
original statement= org.jfree.chart.util.SerialUtilities.writePaint(this.baseFillPaint, stream)
fixed statement= org.jfree.chart.util.SerialUtilities.writePaint(this.baseFillPaint, stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 901
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2723
original statement= org.jfree.chart.util.SerialUtilities.writePaint(this.baseFillPaint, stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 902
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2724
original statement= org.jfree.chart.util.SerialUtilities.writePaint(this.baseOutlinePaint, stream)
fixed statement= org.jfree.chart.util.SerialUtilities.writePaint(this.baseOutlinePaint, stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 903
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2724
original statement= org.jfree.chart.util.SerialUtilities.writePaint(this.baseOutlinePaint, stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 904
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2725
original statement= org.jfree.chart.util.SerialUtilities.writeStroke(this.baseStroke, stream)
fixed statement= org.jfree.chart.util.SerialUtilities.writeStroke(this.baseStroke, stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 905
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2725
original statement= org.jfree.chart.util.SerialUtilities.writeStroke(this.baseStroke, stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 906
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2726
original statement= org.jfree.chart.util.SerialUtilities.writeStroke(this.baseOutlineStroke, stream)
fixed statement= org.jfree.chart.util.SerialUtilities.writeStroke(this.baseOutlineStroke, stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 907
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2726
original statement= org.jfree.chart.util.SerialUtilities.writeStroke(this.baseOutlineStroke, stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 908
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2727
original statement= org.jfree.chart.util.SerialUtilities.writeShape(this.baseShape, stream)
fixed statement= org.jfree.chart.util.SerialUtilities.writeShape(this.baseShape, stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 909
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2727
original statement= org.jfree.chart.util.SerialUtilities.writeShape(this.baseShape, stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 910
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2728
original statement= org.jfree.chart.util.SerialUtilities.writePaint(this.baseItemLabelPaint, stream)
fixed statement= org.jfree.chart.util.SerialUtilities.writePaint(this.baseItemLabelPaint, stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 911
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2728
original statement= org.jfree.chart.util.SerialUtilities.writePaint(this.baseItemLabelPaint, stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 912
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2743
original statement= stream.defaultReadObject()
fixed statement= stream.defaultReadObject()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 913
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2743
original statement= stream.defaultReadObject()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 914
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2744
original statement= this.basePaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
fixed statement= this.basePaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 915
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2744
original statement= this.basePaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 916
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2745
original statement= this.baseFillPaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
fixed statement= this.baseFillPaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 917
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2745
original statement= this.baseFillPaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 918
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2746
original statement= this.baseOutlinePaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
fixed statement= this.baseOutlinePaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 919
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2746
original statement= this.baseOutlinePaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 920
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2747
original statement= this.baseStroke = org.jfree.chart.util.SerialUtilities.readStroke(stream)
fixed statement= this.baseStroke = org.jfree.chart.util.SerialUtilities.readStroke(stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 921
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2747
original statement= this.baseStroke = org.jfree.chart.util.SerialUtilities.readStroke(stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 922
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2748
original statement= this.baseOutlineStroke = org.jfree.chart.util.SerialUtilities.readStroke(stream)
fixed statement= this.baseOutlineStroke = org.jfree.chart.util.SerialUtilities.readStroke(stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 923
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2748
original statement= this.baseOutlineStroke = org.jfree.chart.util.SerialUtilities.readStroke(stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 924
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2749
original statement= this.baseShape = org.jfree.chart.util.SerialUtilities.readShape(stream)
fixed statement= this.baseShape = org.jfree.chart.util.SerialUtilities.readShape(stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 925
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2749
original statement= this.baseShape = org.jfree.chart.util.SerialUtilities.readShape(stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 926
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2750
original statement= this.baseItemLabelPaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
fixed statement= this.baseItemLabelPaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 927
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2750
original statement= this.baseItemLabelPaint = org.jfree.chart.util.SerialUtilities.readPaint(stream)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 928
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2754
original statement= this.listenerList = new javax.swing.event.EventListenerList()
fixed statement= this.listenerList = new javax.swing.event.EventListenerList()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 929
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2754
original statement= this.listenerList = new javax.swing.event.EventListenerList()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 930
 
operation: DELETE
location= org.jfree.chart.util.PaintList
line= 92
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (obj == null) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 931
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 92
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 932
 
operation: REPLACE
location= org.jfree.chart.util.PaintList
line= 92
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 933
 
operation: REPLACE
location= org.jfree.chart.util.PaintList
line= 92
original statement= if (obj == null) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 934
 
operation: DELETE
location= org.jfree.chart.util.PaintList
line= 95
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 935
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 95
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 936
 
operation: REPLACE
location= org.jfree.chart.util.PaintList
line= 95
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 937
 
operation: REPLACE
location= org.jfree.chart.util.PaintList
line= 95
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 938
 
operation: DELETE
location= org.jfree.chart.util.PaintList
line= 98
original statement= if (obj instanceof org.jfree.chart.util.PaintList) {
	org.jfree.chart.util.PaintList that = ((org.jfree.chart.util.PaintList)(obj));
	int listSize = size();
	for (int i = 0 ; i < listSize ; i++) {
		if (!(org.jfree.chart.util.PaintUtilities.equal(getPaint(i), that.getPaint(i)))) {
			return false;
		} 
	}
} 
fixed statement= if (obj instanceof org.jfree.chart.util.PaintList) {
	org.jfree.chart.util.PaintList that = ((org.jfree.chart.util.PaintList)(obj));
	int listSize = size();
	for (int i = 0 ; i < listSize ; i++) {
		if (!(org.jfree.chart.util.PaintUtilities.equal(getPaint(i), that.getPaint(i)))) {
			return false;
		} 
	}
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 939
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 98
original statement= if (obj instanceof org.jfree.chart.util.PaintList) {
	org.jfree.chart.util.PaintList that = ((org.jfree.chart.util.PaintList)(obj));
	int listSize = size();
	for (int i = 0 ; i < listSize ; i++) {
		if (!(org.jfree.chart.util.PaintUtilities.equal(getPaint(i), that.getPaint(i)))) {
			return false;
		} 
	}
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 940
 
operation: REPLACE
location= org.jfree.chart.util.PaintList
line= 98
original statement= if (obj instanceof org.jfree.chart.util.PaintList) {
	org.jfree.chart.util.PaintList that = ((org.jfree.chart.util.PaintList)(obj));
	int listSize = size();
	for (int i = 0 ; i < listSize ; i++) {
		if (!(org.jfree.chart.util.PaintUtilities.equal(getPaint(i), that.getPaint(i)))) {
			return false;
		} 
	}
} 
fixed statement= if (true) {
	org.jfree.chart.util.PaintList that = ((org.jfree.chart.util.PaintList)(obj));
	int listSize = size();
	for (int i = 0 ; i < listSize ; i++) {
		if (!(org.jfree.chart.util.PaintUtilities.equal(getPaint(i), that.getPaint(i)))) {
			return false;
		} 
	}
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 941
 
operation: REPLACE
location= org.jfree.chart.util.PaintList
line= 98
original statement= if (obj instanceof org.jfree.chart.util.PaintList) {
	org.jfree.chart.util.PaintList that = ((org.jfree.chart.util.PaintList)(obj));
	int listSize = size();
	for (int i = 0 ; i < listSize ; i++) {
		if (!(org.jfree.chart.util.PaintUtilities.equal(getPaint(i), that.getPaint(i)))) {
			return false;
		} 
	}
} 
fixed statement= if (false) {
	org.jfree.chart.util.PaintList that = ((org.jfree.chart.util.PaintList)(obj));
	int listSize = size();
	for (int i = 0 ; i < listSize ; i++) {
		if (!(org.jfree.chart.util.PaintUtilities.equal(getPaint(i), that.getPaint(i)))) {
			return false;
		} 
	}
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 943
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 99
original statement= org.jfree.chart.util.PaintList that = ((org.jfree.chart.util.PaintList)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 945
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 100
original statement= int listSize = size()
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 946
 
operation: DELETE
location= org.jfree.chart.util.PaintList
line= 101
original statement= for (int i = 0 ; i < listSize ; i++) {
	if (!(org.jfree.chart.util.PaintUtilities.equal(getPaint(i), that.getPaint(i)))) {
		return false;
	} 
}
fixed statement= for (int i = 0 ; i < listSize ; i++) {
	if (!(org.jfree.chart.util.PaintUtilities.equal(getPaint(i), that.getPaint(i)))) {
		return false;
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 947
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 101
original statement= for (int i = 0 ; i < listSize ; i++) {
	if (!(org.jfree.chart.util.PaintUtilities.equal(getPaint(i), that.getPaint(i)))) {
		return false;
	} 
}
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 949
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 107
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 950
 
operation: DELETE
location= org.jfree.chart.util.PaintList
line= 128
original statement= stream.defaultWriteObject()
fixed statement= stream.defaultWriteObject()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 951
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 128
original statement= stream.defaultWriteObject()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 953
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 129
original statement= int count = size()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 954
 
operation: DELETE
location= org.jfree.chart.util.PaintList
line= 130
original statement= stream.writeInt(count)
fixed statement= stream.writeInt(count)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 955
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 130
original statement= stream.writeInt(count)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 956
 
operation: DELETE
location= org.jfree.chart.util.PaintList
line= 131
original statement= for (int i = 0 ; i < count ; i++) {
	java.awt.Paint paint = getPaint(i);
	if (paint != null) {
		stream.writeInt(i);
		org.jfree.chart.util.SerialUtilities.writePaint(paint, stream);
	} else {
		stream.writeInt(-1);
	}
}
fixed statement= for (int i = 0 ; i < count ; i++) {
	java.awt.Paint paint = getPaint(i);
	if (paint != null) {
		stream.writeInt(i);
		org.jfree.chart.util.SerialUtilities.writePaint(paint, stream);
	} else {
		stream.writeInt(-1);
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 957
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 131
original statement= for (int i = 0 ; i < count ; i++) {
	java.awt.Paint paint = getPaint(i);
	if (paint != null) {
		stream.writeInt(i);
		org.jfree.chart.util.SerialUtilities.writePaint(paint, stream);
	} else {
		stream.writeInt(-1);
	}
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 958
 
operation: DELETE
location= org.jfree.chart.util.PaintList
line= 155
original statement= stream.defaultReadObject()
fixed statement= stream.defaultReadObject()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 959
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 155
original statement= stream.defaultReadObject()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 961
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 156
original statement= int count = stream.readInt()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 962
 
operation: DELETE
location= org.jfree.chart.util.PaintList
line= 157
original statement= for (int i = 0 ; i < count ; i++) {
	final int index = stream.readInt();
	if (index != (-1)) {
		setPaint(index, org.jfree.chart.util.SerialUtilities.readPaint(stream));
	} 
}
fixed statement= for (int i = 0 ; i < count ; i++) {
	final int index = stream.readInt();
	if (index != (-1)) {
		setPaint(index, org.jfree.chart.util.SerialUtilities.readPaint(stream));
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 963
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 157
original statement= for (int i = 0 ; i < count ; i++) {
	final int index = stream.readInt();
	if (index != (-1)) {
		setPaint(index, org.jfree.chart.util.SerialUtilities.readPaint(stream));
	} 
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 965
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.OHLCDataItem
line= 127
original statement= return this.high
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 967
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.OHLCDataItem
line= 136
original statement= return this.low
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 968
 
operation: DELETE
location= org.jfree.data.general.DatasetUtilities
line= 775
original statement= if (dataset == null) {
	throw new java.lang.IllegalArgumentException("Null \'dataset\' argument.");
} 
fixed statement= if (dataset == null) {
	throw new java.lang.IllegalArgumentException("Null \'dataset\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 969
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 775
original statement= if (dataset == null) {
	throw new java.lang.IllegalArgumentException("Null \'dataset\' argument.");
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 970
 
operation: REPLACE
location= org.jfree.data.general.DatasetUtilities
line= 775
original statement= if (dataset == null) {
	throw new java.lang.IllegalArgumentException("Null \'dataset\' argument.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Null \'dataset\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 971
 
operation: REPLACE
location= org.jfree.data.general.DatasetUtilities
line= 775
original statement= if (dataset == null) {
	throw new java.lang.IllegalArgumentException("Null \'dataset\' argument.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Null \'dataset\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 973
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 778
original statement= org.jfree.data.Range result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 974
 
operation: DELETE
location= org.jfree.data.general.DatasetUtilities
line= 779
original statement= if (dataset instanceof org.jfree.data.RangeInfo) {
	org.jfree.data.RangeInfo info = ((org.jfree.data.RangeInfo)(dataset));
	result = info.getRangeBounds(includeInterval);
} else {
	result = org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset, includeInterval);
}
fixed statement= if (dataset instanceof org.jfree.data.RangeInfo) {
	org.jfree.data.RangeInfo info = ((org.jfree.data.RangeInfo)(dataset));
	result = info.getRangeBounds(includeInterval);
} else {
	result = org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset, includeInterval);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 975
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 779
original statement= if (dataset instanceof org.jfree.data.RangeInfo) {
	org.jfree.data.RangeInfo info = ((org.jfree.data.RangeInfo)(dataset));
	result = info.getRangeBounds(includeInterval);
} else {
	result = org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset, includeInterval);
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 976
 
operation: REPLACE
location= org.jfree.data.general.DatasetUtilities
line= 779
original statement= if (dataset instanceof org.jfree.data.RangeInfo) {
	org.jfree.data.RangeInfo info = ((org.jfree.data.RangeInfo)(dataset));
	result = info.getRangeBounds(includeInterval);
} else {
	result = org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset, includeInterval);
}
fixed statement= if (true) {
	org.jfree.data.RangeInfo info = ((org.jfree.data.RangeInfo)(dataset));
	result = info.getRangeBounds(includeInterval);
} else {
	result = org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset, includeInterval);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 977
 
operation: REPLACE
location= org.jfree.data.general.DatasetUtilities
line= 779
original statement= if (dataset instanceof org.jfree.data.RangeInfo) {
	org.jfree.data.RangeInfo info = ((org.jfree.data.RangeInfo)(dataset));
	result = info.getRangeBounds(includeInterval);
} else {
	result = org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset, includeInterval);
}
fixed statement= if (false) {
	org.jfree.data.RangeInfo info = ((org.jfree.data.RangeInfo)(dataset));
	result = info.getRangeBounds(includeInterval);
} else {
	result = org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset, includeInterval);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 978
 
operation: DELETE
location= org.jfree.data.general.DatasetUtilities
line= 784
original statement= result = org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset, includeInterval)
fixed statement= result = org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset, includeInterval)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 979
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 784
original statement= result = org.jfree.data.general.DatasetUtilities.iterateRangeBounds(dataset, includeInterval)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 981
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 786
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 983
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 889
original statement= double minimum = java.lang.Double.POSITIVE_INFINITY
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 985
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 890
original statement= double maximum = java.lang.Double.NEGATIVE_INFINITY
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 987
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 891
original statement= int seriesCount = dataset.getSeriesCount()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 988
 
operation: DELETE
location= org.jfree.data.general.DatasetUtilities
line= 894
original statement= if (includeInterval && (dataset instanceof org.jfree.data.xy.IntervalXYDataset)) {
	org.jfree.data.xy.IntervalXYDataset ixyd = ((org.jfree.data.xy.IntervalXYDataset)(dataset));
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double lvalue = ixyd.getStartYValue(series, item);
			double uvalue = ixyd.getEndYValue(series, item);
			if (!(java.lang.Double.isNaN(lvalue))) {
				minimum = java.lang.Math.min(minimum, lvalue);
			} 
			if (!(java.lang.Double.isNaN(uvalue))) {
				maximum = java.lang.Math.max(maximum, uvalue);
			} 
		}
	}
} else if (includeInterval && (dataset instanceof org.jfree.data.xy.OHLCDataset)) {
	org.jfree.data.xy.OHLCDataset ohlc = ((org.jfree.data.xy.OHLCDataset)(dataset));
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double lvalue = ohlc.getLowValue(series, item);
			double uvalue = ohlc.getHighValue(series, item);
			if (!(java.lang.Double.isNaN(lvalue))) {
				minimum = java.lang.Math.min(minimum, lvalue);
			} 
			if (!(java.lang.Double.isNaN(uvalue))) {
				maximum = java.lang.Math.max(maximum, uvalue);
			} 
		}
	}
} else {
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double value = dataset.getYValue(series, item);
			if (!(java.lang.Double.isNaN(value))) {
				minimum = java.lang.Math.min(minimum, value);
				maximum = java.lang.Math.max(maximum, value);
			} 
		}
	}
}
fixed statement= if (includeInterval && (dataset instanceof org.jfree.data.xy.IntervalXYDataset)) {
	org.jfree.data.xy.IntervalXYDataset ixyd = ((org.jfree.data.xy.IntervalXYDataset)(dataset));
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double lvalue = ixyd.getStartYValue(series, item);
			double uvalue = ixyd.getEndYValue(series, item);
			if (!(java.lang.Double.isNaN(lvalue))) {
				minimum = java.lang.Math.min(minimum, lvalue);
			} 
			if (!(java.lang.Double.isNaN(uvalue))) {
				maximum = java.lang.Math.max(maximum, uvalue);
			} 
		}
	}
} else if (includeInterval && (dataset instanceof org.jfree.data.xy.OHLCDataset)) {
	org.jfree.data.xy.OHLCDataset ohlc = ((org.jfree.data.xy.OHLCDataset)(dataset));
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double lvalue = ohlc.getLowValue(series, item);
			double uvalue = ohlc.getHighValue(series, item);
			if (!(java.lang.Double.isNaN(lvalue))) {
				minimum = java.lang.Math.min(minimum, lvalue);
			} 
			if (!(java.lang.Double.isNaN(uvalue))) {
				maximum = java.lang.Math.max(maximum, uvalue);
			} 
		}
	}
} else {
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double value = dataset.getYValue(series, item);
			if (!(java.lang.Double.isNaN(value))) {
				minimum = java.lang.Math.min(minimum, value);
				maximum = java.lang.Math.max(maximum, value);
			} 
		}
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 989
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 894
original statement= if (includeInterval && (dataset instanceof org.jfree.data.xy.IntervalXYDataset)) {
	org.jfree.data.xy.IntervalXYDataset ixyd = ((org.jfree.data.xy.IntervalXYDataset)(dataset));
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double lvalue = ixyd.getStartYValue(series, item);
			double uvalue = ixyd.getEndYValue(series, item);
			if (!(java.lang.Double.isNaN(lvalue))) {
				minimum = java.lang.Math.min(minimum, lvalue);
			} 
			if (!(java.lang.Double.isNaN(uvalue))) {
				maximum = java.lang.Math.max(maximum, uvalue);
			} 
		}
	}
} else if (includeInterval && (dataset instanceof org.jfree.data.xy.OHLCDataset)) {
	org.jfree.data.xy.OHLCDataset ohlc = ((org.jfree.data.xy.OHLCDataset)(dataset));
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double lvalue = ohlc.getLowValue(series, item);
			double uvalue = ohlc.getHighValue(series, item);
			if (!(java.lang.Double.isNaN(lvalue))) {
				minimum = java.lang.Math.min(minimum, lvalue);
			} 
			if (!(java.lang.Double.isNaN(uvalue))) {
				maximum = java.lang.Math.max(maximum, uvalue);
			} 
		}
	}
} else {
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double value = dataset.getYValue(series, item);
			if (!(java.lang.Double.isNaN(value))) {
				minimum = java.lang.Math.min(minimum, value);
				maximum = java.lang.Math.max(maximum, value);
			} 
		}
	}
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 990
 
operation: REPLACE
location= org.jfree.data.general.DatasetUtilities
line= 894
original statement= if (includeInterval && (dataset instanceof org.jfree.data.xy.IntervalXYDataset)) {
	org.jfree.data.xy.IntervalXYDataset ixyd = ((org.jfree.data.xy.IntervalXYDataset)(dataset));
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double lvalue = ixyd.getStartYValue(series, item);
			double uvalue = ixyd.getEndYValue(series, item);
			if (!(java.lang.Double.isNaN(lvalue))) {
				minimum = java.lang.Math.min(minimum, lvalue);
			} 
			if (!(java.lang.Double.isNaN(uvalue))) {
				maximum = java.lang.Math.max(maximum, uvalue);
			} 
		}
	}
} else if (includeInterval && (dataset instanceof org.jfree.data.xy.OHLCDataset)) {
	org.jfree.data.xy.OHLCDataset ohlc = ((org.jfree.data.xy.OHLCDataset)(dataset));
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double lvalue = ohlc.getLowValue(series, item);
			double uvalue = ohlc.getHighValue(series, item);
			if (!(java.lang.Double.isNaN(lvalue))) {
				minimum = java.lang.Math.min(minimum, lvalue);
			} 
			if (!(java.lang.Double.isNaN(uvalue))) {
				maximum = java.lang.Math.max(maximum, uvalue);
			} 
		}
	}
} else {
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double value = dataset.getYValue(series, item);
			if (!(java.lang.Double.isNaN(value))) {
				minimum = java.lang.Math.min(minimum, value);
				maximum = java.lang.Math.max(maximum, value);
			} 
		}
	}
}
fixed statement= if (true) {
	org.jfree.data.xy.IntervalXYDataset ixyd = ((org.jfree.data.xy.IntervalXYDataset)(dataset));
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double lvalue = ixyd.getStartYValue(series, item);
			double uvalue = ixyd.getEndYValue(series, item);
			if (!(java.lang.Double.isNaN(lvalue))) {
				minimum = java.lang.Math.min(minimum, lvalue);
			} 
			if (!(java.lang.Double.isNaN(uvalue))) {
				maximum = java.lang.Math.max(maximum, uvalue);
			} 
		}
	}
} else if (includeInterval && (dataset instanceof org.jfree.data.xy.OHLCDataset)) {
	org.jfree.data.xy.OHLCDataset ohlc = ((org.jfree.data.xy.OHLCDataset)(dataset));
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double lvalue = ohlc.getLowValue(series, item);
			double uvalue = ohlc.getHighValue(series, item);
			if (!(java.lang.Double.isNaN(lvalue))) {
				minimum = java.lang.Math.min(minimum, lvalue);
			} 
			if (!(java.lang.Double.isNaN(uvalue))) {
				maximum = java.lang.Math.max(maximum, uvalue);
			} 
		}
	}
} else {
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double value = dataset.getYValue(series, item);
			if (!(java.lang.Double.isNaN(value))) {
				minimum = java.lang.Math.min(minimum, value);
				maximum = java.lang.Math.max(maximum, value);
			} 
		}
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 991
 
operation: REPLACE
location= org.jfree.data.general.DatasetUtilities
line= 894
original statement= if (includeInterval && (dataset instanceof org.jfree.data.xy.IntervalXYDataset)) {
	org.jfree.data.xy.IntervalXYDataset ixyd = ((org.jfree.data.xy.IntervalXYDataset)(dataset));
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double lvalue = ixyd.getStartYValue(series, item);
			double uvalue = ixyd.getEndYValue(series, item);
			if (!(java.lang.Double.isNaN(lvalue))) {
				minimum = java.lang.Math.min(minimum, lvalue);
			} 
			if (!(java.lang.Double.isNaN(uvalue))) {
				maximum = java.lang.Math.max(maximum, uvalue);
			} 
		}
	}
} else if (includeInterval && (dataset instanceof org.jfree.data.xy.OHLCDataset)) {
	org.jfree.data.xy.OHLCDataset ohlc = ((org.jfree.data.xy.OHLCDataset)(dataset));
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double lvalue = ohlc.getLowValue(series, item);
			double uvalue = ohlc.getHighValue(series, item);
			if (!(java.lang.Double.isNaN(lvalue))) {
				minimum = java.lang.Math.min(minimum, lvalue);
			} 
			if (!(java.lang.Double.isNaN(uvalue))) {
				maximum = java.lang.Math.max(maximum, uvalue);
			} 
		}
	}
} else {
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double value = dataset.getYValue(series, item);
			if (!(java.lang.Double.isNaN(value))) {
				minimum = java.lang.Math.min(minimum, value);
				maximum = java.lang.Math.max(maximum, value);
			} 
		}
	}
}
fixed statement= if (false) {
	org.jfree.data.xy.IntervalXYDataset ixyd = ((org.jfree.data.xy.IntervalXYDataset)(dataset));
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double lvalue = ixyd.getStartYValue(series, item);
			double uvalue = ixyd.getEndYValue(series, item);
			if (!(java.lang.Double.isNaN(lvalue))) {
				minimum = java.lang.Math.min(minimum, lvalue);
			} 
			if (!(java.lang.Double.isNaN(uvalue))) {
				maximum = java.lang.Math.max(maximum, uvalue);
			} 
		}
	}
} else if (includeInterval && (dataset instanceof org.jfree.data.xy.OHLCDataset)) {
	org.jfree.data.xy.OHLCDataset ohlc = ((org.jfree.data.xy.OHLCDataset)(dataset));
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double lvalue = ohlc.getLowValue(series, item);
			double uvalue = ohlc.getHighValue(series, item);
			if (!(java.lang.Double.isNaN(lvalue))) {
				minimum = java.lang.Math.min(minimum, lvalue);
			} 
			if (!(java.lang.Double.isNaN(uvalue))) {
				maximum = java.lang.Math.max(maximum, uvalue);
			} 
		}
	}
} else {
	for (int series = 0 ; series < seriesCount ; series++) {
		int itemCount = dataset.getItemCount(series);
		for (int item = 0 ; item < itemCount ; item++) {
			double value = dataset.getYValue(series, item);
			if (!(java.lang.Double.isNaN(value))) {
				minimum = java.lang.Math.min(minimum, value);
				maximum = java.lang.Math.max(maximum, value);
			} 
		}
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 993
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 913
original statement= org.jfree.data.xy.OHLCDataset ohlc = ((org.jfree.data.xy.OHLCDataset)(dataset))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 994
 
operation: DELETE
location= org.jfree.data.general.DatasetUtilities
line= 914
original statement= for (int series = 0 ; series < seriesCount ; series++) {
	int itemCount = dataset.getItemCount(series);
	for (int item = 0 ; item < itemCount ; item++) {
		double lvalue = ohlc.getLowValue(series, item);
		double uvalue = ohlc.getHighValue(series, item);
		if (!(java.lang.Double.isNaN(lvalue))) {
			minimum = java.lang.Math.min(minimum, lvalue);
		} 
		if (!(java.lang.Double.isNaN(uvalue))) {
			maximum = java.lang.Math.max(maximum, uvalue);
		} 
	}
}
fixed statement= for (int series = 0 ; series < seriesCount ; series++) {
	int itemCount = dataset.getItemCount(series);
	for (int item = 0 ; item < itemCount ; item++) {
		double lvalue = ohlc.getLowValue(series, item);
		double uvalue = ohlc.getHighValue(series, item);
		if (!(java.lang.Double.isNaN(lvalue))) {
			minimum = java.lang.Math.min(minimum, lvalue);
		} 
		if (!(java.lang.Double.isNaN(uvalue))) {
			maximum = java.lang.Math.max(maximum, uvalue);
		} 
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 995
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 914
original statement= for (int series = 0 ; series < seriesCount ; series++) {
	int itemCount = dataset.getItemCount(series);
	for (int item = 0 ; item < itemCount ; item++) {
		double lvalue = ohlc.getLowValue(series, item);
		double uvalue = ohlc.getHighValue(series, item);
		if (!(java.lang.Double.isNaN(lvalue))) {
			minimum = java.lang.Math.min(minimum, lvalue);
		} 
		if (!(java.lang.Double.isNaN(uvalue))) {
			maximum = java.lang.Math.max(maximum, uvalue);
		} 
	}
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 997
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 915
original statement= int itemCount = dataset.getItemCount(series)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 998
 
operation: DELETE
location= org.jfree.data.general.DatasetUtilities
line= 916
original statement= for (int item = 0 ; item < itemCount ; item++) {
	double lvalue = ohlc.getLowValue(series, item);
	double uvalue = ohlc.getHighValue(series, item);
	if (!(java.lang.Double.isNaN(lvalue))) {
		minimum = java.lang.Math.min(minimum, lvalue);
	} 
	if (!(java.lang.Double.isNaN(uvalue))) {
		maximum = java.lang.Math.max(maximum, uvalue);
	} 
}
fixed statement= for (int item = 0 ; item < itemCount ; item++) {
	double lvalue = ohlc.getLowValue(series, item);
	double uvalue = ohlc.getHighValue(series, item);
	if (!(java.lang.Double.isNaN(lvalue))) {
		minimum = java.lang.Math.min(minimum, lvalue);
	} 
	if (!(java.lang.Double.isNaN(uvalue))) {
		maximum = java.lang.Math.max(maximum, uvalue);
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 999
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 916
original statement= for (int item = 0 ; item < itemCount ; item++) {
	double lvalue = ohlc.getLowValue(series, item);
	double uvalue = ohlc.getHighValue(series, item);
	if (!(java.lang.Double.isNaN(lvalue))) {
		minimum = java.lang.Math.min(minimum, lvalue);
	} 
	if (!(java.lang.Double.isNaN(uvalue))) {
		maximum = java.lang.Math.max(maximum, uvalue);
	} 
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1001
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 917
original statement= double lvalue = ohlc.getLowValue(series, item)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1003
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 918
original statement= double uvalue = ohlc.getHighValue(series, item)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1004
 
operation: DELETE
location= org.jfree.data.general.DatasetUtilities
line= 919
original statement= if (!(java.lang.Double.isNaN(lvalue))) {
	minimum = java.lang.Math.min(minimum, lvalue);
} 
fixed statement= if (!(java.lang.Double.isNaN(lvalue))) {
	minimum = java.lang.Math.min(minimum, lvalue);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1005
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 919
original statement= if (!(java.lang.Double.isNaN(lvalue))) {
	minimum = java.lang.Math.min(minimum, lvalue);
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1006
 
operation: REPLACE
location= org.jfree.data.general.DatasetUtilities
line= 919
original statement= if (!(java.lang.Double.isNaN(lvalue))) {
	minimum = java.lang.Math.min(minimum, lvalue);
} 
fixed statement= if (true) {
	minimum = java.lang.Math.min(minimum, lvalue);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1007
 
operation: REPLACE
location= org.jfree.data.general.DatasetUtilities
line= 919
original statement= if (!(java.lang.Double.isNaN(lvalue))) {
	minimum = java.lang.Math.min(minimum, lvalue);
} 
fixed statement= if (false) {
	minimum = java.lang.Math.min(minimum, lvalue);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1008
 
operation: DELETE
location= org.jfree.data.general.DatasetUtilities
line= 920
original statement= minimum = java.lang.Math.min(minimum, lvalue)
fixed statement= minimum = java.lang.Math.min(minimum, lvalue)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1009
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 920
original statement= minimum = java.lang.Math.min(minimum, lvalue)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1010
 
operation: DELETE
location= org.jfree.data.general.DatasetUtilities
line= 922
original statement= if (!(java.lang.Double.isNaN(uvalue))) {
	maximum = java.lang.Math.max(maximum, uvalue);
} 
fixed statement= if (!(java.lang.Double.isNaN(uvalue))) {
	maximum = java.lang.Math.max(maximum, uvalue);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1011
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 922
original statement= if (!(java.lang.Double.isNaN(uvalue))) {
	maximum = java.lang.Math.max(maximum, uvalue);
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1012
 
operation: REPLACE
location= org.jfree.data.general.DatasetUtilities
line= 922
original statement= if (!(java.lang.Double.isNaN(uvalue))) {
	maximum = java.lang.Math.max(maximum, uvalue);
} 
fixed statement= if (true) {
	maximum = java.lang.Math.max(maximum, uvalue);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1013
 
operation: REPLACE
location= org.jfree.data.general.DatasetUtilities
line= 922
original statement= if (!(java.lang.Double.isNaN(uvalue))) {
	maximum = java.lang.Math.max(maximum, uvalue);
} 
fixed statement= if (false) {
	maximum = java.lang.Math.max(maximum, uvalue);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1014
 
operation: DELETE
location= org.jfree.data.general.DatasetUtilities
line= 923
original statement= maximum = java.lang.Math.max(maximum, uvalue)
fixed statement= maximum = java.lang.Math.max(maximum, uvalue)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1015
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 923
original statement= maximum = java.lang.Math.max(maximum, uvalue)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1017
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 941
original statement= if (minimum == (java.lang.Double.POSITIVE_INFINITY)) {
	return null;
} else {
	return new org.jfree.data.Range(minimum , maximum);
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1018
 
operation: REPLACE
location= org.jfree.data.general.DatasetUtilities
line= 941
original statement= if (minimum == (java.lang.Double.POSITIVE_INFINITY)) {
	return null;
} else {
	return new org.jfree.data.Range(minimum , maximum);
}
fixed statement= if (true) {
	return null;
} else {
	return new org.jfree.data.Range(minimum , maximum);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1019
 
operation: REPLACE
location= org.jfree.data.general.DatasetUtilities
line= 941
original statement= if (minimum == (java.lang.Double.POSITIVE_INFINITY)) {
	return null;
} else {
	return new org.jfree.data.Range(minimum , maximum);
}
fixed statement= if (false) {
	return null;
} else {
	return new org.jfree.data.Range(minimum , maximum);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1021
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 942
original statement= return null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1023
 
operation: INSERT_BEFORE
location= org.jfree.data.general.DatasetUtilities
line= 945
original statement= return new org.jfree.data.Range(minimum , maximum)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1025
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 572
original statement= if (dataset != null) {
	return org.jfree.data.general.DatasetUtilities.findRangeBounds(dataset, true);
} else {
	return null;
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1026
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 572
original statement= if (dataset != null) {
	return org.jfree.data.general.DatasetUtilities.findRangeBounds(dataset, true);
} else {
	return null;
}
fixed statement= if (true) {
	return org.jfree.data.general.DatasetUtilities.findRangeBounds(dataset, true);
} else {
	return null;
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1027
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 572
original statement= if (dataset != null) {
	return org.jfree.data.general.DatasetUtilities.findRangeBounds(dataset, true);
} else {
	return null;
}
fixed statement= if (false) {
	return org.jfree.data.general.DatasetUtilities.findRangeBounds(dataset, true);
} else {
	return null;
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1029
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 573
original statement= return org.jfree.data.general.DatasetUtilities.findRangeBounds(dataset, true)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1031
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 576
original statement= return null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1032
 
operation: DELETE
location= org.jfree.data.Range
line= 328
original statement= if (!(obj instanceof org.jfree.data.Range)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.data.Range)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1033
 
operation: INSERT_BEFORE
location= org.jfree.data.Range
line= 328
original statement= if (!(obj instanceof org.jfree.data.Range)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1034
 
operation: REPLACE
location= org.jfree.data.Range
line= 328
original statement= if (!(obj instanceof org.jfree.data.Range)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1035
 
operation: REPLACE
location= org.jfree.data.Range
line= 328
original statement= if (!(obj instanceof org.jfree.data.Range)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1037
 
operation: INSERT_BEFORE
location= org.jfree.data.Range
line= 331
original statement= org.jfree.data.Range range = ((org.jfree.data.Range)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1038
 
operation: DELETE
location= org.jfree.data.Range
line= 332
original statement= if (!((this.lower) == (range.lower))) {
	return false;
} 
fixed statement= if (!((this.lower) == (range.lower))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1039
 
operation: INSERT_BEFORE
location= org.jfree.data.Range
line= 332
original statement= if (!((this.lower) == (range.lower))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1040
 
operation: REPLACE
location= org.jfree.data.Range
line= 332
original statement= if (!((this.lower) == (range.lower))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1041
 
operation: REPLACE
location= org.jfree.data.Range
line= 332
original statement= if (!((this.lower) == (range.lower))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1042
 
operation: DELETE
location= org.jfree.data.Range
line= 335
original statement= if (!((this.upper) == (range.upper))) {
	return false;
} 
fixed statement= if (!((this.upper) == (range.upper))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1043
 
operation: INSERT_BEFORE
location= org.jfree.data.Range
line= 335
original statement= if (!((this.upper) == (range.upper))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1044
 
operation: REPLACE
location= org.jfree.data.Range
line= 335
original statement= if (!((this.upper) == (range.upper))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1045
 
operation: REPLACE
location= org.jfree.data.Range
line= 335
original statement= if (!((this.upper) == (range.upper))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1047
 
operation: INSERT_BEFORE
location= org.jfree.data.Range
line= 338
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1049
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 130
original statement= return this.data[item].getHigh()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1051
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 143
original statement= double result = java.lang.Double.NaN
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1053
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 144
original statement= java.lang.Number high = getHigh(series, item)
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1054
 
operation: DELETE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 145
original statement= if (high != null) {
	result = high.doubleValue();
} 
fixed statement= if (high != null) {
	result = high.doubleValue();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1055
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 145
original statement= if (high != null) {
	result = high.doubleValue();
} 
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1056
 
operation: REPLACE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 145
original statement= if (high != null) {
	result = high.doubleValue();
} 
fixed statement= if (true) {
	result = high.doubleValue();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1057
 
operation: REPLACE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 145
original statement= if (high != null) {
	result = high.doubleValue();
} 
fixed statement= if (false) {
	result = high.doubleValue();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1058
 
operation: DELETE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 146
original statement= result = high.doubleValue()
fixed statement= result = high.doubleValue()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1059
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 146
original statement= result = high.doubleValue()
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1061
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 148
original statement= return result
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1063
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 160
original statement= return this.data[item].getLow()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1065
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 173
original statement= double result = java.lang.Double.NaN
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1067
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 174
original statement= java.lang.Number low = getLow(series, item)
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1068
 
operation: DELETE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 175
original statement= if (low != null) {
	result = low.doubleValue();
} 
fixed statement= if (low != null) {
	result = low.doubleValue();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1069
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 175
original statement= if (low != null) {
	result = low.doubleValue();
} 
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1070
 
operation: REPLACE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 175
original statement= if (low != null) {
	result = low.doubleValue();
} 
fixed statement= if (true) {
	result = low.doubleValue();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1071
 
operation: REPLACE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 175
original statement= if (low != null) {
	result = low.doubleValue();
} 
fixed statement= if (false) {
	result = low.doubleValue();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1072
 
operation: DELETE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 176
original statement= result = low.doubleValue()
fixed statement= result = low.doubleValue()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1073
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 176
original statement= result = low.doubleValue()
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1075
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 178
original statement= return result
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1077
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 277
original statement= return 1
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1079
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 288
original statement= return this.data.length
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1081
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 185
original statement= org.jfree.chart.labels.HighLowItemLabelGenerator clone = ((org.jfree.chart.labels.HighLowItemLabelGenerator)(super.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1082
 
operation: DELETE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 188
original statement= if ((this.dateFormatter) != null) {
	clone.dateFormatter = ((java.text.DateFormat)(this.dateFormatter.clone()));
} 
fixed statement= if ((this.dateFormatter) != null) {
	clone.dateFormatter = ((java.text.DateFormat)(this.dateFormatter.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1083
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 188
original statement= if ((this.dateFormatter) != null) {
	clone.dateFormatter = ((java.text.DateFormat)(this.dateFormatter.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1084
 
operation: REPLACE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 188
original statement= if ((this.dateFormatter) != null) {
	clone.dateFormatter = ((java.text.DateFormat)(this.dateFormatter.clone()));
} 
fixed statement= if (true) {
	clone.dateFormatter = ((java.text.DateFormat)(this.dateFormatter.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1085
 
operation: REPLACE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 188
original statement= if ((this.dateFormatter) != null) {
	clone.dateFormatter = ((java.text.DateFormat)(this.dateFormatter.clone()));
} 
fixed statement= if (false) {
	clone.dateFormatter = ((java.text.DateFormat)(this.dateFormatter.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1086
 
operation: DELETE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 189
original statement= clone.dateFormatter = ((java.text.DateFormat)(this.dateFormatter.clone()))
fixed statement= clone.dateFormatter = ((java.text.DateFormat)(this.dateFormatter.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1087
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 189
original statement= clone.dateFormatter = ((java.text.DateFormat)(this.dateFormatter.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1088
 
operation: DELETE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 191
original statement= if ((this.numberFormatter) != null) {
	clone.numberFormatter = ((java.text.NumberFormat)(this.numberFormatter.clone()));
} 
fixed statement= if ((this.numberFormatter) != null) {
	clone.numberFormatter = ((java.text.NumberFormat)(this.numberFormatter.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1089
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 191
original statement= if ((this.numberFormatter) != null) {
	clone.numberFormatter = ((java.text.NumberFormat)(this.numberFormatter.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1090
 
operation: REPLACE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 191
original statement= if ((this.numberFormatter) != null) {
	clone.numberFormatter = ((java.text.NumberFormat)(this.numberFormatter.clone()));
} 
fixed statement= if (true) {
	clone.numberFormatter = ((java.text.NumberFormat)(this.numberFormatter.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1091
 
operation: REPLACE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 191
original statement= if ((this.numberFormatter) != null) {
	clone.numberFormatter = ((java.text.NumberFormat)(this.numberFormatter.clone()));
} 
fixed statement= if (false) {
	clone.numberFormatter = ((java.text.NumberFormat)(this.numberFormatter.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1092
 
operation: DELETE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 192
original statement= clone.numberFormatter = ((java.text.NumberFormat)(this.numberFormatter.clone()))
fixed statement= clone.numberFormatter = ((java.text.NumberFormat)(this.numberFormatter.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1093
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 192
original statement= clone.numberFormatter = ((java.text.NumberFormat)(this.numberFormatter.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1095
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.HighLowItemLabelGenerator
line= 195
original statement= return clone
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1097
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1461
original statement= org.jfree.chart.renderer.xy.AbstractXYItemRenderer clone = ((org.jfree.chart.renderer.xy.AbstractXYItemRenderer)(super.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1098
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1464
original statement= clone.itemLabelGeneratorList = ((org.jfree.chart.util.ObjectList)(this.itemLabelGeneratorList.clone()))
fixed statement= clone.itemLabelGeneratorList = ((org.jfree.chart.util.ObjectList)(this.itemLabelGeneratorList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1099
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1464
original statement= clone.itemLabelGeneratorList = ((org.jfree.chart.util.ObjectList)(this.itemLabelGeneratorList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1100
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1466
original statement= if (((this.baseItemLabelGenerator) != null) && ((this.baseItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable)) {
	org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseItemLabelGenerator));
	clone.baseItemLabelGenerator = ((org.jfree.chart.labels.XYItemLabelGenerator)(pc.clone()));
} 
fixed statement= if (((this.baseItemLabelGenerator) != null) && ((this.baseItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable)) {
	org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseItemLabelGenerator));
	clone.baseItemLabelGenerator = ((org.jfree.chart.labels.XYItemLabelGenerator)(pc.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1101
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1466
original statement= if (((this.baseItemLabelGenerator) != null) && ((this.baseItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable)) {
	org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseItemLabelGenerator));
	clone.baseItemLabelGenerator = ((org.jfree.chart.labels.XYItemLabelGenerator)(pc.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1102
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1466
original statement= if (((this.baseItemLabelGenerator) != null) && ((this.baseItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable)) {
	org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseItemLabelGenerator));
	clone.baseItemLabelGenerator = ((org.jfree.chart.labels.XYItemLabelGenerator)(pc.clone()));
} 
fixed statement= if (true) {
	org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseItemLabelGenerator));
	clone.baseItemLabelGenerator = ((org.jfree.chart.labels.XYItemLabelGenerator)(pc.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1103
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1466
original statement= if (((this.baseItemLabelGenerator) != null) && ((this.baseItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable)) {
	org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseItemLabelGenerator));
	clone.baseItemLabelGenerator = ((org.jfree.chart.labels.XYItemLabelGenerator)(pc.clone()));
} 
fixed statement= if (false) {
	org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseItemLabelGenerator));
	clone.baseItemLabelGenerator = ((org.jfree.chart.labels.XYItemLabelGenerator)(pc.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1104
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1472
original statement= clone.toolTipGeneratorList = ((org.jfree.chart.util.ObjectList)(this.toolTipGeneratorList.clone()))
fixed statement= clone.toolTipGeneratorList = ((org.jfree.chart.util.ObjectList)(this.toolTipGeneratorList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1105
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1472
original statement= clone.toolTipGeneratorList = ((org.jfree.chart.util.ObjectList)(this.toolTipGeneratorList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1106
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1474
original statement= if (((this.baseToolTipGenerator) != null) && ((this.baseToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable)) {
	org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseToolTipGenerator));
	clone.baseToolTipGenerator = ((org.jfree.chart.labels.XYToolTipGenerator)(pc.clone()));
} 
fixed statement= if (((this.baseToolTipGenerator) != null) && ((this.baseToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable)) {
	org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseToolTipGenerator));
	clone.baseToolTipGenerator = ((org.jfree.chart.labels.XYToolTipGenerator)(pc.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1107
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1474
original statement= if (((this.baseToolTipGenerator) != null) && ((this.baseToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable)) {
	org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseToolTipGenerator));
	clone.baseToolTipGenerator = ((org.jfree.chart.labels.XYToolTipGenerator)(pc.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1108
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1474
original statement= if (((this.baseToolTipGenerator) != null) && ((this.baseToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable)) {
	org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseToolTipGenerator));
	clone.baseToolTipGenerator = ((org.jfree.chart.labels.XYToolTipGenerator)(pc.clone()));
} 
fixed statement= if (true) {
	org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseToolTipGenerator));
	clone.baseToolTipGenerator = ((org.jfree.chart.labels.XYToolTipGenerator)(pc.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1109
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1474
original statement= if (((this.baseToolTipGenerator) != null) && ((this.baseToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable)) {
	org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseToolTipGenerator));
	clone.baseToolTipGenerator = ((org.jfree.chart.labels.XYToolTipGenerator)(pc.clone()));
} 
fixed statement= if (false) {
	org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseToolTipGenerator));
	clone.baseToolTipGenerator = ((org.jfree.chart.labels.XYToolTipGenerator)(pc.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1111
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1476
original statement= org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(this.baseToolTipGenerator))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1112
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1477
original statement= clone.baseToolTipGenerator = ((org.jfree.chart.labels.XYToolTipGenerator)(pc.clone()))
fixed statement= clone.baseToolTipGenerator = ((org.jfree.chart.labels.XYToolTipGenerator)(pc.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1113
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1477
original statement= clone.baseToolTipGenerator = ((org.jfree.chart.labels.XYToolTipGenerator)(pc.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1114
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1480
original statement= if ((clone.legendItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)));
} 
fixed statement= if ((clone.legendItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1115
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1480
original statement= if ((clone.legendItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1116
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1480
original statement= if ((clone.legendItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)));
} 
fixed statement= if (true) {
	clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1117
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1480
original statement= if ((clone.legendItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)));
} 
fixed statement= if (false) {
	clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1118
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1481
original statement= clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)))
fixed statement= clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1119
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1481
original statement= clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1120
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1484
original statement= if ((clone.legendItemToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemToolTipGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemToolTipGenerator)));
} 
fixed statement= if ((clone.legendItemToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemToolTipGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemToolTipGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1121
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1484
original statement= if ((clone.legendItemToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemToolTipGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemToolTipGenerator)));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1122
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1484
original statement= if ((clone.legendItemToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemToolTipGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemToolTipGenerator)));
} 
fixed statement= if (true) {
	clone.legendItemToolTipGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemToolTipGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1123
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1484
original statement= if ((clone.legendItemToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemToolTipGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemToolTipGenerator)));
} 
fixed statement= if (false) {
	clone.legendItemToolTipGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemToolTipGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1124
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1488
original statement= if ((clone.legendItemURLGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemURLGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemURLGenerator)));
} 
fixed statement= if ((clone.legendItemURLGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemURLGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemURLGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1125
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1488
original statement= if ((clone.legendItemURLGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemURLGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemURLGenerator)));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1126
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1488
original statement= if ((clone.legendItemURLGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemURLGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemURLGenerator)));
} 
fixed statement= if (true) {
	clone.legendItemURLGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemURLGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1127
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1488
original statement= if ((clone.legendItemURLGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemURLGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemURLGenerator)));
} 
fixed statement= if (false) {
	clone.legendItemURLGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemURLGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1128
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1493
original statement= clone.foregroundAnnotations = ((java.util.List)(org.jfree.chart.util.ObjectUtilities.deepClone(this.foregroundAnnotations)))
fixed statement= clone.foregroundAnnotations = ((java.util.List)(org.jfree.chart.util.ObjectUtilities.deepClone(this.foregroundAnnotations)))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1129
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1493
original statement= clone.foregroundAnnotations = ((java.util.List)(org.jfree.chart.util.ObjectUtilities.deepClone(this.foregroundAnnotations)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1130
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1495
original statement= clone.backgroundAnnotations = ((java.util.List)(org.jfree.chart.util.ObjectUtilities.deepClone(this.backgroundAnnotations)))
fixed statement= clone.backgroundAnnotations = ((java.util.List)(org.jfree.chart.util.ObjectUtilities.deepClone(this.backgroundAnnotations)))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1131
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1495
original statement= clone.backgroundAnnotations = ((java.util.List)(org.jfree.chart.util.ObjectUtilities.deepClone(this.backgroundAnnotations)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1132
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1498
original statement= if ((clone.legendItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)));
} 
fixed statement= if ((clone.legendItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1133
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1498
original statement= if ((clone.legendItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1134
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1498
original statement= if ((clone.legendItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)));
} 
fixed statement= if (true) {
	clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1135
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1498
original statement= if ((clone.legendItemLabelGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)));
} 
fixed statement= if (false) {
	clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1136
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1499
original statement= clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)))
fixed statement= clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1137
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1499
original statement= clone.legendItemLabelGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemLabelGenerator)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1138
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1502
original statement= if ((clone.legendItemToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemToolTipGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemToolTipGenerator)));
} 
fixed statement= if ((clone.legendItemToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemToolTipGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemToolTipGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1139
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1502
original statement= if ((clone.legendItemToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemToolTipGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemToolTipGenerator)));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1140
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1502
original statement= if ((clone.legendItemToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemToolTipGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemToolTipGenerator)));
} 
fixed statement= if (true) {
	clone.legendItemToolTipGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemToolTipGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1141
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1502
original statement= if ((clone.legendItemToolTipGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemToolTipGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemToolTipGenerator)));
} 
fixed statement= if (false) {
	clone.legendItemToolTipGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemToolTipGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1142
 
operation: DELETE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1506
original statement= if ((clone.legendItemURLGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemURLGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemURLGenerator)));
} 
fixed statement= if ((clone.legendItemURLGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemURLGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemURLGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1143
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1506
original statement= if ((clone.legendItemURLGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemURLGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemURLGenerator)));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1144
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1506
original statement= if ((clone.legendItemURLGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemURLGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemURLGenerator)));
} 
fixed statement= if (true) {
	clone.legendItemURLGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemURLGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1145
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1506
original statement= if ((clone.legendItemURLGenerator) instanceof org.jfree.chart.util.PublicCloneable) {
	clone.legendItemURLGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemURLGenerator)));
} 
fixed statement= if (false) {
	clone.legendItemURLGenerator = ((org.jfree.chart.labels.XYSeriesLabelGenerator)(org.jfree.chart.util.ObjectUtilities.clone(this.legendItemURLGenerator)));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1147
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.AbstractXYItemRenderer
line= 1511
original statement= return clone
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1149
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2621
original statement= org.jfree.chart.renderer.AbstractRenderer clone = ((org.jfree.chart.renderer.AbstractRenderer)(super.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1150
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2623
original statement= if ((this.seriesVisibleList) != null) {
	clone.seriesVisibleList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleList.clone()));
} 
fixed statement= if ((this.seriesVisibleList) != null) {
	clone.seriesVisibleList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1151
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2623
original statement= if ((this.seriesVisibleList) != null) {
	clone.seriesVisibleList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleList.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1152
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2623
original statement= if ((this.seriesVisibleList) != null) {
	clone.seriesVisibleList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleList.clone()));
} 
fixed statement= if (true) {
	clone.seriesVisibleList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1153
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2623
original statement= if ((this.seriesVisibleList) != null) {
	clone.seriesVisibleList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleList.clone()));
} 
fixed statement= if (false) {
	clone.seriesVisibleList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1154
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2624
original statement= clone.seriesVisibleList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleList.clone()))
fixed statement= clone.seriesVisibleList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1155
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2624
original statement= clone.seriesVisibleList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1156
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2628
original statement= if ((this.seriesVisibleInLegendList) != null) {
	clone.seriesVisibleInLegendList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleInLegendList.clone()));
} 
fixed statement= if ((this.seriesVisibleInLegendList) != null) {
	clone.seriesVisibleInLegendList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleInLegendList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1157
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2628
original statement= if ((this.seriesVisibleInLegendList) != null) {
	clone.seriesVisibleInLegendList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleInLegendList.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1158
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2628
original statement= if ((this.seriesVisibleInLegendList) != null) {
	clone.seriesVisibleInLegendList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleInLegendList.clone()));
} 
fixed statement= if (true) {
	clone.seriesVisibleInLegendList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleInLegendList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1159
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2628
original statement= if ((this.seriesVisibleInLegendList) != null) {
	clone.seriesVisibleInLegendList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleInLegendList.clone()));
} 
fixed statement= if (false) {
	clone.seriesVisibleInLegendList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleInLegendList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1160
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2629
original statement= clone.seriesVisibleInLegendList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleInLegendList.clone()))
fixed statement= clone.seriesVisibleInLegendList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleInLegendList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1161
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2629
original statement= clone.seriesVisibleInLegendList = ((org.jfree.chart.util.BooleanList)(this.seriesVisibleInLegendList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1162
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2634
original statement= if ((this.paintList) != null) {
	clone.paintList = ((org.jfree.chart.util.PaintList)(this.paintList.clone()));
} 
fixed statement= if ((this.paintList) != null) {
	clone.paintList = ((org.jfree.chart.util.PaintList)(this.paintList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1163
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2634
original statement= if ((this.paintList) != null) {
	clone.paintList = ((org.jfree.chart.util.PaintList)(this.paintList.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1164
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2634
original statement= if ((this.paintList) != null) {
	clone.paintList = ((org.jfree.chart.util.PaintList)(this.paintList.clone()));
} 
fixed statement= if (true) {
	clone.paintList = ((org.jfree.chart.util.PaintList)(this.paintList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1165
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2634
original statement= if ((this.paintList) != null) {
	clone.paintList = ((org.jfree.chart.util.PaintList)(this.paintList.clone()));
} 
fixed statement= if (false) {
	clone.paintList = ((org.jfree.chart.util.PaintList)(this.paintList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1166
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2635
original statement= clone.paintList = ((org.jfree.chart.util.PaintList)(this.paintList.clone()))
fixed statement= clone.paintList = ((org.jfree.chart.util.PaintList)(this.paintList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1167
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2635
original statement= clone.paintList = ((org.jfree.chart.util.PaintList)(this.paintList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1168
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2639
original statement= if ((this.fillPaintList) != null) {
	clone.fillPaintList = ((org.jfree.chart.util.PaintList)(this.fillPaintList.clone()));
} 
fixed statement= if ((this.fillPaintList) != null) {
	clone.fillPaintList = ((org.jfree.chart.util.PaintList)(this.fillPaintList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1169
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2639
original statement= if ((this.fillPaintList) != null) {
	clone.fillPaintList = ((org.jfree.chart.util.PaintList)(this.fillPaintList.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1170
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2639
original statement= if ((this.fillPaintList) != null) {
	clone.fillPaintList = ((org.jfree.chart.util.PaintList)(this.fillPaintList.clone()));
} 
fixed statement= if (true) {
	clone.fillPaintList = ((org.jfree.chart.util.PaintList)(this.fillPaintList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1171
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2639
original statement= if ((this.fillPaintList) != null) {
	clone.fillPaintList = ((org.jfree.chart.util.PaintList)(this.fillPaintList.clone()));
} 
fixed statement= if (false) {
	clone.fillPaintList = ((org.jfree.chart.util.PaintList)(this.fillPaintList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1172
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2640
original statement= clone.fillPaintList = ((org.jfree.chart.util.PaintList)(this.fillPaintList.clone()))
fixed statement= clone.fillPaintList = ((org.jfree.chart.util.PaintList)(this.fillPaintList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1173
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2640
original statement= clone.fillPaintList = ((org.jfree.chart.util.PaintList)(this.fillPaintList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1174
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2643
original statement= if ((this.outlinePaintList) != null) {
	clone.outlinePaintList = ((org.jfree.chart.util.PaintList)(this.outlinePaintList.clone()));
} 
fixed statement= if ((this.outlinePaintList) != null) {
	clone.outlinePaintList = ((org.jfree.chart.util.PaintList)(this.outlinePaintList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1175
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2643
original statement= if ((this.outlinePaintList) != null) {
	clone.outlinePaintList = ((org.jfree.chart.util.PaintList)(this.outlinePaintList.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1176
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2643
original statement= if ((this.outlinePaintList) != null) {
	clone.outlinePaintList = ((org.jfree.chart.util.PaintList)(this.outlinePaintList.clone()));
} 
fixed statement= if (true) {
	clone.outlinePaintList = ((org.jfree.chart.util.PaintList)(this.outlinePaintList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1177
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2643
original statement= if ((this.outlinePaintList) != null) {
	clone.outlinePaintList = ((org.jfree.chart.util.PaintList)(this.outlinePaintList.clone()));
} 
fixed statement= if (false) {
	clone.outlinePaintList = ((org.jfree.chart.util.PaintList)(this.outlinePaintList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1178
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2644
original statement= clone.outlinePaintList = ((org.jfree.chart.util.PaintList)(this.outlinePaintList.clone()))
fixed statement= clone.outlinePaintList = ((org.jfree.chart.util.PaintList)(this.outlinePaintList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1179
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2644
original statement= clone.outlinePaintList = ((org.jfree.chart.util.PaintList)(this.outlinePaintList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1180
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2649
original statement= if ((this.strokeList) != null) {
	clone.strokeList = ((org.jfree.chart.util.StrokeList)(this.strokeList.clone()));
} 
fixed statement= if ((this.strokeList) != null) {
	clone.strokeList = ((org.jfree.chart.util.StrokeList)(this.strokeList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1181
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2649
original statement= if ((this.strokeList) != null) {
	clone.strokeList = ((org.jfree.chart.util.StrokeList)(this.strokeList.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1182
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2649
original statement= if ((this.strokeList) != null) {
	clone.strokeList = ((org.jfree.chart.util.StrokeList)(this.strokeList.clone()));
} 
fixed statement= if (true) {
	clone.strokeList = ((org.jfree.chart.util.StrokeList)(this.strokeList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1183
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2649
original statement= if ((this.strokeList) != null) {
	clone.strokeList = ((org.jfree.chart.util.StrokeList)(this.strokeList.clone()));
} 
fixed statement= if (false) {
	clone.strokeList = ((org.jfree.chart.util.StrokeList)(this.strokeList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1184
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2650
original statement= clone.strokeList = ((org.jfree.chart.util.StrokeList)(this.strokeList.clone()))
fixed statement= clone.strokeList = ((org.jfree.chart.util.StrokeList)(this.strokeList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1185
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2650
original statement= clone.strokeList = ((org.jfree.chart.util.StrokeList)(this.strokeList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1186
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2655
original statement= if ((this.outlineStrokeList) != null) {
	clone.outlineStrokeList = ((org.jfree.chart.util.StrokeList)(this.outlineStrokeList.clone()));
} 
fixed statement= if ((this.outlineStrokeList) != null) {
	clone.outlineStrokeList = ((org.jfree.chart.util.StrokeList)(this.outlineStrokeList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1187
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2655
original statement= if ((this.outlineStrokeList) != null) {
	clone.outlineStrokeList = ((org.jfree.chart.util.StrokeList)(this.outlineStrokeList.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1188
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2655
original statement= if ((this.outlineStrokeList) != null) {
	clone.outlineStrokeList = ((org.jfree.chart.util.StrokeList)(this.outlineStrokeList.clone()));
} 
fixed statement= if (true) {
	clone.outlineStrokeList = ((org.jfree.chart.util.StrokeList)(this.outlineStrokeList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1189
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2655
original statement= if ((this.outlineStrokeList) != null) {
	clone.outlineStrokeList = ((org.jfree.chart.util.StrokeList)(this.outlineStrokeList.clone()));
} 
fixed statement= if (false) {
	clone.outlineStrokeList = ((org.jfree.chart.util.StrokeList)(this.outlineStrokeList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1190
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2656
original statement= clone.outlineStrokeList = ((org.jfree.chart.util.StrokeList)(this.outlineStrokeList.clone()))
fixed statement= clone.outlineStrokeList = ((org.jfree.chart.util.StrokeList)(this.outlineStrokeList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1191
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2656
original statement= clone.outlineStrokeList = ((org.jfree.chart.util.StrokeList)(this.outlineStrokeList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1192
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2661
original statement= if ((this.shapeList) != null) {
	clone.shapeList = ((org.jfree.chart.util.ShapeList)(this.shapeList.clone()));
} 
fixed statement= if ((this.shapeList) != null) {
	clone.shapeList = ((org.jfree.chart.util.ShapeList)(this.shapeList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1193
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2661
original statement= if ((this.shapeList) != null) {
	clone.shapeList = ((org.jfree.chart.util.ShapeList)(this.shapeList.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1194
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2661
original statement= if ((this.shapeList) != null) {
	clone.shapeList = ((org.jfree.chart.util.ShapeList)(this.shapeList.clone()));
} 
fixed statement= if (true) {
	clone.shapeList = ((org.jfree.chart.util.ShapeList)(this.shapeList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1195
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2661
original statement= if ((this.shapeList) != null) {
	clone.shapeList = ((org.jfree.chart.util.ShapeList)(this.shapeList.clone()));
} 
fixed statement= if (false) {
	clone.shapeList = ((org.jfree.chart.util.ShapeList)(this.shapeList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1196
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2662
original statement= clone.shapeList = ((org.jfree.chart.util.ShapeList)(this.shapeList.clone()))
fixed statement= clone.shapeList = ((org.jfree.chart.util.ShapeList)(this.shapeList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1197
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2662
original statement= clone.shapeList = ((org.jfree.chart.util.ShapeList)(this.shapeList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1198
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2664
original statement= if ((this.baseShape) != null) {
	clone.baseShape = org.jfree.chart.util.ShapeUtilities.clone(this.baseShape);
} 
fixed statement= if ((this.baseShape) != null) {
	clone.baseShape = org.jfree.chart.util.ShapeUtilities.clone(this.baseShape);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1199
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2664
original statement= if ((this.baseShape) != null) {
	clone.baseShape = org.jfree.chart.util.ShapeUtilities.clone(this.baseShape);
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1200
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2664
original statement= if ((this.baseShape) != null) {
	clone.baseShape = org.jfree.chart.util.ShapeUtilities.clone(this.baseShape);
} 
fixed statement= if (true) {
	clone.baseShape = org.jfree.chart.util.ShapeUtilities.clone(this.baseShape);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1201
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2664
original statement= if ((this.baseShape) != null) {
	clone.baseShape = org.jfree.chart.util.ShapeUtilities.clone(this.baseShape);
} 
fixed statement= if (false) {
	clone.baseShape = org.jfree.chart.util.ShapeUtilities.clone(this.baseShape);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1202
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2665
original statement= clone.baseShape = org.jfree.chart.util.ShapeUtilities.clone(this.baseShape)
fixed statement= clone.baseShape = org.jfree.chart.util.ShapeUtilities.clone(this.baseShape)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1203
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2665
original statement= clone.baseShape = org.jfree.chart.util.ShapeUtilities.clone(this.baseShape)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1204
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2669
original statement= if ((this.itemLabelsVisibleList) != null) {
	clone.itemLabelsVisibleList = ((org.jfree.chart.util.BooleanList)(this.itemLabelsVisibleList.clone()));
} 
fixed statement= if ((this.itemLabelsVisibleList) != null) {
	clone.itemLabelsVisibleList = ((org.jfree.chart.util.BooleanList)(this.itemLabelsVisibleList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1205
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2669
original statement= if ((this.itemLabelsVisibleList) != null) {
	clone.itemLabelsVisibleList = ((org.jfree.chart.util.BooleanList)(this.itemLabelsVisibleList.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1206
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2669
original statement= if ((this.itemLabelsVisibleList) != null) {
	clone.itemLabelsVisibleList = ((org.jfree.chart.util.BooleanList)(this.itemLabelsVisibleList.clone()));
} 
fixed statement= if (true) {
	clone.itemLabelsVisibleList = ((org.jfree.chart.util.BooleanList)(this.itemLabelsVisibleList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1207
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2669
original statement= if ((this.itemLabelsVisibleList) != null) {
	clone.itemLabelsVisibleList = ((org.jfree.chart.util.BooleanList)(this.itemLabelsVisibleList.clone()));
} 
fixed statement= if (false) {
	clone.itemLabelsVisibleList = ((org.jfree.chart.util.BooleanList)(this.itemLabelsVisibleList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1208
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2670
original statement= clone.itemLabelsVisibleList = ((org.jfree.chart.util.BooleanList)(this.itemLabelsVisibleList.clone()))
fixed statement= clone.itemLabelsVisibleList = ((org.jfree.chart.util.BooleanList)(this.itemLabelsVisibleList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1209
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2670
original statement= clone.itemLabelsVisibleList = ((org.jfree.chart.util.BooleanList)(this.itemLabelsVisibleList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1210
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2676
original statement= if ((this.itemLabelFontList) != null) {
	clone.itemLabelFontList = ((org.jfree.chart.util.ObjectList)(this.itemLabelFontList.clone()));
} 
fixed statement= if ((this.itemLabelFontList) != null) {
	clone.itemLabelFontList = ((org.jfree.chart.util.ObjectList)(this.itemLabelFontList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1211
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2676
original statement= if ((this.itemLabelFontList) != null) {
	clone.itemLabelFontList = ((org.jfree.chart.util.ObjectList)(this.itemLabelFontList.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1212
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2676
original statement= if ((this.itemLabelFontList) != null) {
	clone.itemLabelFontList = ((org.jfree.chart.util.ObjectList)(this.itemLabelFontList.clone()));
} 
fixed statement= if (true) {
	clone.itemLabelFontList = ((org.jfree.chart.util.ObjectList)(this.itemLabelFontList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1213
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2676
original statement= if ((this.itemLabelFontList) != null) {
	clone.itemLabelFontList = ((org.jfree.chart.util.ObjectList)(this.itemLabelFontList.clone()));
} 
fixed statement= if (false) {
	clone.itemLabelFontList = ((org.jfree.chart.util.ObjectList)(this.itemLabelFontList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1214
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2677
original statement= clone.itemLabelFontList = ((org.jfree.chart.util.ObjectList)(this.itemLabelFontList.clone()))
fixed statement= clone.itemLabelFontList = ((org.jfree.chart.util.ObjectList)(this.itemLabelFontList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1215
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2677
original statement= clone.itemLabelFontList = ((org.jfree.chart.util.ObjectList)(this.itemLabelFontList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1216
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2683
original statement= if ((this.itemLabelPaintList) != null) {
	clone.itemLabelPaintList = ((org.jfree.chart.util.PaintList)(this.itemLabelPaintList.clone()));
} 
fixed statement= if ((this.itemLabelPaintList) != null) {
	clone.itemLabelPaintList = ((org.jfree.chart.util.PaintList)(this.itemLabelPaintList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1217
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2683
original statement= if ((this.itemLabelPaintList) != null) {
	clone.itemLabelPaintList = ((org.jfree.chart.util.PaintList)(this.itemLabelPaintList.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1218
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2683
original statement= if ((this.itemLabelPaintList) != null) {
	clone.itemLabelPaintList = ((org.jfree.chart.util.PaintList)(this.itemLabelPaintList.clone()));
} 
fixed statement= if (true) {
	clone.itemLabelPaintList = ((org.jfree.chart.util.PaintList)(this.itemLabelPaintList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1219
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2683
original statement= if ((this.itemLabelPaintList) != null) {
	clone.itemLabelPaintList = ((org.jfree.chart.util.PaintList)(this.itemLabelPaintList.clone()));
} 
fixed statement= if (false) {
	clone.itemLabelPaintList = ((org.jfree.chart.util.PaintList)(this.itemLabelPaintList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1220
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2684
original statement= clone.itemLabelPaintList = ((org.jfree.chart.util.PaintList)(this.itemLabelPaintList.clone()))
fixed statement= clone.itemLabelPaintList = ((org.jfree.chart.util.PaintList)(this.itemLabelPaintList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1221
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2684
original statement= clone.itemLabelPaintList = ((org.jfree.chart.util.PaintList)(this.itemLabelPaintList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1222
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2690
original statement= if ((this.positiveItemLabelPositionList) != null) {
	clone.positiveItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.positiveItemLabelPositionList.clone()));
} 
fixed statement= if ((this.positiveItemLabelPositionList) != null) {
	clone.positiveItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.positiveItemLabelPositionList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1223
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2690
original statement= if ((this.positiveItemLabelPositionList) != null) {
	clone.positiveItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.positiveItemLabelPositionList.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1224
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2690
original statement= if ((this.positiveItemLabelPositionList) != null) {
	clone.positiveItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.positiveItemLabelPositionList.clone()));
} 
fixed statement= if (true) {
	clone.positiveItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.positiveItemLabelPositionList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1225
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2690
original statement= if ((this.positiveItemLabelPositionList) != null) {
	clone.positiveItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.positiveItemLabelPositionList.clone()));
} 
fixed statement= if (false) {
	clone.positiveItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.positiveItemLabelPositionList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1226
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2691
original statement= clone.positiveItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.positiveItemLabelPositionList.clone()))
fixed statement= clone.positiveItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.positiveItemLabelPositionList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1227
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2691
original statement= clone.positiveItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.positiveItemLabelPositionList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1228
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2697
original statement= if ((this.negativeItemLabelPositionList) != null) {
	clone.negativeItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.negativeItemLabelPositionList.clone()));
} 
fixed statement= if ((this.negativeItemLabelPositionList) != null) {
	clone.negativeItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.negativeItemLabelPositionList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1229
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2697
original statement= if ((this.negativeItemLabelPositionList) != null) {
	clone.negativeItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.negativeItemLabelPositionList.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1230
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2697
original statement= if ((this.negativeItemLabelPositionList) != null) {
	clone.negativeItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.negativeItemLabelPositionList.clone()));
} 
fixed statement= if (true) {
	clone.negativeItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.negativeItemLabelPositionList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1231
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2697
original statement= if ((this.negativeItemLabelPositionList) != null) {
	clone.negativeItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.negativeItemLabelPositionList.clone()));
} 
fixed statement= if (false) {
	clone.negativeItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.negativeItemLabelPositionList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1232
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2698
original statement= clone.negativeItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.negativeItemLabelPositionList.clone()))
fixed statement= clone.negativeItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.negativeItemLabelPositionList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1233
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2698
original statement= clone.negativeItemLabelPositionList = ((org.jfree.chart.util.ObjectList)(this.negativeItemLabelPositionList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1234
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2703
original statement= if ((this.createEntitiesList) != null) {
	clone.createEntitiesList = ((org.jfree.chart.util.BooleanList)(this.createEntitiesList.clone()));
} 
fixed statement= if ((this.createEntitiesList) != null) {
	clone.createEntitiesList = ((org.jfree.chart.util.BooleanList)(this.createEntitiesList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1235
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2703
original statement= if ((this.createEntitiesList) != null) {
	clone.createEntitiesList = ((org.jfree.chart.util.BooleanList)(this.createEntitiesList.clone()));
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1236
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2703
original statement= if ((this.createEntitiesList) != null) {
	clone.createEntitiesList = ((org.jfree.chart.util.BooleanList)(this.createEntitiesList.clone()));
} 
fixed statement= if (true) {
	clone.createEntitiesList = ((org.jfree.chart.util.BooleanList)(this.createEntitiesList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1237
 
operation: REPLACE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2703
original statement= if ((this.createEntitiesList) != null) {
	clone.createEntitiesList = ((org.jfree.chart.util.BooleanList)(this.createEntitiesList.clone()));
} 
fixed statement= if (false) {
	clone.createEntitiesList = ((org.jfree.chart.util.BooleanList)(this.createEntitiesList.clone()));
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1238
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2704
original statement= clone.createEntitiesList = ((org.jfree.chart.util.BooleanList)(this.createEntitiesList.clone()))
fixed statement= clone.createEntitiesList = ((org.jfree.chart.util.BooleanList)(this.createEntitiesList.clone()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1239
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2704
original statement= clone.createEntitiesList = ((org.jfree.chart.util.BooleanList)(this.createEntitiesList.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1240
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2707
original statement= clone.listenerList = new javax.swing.event.EventListenerList()
fixed statement= clone.listenerList = new javax.swing.event.EventListenerList()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1241
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2707
original statement= clone.listenerList = new javax.swing.event.EventListenerList()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1242
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2708
original statement= clone.event = null
fixed statement= clone.event = null
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1243
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2708
original statement= clone.event = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1245
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2709
original statement= return clone
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1246
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 183
original statement= return true
fixed statement= return true
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1247
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 183
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1249
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 235
original statement= org.jfree.chart.util.AbstractObjectList clone = ((org.jfree.chart.util.AbstractObjectList)(super.clone()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1250
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 236
original statement= if ((this.objects) != null) {
	clone.objects = new java.lang.Object[this.objects.length];
	java.lang.System.arraycopy(this.objects, 0, clone.objects, 0, this.objects.length);
} 
fixed statement= if ((this.objects) != null) {
	clone.objects = new java.lang.Object[this.objects.length];
	java.lang.System.arraycopy(this.objects, 0, clone.objects, 0, this.objects.length);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1251
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 236
original statement= if ((this.objects) != null) {
	clone.objects = new java.lang.Object[this.objects.length];
	java.lang.System.arraycopy(this.objects, 0, clone.objects, 0, this.objects.length);
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1252
 
operation: REPLACE
location= org.jfree.chart.util.AbstractObjectList
line= 236
original statement= if ((this.objects) != null) {
	clone.objects = new java.lang.Object[this.objects.length];
	java.lang.System.arraycopy(this.objects, 0, clone.objects, 0, this.objects.length);
} 
fixed statement= if (true) {
	clone.objects = new java.lang.Object[this.objects.length];
	java.lang.System.arraycopy(this.objects, 0, clone.objects, 0, this.objects.length);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1253
 
operation: REPLACE
location= org.jfree.chart.util.AbstractObjectList
line= 236
original statement= if ((this.objects) != null) {
	clone.objects = new java.lang.Object[this.objects.length];
	java.lang.System.arraycopy(this.objects, 0, clone.objects, 0, this.objects.length);
} 
fixed statement= if (false) {
	clone.objects = new java.lang.Object[this.objects.length];
	java.lang.System.arraycopy(this.objects, 0, clone.objects, 0, this.objects.length);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1254
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 237
original statement= clone.objects = new java.lang.Object[this.objects.length]
fixed statement= clone.objects = new java.lang.Object[this.objects.length]
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1255
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 237
original statement= clone.objects = new java.lang.Object[this.objects.length]
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1256
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 238
original statement= java.lang.System.arraycopy(this.objects, 0, clone.objects, 0, this.objects.length)
fixed statement= java.lang.System.arraycopy(this.objects, 0, clone.objects, 0, this.objects.length)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1257
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 238
original statement= java.lang.System.arraycopy(this.objects, 0, clone.objects, 0, this.objects.length)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1259
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 241
original statement= return clone
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1261
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 931
original statement= return super.clone()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1263
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.StrokeList
line= 91
original statement= return super.clone()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1265
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeList
line= 90
original statement= return super.clone()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1266
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 103
original statement= if (shape instanceof java.lang.Cloneable) {
	try {
		return ((java.awt.Shape)(org.jfree.chart.util.ObjectUtilities.clone(shape)));
	} catch (java.lang.CloneNotSupportedException cnse) {
	}
} 
fixed statement= if (shape instanceof java.lang.Cloneable) {
	try {
		return ((java.awt.Shape)(org.jfree.chart.util.ObjectUtilities.clone(shape)));
	} catch (java.lang.CloneNotSupportedException cnse) {
	}
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1267
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 103
original statement= if (shape instanceof java.lang.Cloneable) {
	try {
		return ((java.awt.Shape)(org.jfree.chart.util.ObjectUtilities.clone(shape)));
	} catch (java.lang.CloneNotSupportedException cnse) {
	}
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1268
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 103
original statement= if (shape instanceof java.lang.Cloneable) {
	try {
		return ((java.awt.Shape)(org.jfree.chart.util.ObjectUtilities.clone(shape)));
	} catch (java.lang.CloneNotSupportedException cnse) {
	}
} 
fixed statement= if (true) {
	try {
		return ((java.awt.Shape)(org.jfree.chart.util.ObjectUtilities.clone(shape)));
	} catch (java.lang.CloneNotSupportedException cnse) {
	}
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1269
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 103
original statement= if (shape instanceof java.lang.Cloneable) {
	try {
		return ((java.awt.Shape)(org.jfree.chart.util.ObjectUtilities.clone(shape)));
	} catch (java.lang.CloneNotSupportedException cnse) {
	}
} 
fixed statement= if (false) {
	try {
		return ((java.awt.Shape)(org.jfree.chart.util.ObjectUtilities.clone(shape)));
	} catch (java.lang.CloneNotSupportedException cnse) {
	}
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1271
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 105
original statement= return ((java.awt.Shape)(org.jfree.chart.util.ObjectUtilities.clone(shape)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1273
 
operation: INSERT_BEFORE
location= org.jfree.chart.labels.StandardXYSeriesLabelGenerator
line= 137
original statement= return super.clone()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1275
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 166
original statement= final org.jfree.chart.util.PublicCloneable pc = ((org.jfree.chart.util.PublicCloneable)(object))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1276
 
operation: DELETE
location= org.jfree.chart.util.ObjectUtilities
line= 167
original statement= return pc.clone()
fixed statement= return pc.clone()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1277
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ObjectUtilities
line= 167
original statement= return pc.clone()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1279
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2579
original statement= int result = 193
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1280
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2580
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.seriesVisibleList)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.seriesVisibleList)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1281
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2580
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.seriesVisibleList)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1282
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2581
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseSeriesVisible)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseSeriesVisible)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1283
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2581
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseSeriesVisible)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1284
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2582
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.seriesVisibleInLegendList)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.seriesVisibleInLegendList)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1285
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2582
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.seriesVisibleInLegendList)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1286
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2583
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseSeriesVisibleInLegend)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseSeriesVisibleInLegend)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1287
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2583
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseSeriesVisibleInLegend)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1288
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2584
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.paintList)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.paintList)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1289
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2584
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.paintList)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1290
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2585
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.basePaint)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.basePaint)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1291
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2585
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.basePaint)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1292
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2586
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.fillPaintList)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.fillPaintList)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1293
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2586
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.fillPaintList)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1294
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2587
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseFillPaint)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseFillPaint)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1295
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2587
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseFillPaint)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1296
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2588
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.outlinePaintList)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.outlinePaintList)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1297
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2588
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.outlinePaintList)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1298
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2589
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseOutlinePaint)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseOutlinePaint)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1299
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2589
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseOutlinePaint)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1300
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2590
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.strokeList)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.strokeList)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1301
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2590
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.strokeList)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1302
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2591
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseStroke)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseStroke)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1303
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2591
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseStroke)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1304
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2592
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.outlineStrokeList)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.outlineStrokeList)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1305
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2592
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.outlineStrokeList)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1306
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2593
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseOutlineStroke)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseOutlineStroke)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1307
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2593
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseOutlineStroke)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1308
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2596
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.itemLabelsVisibleList)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.itemLabelsVisibleList)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1309
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2596
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.itemLabelsVisibleList)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1310
 
operation: DELETE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2597
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseItemLabelsVisible)
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseItemLabelsVisible)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1311
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2597
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, this.baseItemLabelsVisible)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1313
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.AbstractRenderer
line= 2609
original statement= return result
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1314
 
operation: DELETE
location= org.jfree.chart.util.HashUtilities
line= 66
original statement= if (p == null) {
	return 0;
} 
fixed statement= if (p == null) {
	return 0;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1315
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.HashUtilities
line= 66
original statement= if (p == null) {
	return 0;
} 
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1316
 
operation: REPLACE
location= org.jfree.chart.util.HashUtilities
line= 66
original statement= if (p == null) {
	return 0;
} 
fixed statement= if (true) {
	return 0;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1317
 
operation: REPLACE
location= org.jfree.chart.util.HashUtilities
line= 66
original statement= if (p == null) {
	return 0;
} 
fixed statement= if (false) {
	return 0;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1319
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.HashUtilities
line= 69
original statement= int result = 0
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1320
 
operation: DELETE
location= org.jfree.chart.util.HashUtilities
line= 71
original statement= if (p instanceof java.awt.GradientPaint) {
	java.awt.GradientPaint gp = ((java.awt.GradientPaint)(p));
	result = 193;
	result = (37 * result) + (gp.getColor1().hashCode());
	result = (37 * result) + (gp.getPoint1().hashCode());
	result = (37 * result) + (gp.getColor2().hashCode());
	result = (37 * result) + (gp.getPoint2().hashCode());
} else {
	result = p.hashCode();
}
fixed statement= if (p instanceof java.awt.GradientPaint) {
	java.awt.GradientPaint gp = ((java.awt.GradientPaint)(p));
	result = 193;
	result = (37 * result) + (gp.getColor1().hashCode());
	result = (37 * result) + (gp.getPoint1().hashCode());
	result = (37 * result) + (gp.getColor2().hashCode());
	result = (37 * result) + (gp.getPoint2().hashCode());
} else {
	result = p.hashCode();
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1321
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.HashUtilities
line= 71
original statement= if (p instanceof java.awt.GradientPaint) {
	java.awt.GradientPaint gp = ((java.awt.GradientPaint)(p));
	result = 193;
	result = (37 * result) + (gp.getColor1().hashCode());
	result = (37 * result) + (gp.getPoint1().hashCode());
	result = (37 * result) + (gp.getColor2().hashCode());
	result = (37 * result) + (gp.getPoint2().hashCode());
} else {
	result = p.hashCode();
}
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1322
 
operation: REPLACE
location= org.jfree.chart.util.HashUtilities
line= 71
original statement= if (p instanceof java.awt.GradientPaint) {
	java.awt.GradientPaint gp = ((java.awt.GradientPaint)(p));
	result = 193;
	result = (37 * result) + (gp.getColor1().hashCode());
	result = (37 * result) + (gp.getPoint1().hashCode());
	result = (37 * result) + (gp.getColor2().hashCode());
	result = (37 * result) + (gp.getPoint2().hashCode());
} else {
	result = p.hashCode();
}
fixed statement= if (true) {
	java.awt.GradientPaint gp = ((java.awt.GradientPaint)(p));
	result = 193;
	result = (37 * result) + (gp.getColor1().hashCode());
	result = (37 * result) + (gp.getPoint1().hashCode());
	result = (37 * result) + (gp.getColor2().hashCode());
	result = (37 * result) + (gp.getPoint2().hashCode());
} else {
	result = p.hashCode();
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1323
 
operation: REPLACE
location= org.jfree.chart.util.HashUtilities
line= 71
original statement= if (p instanceof java.awt.GradientPaint) {
	java.awt.GradientPaint gp = ((java.awt.GradientPaint)(p));
	result = 193;
	result = (37 * result) + (gp.getColor1().hashCode());
	result = (37 * result) + (gp.getPoint1().hashCode());
	result = (37 * result) + (gp.getColor2().hashCode());
	result = (37 * result) + (gp.getPoint2().hashCode());
} else {
	result = p.hashCode();
}
fixed statement= if (false) {
	java.awt.GradientPaint gp = ((java.awt.GradientPaint)(p));
	result = 193;
	result = (37 * result) + (gp.getColor1().hashCode());
	result = (37 * result) + (gp.getPoint1().hashCode());
	result = (37 * result) + (gp.getColor2().hashCode());
	result = (37 * result) + (gp.getPoint2().hashCode());
} else {
	result = p.hashCode();
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1324
 
operation: DELETE
location= org.jfree.chart.util.HashUtilities
line= 83
original statement= result = p.hashCode()
fixed statement= result = p.hashCode()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1325
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.HashUtilities
line= 83
original statement= result = p.hashCode()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1327
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.HashUtilities
line= 85
original statement= return result
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1329
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.HashUtilities
line= 121
original statement= return (37 * pre) + (b ? 0 : 1)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1331
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.HashUtilities
line= 136
original statement= return (37 * pre) + i
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1333
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.HashUtilities
line= 166
original statement= return (37 * pre) + (org.jfree.chart.util.HashUtilities.hashCodeForPaint(p))
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1335
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.HashUtilities
line= 180
original statement= int h = s != null ? s.hashCode() : 0
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1337
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.HashUtilities
line= 181
original statement= return (37 * pre) + h
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1339
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.HashUtilities
line= 227
original statement= int h = obj != null ? obj.hashCode() : 0
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1341
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.HashUtilities
line= 228
original statement= return (37 * pre) + h
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1343
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 206
original statement= int result = 127
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1344
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 207
original statement= int size = size()
fixed statement= int size = size()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1345
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 207
original statement= int size = size()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1346
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 208
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, size())
fixed statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, size())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1347
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 208
original statement= result = org.jfree.chart.util.HashUtilities.hashCode(result, size())
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1348
 
operation: DELETE
location= org.jfree.chart.util.AbstractObjectList
line= 211
original statement= if (size > 0) {
	result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[0]);
	if (size > 1) {
		result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[(size - 1)]);
		if (size > 2) {
			result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[(size / 2)]);
		} 
	} 
} 
fixed statement= if (size > 0) {
	result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[0]);
	if (size > 1) {
		result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[(size - 1)]);
		if (size > 2) {
			result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[(size / 2)]);
		} 
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1349
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 211
original statement= if (size > 0) {
	result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[0]);
	if (size > 1) {
		result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[(size - 1)]);
		if (size > 2) {
			result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[(size / 2)]);
		} 
	} 
} 
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1350
 
operation: REPLACE
location= org.jfree.chart.util.AbstractObjectList
line= 211
original statement= if (size > 0) {
	result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[0]);
	if (size > 1) {
		result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[(size - 1)]);
		if (size > 2) {
			result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[(size / 2)]);
		} 
	} 
} 
fixed statement= if (true) {
	result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[0]);
	if (size > 1) {
		result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[(size - 1)]);
		if (size > 2) {
			result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[(size / 2)]);
		} 
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1351
 
operation: REPLACE
location= org.jfree.chart.util.AbstractObjectList
line= 211
original statement= if (size > 0) {
	result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[0]);
	if (size > 1) {
		result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[(size - 1)]);
		if (size > 2) {
			result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[(size / 2)]);
		} 
	} 
} 
fixed statement= if (false) {
	result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[0]);
	if (size > 1) {
		result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[(size - 1)]);
		if (size > 2) {
			result = org.jfree.chart.util.HashUtilities.hashCode(result, this.objects[(size / 2)]);
		} 
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1353
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.AbstractObjectList
line= 221
original statement= return result
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1355
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.StrokeList
line= 125
original statement= return super.hashCode()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1357
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.BooleanList
line= 105
original statement= return super.hashCode()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1359
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintList
line= 116
original statement= return super.hashCode()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1361
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintUtilities
line= 86
original statement= java.awt.GradientPaint gp1 = ((java.awt.GradientPaint)(p1))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1363
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintUtilities
line= 87
original statement= java.awt.GradientPaint gp2 = ((java.awt.GradientPaint)(p2))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1364
 
operation: DELETE
location= org.jfree.chart.util.PaintUtilities
line= 88
original statement= result = (((((gp1.getColor1().equals(gp2.getColor1())) && (gp1.getColor2().equals(gp2.getColor2()))) && (gp1.getPoint1().equals(gp2.getPoint1()))) && (gp1.getPoint2().equals(gp2.getPoint2()))) && ((gp1.isCyclic()) == (gp2.isCyclic()))) && ((gp1.getTransparency()) == (gp1.getTransparency()))
fixed statement= result = (((((gp1.getColor1().equals(gp2.getColor1())) && (gp1.getColor2().equals(gp2.getColor2()))) && (gp1.getPoint1().equals(gp2.getPoint1()))) && (gp1.getPoint2().equals(gp2.getPoint2()))) && ((gp1.isCyclic()) == (gp2.isCyclic()))) && ((gp1.getTransparency()) == (gp1.getTransparency()))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1365
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.PaintUtilities
line= 88
original statement= result = (((((gp1.getColor1().equals(gp2.getColor1())) && (gp1.getColor2().equals(gp2.getColor2()))) && (gp1.getPoint1().equals(gp2.getPoint1()))) && (gp1.getPoint2().equals(gp2.getPoint2()))) && ((gp1.isCyclic()) == (gp2.isCyclic()))) && ((gp1.getTransparency()) == (gp1.getTransparency()))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1366
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 274
original statement= if (width != (this.candleWidth)) {
	this.candleWidth = width;
	fireChangeEvent();
} 
fixed statement= if (width != (this.candleWidth)) {
	this.candleWidth = width;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1367
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 274
original statement= if (width != (this.candleWidth)) {
	this.candleWidth = width;
	fireChangeEvent();
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1368
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 274
original statement= if (width != (this.candleWidth)) {
	this.candleWidth = width;
	fireChangeEvent();
} 
fixed statement= if (true) {
	this.candleWidth = width;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1369
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 274
original statement= if (width != (this.candleWidth)) {
	this.candleWidth = width;
	fireChangeEvent();
} 
fixed statement= if (false) {
	this.candleWidth = width;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1370
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 275
original statement= this.candleWidth = width
fixed statement= this.candleWidth = width
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1371
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 275
original statement= this.candleWidth = width
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1372
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 276
original statement= fireChangeEvent()
fixed statement= fireChangeEvent()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1373
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 276
original statement= fireChangeEvent()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1374
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 304
original statement= this.maxCandleWidthInMilliseconds = millis
fixed statement= this.maxCandleWidthInMilliseconds = millis
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1375
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 304
original statement= this.maxCandleWidthInMilliseconds = millis
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1376
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 305
original statement= fireChangeEvent()
fixed statement= fireChangeEvent()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1377
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 305
original statement= fireChangeEvent()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1378
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 346
original statement= if ((this.autoWidthMethod) != autoWidthMethod) {
	this.autoWidthMethod = autoWidthMethod;
	fireChangeEvent();
} 
fixed statement= if ((this.autoWidthMethod) != autoWidthMethod) {
	this.autoWidthMethod = autoWidthMethod;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1379
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 346
original statement= if ((this.autoWidthMethod) != autoWidthMethod) {
	this.autoWidthMethod = autoWidthMethod;
	fireChangeEvent();
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1380
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 346
original statement= if ((this.autoWidthMethod) != autoWidthMethod) {
	this.autoWidthMethod = autoWidthMethod;
	fireChangeEvent();
} 
fixed statement= if (true) {
	this.autoWidthMethod = autoWidthMethod;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1381
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 346
original statement= if ((this.autoWidthMethod) != autoWidthMethod) {
	this.autoWidthMethod = autoWidthMethod;
	fireChangeEvent();
} 
fixed statement= if (false) {
	this.autoWidthMethod = autoWidthMethod;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1382
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 347
original statement= this.autoWidthMethod = autoWidthMethod
fixed statement= this.autoWidthMethod = autoWidthMethod
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1383
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 347
original statement= this.autoWidthMethod = autoWidthMethod
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1384
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 348
original statement= fireChangeEvent()
fixed statement= fireChangeEvent()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1385
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 348
original statement= fireChangeEvent()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1386
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 378
original statement= if ((this.autoWidthFactor) != autoWidthFactor) {
	this.autoWidthFactor = autoWidthFactor;
	fireChangeEvent();
} 
fixed statement= if ((this.autoWidthFactor) != autoWidthFactor) {
	this.autoWidthFactor = autoWidthFactor;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1387
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 378
original statement= if ((this.autoWidthFactor) != autoWidthFactor) {
	this.autoWidthFactor = autoWidthFactor;
	fireChangeEvent();
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1388
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 378
original statement= if ((this.autoWidthFactor) != autoWidthFactor) {
	this.autoWidthFactor = autoWidthFactor;
	fireChangeEvent();
} 
fixed statement= if (true) {
	this.autoWidthFactor = autoWidthFactor;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1389
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 378
original statement= if ((this.autoWidthFactor) != autoWidthFactor) {
	this.autoWidthFactor = autoWidthFactor;
	fireChangeEvent();
} 
fixed statement= if (false) {
	this.autoWidthFactor = autoWidthFactor;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1390
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 379
original statement= this.autoWidthFactor = autoWidthFactor
fixed statement= this.autoWidthFactor = autoWidthFactor
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1391
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 379
original statement= this.autoWidthFactor = autoWidthFactor
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1392
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 380
original statement= fireChangeEvent()
fixed statement= fireChangeEvent()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1393
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 380
original statement= fireChangeEvent()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1394
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 410
original statement= if ((this.autoWidthGap) != autoWidthGap) {
	this.autoWidthGap = autoWidthGap;
	fireChangeEvent();
} 
fixed statement= if ((this.autoWidthGap) != autoWidthGap) {
	this.autoWidthGap = autoWidthGap;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1395
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 410
original statement= if ((this.autoWidthGap) != autoWidthGap) {
	this.autoWidthGap = autoWidthGap;
	fireChangeEvent();
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1396
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 410
original statement= if ((this.autoWidthGap) != autoWidthGap) {
	this.autoWidthGap = autoWidthGap;
	fireChangeEvent();
} 
fixed statement= if (true) {
	this.autoWidthGap = autoWidthGap;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1397
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 410
original statement= if ((this.autoWidthGap) != autoWidthGap) {
	this.autoWidthGap = autoWidthGap;
	fireChangeEvent();
} 
fixed statement= if (false) {
	this.autoWidthGap = autoWidthGap;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1398
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 411
original statement= this.autoWidthGap = autoWidthGap
fixed statement= this.autoWidthGap = autoWidthGap
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1399
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 411
original statement= this.autoWidthGap = autoWidthGap
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1400
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 412
original statement= fireChangeEvent()
fixed statement= fireChangeEvent()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1401
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 412
original statement= fireChangeEvent()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1402
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 438
original statement= this.upPaint = paint
fixed statement= this.upPaint = paint
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1403
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 438
original statement= this.upPaint = paint
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1404
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 439
original statement= fireChangeEvent()
fixed statement= fireChangeEvent()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1405
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 439
original statement= fireChangeEvent()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1406
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 462
original statement= this.downPaint = paint
fixed statement= this.downPaint = paint
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1407
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 462
original statement= this.downPaint = paint
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1408
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 463
original statement= fireChangeEvent()
fixed statement= fireChangeEvent()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1409
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 463
original statement= fireChangeEvent()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1410
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 490
original statement= if ((this.drawVolume) != flag) {
	this.drawVolume = flag;
	fireChangeEvent();
} 
fixed statement= if ((this.drawVolume) != flag) {
	this.drawVolume = flag;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1411
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 490
original statement= if ((this.drawVolume) != flag) {
	this.drawVolume = flag;
	fireChangeEvent();
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1412
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 490
original statement= if ((this.drawVolume) != flag) {
	this.drawVolume = flag;
	fireChangeEvent();
} 
fixed statement= if (true) {
	this.drawVolume = flag;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1413
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 490
original statement= if ((this.drawVolume) != flag) {
	this.drawVolume = flag;
	fireChangeEvent();
} 
fixed statement= if (false) {
	this.drawVolume = flag;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1414
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 491
original statement= this.drawVolume = flag
fixed statement= this.drawVolume = flag
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1415
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 491
original statement= this.drawVolume = flag
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1416
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 492
original statement= fireChangeEvent()
fixed statement= fireChangeEvent()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1417
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 492
original statement= fireChangeEvent()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1418
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 522
original statement= if (paint == null) {
	throw new java.lang.IllegalArgumentException("Null \'paint\' argument.");
} 
fixed statement= if (paint == null) {
	throw new java.lang.IllegalArgumentException("Null \'paint\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1419
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 522
original statement= if (paint == null) {
	throw new java.lang.IllegalArgumentException("Null \'paint\' argument.");
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1420
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 522
original statement= if (paint == null) {
	throw new java.lang.IllegalArgumentException("Null \'paint\' argument.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Null \'paint\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1421
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 522
original statement= if (paint == null) {
	throw new java.lang.IllegalArgumentException("Null \'paint\' argument.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Null \'paint\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1422
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 525
original statement= this.volumePaint = paint
fixed statement= this.volumePaint = paint
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1423
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 525
original statement= this.volumePaint = paint
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1424
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 526
original statement= fireChangeEvent()
fixed statement= fireChangeEvent()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1425
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 526
original statement= fireChangeEvent()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1426
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 556
original statement= if ((this.useOutlinePaint) != use) {
	this.useOutlinePaint = use;
	fireChangeEvent();
} 
fixed statement= if ((this.useOutlinePaint) != use) {
	this.useOutlinePaint = use;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1427
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 556
original statement= if ((this.useOutlinePaint) != use) {
	this.useOutlinePaint = use;
	fireChangeEvent();
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1428
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 556
original statement= if ((this.useOutlinePaint) != use) {
	this.useOutlinePaint = use;
	fireChangeEvent();
} 
fixed statement= if (true) {
	this.useOutlinePaint = use;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1429
 
operation: REPLACE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 556
original statement= if ((this.useOutlinePaint) != use) {
	this.useOutlinePaint = use;
	fireChangeEvent();
} 
fixed statement= if (false) {
	this.useOutlinePaint = use;
	fireChangeEvent();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1430
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 557
original statement= this.useOutlinePaint = use
fixed statement= this.useOutlinePaint = use
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1431
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 557
original statement= this.useOutlinePaint = use
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1432
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 558
original statement= fireChangeEvent()
fixed statement= fireChangeEvent()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1433
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 558
original statement= fireChangeEvent()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1434
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 890
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1435
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 890
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1436
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 893
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1437
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 893
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1438
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 896
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1439
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 896
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1440
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 899
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1441
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 899
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1442
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 903
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1443
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 903
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1444
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 906
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1445
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 906
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1446
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 909
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1447
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 909
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1448
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 912
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1449
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 912
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1450
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 915
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1451
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 915
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1452
 
operation: DELETE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 918
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1453
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 918
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1455
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 257
original statement= return this.candleWidth
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1457
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 425
original statement= return this.upPaint
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1459
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 451
original statement= return this.downPaint
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1461
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 477
original statement= return this.drawVolume
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1463
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 507
original statement= return this.volumePaint
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1465
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.xy.CandlestickRenderer
line= 541
original statement= return this.useOutlinePaint
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1466
 
operation: DELETE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 306
original statement= if (this == obj) {
	return true;
} 
fixed statement= if (this == obj) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1467
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 306
original statement= if (this == obj) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1468
 
operation: REPLACE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 306
original statement= if (this == obj) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1469
 
operation: REPLACE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 306
original statement= if (this == obj) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1470
 
operation: DELETE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 309
original statement= if (!(obj instanceof org.jfree.data.xy.DefaultOHLCDataset)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.data.xy.DefaultOHLCDataset)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1471
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 309
original statement= if (!(obj instanceof org.jfree.data.xy.DefaultOHLCDataset)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1472
 
operation: REPLACE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 309
original statement= if (!(obj instanceof org.jfree.data.xy.DefaultOHLCDataset)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1473
 
operation: REPLACE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 309
original statement= if (!(obj instanceof org.jfree.data.xy.DefaultOHLCDataset)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1475
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 312
original statement= org.jfree.data.xy.DefaultOHLCDataset that = ((org.jfree.data.xy.DefaultOHLCDataset)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1476
 
operation: DELETE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 313
original statement= if (!(this.key.equals(that.key))) {
	return false;
} 
fixed statement= if (!(this.key.equals(that.key))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1477
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 313
original statement= if (!(this.key.equals(that.key))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1478
 
operation: REPLACE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 313
original statement= if (!(this.key.equals(that.key))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1479
 
operation: REPLACE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 313
original statement= if (!(this.key.equals(that.key))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1480
 
operation: DELETE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 316
original statement= if (!(java.util.Arrays.equals(this.data, that.data))) {
	return false;
} 
fixed statement= if (!(java.util.Arrays.equals(this.data, that.data))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1481
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 316
original statement= if (!(java.util.Arrays.equals(this.data, that.data))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1482
 
operation: REPLACE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 316
original statement= if (!(java.util.Arrays.equals(this.data, that.data))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1483
 
operation: REPLACE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 316
original statement= if (!(java.util.Arrays.equals(this.data, that.data))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1485
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 319
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1486
 
operation: DELETE
location= org.jfree.data.xy.OHLCDataItem
line= 165
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1487
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.OHLCDataItem
line= 165
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1488
 
operation: REPLACE
location= org.jfree.data.xy.OHLCDataItem
line= 165
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1489
 
operation: REPLACE
location= org.jfree.data.xy.OHLCDataItem
line= 165
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1490
 
operation: DELETE
location= org.jfree.data.xy.OHLCDataItem
line= 168
original statement= if (!(obj instanceof org.jfree.data.xy.OHLCDataItem)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.data.xy.OHLCDataItem)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1491
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.OHLCDataItem
line= 168
original statement= if (!(obj instanceof org.jfree.data.xy.OHLCDataItem)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1492
 
operation: REPLACE
location= org.jfree.data.xy.OHLCDataItem
line= 168
original statement= if (!(obj instanceof org.jfree.data.xy.OHLCDataItem)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1493
 
operation: REPLACE
location= org.jfree.data.xy.OHLCDataItem
line= 168
original statement= if (!(obj instanceof org.jfree.data.xy.OHLCDataItem)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1495
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.OHLCDataItem
line= 171
original statement= org.jfree.data.xy.OHLCDataItem that = ((org.jfree.data.xy.OHLCDataItem)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1496
 
operation: DELETE
location= org.jfree.data.xy.OHLCDataItem
line= 172
original statement= if (!(this.date.equals(that.date))) {
	return false;
} 
fixed statement= if (!(this.date.equals(that.date))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1497
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.OHLCDataItem
line= 172
original statement= if (!(this.date.equals(that.date))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1498
 
operation: REPLACE
location= org.jfree.data.xy.OHLCDataItem
line= 172
original statement= if (!(this.date.equals(that.date))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1499
 
operation: REPLACE
location= org.jfree.data.xy.OHLCDataItem
line= 172
original statement= if (!(this.date.equals(that.date))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1500
 
operation: DELETE
location= org.jfree.data.xy.OHLCDataItem
line= 175
original statement= if (!(this.high.equals(that.high))) {
	return false;
} 
fixed statement= if (!(this.high.equals(that.high))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1501
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.OHLCDataItem
line= 175
original statement= if (!(this.high.equals(that.high))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1502
 
operation: REPLACE
location= org.jfree.data.xy.OHLCDataItem
line= 175
original statement= if (!(this.high.equals(that.high))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1503
 
operation: REPLACE
location= org.jfree.data.xy.OHLCDataItem
line= 175
original statement= if (!(this.high.equals(that.high))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1504
 
operation: DELETE
location= org.jfree.data.xy.OHLCDataItem
line= 178
original statement= if (!(this.low.equals(that.low))) {
	return false;
} 
fixed statement= if (!(this.low.equals(that.low))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1505
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.OHLCDataItem
line= 178
original statement= if (!(this.low.equals(that.low))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1506
 
operation: REPLACE
location= org.jfree.data.xy.OHLCDataItem
line= 178
original statement= if (!(this.low.equals(that.low))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1507
 
operation: REPLACE
location= org.jfree.data.xy.OHLCDataItem
line= 178
original statement= if (!(this.low.equals(that.low))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1508
 
operation: DELETE
location= org.jfree.data.xy.OHLCDataItem
line= 181
original statement= if (!(this.open.equals(that.open))) {
	return false;
} 
fixed statement= if (!(this.open.equals(that.open))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1509
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.OHLCDataItem
line= 181
original statement= if (!(this.open.equals(that.open))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1510
 
operation: REPLACE
location= org.jfree.data.xy.OHLCDataItem
line= 181
original statement= if (!(this.open.equals(that.open))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1511
 
operation: REPLACE
location= org.jfree.data.xy.OHLCDataItem
line= 181
original statement= if (!(this.open.equals(that.open))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1512
 
operation: DELETE
location= org.jfree.data.xy.OHLCDataItem
line= 184
original statement= if (!(this.close.equals(that.close))) {
	return false;
} 
fixed statement= if (!(this.close.equals(that.close))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1513
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.OHLCDataItem
line= 184
original statement= if (!(this.close.equals(that.close))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1514
 
operation: REPLACE
location= org.jfree.data.xy.OHLCDataItem
line= 184
original statement= if (!(this.close.equals(that.close))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1515
 
operation: REPLACE
location= org.jfree.data.xy.OHLCDataItem
line= 184
original statement= if (!(this.close.equals(that.close))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1517
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.OHLCDataItem
line= 187
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1518
 
operation: DELETE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 314
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1519
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 314
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1520
 
operation: DELETE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 317
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1521
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.DefaultOHLCDataset
line= 317
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1523
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 144
original statement= return itemIndex / (getColumnsCount())
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1525
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 121
original statement= return itemIndex % (getColumnsCount())
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1527
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 103
original statement= int i = getItemRow(itemIndex)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1529
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 104
original statement= int j = getItemColumn(itemIndex)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1531
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 106
original statement= java.lang.Number n = new java.lang.Double(get(i, j))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1533
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 108
original statement= return n
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1534
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 222
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1535
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 222
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1536
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 225
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1537
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 225
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1538
 
operation: DELETE
location= org.jfree.data.xy.MatrixSeries
line= 230
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1539
 
operation: INSERT_BEFORE
location= org.jfree.data.xy.MatrixSeries
line= 230
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1540
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 274
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1541
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 274
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1542
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 274
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1543
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 274
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1544
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 277
original statement= if (!(obj instanceof org.jfree.chart.block.GridArrangement)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.chart.block.GridArrangement)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1545
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 277
original statement= if (!(obj instanceof org.jfree.chart.block.GridArrangement)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1546
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 277
original statement= if (!(obj instanceof org.jfree.chart.block.GridArrangement)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1547
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 277
original statement= if (!(obj instanceof org.jfree.chart.block.GridArrangement)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1549
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 280
original statement= org.jfree.chart.block.GridArrangement that = ((org.jfree.chart.block.GridArrangement)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1550
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 281
original statement= if ((this.columns) != (that.columns)) {
	return false;
} 
fixed statement= if ((this.columns) != (that.columns)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1551
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 281
original statement= if ((this.columns) != (that.columns)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1552
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 281
original statement= if ((this.columns) != (that.columns)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1553
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 281
original statement= if ((this.columns) != (that.columns)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1554
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 284
original statement= if ((this.rows) != (that.rows)) {
	return false;
} 
fixed statement= if ((this.rows) != (that.rows)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1555
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 284
original statement= if ((this.rows) != (that.rows)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1556
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 284
original statement= if ((this.rows) != (that.rows)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1557
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 284
original statement= if ((this.rows) != (that.rows)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1559
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 287
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1561
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.BlockBorder
line= 145
original statement= return this.insets
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1563
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.RectangleInsets
line= 396
original statement= double result = this.top
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1564
 
operation: DELETE
location= org.jfree.chart.util.RectangleInsets
line= 397
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (height / ((1 - (this.top)) - (this.bottom))) * (this.top);
} 
fixed statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (height / ((1 - (this.top)) - (this.bottom))) * (this.top);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1565
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.RectangleInsets
line= 397
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (height / ((1 - (this.top)) - (this.bottom))) * (this.top);
} 
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1566
 
operation: REPLACE
location= org.jfree.chart.util.RectangleInsets
line= 397
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (height / ((1 - (this.top)) - (this.bottom))) * (this.top);
} 
fixed statement= if (true) {
	result = (height / ((1 - (this.top)) - (this.bottom))) * (this.top);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1567
 
operation: REPLACE
location= org.jfree.chart.util.RectangleInsets
line= 397
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (height / ((1 - (this.top)) - (this.bottom))) * (this.top);
} 
fixed statement= if (false) {
	result = (height / ((1 - (this.top)) - (this.bottom))) * (this.top);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1569
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.RectangleInsets
line= 400
original statement= return result
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1571
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.RectangleInsets
line= 426
original statement= double result = this.bottom
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1572
 
operation: DELETE
location= org.jfree.chart.util.RectangleInsets
line= 427
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (height / ((1 - (this.top)) - (this.bottom))) * (this.bottom);
} 
fixed statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (height / ((1 - (this.top)) - (this.bottom))) * (this.bottom);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1573
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.RectangleInsets
line= 427
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (height / ((1 - (this.top)) - (this.bottom))) * (this.bottom);
} 
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1574
 
operation: REPLACE
location= org.jfree.chart.util.RectangleInsets
line= 427
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (height / ((1 - (this.top)) - (this.bottom))) * (this.bottom);
} 
fixed statement= if (true) {
	result = (height / ((1 - (this.top)) - (this.bottom))) * (this.bottom);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1575
 
operation: REPLACE
location= org.jfree.chart.util.RectangleInsets
line= 427
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (height / ((1 - (this.top)) - (this.bottom))) * (this.bottom);
} 
fixed statement= if (false) {
	result = (height / ((1 - (this.top)) - (this.bottom))) * (this.bottom);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1577
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.RectangleInsets
line= 430
original statement= return result
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1579
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.RectangleInsets
line= 456
original statement= double result = this.left
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1580
 
operation: DELETE
location= org.jfree.chart.util.RectangleInsets
line= 457
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (width / ((1 - (this.left)) - (this.right))) * (this.left);
} 
fixed statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (width / ((1 - (this.left)) - (this.right))) * (this.left);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1581
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.RectangleInsets
line= 457
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (width / ((1 - (this.left)) - (this.right))) * (this.left);
} 
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1582
 
operation: REPLACE
location= org.jfree.chart.util.RectangleInsets
line= 457
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (width / ((1 - (this.left)) - (this.right))) * (this.left);
} 
fixed statement= if (true) {
	result = (width / ((1 - (this.left)) - (this.right))) * (this.left);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1583
 
operation: REPLACE
location= org.jfree.chart.util.RectangleInsets
line= 457
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (width / ((1 - (this.left)) - (this.right))) * (this.left);
} 
fixed statement= if (false) {
	result = (width / ((1 - (this.left)) - (this.right))) * (this.left);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1585
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.RectangleInsets
line= 460
original statement= return result
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1587
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.RectangleInsets
line= 486
original statement= double result = this.right
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1588
 
operation: DELETE
location= org.jfree.chart.util.RectangleInsets
line= 487
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (width / ((1 - (this.left)) - (this.right))) * (this.right);
} 
fixed statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (width / ((1 - (this.left)) - (this.right))) * (this.right);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1589
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.RectangleInsets
line= 487
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (width / ((1 - (this.left)) - (this.right))) * (this.right);
} 
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1590
 
operation: REPLACE
location= org.jfree.chart.util.RectangleInsets
line= 487
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (width / ((1 - (this.left)) - (this.right))) * (this.right);
} 
fixed statement= if (true) {
	result = (width / ((1 - (this.left)) - (this.right))) * (this.right);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1591
 
operation: REPLACE
location= org.jfree.chart.util.RectangleInsets
line= 487
original statement= if ((this.unitType) == (org.jfree.chart.util.UnitType.RELATIVE)) {
	result = (width / ((1 - (this.left)) - (this.right))) * (this.right);
} 
fixed statement= if (false) {
	result = (width / ((1 - (this.left)) - (this.right))) * (this.right);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1593
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.RectangleInsets
line= 490
original statement= return result
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1595
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.RectangleInsets
line= 512
original statement= return (width + (calculateLeftOutset(width))) + (calculateRightOutset(width))
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1597
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.RectangleInsets
line= 535
original statement= return (height + (calculateTopOutset(height))) + (calculateBottomOutset(height))
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1599
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.EmptyBlock
line= 85
original statement= return new org.jfree.chart.util.Size2D(calculateTotalWidth(getWidth()) , calculateTotalHeight(getHeight()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1601
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.Size2D
line= 110
original statement= return this.height
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1603
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.RectangleConstraint
line= 170
original statement= return this.width
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1605
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.RectangleConstraint
line= 188
original statement= return this.widthConstraintType
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1607
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.RectangleConstraint
line= 197
original statement= return this.height
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1609
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.RectangleConstraint
line= 215
original statement= return this.heightConstraintType
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1611
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.RectangleConstraint
line= 263
original statement= return new org.jfree.chart.block.RectangleConstraint(width , this.widthRange , org.jfree.chart.block.LengthConstraintType.FIXED , this.height , this.heightRange , this.heightConstraintType)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1613
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.RectangleConstraint
line= 278
original statement= return new org.jfree.chart.block.RectangleConstraint(this.width , this.widthRange , this.widthConstraintType , height , this.heightRange , org.jfree.chart.block.LengthConstraintType.FIXED)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1615
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.BlockContainer
line= 141
original statement= return java.util.Collections.unmodifiableList(this.blocks)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1616
 
operation: DELETE
location= org.jfree.chart.block.BlockContainer
line= 150
original statement= add(block, null)
fixed statement= add(block, null)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1617
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.BlockContainer
line= 150
original statement= add(block, null)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1618
 
operation: DELETE
location= org.jfree.chart.block.BlockContainer
line= 160
original statement= this.blocks.add(block)
fixed statement= this.blocks.add(block)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1619
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.BlockContainer
line= 160
original statement= this.blocks.add(block)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1620
 
operation: DELETE
location= org.jfree.chart.block.BlockContainer
line= 161
original statement= this.arrangement.add(block, key)
fixed statement= this.arrangement.add(block, key)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1621
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.BlockContainer
line= 161
original statement= this.arrangement.add(block, key)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1623
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.BlockContainer
line= 182
original statement= return this.arrangement.arrange(this, g2, constraint)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1625
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 151
original statement= return this.width
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1626
 
operation: DELETE
location= org.jfree.chart.block.AbstractBlock
line= 162
original statement= this.width = width
fixed statement= this.width = width
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1627
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 162
original statement= this.width = width
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1629
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 175
original statement= return this.height
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1630
 
operation: DELETE
location= org.jfree.chart.block.AbstractBlock
line= 186
original statement= this.height = height
fixed statement= this.height = height
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1631
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 186
original statement= this.height = height
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1632
 
operation: DELETE
location= org.jfree.chart.block.AbstractBlock
line= 365
original statement= if (bounds == null) {
	throw new java.lang.IllegalArgumentException("Null \'bounds\' argument.");
} 
fixed statement= if (bounds == null) {
	throw new java.lang.IllegalArgumentException("Null \'bounds\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1633
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 365
original statement= if (bounds == null) {
	throw new java.lang.IllegalArgumentException("Null \'bounds\' argument.");
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1634
 
operation: REPLACE
location= org.jfree.chart.block.AbstractBlock
line= 365
original statement= if (bounds == null) {
	throw new java.lang.IllegalArgumentException("Null \'bounds\' argument.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Null \'bounds\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1635
 
operation: REPLACE
location= org.jfree.chart.block.AbstractBlock
line= 365
original statement= if (bounds == null) {
	throw new java.lang.IllegalArgumentException("Null \'bounds\' argument.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Null \'bounds\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1636
 
operation: DELETE
location= org.jfree.chart.block.AbstractBlock
line= 368
original statement= this.bounds = bounds
fixed statement= this.bounds = bounds
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1637
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 368
original statement= this.bounds = bounds
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1639
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 474
original statement= double result = contentWidth
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1640
 
operation: DELETE
location= org.jfree.chart.block.AbstractBlock
line= 475
original statement= result = this.padding.extendWidth(result)
fixed statement= result = this.padding.extendWidth(result)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1641
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 475
original statement= result = this.padding.extendWidth(result)
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1642
 
operation: DELETE
location= org.jfree.chart.block.AbstractBlock
line= 476
original statement= result = this.frame.getInsets().extendWidth(result)
fixed statement= result = this.frame.getInsets().extendWidth(result)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1643
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 476
original statement= result = this.frame.getInsets().extendWidth(result)
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1644
 
operation: DELETE
location= org.jfree.chart.block.AbstractBlock
line= 477
original statement= result = this.margin.extendWidth(result)
fixed statement= result = this.margin.extendWidth(result)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1645
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 477
original statement= result = this.margin.extendWidth(result)
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1647
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 478
original statement= return result
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1649
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 489
original statement= double result = contentHeight
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1650
 
operation: DELETE
location= org.jfree.chart.block.AbstractBlock
line= 490
original statement= result = this.padding.extendHeight(result)
fixed statement= result = this.padding.extendHeight(result)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1651
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 490
original statement= result = this.padding.extendHeight(result)
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1652
 
operation: DELETE
location= org.jfree.chart.block.AbstractBlock
line= 491
original statement= result = this.frame.getInsets().extendHeight(result)
fixed statement= result = this.frame.getInsets().extendHeight(result)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1653
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 491
original statement= result = this.frame.getInsets().extendHeight(result)
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1654
 
operation: DELETE
location= org.jfree.chart.block.AbstractBlock
line= 492
original statement= result = this.margin.extendHeight(result)
fixed statement= result = this.margin.extendHeight(result)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1655
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 492
original statement= result = this.margin.extendHeight(result)
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1657
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.AbstractBlock
line= 493
original statement= return result
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1659
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 102
original statement= org.jfree.chart.block.LengthConstraintType w = constraint.getWidthConstraintType()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1661
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 103
original statement= org.jfree.chart.block.LengthConstraintType h = constraint.getHeightConstraintType()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1662
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 104
original statement= if (w == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		return arrangeNN(container, g2);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} 
} else if (w == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		return arrangeFN(container, g2, constraint);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		return arrangeFF(container, g2, constraint);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		return arrangeFR(container, g2, constraint);
	} 
} else if (w == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} 
} 
fixed statement= if (w == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		return arrangeNN(container, g2);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} 
} else if (w == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		return arrangeFN(container, g2, constraint);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		return arrangeFF(container, g2, constraint);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		return arrangeFR(container, g2, constraint);
	} 
} else if (w == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1663
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 104
original statement= if (w == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		return arrangeNN(container, g2);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} 
} else if (w == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		return arrangeFN(container, g2, constraint);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		return arrangeFF(container, g2, constraint);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		return arrangeFR(container, g2, constraint);
	} 
} else if (w == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} 
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1664
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 104
original statement= if (w == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		return arrangeNN(container, g2);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} 
} else if (w == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		return arrangeFN(container, g2, constraint);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		return arrangeFF(container, g2, constraint);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		return arrangeFR(container, g2, constraint);
	} 
} else if (w == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} 
} 
fixed statement= if (true) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		return arrangeNN(container, g2);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} 
} else if (w == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		return arrangeFN(container, g2, constraint);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		return arrangeFF(container, g2, constraint);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		return arrangeFR(container, g2, constraint);
	} 
} else if (w == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1665
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 104
original statement= if (w == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		return arrangeNN(container, g2);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} 
} else if (w == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		return arrangeFN(container, g2, constraint);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		return arrangeFF(container, g2, constraint);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		return arrangeFR(container, g2, constraint);
	} 
} else if (w == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} 
} 
fixed statement= if (false) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		return arrangeNN(container, g2);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} 
} else if (w == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		return arrangeFN(container, g2, constraint);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		return arrangeFF(container, g2, constraint);
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		return arrangeFR(container, g2, constraint);
	} 
} else if (w == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
		throw new java.lang.RuntimeException("Not yet implemented.");
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1666
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 118
original statement= if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	return arrangeFN(container, g2, constraint);
} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	return arrangeFF(container, g2, constraint);
} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	return arrangeFR(container, g2, constraint);
} 
fixed statement= if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	return arrangeFN(container, g2, constraint);
} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	return arrangeFF(container, g2, constraint);
} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	return arrangeFR(container, g2, constraint);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1667
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 118
original statement= if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	return arrangeFN(container, g2, constraint);
} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	return arrangeFF(container, g2, constraint);
} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	return arrangeFR(container, g2, constraint);
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1668
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 118
original statement= if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	return arrangeFN(container, g2, constraint);
} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	return arrangeFF(container, g2, constraint);
} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	return arrangeFR(container, g2, constraint);
} 
fixed statement= if (true) {
	return arrangeFN(container, g2, constraint);
} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	return arrangeFF(container, g2, constraint);
} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	return arrangeFR(container, g2, constraint);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1669
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 118
original statement= if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	return arrangeFN(container, g2, constraint);
} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	return arrangeFF(container, g2, constraint);
} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	return arrangeFR(container, g2, constraint);
} 
fixed statement= if (false) {
	return arrangeFN(container, g2, constraint);
} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	return arrangeFF(container, g2, constraint);
} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	return arrangeFR(container, g2, constraint);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1670
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 120
original statement= return arrangeFN(container, g2, constraint)
fixed statement= return arrangeFN(container, g2, constraint)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1671
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 120
original statement= return arrangeFN(container, g2, constraint)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1672
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 123
original statement= return arrangeFF(container, g2, constraint)
fixed statement= return arrangeFF(container, g2, constraint)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1673
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 123
original statement= return arrangeFF(container, g2, constraint)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1675
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 183
original statement= double width = (constraint.getWidth()) / (this.columns)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1677
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 184
original statement= double height = (constraint.getHeight()) / (this.rows)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1679
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 185
original statement= java.util.List blocks = container.getBlocks()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1680
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 186
original statement= for (int c = 0 ; c < (this.columns) ; c++) {
	for (int r = 0 ; r < (this.rows) ; r++) {
		int index = (r * (this.columns)) + c;
		if (index == (blocks.size())) {
			break;
		} 
		org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(blocks.get(index)));
		b.setBounds(new java.awt.geom.Rectangle2D.Double((c * width) , (r * height) , width , height));
	}
}
fixed statement= for (int c = 0 ; c < (this.columns) ; c++) {
	for (int r = 0 ; r < (this.rows) ; r++) {
		int index = (r * (this.columns)) + c;
		if (index == (blocks.size())) {
			break;
		} 
		org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(blocks.get(index)));
		b.setBounds(new java.awt.geom.Rectangle2D.Double((c * width) , (r * height) , width , height));
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1681
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 186
original statement= for (int c = 0 ; c < (this.columns) ; c++) {
	for (int r = 0 ; r < (this.rows) ; r++) {
		int index = (r * (this.columns)) + c;
		if (index == (blocks.size())) {
			break;
		} 
		org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(blocks.get(index)));
		b.setBounds(new java.awt.geom.Rectangle2D.Double((c * width) , (r * height) , width , height));
	}
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1682
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 187
original statement= for (int r = 0 ; r < (this.rows) ; r++) {
	int index = (r * (this.columns)) + c;
	if (index == (blocks.size())) {
		break;
	} 
	org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(blocks.get(index)));
	b.setBounds(new java.awt.geom.Rectangle2D.Double((c * width) , (r * height) , width , height));
}
fixed statement= for (int r = 0 ; r < (this.rows) ; r++) {
	int index = (r * (this.columns)) + c;
	if (index == (blocks.size())) {
		break;
	} 
	org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(blocks.get(index)));
	b.setBounds(new java.awt.geom.Rectangle2D.Double((c * width) , (r * height) , width , height));
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1683
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 187
original statement= for (int r = 0 ; r < (this.rows) ; r++) {
	int index = (r * (this.columns)) + c;
	if (index == (blocks.size())) {
		break;
	} 
	org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(blocks.get(index)));
	b.setBounds(new java.awt.geom.Rectangle2D.Double((c * width) , (r * height) , width , height));
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1685
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 188
original statement= int index = (r * (this.columns)) + c
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1686
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 189
original statement= if (index == (blocks.size())) {
	break;
} 
fixed statement= if (index == (blocks.size())) {
	break;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1687
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 189
original statement= if (index == (blocks.size())) {
	break;
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1688
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 189
original statement= if (index == (blocks.size())) {
	break;
} 
fixed statement= if (true) {
	break;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1689
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 189
original statement= if (index == (blocks.size())) {
	break;
} 
fixed statement= if (false) {
	break;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1691
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 192
original statement= org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(blocks.get(index)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1692
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 193
original statement= b.setBounds(new java.awt.geom.Rectangle2D.Double((c * width) , (r * height) , width , height))
fixed statement= b.setBounds(new java.awt.geom.Rectangle2D.Double((c * width) , (r * height) , width , height))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1693
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 193
original statement= b.setBounds(new java.awt.geom.Rectangle2D.Double((c * width) , (r * height) , width , height))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1695
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 198
original statement= return new org.jfree.chart.util.Size2D(((this.columns) * width) , ((this.rows) * height))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1697
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 238
original statement= double width = (constraint.getWidth()) / (this.columns)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1699
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 239
original statement= org.jfree.chart.block.RectangleConstraint constraint2 = constraint.toFixedWidth(width)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1701
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 240
original statement= java.util.List blocks = container.getBlocks()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1703
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 241
original statement= double maxH = 0.0
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1704
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 242
original statement= for (int r = 0 ; r < (this.rows) ; r++) {
	for (int c = 0 ; c < (this.columns) ; c++) {
		int index = (r * (this.columns)) + c;
		if (index == (blocks.size())) {
			break;
		} 
		org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(blocks.get(index)));
		org.jfree.chart.util.Size2D s = b.arrange(g2, constraint2);
		maxH = java.lang.Math.max(maxH, s.getHeight());
	}
}
fixed statement= for (int r = 0 ; r < (this.rows) ; r++) {
	for (int c = 0 ; c < (this.columns) ; c++) {
		int index = (r * (this.columns)) + c;
		if (index == (blocks.size())) {
			break;
		} 
		org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(blocks.get(index)));
		org.jfree.chart.util.Size2D s = b.arrange(g2, constraint2);
		maxH = java.lang.Math.max(maxH, s.getHeight());
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1705
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 242
original statement= for (int r = 0 ; r < (this.rows) ; r++) {
	for (int c = 0 ; c < (this.columns) ; c++) {
		int index = (r * (this.columns)) + c;
		if (index == (blocks.size())) {
			break;
		} 
		org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(blocks.get(index)));
		org.jfree.chart.util.Size2D s = b.arrange(g2, constraint2);
		maxH = java.lang.Math.max(maxH, s.getHeight());
	}
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1706
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 243
original statement= for (int c = 0 ; c < (this.columns) ; c++) {
	int index = (r * (this.columns)) + c;
	if (index == (blocks.size())) {
		break;
	} 
	org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(blocks.get(index)));
	org.jfree.chart.util.Size2D s = b.arrange(g2, constraint2);
	maxH = java.lang.Math.max(maxH, s.getHeight());
}
fixed statement= for (int c = 0 ; c < (this.columns) ; c++) {
	int index = (r * (this.columns)) + c;
	if (index == (blocks.size())) {
		break;
	} 
	org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(blocks.get(index)));
	org.jfree.chart.util.Size2D s = b.arrange(g2, constraint2);
	maxH = java.lang.Math.max(maxH, s.getHeight());
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1707
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 243
original statement= for (int c = 0 ; c < (this.columns) ; c++) {
	int index = (r * (this.columns)) + c;
	if (index == (blocks.size())) {
		break;
	} 
	org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(blocks.get(index)));
	org.jfree.chart.util.Size2D s = b.arrange(g2, constraint2);
	maxH = java.lang.Math.max(maxH, s.getHeight());
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1709
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 244
original statement= int index = (r * (this.columns)) + c
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1710
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 245
original statement= if (index == (blocks.size())) {
	break;
} 
fixed statement= if (index == (blocks.size())) {
	break;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1711
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 245
original statement= if (index == (blocks.size())) {
	break;
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1712
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 245
original statement= if (index == (blocks.size())) {
	break;
} 
fixed statement= if (true) {
	break;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1713
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 245
original statement= if (index == (blocks.size())) {
	break;
} 
fixed statement= if (false) {
	break;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1715
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 248
original statement= org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(blocks.get(index)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1717
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 249
original statement= org.jfree.chart.util.Size2D s = b.arrange(g2, constraint2)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1718
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 250
original statement= maxH = java.lang.Math.max(maxH, s.getHeight())
fixed statement= maxH = java.lang.Math.max(maxH, s.getHeight())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1719
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 250
original statement= maxH = java.lang.Math.max(maxH, s.getHeight())
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1721
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 253
original statement= org.jfree.chart.block.RectangleConstraint constraint3 = constraint.toFixedHeight((maxH * (this.rows)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1723
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 256
original statement= return arrange(container, g2, constraint3)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1724
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 105
original statement= if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	return arrangeNN(container, g2);
} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	throw new java.lang.RuntimeException("Not yet implemented.");
} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	throw new java.lang.RuntimeException("Not yet implemented.");
} 
fixed statement= if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	return arrangeNN(container, g2);
} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	throw new java.lang.RuntimeException("Not yet implemented.");
} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	throw new java.lang.RuntimeException("Not yet implemented.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1725
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 105
original statement= if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	return arrangeNN(container, g2);
} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	throw new java.lang.RuntimeException("Not yet implemented.");
} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	throw new java.lang.RuntimeException("Not yet implemented.");
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1726
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 105
original statement= if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	return arrangeNN(container, g2);
} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	throw new java.lang.RuntimeException("Not yet implemented.");
} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	throw new java.lang.RuntimeException("Not yet implemented.");
} 
fixed statement= if (true) {
	return arrangeNN(container, g2);
} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	throw new java.lang.RuntimeException("Not yet implemented.");
} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	throw new java.lang.RuntimeException("Not yet implemented.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1727
 
operation: REPLACE
location= org.jfree.chart.block.GridArrangement
line= 105
original statement= if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
	return arrangeNN(container, g2);
} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	throw new java.lang.RuntimeException("Not yet implemented.");
} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	throw new java.lang.RuntimeException("Not yet implemented.");
} 
fixed statement= if (false) {
	return arrangeNN(container, g2);
} else if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
	throw new java.lang.RuntimeException("Not yet implemented.");
} else if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
	throw new java.lang.RuntimeException("Not yet implemented.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1728
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 106
original statement= return arrangeNN(container, g2)
fixed statement= return arrangeNN(container, g2)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1729
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 106
original statement= return arrangeNN(container, g2)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1731
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 156
original statement= double maxW = 0.0
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1733
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 157
original statement= double maxH = 0.0
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1735
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 158
original statement= java.util.List blocks = container.getBlocks()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1737
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 159
original statement= java.util.Iterator iterator = blocks.iterator()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1738
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 160
original statement= while (iterator.hasNext()) {
	org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(iterator.next()));
	org.jfree.chart.util.Size2D s = b.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE);
	maxW = java.lang.Math.max(maxW, s.width);
	maxH = java.lang.Math.max(maxH, s.height);
}
fixed statement= while (iterator.hasNext()) {
	org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(iterator.next()));
	org.jfree.chart.util.Size2D s = b.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE);
	maxW = java.lang.Math.max(maxW, s.width);
	maxH = java.lang.Math.max(maxH, s.height);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1739
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 160
original statement= while (iterator.hasNext()) {
	org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(iterator.next()));
	org.jfree.chart.util.Size2D s = b.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE);
	maxW = java.lang.Math.max(maxW, s.width);
	maxH = java.lang.Math.max(maxH, s.height);
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1741
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 161
original statement= org.jfree.chart.block.Block b = ((org.jfree.chart.block.Block)(iterator.next()))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1743
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 162
original statement= org.jfree.chart.util.Size2D s = b.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1744
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 163
original statement= maxW = java.lang.Math.max(maxW, s.width)
fixed statement= maxW = java.lang.Math.max(maxW, s.width)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1745
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 163
original statement= maxW = java.lang.Math.max(maxW, s.width)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1746
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 164
original statement= maxH = java.lang.Math.max(maxH, s.height)
fixed statement= maxH = java.lang.Math.max(maxH, s.height)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1747
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 164
original statement= maxH = java.lang.Math.max(maxH, s.height)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1749
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 166
original statement= double width = (this.columns) * maxW
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1751
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 167
original statement= double height = (this.rows) * maxH
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1753
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 168
original statement= org.jfree.chart.block.RectangleConstraint c = new org.jfree.chart.block.RectangleConstraint(width , height)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1755
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 169
original statement= return arrangeFF(container, g2, c)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1756
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 282
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1757
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 282
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1758
 
operation: DELETE
location= org.jfree.chart.block.GridArrangement
line= 285
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1759
 
operation: INSERT_BEFORE
location= org.jfree.chart.block.GridArrangement
line= 285
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1760
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 265
original statement= if (p1 == null) {
	return p2 == null;
} 
fixed statement= if (p1 == null) {
	return p2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1761
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 265
original statement= if (p1 == null) {
	return p2 == null;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1762
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 265
original statement= if (p1 == null) {
	return p2 == null;
} 
fixed statement= if (true) {
	return p2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1763
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 265
original statement= if (p1 == null) {
	return p2 == null;
} 
fixed statement= if (false) {
	return p2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1764
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 268
original statement= if (p2 == null) {
	return false;
} 
fixed statement= if (p2 == null) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1765
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 268
original statement= if (p2 == null) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1766
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 268
original statement= if (p2 == null) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1767
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 268
original statement= if (p2 == null) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1768
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 271
original statement= if ((p1.getWindingRule()) != (p2.getWindingRule())) {
	return false;
} 
fixed statement= if ((p1.getWindingRule()) != (p2.getWindingRule())) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1769
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 271
original statement= if ((p1.getWindingRule()) != (p2.getWindingRule())) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1770
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 271
original statement= if ((p1.getWindingRule()) != (p2.getWindingRule())) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1771
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 271
original statement= if ((p1.getWindingRule()) != (p2.getWindingRule())) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1773
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 274
original statement= java.awt.geom.PathIterator iterator1 = p1.getPathIterator(null)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1775
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 275
original statement= java.awt.geom.PathIterator iterator2 = p2.getPathIterator(null)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1777
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 276
original statement= double[] d1 = new double[6]
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1779
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 277
original statement= double[] d2 = new double[6]
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1781
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 278
original statement= boolean done = (iterator1.isDone()) && (iterator2.isDone())
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1782
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 279
original statement= while (!done) {
	if ((iterator1.isDone()) != (iterator2.isDone())) {
		return false;
	} 
	int seg1 = iterator1.currentSegment(d1);
	int seg2 = iterator2.currentSegment(d2);
	if (seg1 != seg2) {
		return false;
	} 
	if (!(java.util.Arrays.equals(d1, d2))) {
		return false;
	} 
	if (true)
		return false;
	
	iterator2.next();
	iterator2.next();
	done = (iterator1.isDone()) && (iterator2.isDone());
}
fixed statement= while (!done) {
	if ((iterator1.isDone()) != (iterator2.isDone())) {
		return false;
	} 
	int seg1 = iterator1.currentSegment(d1);
	int seg2 = iterator2.currentSegment(d2);
	if (seg1 != seg2) {
		return false;
	} 
	if (!(java.util.Arrays.equals(d1, d2))) {
		return false;
	} 
	if (true)
		return false;
	
	iterator2.next();
	iterator2.next();
	done = (iterator1.isDone()) && (iterator2.isDone());
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1783
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 279
original statement= while (!done) {
	if ((iterator1.isDone()) != (iterator2.isDone())) {
		return false;
	} 
	int seg1 = iterator1.currentSegment(d1);
	int seg2 = iterator2.currentSegment(d2);
	if (seg1 != seg2) {
		return false;
	} 
	if (!(java.util.Arrays.equals(d1, d2))) {
		return false;
	} 
	if (true)
		return false;
	
	iterator2.next();
	iterator2.next();
	done = (iterator1.isDone()) && (iterator2.isDone());
}
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1784
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 280
original statement= if ((iterator1.isDone()) != (iterator2.isDone())) {
	return false;
} 
fixed statement= if ((iterator1.isDone()) != (iterator2.isDone())) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1785
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 280
original statement= if ((iterator1.isDone()) != (iterator2.isDone())) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1786
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 280
original statement= if ((iterator1.isDone()) != (iterator2.isDone())) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1787
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 280
original statement= if ((iterator1.isDone()) != (iterator2.isDone())) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1789
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 283
original statement= int seg1 = iterator1.currentSegment(d1)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1791
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 284
original statement= int seg2 = iterator2.currentSegment(d2)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1792
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 285
original statement= if (seg1 != seg2) {
	return false;
} 
fixed statement= if (seg1 != seg2) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1793
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 285
original statement= if (seg1 != seg2) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1794
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 285
original statement= if (seg1 != seg2) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1795
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 285
original statement= if (seg1 != seg2) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1796
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 286
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1797
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 286
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1798
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 288
original statement= if (!(java.util.Arrays.equals(d1, d2))) {
	return false;
} 
fixed statement= if (!(java.util.Arrays.equals(d1, d2))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1799
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 288
original statement= if (!(java.util.Arrays.equals(d1, d2))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1800
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 288
original statement= if (!(java.util.Arrays.equals(d1, d2))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1801
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 288
original statement= if (!(java.util.Arrays.equals(d1, d2))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1802
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 289
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1803
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 289
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1804
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 291
original statement= iterator1.next()
fixed statement= iterator1.next()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1805
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 291
original statement= iterator1.next()
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1806
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 292
original statement= iterator2.next()
fixed statement= iterator2.next()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1807
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 292
original statement= iterator2.next()
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1808
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 293
original statement= done = (iterator1.isDone()) && (iterator2.isDone())
fixed statement= done = (iterator1.isDone()) && (iterator2.isDone())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1809
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 293
original statement= done = (iterator1.isDone()) && (iterator2.isDone())
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1811
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 295
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1812
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 159
original statement= if (l1 == null) {
	return l2 == null;
} 
fixed statement= if (l1 == null) {
	return l2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1813
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 159
original statement= if (l1 == null) {
	return l2 == null;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1814
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 159
original statement= if (l1 == null) {
	return l2 == null;
} 
fixed statement= if (true) {
	return l2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1815
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 159
original statement= if (l1 == null) {
	return l2 == null;
} 
fixed statement= if (false) {
	return l2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1816
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 160
original statement= return l2 == null
fixed statement= return l2 == null
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1817
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 160
original statement= return l2 == null
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1818
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 162
original statement= if (l2 == null) {
	return false;
} 
fixed statement= if (l2 == null) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1819
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 162
original statement= if (l2 == null) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1820
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 162
original statement= if (l2 == null) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1821
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 162
original statement= if (l2 == null) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1822
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 165
original statement= if (!(l1.getP1().equals(l2.getP1()))) {
	return false;
} 
fixed statement= if (!(l1.getP1().equals(l2.getP1()))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1823
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 165
original statement= if (!(l1.getP1().equals(l2.getP1()))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1824
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 165
original statement= if (!(l1.getP1().equals(l2.getP1()))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1825
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 165
original statement= if (!(l1.getP1().equals(l2.getP1()))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1826
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 166
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1827
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 166
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1828
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 168
original statement= if (!(l1.getP2().equals(l2.getP2()))) {
	return false;
} 
fixed statement= if (!(l1.getP2().equals(l2.getP2()))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1829
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 168
original statement= if (!(l1.getP2().equals(l2.getP2()))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1830
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 168
original statement= if (!(l1.getP2().equals(l2.getP2()))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1831
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 168
original statement= if (!(l1.getP2().equals(l2.getP2()))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1833
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 171
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1835
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 128
original statement= if ((s1 instanceof java.awt.geom.Line2D) && (s2 instanceof java.awt.geom.Line2D)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Line2D)(s1)), ((java.awt.geom.Line2D)(s2)));
} else if ((s1 instanceof java.awt.geom.Ellipse2D) && (s2 instanceof java.awt.geom.Ellipse2D)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Ellipse2D)(s1)), ((java.awt.geom.Ellipse2D)(s2)));
} else if ((s1 instanceof java.awt.geom.Arc2D) && (s2 instanceof java.awt.geom.Arc2D)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Arc2D)(s1)), ((java.awt.geom.Arc2D)(s2)));
} else if ((s1 instanceof java.awt.Polygon) && (s2 instanceof java.awt.Polygon)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.Polygon)(s1)), ((java.awt.Polygon)(s2)));
} else if ((s1 instanceof java.awt.geom.GeneralPath) && (s2 instanceof java.awt.geom.GeneralPath)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.GeneralPath)(s1)), ((java.awt.geom.GeneralPath)(s2)));
} else {
	return org.jfree.chart.util.ObjectUtilities.equal(s1, s2);
}
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1836
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 128
original statement= if ((s1 instanceof java.awt.geom.Line2D) && (s2 instanceof java.awt.geom.Line2D)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Line2D)(s1)), ((java.awt.geom.Line2D)(s2)));
} else if ((s1 instanceof java.awt.geom.Ellipse2D) && (s2 instanceof java.awt.geom.Ellipse2D)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Ellipse2D)(s1)), ((java.awt.geom.Ellipse2D)(s2)));
} else if ((s1 instanceof java.awt.geom.Arc2D) && (s2 instanceof java.awt.geom.Arc2D)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Arc2D)(s1)), ((java.awt.geom.Arc2D)(s2)));
} else if ((s1 instanceof java.awt.Polygon) && (s2 instanceof java.awt.Polygon)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.Polygon)(s1)), ((java.awt.Polygon)(s2)));
} else if ((s1 instanceof java.awt.geom.GeneralPath) && (s2 instanceof java.awt.geom.GeneralPath)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.GeneralPath)(s1)), ((java.awt.geom.GeneralPath)(s2)));
} else {
	return org.jfree.chart.util.ObjectUtilities.equal(s1, s2);
}
fixed statement= if (true) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Line2D)(s1)), ((java.awt.geom.Line2D)(s2)));
} else if ((s1 instanceof java.awt.geom.Ellipse2D) && (s2 instanceof java.awt.geom.Ellipse2D)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Ellipse2D)(s1)), ((java.awt.geom.Ellipse2D)(s2)));
} else if ((s1 instanceof java.awt.geom.Arc2D) && (s2 instanceof java.awt.geom.Arc2D)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Arc2D)(s1)), ((java.awt.geom.Arc2D)(s2)));
} else if ((s1 instanceof java.awt.Polygon) && (s2 instanceof java.awt.Polygon)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.Polygon)(s1)), ((java.awt.Polygon)(s2)));
} else if ((s1 instanceof java.awt.geom.GeneralPath) && (s2 instanceof java.awt.geom.GeneralPath)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.GeneralPath)(s1)), ((java.awt.geom.GeneralPath)(s2)));
} else {
	return org.jfree.chart.util.ObjectUtilities.equal(s1, s2);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1837
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 128
original statement= if ((s1 instanceof java.awt.geom.Line2D) && (s2 instanceof java.awt.geom.Line2D)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Line2D)(s1)), ((java.awt.geom.Line2D)(s2)));
} else if ((s1 instanceof java.awt.geom.Ellipse2D) && (s2 instanceof java.awt.geom.Ellipse2D)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Ellipse2D)(s1)), ((java.awt.geom.Ellipse2D)(s2)));
} else if ((s1 instanceof java.awt.geom.Arc2D) && (s2 instanceof java.awt.geom.Arc2D)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Arc2D)(s1)), ((java.awt.geom.Arc2D)(s2)));
} else if ((s1 instanceof java.awt.Polygon) && (s2 instanceof java.awt.Polygon)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.Polygon)(s1)), ((java.awt.Polygon)(s2)));
} else if ((s1 instanceof java.awt.geom.GeneralPath) && (s2 instanceof java.awt.geom.GeneralPath)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.GeneralPath)(s1)), ((java.awt.geom.GeneralPath)(s2)));
} else {
	return org.jfree.chart.util.ObjectUtilities.equal(s1, s2);
}
fixed statement= if (false) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Line2D)(s1)), ((java.awt.geom.Line2D)(s2)));
} else if ((s1 instanceof java.awt.geom.Ellipse2D) && (s2 instanceof java.awt.geom.Ellipse2D)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Ellipse2D)(s1)), ((java.awt.geom.Ellipse2D)(s2)));
} else if ((s1 instanceof java.awt.geom.Arc2D) && (s2 instanceof java.awt.geom.Arc2D)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Arc2D)(s1)), ((java.awt.geom.Arc2D)(s2)));
} else if ((s1 instanceof java.awt.Polygon) && (s2 instanceof java.awt.Polygon)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.Polygon)(s1)), ((java.awt.Polygon)(s2)));
} else if ((s1 instanceof java.awt.geom.GeneralPath) && (s2 instanceof java.awt.geom.GeneralPath)) {
	return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.GeneralPath)(s1)), ((java.awt.geom.GeneralPath)(s2)));
} else {
	return org.jfree.chart.util.ObjectUtilities.equal(s1, s2);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1839
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 129
original statement= return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Line2D)(s1)), ((java.awt.geom.Line2D)(s2)))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1841
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 132
original statement= return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Ellipse2D)(s1)), ((java.awt.geom.Ellipse2D)(s2)))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1843
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 135
original statement= return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.Arc2D)(s1)), ((java.awt.geom.Arc2D)(s2)))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1845
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 138
original statement= return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.Polygon)(s1)), ((java.awt.Polygon)(s2)))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1847
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 141
original statement= return org.jfree.chart.util.ShapeUtilities.equal(((java.awt.geom.GeneralPath)(s1)), ((java.awt.geom.GeneralPath)(s2)))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1849
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 145
original statement= return org.jfree.chart.util.ObjectUtilities.equal(s1, s2)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1850
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 184
original statement= if (e1 == null) {
	return e2 == null;
} 
fixed statement= if (e1 == null) {
	return e2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1851
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 184
original statement= if (e1 == null) {
	return e2 == null;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1852
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 184
original statement= if (e1 == null) {
	return e2 == null;
} 
fixed statement= if (true) {
	return e2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1853
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 184
original statement= if (e1 == null) {
	return e2 == null;
} 
fixed statement= if (false) {
	return e2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1854
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 187
original statement= if (e2 == null) {
	return false;
} 
fixed statement= if (e2 == null) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1855
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 187
original statement= if (e2 == null) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1856
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 187
original statement= if (e2 == null) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1857
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 187
original statement= if (e2 == null) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1858
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 190
original statement= if (!(e1.getFrame().equals(e2.getFrame()))) {
	return false;
} 
fixed statement= if (!(e1.getFrame().equals(e2.getFrame()))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1859
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 190
original statement= if (!(e1.getFrame().equals(e2.getFrame()))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1860
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 190
original statement= if (!(e1.getFrame().equals(e2.getFrame()))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1861
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 190
original statement= if (!(e1.getFrame().equals(e2.getFrame()))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1863
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 193
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1864
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 206
original statement= if (a1 == null) {
	return a2 == null;
} 
fixed statement= if (a1 == null) {
	return a2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1865
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 206
original statement= if (a1 == null) {
	return a2 == null;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1866
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 206
original statement= if (a1 == null) {
	return a2 == null;
} 
fixed statement= if (true) {
	return a2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1867
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 206
original statement= if (a1 == null) {
	return a2 == null;
} 
fixed statement= if (false) {
	return a2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1868
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 209
original statement= if (a2 == null) {
	return false;
} 
fixed statement= if (a2 == null) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1869
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 209
original statement= if (a2 == null) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1870
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 209
original statement= if (a2 == null) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1871
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 209
original statement= if (a2 == null) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1872
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 212
original statement= if (!(a1.getFrame().equals(a2.getFrame()))) {
	return false;
} 
fixed statement= if (!(a1.getFrame().equals(a2.getFrame()))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1873
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 212
original statement= if (!(a1.getFrame().equals(a2.getFrame()))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1874
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 212
original statement= if (!(a1.getFrame().equals(a2.getFrame()))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1875
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 212
original statement= if (!(a1.getFrame().equals(a2.getFrame()))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1876
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 215
original statement= if ((a1.getAngleStart()) != (a2.getAngleStart())) {
	return false;
} 
fixed statement= if ((a1.getAngleStart()) != (a2.getAngleStart())) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1877
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 215
original statement= if ((a1.getAngleStart()) != (a2.getAngleStart())) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1878
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 215
original statement= if ((a1.getAngleStart()) != (a2.getAngleStart())) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1879
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 215
original statement= if ((a1.getAngleStart()) != (a2.getAngleStart())) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1880
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 218
original statement= if ((a1.getAngleExtent()) != (a2.getAngleExtent())) {
	return false;
} 
fixed statement= if ((a1.getAngleExtent()) != (a2.getAngleExtent())) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1881
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 218
original statement= if ((a1.getAngleExtent()) != (a2.getAngleExtent())) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1882
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 218
original statement= if ((a1.getAngleExtent()) != (a2.getAngleExtent())) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1883
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 218
original statement= if ((a1.getAngleExtent()) != (a2.getAngleExtent())) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1884
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 221
original statement= if ((a1.getArcType()) != (a2.getArcType())) {
	return false;
} 
fixed statement= if ((a1.getArcType()) != (a2.getArcType())) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1885
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 221
original statement= if ((a1.getArcType()) != (a2.getArcType())) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1886
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 221
original statement= if ((a1.getArcType()) != (a2.getArcType())) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1887
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 221
original statement= if ((a1.getArcType()) != (a2.getArcType())) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1889
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 224
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1890
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 237
original statement= if (p1 == null) {
	return p2 == null;
} 
fixed statement= if (p1 == null) {
	return p2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1891
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 237
original statement= if (p1 == null) {
	return p2 == null;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1892
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 237
original statement= if (p1 == null) {
	return p2 == null;
} 
fixed statement= if (true) {
	return p2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1893
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 237
original statement= if (p1 == null) {
	return p2 == null;
} 
fixed statement= if (false) {
	return p2 == null;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1894
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 240
original statement= if (p2 == null) {
	return false;
} 
fixed statement= if (p2 == null) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1895
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 240
original statement= if (p2 == null) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1896
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 240
original statement= if (p2 == null) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1897
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 240
original statement= if (p2 == null) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1898
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 243
original statement= if ((p1.npoints) != (p2.npoints)) {
	return false;
} 
fixed statement= if ((p1.npoints) != (p2.npoints)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1899
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 243
original statement= if ((p1.npoints) != (p2.npoints)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1900
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 243
original statement= if ((p1.npoints) != (p2.npoints)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1901
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 243
original statement= if ((p1.npoints) != (p2.npoints)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1902
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 246
original statement= if (!(java.util.Arrays.equals(p1.xpoints, p2.xpoints))) {
	return false;
} 
fixed statement= if (!(java.util.Arrays.equals(p1.xpoints, p2.xpoints))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1903
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 246
original statement= if (!(java.util.Arrays.equals(p1.xpoints, p2.xpoints))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1904
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 246
original statement= if (!(java.util.Arrays.equals(p1.xpoints, p2.xpoints))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1905
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 246
original statement= if (!(java.util.Arrays.equals(p1.xpoints, p2.xpoints))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1906
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 247
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1907
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 247
original statement= return false
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1908
 
operation: DELETE
location= org.jfree.chart.util.ShapeUtilities
line= 249
original statement= if (!(java.util.Arrays.equals(p1.ypoints, p2.ypoints))) {
	return false;
} 
fixed statement= if (!(java.util.Arrays.equals(p1.ypoints, p2.ypoints))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1909
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 249
original statement= if (!(java.util.Arrays.equals(p1.ypoints, p2.ypoints))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1910
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 249
original statement= if (!(java.util.Arrays.equals(p1.ypoints, p2.ypoints))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1911
 
operation: REPLACE
location= org.jfree.chart.util.ShapeUtilities
line= 249
original statement= if (!(java.util.Arrays.equals(p1.ypoints, p2.ypoints))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1913
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 252
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1915
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 587
original statement= double x0 = rect1.getX()
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1917
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 588
original statement= double y0 = rect1.getY()
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1919
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 590
original statement= double x = rect2.getX()
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1921
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 591
original statement= double width = rect2.getWidth()
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1923
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 592
original statement= double y = rect2.getY()
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1925
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 593
original statement= double height = rect2.getHeight()
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1927
 
operation: INSERT_BEFORE
location= org.jfree.chart.util.ShapeUtilities
line= 594
original statement= return ((((x + width) >= x0) && ((y + height) >= y0)) && (x <= (x0 + (rect1.getWidth())))) && (y <= (y0 + (rect1.getHeight())))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1929
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 194
original statement= return ((java.lang.Comparable)(this.keys.get(index)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1931
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 216
original statement= int result = -1
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1933
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 217
original statement= int count = this.data.size()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1934
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 218
original statement= for (int i = 0 ; i < count ; i++) {
	org.jfree.data.gantt.TaskSeries s = ((org.jfree.data.gantt.TaskSeries)(this.data.get(i)));
	if (s.getKey().equals(rowKey)) {
		result = i;
		break;
	} 
}
fixed statement= for (int i = 0 ; i < count ; i++) {
	org.jfree.data.gantt.TaskSeries s = ((org.jfree.data.gantt.TaskSeries)(this.data.get(i)));
	if (s.getKey().equals(rowKey)) {
		result = i;
		break;
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1935
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 218
original statement= for (int i = 0 ; i < count ; i++) {
	org.jfree.data.gantt.TaskSeries s = ((org.jfree.data.gantt.TaskSeries)(this.data.get(i)));
	if (s.getKey().equals(rowKey)) {
		result = i;
		break;
	} 
}
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1937
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 219
original statement= org.jfree.data.gantt.TaskSeries s = ((org.jfree.data.gantt.TaskSeries)(this.data.get(i)))
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1938
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 220
original statement= if (s.getKey().equals(rowKey)) {
	result = i;
	break;
} 
fixed statement= if (s.getKey().equals(rowKey)) {
	result = i;
	break;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1939
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 220
original statement= if (s.getKey().equals(rowKey)) {
	result = i;
	break;
} 
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1940
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 220
original statement= if (s.getKey().equals(rowKey)) {
	result = i;
	break;
} 
fixed statement= if (true) {
	result = i;
	break;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1941
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 220
original statement= if (s.getKey().equals(rowKey)) {
	result = i;
	break;
} 
fixed statement= if (false) {
	result = i;
	break;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1942
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 221
original statement= result = i
fixed statement= result = i
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1943
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 221
original statement= result = i
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1944
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 222
original statement= break
fixed statement= break
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1945
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 222
original statement= break
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1947
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 225
original statement= return result
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1949
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 236
original statement= org.jfree.data.gantt.TaskSeries series = ((org.jfree.data.gantt.TaskSeries)(this.data.get(index)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1951
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 237
original statement= return series.getKey()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1952
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 248
original statement= if (series == null) {
	throw new java.lang.IllegalArgumentException("Null \'series\' argument.");
} 
fixed statement= if (series == null) {
	throw new java.lang.IllegalArgumentException("Null \'series\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1953
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 248
original statement= if (series == null) {
	throw new java.lang.IllegalArgumentException("Null \'series\' argument.");
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1954
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 248
original statement= if (series == null) {
	throw new java.lang.IllegalArgumentException("Null \'series\' argument.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Null \'series\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1955
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 248
original statement= if (series == null) {
	throw new java.lang.IllegalArgumentException("Null \'series\' argument.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Null \'series\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1956
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 251
original statement= this.data.add(series)
fixed statement= this.data.add(series)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1957
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 251
original statement= this.data.add(series)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1958
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 252
original statement= series.addChangeListener(this)
fixed statement= series.addChangeListener(this)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1959
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 252
original statement= series.addChangeListener(this)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1961
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 255
original statement= java.util.Iterator iterator = series.getTasks().iterator()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1962
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 256
original statement= while (iterator.hasNext()) {
	org.jfree.data.gantt.Task task = ((org.jfree.data.gantt.Task)(iterator.next()));
	java.lang.String key = task.getDescription();
	int index = this.keys.indexOf(key);
	if (index < 0) {
		this.keys.add(key);
	} 
}
fixed statement= while (iterator.hasNext()) {
	org.jfree.data.gantt.Task task = ((org.jfree.data.gantt.Task)(iterator.next()));
	java.lang.String key = task.getDescription();
	int index = this.keys.indexOf(key);
	if (index < 0) {
		this.keys.add(key);
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1963
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 256
original statement= while (iterator.hasNext()) {
	org.jfree.data.gantt.Task task = ((org.jfree.data.gantt.Task)(iterator.next()));
	java.lang.String key = task.getDescription();
	int index = this.keys.indexOf(key);
	if (index < 0) {
		this.keys.add(key);
	} 
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1965
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 257
original statement= org.jfree.data.gantt.Task task = ((org.jfree.data.gantt.Task)(iterator.next()))
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1967
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 258
original statement= java.lang.String key = task.getDescription()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1969
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 259
original statement= int index = this.keys.indexOf(key)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1970
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 260
original statement= if (index < 0) {
	this.keys.add(key);
} 
fixed statement= if (index < 0) {
	this.keys.add(key);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1971
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 260
original statement= if (index < 0) {
	this.keys.add(key);
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1972
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 260
original statement= if (index < 0) {
	this.keys.add(key);
} 
fixed statement= if (true) {
	this.keys.add(key);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1973
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 260
original statement= if (index < 0) {
	this.keys.add(key);
} 
fixed statement= if (false) {
	this.keys.add(key);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1974
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 261
original statement= this.keys.add(key)
fixed statement= this.keys.add(key)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1975
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 261
original statement= this.keys.add(key)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1976
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 264
original statement= fireDatasetChanged()
fixed statement= fireDatasetChanged()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1977
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 264
original statement= fireDatasetChanged()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1979
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 336
original statement= return getStartValue(rowKey, columnKey)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1981
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 348
original statement= return getStartValue(row, column)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1983
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 361
original statement= java.lang.Number result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1985
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 362
original statement= int row = getRowIndex(rowKey)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1987
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 363
original statement= org.jfree.data.gantt.TaskSeries series = ((org.jfree.data.gantt.TaskSeries)(this.data.get(row)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1989
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 364
original statement= org.jfree.data.gantt.Task task = series.get(columnKey.toString())
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1990
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 365
original statement= if (task != null) {
	org.jfree.data.time.TimePeriod duration = task.getDuration();
	if (duration != null) {
		result = new java.lang.Long(duration.getStart().getTime());
	} 
} 
fixed statement= if (task != null) {
	org.jfree.data.time.TimePeriod duration = task.getDuration();
	if (duration != null) {
		result = new java.lang.Long(duration.getStart().getTime());
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1991
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 365
original statement= if (task != null) {
	org.jfree.data.time.TimePeriod duration = task.getDuration();
	if (duration != null) {
		result = new java.lang.Long(duration.getStart().getTime());
	} 
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1992
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 365
original statement= if (task != null) {
	org.jfree.data.time.TimePeriod duration = task.getDuration();
	if (duration != null) {
		result = new java.lang.Long(duration.getStart().getTime());
	} 
} 
fixed statement= if (true) {
	org.jfree.data.time.TimePeriod duration = task.getDuration();
	if (duration != null) {
		result = new java.lang.Long(duration.getStart().getTime());
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1993
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 365
original statement= if (task != null) {
	org.jfree.data.time.TimePeriod duration = task.getDuration();
	if (duration != null) {
		result = new java.lang.Long(duration.getStart().getTime());
	} 
} 
fixed statement= if (false) {
	org.jfree.data.time.TimePeriod duration = task.getDuration();
	if (duration != null) {
		result = new java.lang.Long(duration.getStart().getTime());
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1995
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 366
original statement= org.jfree.data.time.TimePeriod duration = task.getDuration()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1996
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 367
original statement= if (duration != null) {
	result = new java.lang.Long(duration.getStart().getTime());
} 
fixed statement= if (duration != null) {
	result = new java.lang.Long(duration.getStart().getTime());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1997
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 367
original statement= if (duration != null) {
	result = new java.lang.Long(duration.getStart().getTime());
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1998
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 367
original statement= if (duration != null) {
	result = new java.lang.Long(duration.getStart().getTime());
} 
fixed statement= if (true) {
	result = new java.lang.Long(duration.getStart().getTime());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1999
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 367
original statement= if (duration != null) {
	result = new java.lang.Long(duration.getStart().getTime());
} 
fixed statement= if (false) {
	result = new java.lang.Long(duration.getStart().getTime());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2000
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 368
original statement= result = new java.lang.Long(duration.getStart().getTime())
fixed statement= result = new java.lang.Long(duration.getStart().getTime())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2001
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 368
original statement= result = new java.lang.Long(duration.getStart().getTime())
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2003
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 371
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2005
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 383
original statement= java.lang.Comparable rowKey = getRowKey(row)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2007
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 384
original statement= java.lang.Comparable columnKey = getColumnKey(column)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2009
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 385
original statement= return getStartValue(rowKey, columnKey)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2011
 
operation: INSERT_BEFORE
location= org.jfree.data.time.SimpleTimePeriod
line= 100
original statement= return new java.util.Date(this.start)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2012
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeries
line= 81
original statement= if (task == null) {
	throw new java.lang.IllegalArgumentException("Null \'task\' argument.");
} 
fixed statement= if (task == null) {
	throw new java.lang.IllegalArgumentException("Null \'task\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2013
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 81
original statement= if (task == null) {
	throw new java.lang.IllegalArgumentException("Null \'task\' argument.");
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2014
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeries
line= 81
original statement= if (task == null) {
	throw new java.lang.IllegalArgumentException("Null \'task\' argument.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Null \'task\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2015
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeries
line= 81
original statement= if (task == null) {
	throw new java.lang.IllegalArgumentException("Null \'task\' argument.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Null \'task\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2016
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeries
line= 84
original statement= this.tasks.add(task)
fixed statement= this.tasks.add(task)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2017
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 84
original statement= this.tasks.add(task)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2018
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeries
line= 85
original statement= fireSeriesChanged()
fixed statement= fireSeriesChanged()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2019
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 85
original statement= fireSeriesChanged()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2021
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 138
original statement= org.jfree.data.gantt.Task result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2023
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 139
original statement= int count = this.tasks.size()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2024
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeries
line= 140
original statement= for (int i = 0 ; i < count ; i++) {
	org.jfree.data.gantt.Task t = ((org.jfree.data.gantt.Task)(this.tasks.get(i)));
	if (t.getDescription().equals(description)) {
		result = t;
		break;
	} 
}
fixed statement= for (int i = 0 ; i < count ; i++) {
	org.jfree.data.gantt.Task t = ((org.jfree.data.gantt.Task)(this.tasks.get(i)));
	if (t.getDescription().equals(description)) {
		result = t;
		break;
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2025
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 140
original statement= for (int i = 0 ; i < count ; i++) {
	org.jfree.data.gantt.Task t = ((org.jfree.data.gantt.Task)(this.tasks.get(i)));
	if (t.getDescription().equals(description)) {
		result = t;
		break;
	} 
}
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2027
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 141
original statement= org.jfree.data.gantt.Task t = ((org.jfree.data.gantt.Task)(this.tasks.get(i)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2028
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeries
line= 142
original statement= if (t.getDescription().equals(description)) {
	result = t;
	break;
} 
fixed statement= if (t.getDescription().equals(description)) {
	result = t;
	break;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2029
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 142
original statement= if (t.getDescription().equals(description)) {
	result = t;
	break;
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2030
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeries
line= 142
original statement= if (t.getDescription().equals(description)) {
	result = t;
	break;
} 
fixed statement= if (true) {
	result = t;
	break;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2031
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeries
line= 142
original statement= if (t.getDescription().equals(description)) {
	result = t;
	break;
} 
fixed statement= if (false) {
	result = t;
	break;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2032
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeries
line= 143
original statement= result = t
fixed statement= result = t
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2033
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 143
original statement= result = t
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2034
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeries
line= 144
original statement= break
fixed statement= break
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2035
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 144
original statement= break
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2037
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 147
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2039
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 156
original statement= return java.util.Collections.unmodifiableList(this.tasks)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2041
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 112
original statement= return this.description
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2043
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 133
original statement= return this.duration
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2045
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 541
original statement= java.lang.Comparable rowKey = getRowKey(row)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2047
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 542
original statement= java.lang.Comparable columnKey = getColumnKey(column)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2049
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 543
original statement= return getEndValue(rowKey, columnKey, subinterval)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2051
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 557
original statement= java.lang.Number result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2053
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 558
original statement= int row = getRowIndex(rowKey)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2055
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 559
original statement= org.jfree.data.gantt.TaskSeries series = ((org.jfree.data.gantt.TaskSeries)(this.data.get(row)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2057
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 560
original statement= org.jfree.data.gantt.Task task = series.get(columnKey.toString())
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2058
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 561
original statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		org.jfree.data.time.TimePeriod duration = sub.getDuration();
		result = new java.lang.Long(duration.getEnd().getTime());
	} 
} 
fixed statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		org.jfree.data.time.TimePeriod duration = sub.getDuration();
		result = new java.lang.Long(duration.getEnd().getTime());
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2059
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 561
original statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		org.jfree.data.time.TimePeriod duration = sub.getDuration();
		result = new java.lang.Long(duration.getEnd().getTime());
	} 
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2060
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 561
original statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		org.jfree.data.time.TimePeriod duration = sub.getDuration();
		result = new java.lang.Long(duration.getEnd().getTime());
	} 
} 
fixed statement= if (true) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		org.jfree.data.time.TimePeriod duration = sub.getDuration();
		result = new java.lang.Long(duration.getEnd().getTime());
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2061
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 561
original statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		org.jfree.data.time.TimePeriod duration = sub.getDuration();
		result = new java.lang.Long(duration.getEnd().getTime());
	} 
} 
fixed statement= if (false) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		org.jfree.data.time.TimePeriod duration = sub.getDuration();
		result = new java.lang.Long(duration.getEnd().getTime());
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2063
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 562
original statement= org.jfree.data.gantt.Task sub = task.getSubtask(subinterval)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2064
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 563
original statement= if (sub != null) {
	org.jfree.data.time.TimePeriod duration = sub.getDuration();
	result = new java.lang.Long(duration.getEnd().getTime());
} 
fixed statement= if (sub != null) {
	org.jfree.data.time.TimePeriod duration = sub.getDuration();
	result = new java.lang.Long(duration.getEnd().getTime());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2065
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 563
original statement= if (sub != null) {
	org.jfree.data.time.TimePeriod duration = sub.getDuration();
	result = new java.lang.Long(duration.getEnd().getTime());
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2066
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 563
original statement= if (sub != null) {
	org.jfree.data.time.TimePeriod duration = sub.getDuration();
	result = new java.lang.Long(duration.getEnd().getTime());
} 
fixed statement= if (true) {
	org.jfree.data.time.TimePeriod duration = sub.getDuration();
	result = new java.lang.Long(duration.getEnd().getTime());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2067
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 563
original statement= if (sub != null) {
	org.jfree.data.time.TimePeriod duration = sub.getDuration();
	result = new java.lang.Long(duration.getEnd().getTime());
} 
fixed statement= if (false) {
	org.jfree.data.time.TimePeriod duration = sub.getDuration();
	result = new java.lang.Long(duration.getEnd().getTime());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2069
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 564
original statement= org.jfree.data.time.TimePeriod duration = sub.getDuration()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2070
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 565
original statement= result = new java.lang.Long(duration.getEnd().getTime())
fixed statement= result = new java.lang.Long(duration.getEnd().getTime())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2071
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 565
original statement= result = new java.lang.Long(duration.getEnd().getTime())
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2073
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 568
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2075
 
operation: INSERT_BEFORE
location= org.jfree.data.time.SimpleTimePeriod
line= 120
original statement= return new java.util.Date(this.end)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2076
 
operation: DELETE
location= org.jfree.data.gantt.Task
line= 160
original statement= this.percentComplete = percent
fixed statement= this.percentComplete = percent
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2077
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 160
original statement= this.percentComplete = percent
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2078
 
operation: DELETE
location= org.jfree.data.gantt.Task
line= 169
original statement= setPercentComplete(new java.lang.Double(percent))
fixed statement= setPercentComplete(new java.lang.Double(percent))
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2079
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 169
original statement= setPercentComplete(new java.lang.Double(percent))
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2080
 
operation: DELETE
location= org.jfree.data.gantt.Task
line= 178
original statement= if (subtask == null) {
	throw new java.lang.IllegalArgumentException("Null \'subtask\' argument.");
} 
fixed statement= if (subtask == null) {
	throw new java.lang.IllegalArgumentException("Null \'subtask\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2081
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 178
original statement= if (subtask == null) {
	throw new java.lang.IllegalArgumentException("Null \'subtask\' argument.");
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2082
 
operation: REPLACE
location= org.jfree.data.gantt.Task
line= 178
original statement= if (subtask == null) {
	throw new java.lang.IllegalArgumentException("Null \'subtask\' argument.");
} 
fixed statement= if (true) {
	throw new java.lang.IllegalArgumentException("Null \'subtask\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2083
 
operation: REPLACE
location= org.jfree.data.gantt.Task
line= 178
original statement= if (subtask == null) {
	throw new java.lang.IllegalArgumentException("Null \'subtask\' argument.");
} 
fixed statement= if (false) {
	throw new java.lang.IllegalArgumentException("Null \'subtask\' argument.");
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2084
 
operation: DELETE
location= org.jfree.data.gantt.Task
line= 181
original statement= this.subtasks.add(subtask)
fixed statement= this.subtasks.add(subtask)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2085
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 181
original statement= this.subtasks.add(subtask)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2087
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 210
original statement= return ((org.jfree.data.gantt.Task)(this.subtasks.get(index)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2089
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 398
original statement= java.lang.Number result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2091
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 399
original statement= int row = getRowIndex(rowKey)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2093
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 400
original statement= org.jfree.data.gantt.TaskSeries series = ((org.jfree.data.gantt.TaskSeries)(this.data.get(row)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2095
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 401
original statement= org.jfree.data.gantt.Task task = series.get(columnKey.toString())
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2096
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 402
original statement= if (task != null) {
	org.jfree.data.time.TimePeriod duration = task.getDuration();
	if (duration != null) {
		result = new java.lang.Long(duration.getEnd().getTime());
	} 
} 
fixed statement= if (task != null) {
	org.jfree.data.time.TimePeriod duration = task.getDuration();
	if (duration != null) {
		result = new java.lang.Long(duration.getEnd().getTime());
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2097
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 402
original statement= if (task != null) {
	org.jfree.data.time.TimePeriod duration = task.getDuration();
	if (duration != null) {
		result = new java.lang.Long(duration.getEnd().getTime());
	} 
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2098
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 402
original statement= if (task != null) {
	org.jfree.data.time.TimePeriod duration = task.getDuration();
	if (duration != null) {
		result = new java.lang.Long(duration.getEnd().getTime());
	} 
} 
fixed statement= if (true) {
	org.jfree.data.time.TimePeriod duration = task.getDuration();
	if (duration != null) {
		result = new java.lang.Long(duration.getEnd().getTime());
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2099
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 402
original statement= if (task != null) {
	org.jfree.data.time.TimePeriod duration = task.getDuration();
	if (duration != null) {
		result = new java.lang.Long(duration.getEnd().getTime());
	} 
} 
fixed statement= if (false) {
	org.jfree.data.time.TimePeriod duration = task.getDuration();
	if (duration != null) {
		result = new java.lang.Long(duration.getEnd().getTime());
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2101
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 403
original statement= org.jfree.data.time.TimePeriod duration = task.getDuration()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2102
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 404
original statement= if (duration != null) {
	result = new java.lang.Long(duration.getEnd().getTime());
} 
fixed statement= if (duration != null) {
	result = new java.lang.Long(duration.getEnd().getTime());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2103
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 404
original statement= if (duration != null) {
	result = new java.lang.Long(duration.getEnd().getTime());
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2104
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 404
original statement= if (duration != null) {
	result = new java.lang.Long(duration.getEnd().getTime());
} 
fixed statement= if (true) {
	result = new java.lang.Long(duration.getEnd().getTime());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2105
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 404
original statement= if (duration != null) {
	result = new java.lang.Long(duration.getEnd().getTime());
} 
fixed statement= if (false) {
	result = new java.lang.Long(duration.getEnd().getTime());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2107
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 408
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2108
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 650
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2109
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 650
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2110
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 650
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2111
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 650
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2112
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 653
original statement= if (!(obj instanceof org.jfree.data.gantt.TaskSeriesCollection)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.data.gantt.TaskSeriesCollection)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2113
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 653
original statement= if (!(obj instanceof org.jfree.data.gantt.TaskSeriesCollection)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2114
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 653
original statement= if (!(obj instanceof org.jfree.data.gantt.TaskSeriesCollection)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2115
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 653
original statement= if (!(obj instanceof org.jfree.data.gantt.TaskSeriesCollection)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2117
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 656
original statement= org.jfree.data.gantt.TaskSeriesCollection that = ((org.jfree.data.gantt.TaskSeriesCollection)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2118
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 657
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.data, that.data))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.data, that.data))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2119
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 657
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.data, that.data))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2120
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 657
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.data, that.data))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2121
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 657
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.data, that.data))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2123
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 660
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2124
 
operation: DELETE
location= org.jfree.data.time.SimpleTimePeriod
line= 144
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2125
 
operation: INSERT_BEFORE
location= org.jfree.data.time.SimpleTimePeriod
line= 144
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2126
 
operation: REPLACE
location= org.jfree.data.time.SimpleTimePeriod
line= 144
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2127
 
operation: REPLACE
location= org.jfree.data.time.SimpleTimePeriod
line= 144
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2128
 
operation: DELETE
location= org.jfree.data.time.SimpleTimePeriod
line= 147
original statement= if (!(obj instanceof org.jfree.data.time.TimePeriod)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.data.time.TimePeriod)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2129
 
operation: INSERT_BEFORE
location= org.jfree.data.time.SimpleTimePeriod
line= 147
original statement= if (!(obj instanceof org.jfree.data.time.TimePeriod)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2130
 
operation: REPLACE
location= org.jfree.data.time.SimpleTimePeriod
line= 147
original statement= if (!(obj instanceof org.jfree.data.time.TimePeriod)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2131
 
operation: REPLACE
location= org.jfree.data.time.SimpleTimePeriod
line= 147
original statement= if (!(obj instanceof org.jfree.data.time.TimePeriod)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2133
 
operation: INSERT_BEFORE
location= org.jfree.data.time.SimpleTimePeriod
line= 150
original statement= org.jfree.data.time.TimePeriod that = ((org.jfree.data.time.TimePeriod)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2134
 
operation: DELETE
location= org.jfree.data.time.SimpleTimePeriod
line= 151
original statement= if (!(getStart().equals(that.getStart()))) {
	return false;
} 
fixed statement= if (!(getStart().equals(that.getStart()))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2135
 
operation: INSERT_BEFORE
location= org.jfree.data.time.SimpleTimePeriod
line= 151
original statement= if (!(getStart().equals(that.getStart()))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2136
 
operation: REPLACE
location= org.jfree.data.time.SimpleTimePeriod
line= 151
original statement= if (!(getStart().equals(that.getStart()))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2137
 
operation: REPLACE
location= org.jfree.data.time.SimpleTimePeriod
line= 151
original statement= if (!(getStart().equals(that.getStart()))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2138
 
operation: DELETE
location= org.jfree.data.time.SimpleTimePeriod
line= 154
original statement= if (!(getEnd().equals(that.getEnd()))) {
	return false;
} 
fixed statement= if (!(getEnd().equals(that.getEnd()))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2139
 
operation: INSERT_BEFORE
location= org.jfree.data.time.SimpleTimePeriod
line= 154
original statement= if (!(getEnd().equals(that.getEnd()))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2140
 
operation: REPLACE
location= org.jfree.data.time.SimpleTimePeriod
line= 154
original statement= if (!(getEnd().equals(that.getEnd()))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2141
 
operation: REPLACE
location= org.jfree.data.time.SimpleTimePeriod
line= 154
original statement= if (!(getEnd().equals(that.getEnd()))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2143
 
operation: INSERT_BEFORE
location= org.jfree.data.time.SimpleTimePeriod
line= 157
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2144
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeries
line= 167
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (obj == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2145
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 167
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2146
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeries
line= 167
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2147
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeries
line= 167
original statement= if (obj == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2148
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeries
line= 170
original statement= if (!(obj instanceof org.jfree.data.gantt.TaskSeries)) {
	return false;
} 
fixed statement= if (!(obj instanceof org.jfree.data.gantt.TaskSeries)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2149
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 170
original statement= if (!(obj instanceof org.jfree.data.gantt.TaskSeries)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2150
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeries
line= 170
original statement= if (!(obj instanceof org.jfree.data.gantt.TaskSeries)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2151
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeries
line= 170
original statement= if (!(obj instanceof org.jfree.data.gantt.TaskSeries)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2152
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeries
line= 173
original statement= if (!(super.equals(obj))) {
	return false;
} 
fixed statement= if (!(super.equals(obj))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2153
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 173
original statement= if (!(super.equals(obj))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2154
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeries
line= 173
original statement= if (!(super.equals(obj))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2155
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeries
line= 173
original statement= if (!(super.equals(obj))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2157
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 176
original statement= org.jfree.data.gantt.TaskSeries that = ((org.jfree.data.gantt.TaskSeries)(obj))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2158
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeries
line= 177
original statement= if (!(this.tasks.equals(that.tasks))) {
	return false;
} 
fixed statement= if (!(this.tasks.equals(that.tasks))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2159
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 177
original statement= if (!(this.tasks.equals(that.tasks))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2160
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeries
line= 177
original statement= if (!(this.tasks.equals(that.tasks))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2161
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeries
line= 177
original statement= if (!(this.tasks.equals(that.tasks))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2163
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeries
line= 180
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2164
 
operation: DELETE
location= org.jfree.data.gantt.Task
line= 221
original statement= if (object == this) {
	return true;
} 
fixed statement= if (object == this) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2165
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 221
original statement= if (object == this) {
	return true;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2166
 
operation: REPLACE
location= org.jfree.data.gantt.Task
line= 221
original statement= if (object == this) {
	return true;
} 
fixed statement= if (true) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2167
 
operation: REPLACE
location= org.jfree.data.gantt.Task
line= 221
original statement= if (object == this) {
	return true;
} 
fixed statement= if (false) {
	return true;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2168
 
operation: DELETE
location= org.jfree.data.gantt.Task
line= 224
original statement= if (!(object instanceof org.jfree.data.gantt.Task)) {
	return false;
} 
fixed statement= if (!(object instanceof org.jfree.data.gantt.Task)) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2169
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 224
original statement= if (!(object instanceof org.jfree.data.gantt.Task)) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2170
 
operation: REPLACE
location= org.jfree.data.gantt.Task
line= 224
original statement= if (!(object instanceof org.jfree.data.gantt.Task)) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2171
 
operation: REPLACE
location= org.jfree.data.gantt.Task
line= 224
original statement= if (!(object instanceof org.jfree.data.gantt.Task)) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2173
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 227
original statement= org.jfree.data.gantt.Task that = ((org.jfree.data.gantt.Task)(object))
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2174
 
operation: DELETE
location= org.jfree.data.gantt.Task
line= 228
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.description, that.description))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.description, that.description))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2175
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 228
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.description, that.description))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2176
 
operation: REPLACE
location= org.jfree.data.gantt.Task
line= 228
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.description, that.description))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2177
 
operation: REPLACE
location= org.jfree.data.gantt.Task
line= 228
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.description, that.description))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2178
 
operation: DELETE
location= org.jfree.data.gantt.Task
line= 231
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.duration, that.duration))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.duration, that.duration))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2179
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 231
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.duration, that.duration))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2180
 
operation: REPLACE
location= org.jfree.data.gantt.Task
line= 231
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.duration, that.duration))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2181
 
operation: REPLACE
location= org.jfree.data.gantt.Task
line= 231
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.duration, that.duration))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2182
 
operation: DELETE
location= org.jfree.data.gantt.Task
line= 234
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.percentComplete, that.percentComplete))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.percentComplete, that.percentComplete))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2183
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 234
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.percentComplete, that.percentComplete))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2184
 
operation: REPLACE
location= org.jfree.data.gantt.Task
line= 234
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.percentComplete, that.percentComplete))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2185
 
operation: REPLACE
location= org.jfree.data.gantt.Task
line= 234
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.percentComplete, that.percentComplete))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2186
 
operation: DELETE
location= org.jfree.data.gantt.Task
line= 238
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.subtasks, that.subtasks))) {
	return false;
} 
fixed statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.subtasks, that.subtasks))) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2187
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 238
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.subtasks, that.subtasks))) {
	return false;
} 
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2188
 
operation: REPLACE
location= org.jfree.data.gantt.Task
line= 238
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.subtasks, that.subtasks))) {
	return false;
} 
fixed statement= if (true) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2189
 
operation: REPLACE
location= org.jfree.data.gantt.Task
line= 238
original statement= if (!(org.jfree.chart.util.ObjectUtilities.equal(this.subtasks, that.subtasks))) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2191
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 241
original statement= return true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2192
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 405
original statement= result = new java.lang.Long(duration.getEnd().getTime())
fixed statement= result = new java.lang.Long(duration.getEnd().getTime())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2193
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 405
original statement= result = new java.lang.Long(duration.getEnd().getTime())
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2195
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 420
original statement= java.lang.Comparable rowKey = getRowKey(row)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2197
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 421
original statement= java.lang.Comparable columnKey = getColumnKey(column)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2199
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 422
original statement= return getEndValue(rowKey, columnKey)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2201
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 434
original statement= java.lang.Comparable rowKey = getRowKey(row)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2203
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 435
original statement= java.lang.Comparable columnKey = getColumnKey(column)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2205
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 436
original statement= return getPercentComplete(rowKey, columnKey)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2207
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 448
original statement= java.lang.Number result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2209
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 449
original statement= int row = getRowIndex(rowKey)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2211
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 450
original statement= org.jfree.data.gantt.TaskSeries series = ((org.jfree.data.gantt.TaskSeries)(this.data.get(row)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2213
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 451
original statement= org.jfree.data.gantt.Task task = series.get(columnKey.toString())
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2214
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 452
original statement= if (task != null) {
	result = task.getPercentComplete();
} 
fixed statement= if (task != null) {
	result = task.getPercentComplete();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2215
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 452
original statement= if (task != null) {
	result = task.getPercentComplete();
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2216
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 452
original statement= if (task != null) {
	result = task.getPercentComplete();
} 
fixed statement= if (true) {
	result = task.getPercentComplete();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2217
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 452
original statement= if (task != null) {
	result = task.getPercentComplete();
} 
fixed statement= if (false) {
	result = task.getPercentComplete();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2218
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 453
original statement= result = task.getPercentComplete()
fixed statement= result = task.getPercentComplete()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2219
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 453
original statement= result = task.getPercentComplete()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2221
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 455
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2223
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 581
original statement= java.lang.Comparable rowKey = getRowKey(row)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2225
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 582
original statement= java.lang.Comparable columnKey = getColumnKey(column)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2227
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 583
original statement= return getPercentComplete(rowKey, columnKey, subinterval)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2229
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 597
original statement= java.lang.Number result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2231
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 598
original statement= int row = getRowIndex(rowKey)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2233
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 599
original statement= org.jfree.data.gantt.TaskSeries series = ((org.jfree.data.gantt.TaskSeries)(this.data.get(row)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2235
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 600
original statement= org.jfree.data.gantt.Task task = series.get(columnKey.toString())
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2236
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 601
original statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		result = sub.getPercentComplete();
	} 
} 
fixed statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		result = sub.getPercentComplete();
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2237
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 601
original statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		result = sub.getPercentComplete();
	} 
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2238
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 601
original statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		result = sub.getPercentComplete();
	} 
} 
fixed statement= if (true) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		result = sub.getPercentComplete();
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2239
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 601
original statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		result = sub.getPercentComplete();
	} 
} 
fixed statement= if (false) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		result = sub.getPercentComplete();
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2241
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 602
original statement= org.jfree.data.gantt.Task sub = task.getSubtask(subinterval)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2242
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 603
original statement= if (sub != null) {
	result = sub.getPercentComplete();
} 
fixed statement= if (sub != null) {
	result = sub.getPercentComplete();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2243
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 603
original statement= if (sub != null) {
	result = sub.getPercentComplete();
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2244
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 603
original statement= if (sub != null) {
	result = sub.getPercentComplete();
} 
fixed statement= if (true) {
	result = sub.getPercentComplete();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2245
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 603
original statement= if (sub != null) {
	result = sub.getPercentComplete();
} 
fixed statement= if (false) {
	result = sub.getPercentComplete();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2246
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 604
original statement= result = sub.getPercentComplete()
fixed statement= result = sub.getPercentComplete()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2247
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 604
original statement= result = sub.getPercentComplete()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2249
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 607
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2251
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 151
original statement= return this.percentComplete
fixed statement= if (true)
	return 0d;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2253
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 467
original statement= java.lang.Comparable rowKey = getRowKey(row)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2255
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 468
original statement= java.lang.Comparable columnKey = getColumnKey(column)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2257
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 469
original statement= return getSubIntervalCount(rowKey, columnKey)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2259
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 481
original statement= int result = 0
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2261
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 482
original statement= int row = getRowIndex(rowKey)
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2263
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 483
original statement= org.jfree.data.gantt.TaskSeries series = ((org.jfree.data.gantt.TaskSeries)(this.data.get(row)))
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2265
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 484
original statement= org.jfree.data.gantt.Task task = series.get(columnKey.toString())
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2266
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 485
original statement= if (task != null) {
	result = task.getSubtaskCount();
} 
fixed statement= if (task != null) {
	result = task.getSubtaskCount();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2267
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 485
original statement= if (task != null) {
	result = task.getSubtaskCount();
} 
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2268
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 485
original statement= if (task != null) {
	result = task.getSubtaskCount();
} 
fixed statement= if (true) {
	result = task.getSubtaskCount();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2269
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 485
original statement= if (task != null) {
	result = task.getSubtaskCount();
} 
fixed statement= if (false) {
	result = task.getSubtaskCount();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2270
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 486
original statement= result = task.getSubtaskCount()
fixed statement= result = task.getSubtaskCount()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2271
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 486
original statement= result = task.getSubtaskCount()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2273
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 488
original statement= return result
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2275
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.Task
line= 199
original statement= return this.subtasks.size()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2277
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 146
original statement= org.jfree.data.gantt.TaskSeries ts = ((org.jfree.data.gantt.TaskSeries)(this.data.get(series)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2279
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 147
original statement= return ts.getKey()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2281
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 135
original statement= return getRowCount()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2283
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 156
original statement= return this.data.size()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2285
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 501
original statement= java.lang.Comparable rowKey = getRowKey(row)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2287
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 502
original statement= java.lang.Comparable columnKey = getColumnKey(column)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2289
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 503
original statement= return getStartValue(rowKey, columnKey, subinterval)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2291
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 517
original statement= java.lang.Number result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2293
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 518
original statement= int row = getRowIndex(rowKey)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2295
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 519
original statement= org.jfree.data.gantt.TaskSeries series = ((org.jfree.data.gantt.TaskSeries)(this.data.get(row)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2297
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 520
original statement= org.jfree.data.gantt.Task task = series.get(columnKey.toString())
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2298
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 521
original statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		org.jfree.data.time.TimePeriod duration = sub.getDuration();
		result = new java.lang.Long(duration.getStart().getTime());
	} 
} 
fixed statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		org.jfree.data.time.TimePeriod duration = sub.getDuration();
		result = new java.lang.Long(duration.getStart().getTime());
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2299
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 521
original statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		org.jfree.data.time.TimePeriod duration = sub.getDuration();
		result = new java.lang.Long(duration.getStart().getTime());
	} 
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2300
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 521
original statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		org.jfree.data.time.TimePeriod duration = sub.getDuration();
		result = new java.lang.Long(duration.getStart().getTime());
	} 
} 
fixed statement= if (true) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		org.jfree.data.time.TimePeriod duration = sub.getDuration();
		result = new java.lang.Long(duration.getStart().getTime());
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2301
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 521
original statement= if (task != null) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		org.jfree.data.time.TimePeriod duration = sub.getDuration();
		result = new java.lang.Long(duration.getStart().getTime());
	} 
} 
fixed statement= if (false) {
	org.jfree.data.gantt.Task sub = task.getSubtask(subinterval);
	if (sub != null) {
		org.jfree.data.time.TimePeriod duration = sub.getDuration();
		result = new java.lang.Long(duration.getStart().getTime());
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2303
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 522
original statement= org.jfree.data.gantt.Task sub = task.getSubtask(subinterval)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2304
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 523
original statement= if (sub != null) {
	org.jfree.data.time.TimePeriod duration = sub.getDuration();
	result = new java.lang.Long(duration.getStart().getTime());
} 
fixed statement= if (sub != null) {
	org.jfree.data.time.TimePeriod duration = sub.getDuration();
	result = new java.lang.Long(duration.getStart().getTime());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2305
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 523
original statement= if (sub != null) {
	org.jfree.data.time.TimePeriod duration = sub.getDuration();
	result = new java.lang.Long(duration.getStart().getTime());
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2306
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 523
original statement= if (sub != null) {
	org.jfree.data.time.TimePeriod duration = sub.getDuration();
	result = new java.lang.Long(duration.getStart().getTime());
} 
fixed statement= if (true) {
	org.jfree.data.time.TimePeriod duration = sub.getDuration();
	result = new java.lang.Long(duration.getStart().getTime());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2307
 
operation: REPLACE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 523
original statement= if (sub != null) {
	org.jfree.data.time.TimePeriod duration = sub.getDuration();
	result = new java.lang.Long(duration.getStart().getTime());
} 
fixed statement= if (false) {
	org.jfree.data.time.TimePeriod duration = sub.getDuration();
	result = new java.lang.Long(duration.getStart().getTime());
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2309
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 524
original statement= org.jfree.data.time.TimePeriod duration = sub.getDuration()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2310
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 525
original statement= result = new java.lang.Long(duration.getStart().getTime())
fixed statement= result = new java.lang.Long(duration.getStart().getTime())
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2311
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 525
original statement= result = new java.lang.Long(duration.getStart().getTime())
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2313
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 528
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2315
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 174
original statement= return this.keys.size()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2316
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 616
original statement= refreshKeys()
fixed statement= refreshKeys()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2317
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 616
original statement= refreshKeys()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2318
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 617
original statement= fireDatasetChanged()
fixed statement= fireDatasetChanged()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2319
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 617
original statement= fireDatasetChanged()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2320
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 625
original statement= this.keys.clear()
fixed statement= this.keys.clear()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2321
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 625
original statement= this.keys.clear()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2322
 
operation: DELETE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 626
original statement= for (int i = 0 ; i < (getSeriesCount()) ; i++) {
	org.jfree.data.gantt.TaskSeries series = ((org.jfree.data.gantt.TaskSeries)(this.data.get(i)));
	java.util.Iterator iterator = series.getTasks().iterator();
	while (iterator.hasNext()) {
		org.jfree.data.gantt.Task task = ((org.jfree.data.gantt.Task)(iterator.next()));
		java.lang.String key = task.getDescription();
		int index = this.keys.indexOf(key);
		if (index < 0) {
			this.keys.add(key);
		} 
	}
}
fixed statement= for (int i = 0 ; i < (getSeriesCount()) ; i++) {
	org.jfree.data.gantt.TaskSeries series = ((org.jfree.data.gantt.TaskSeries)(this.data.get(i)));
	java.util.Iterator iterator = series.getTasks().iterator();
	while (iterator.hasNext()) {
		org.jfree.data.gantt.Task task = ((org.jfree.data.gantt.Task)(iterator.next()));
		java.lang.String key = task.getDescription();
		int index = this.keys.indexOf(key);
		if (index < 0) {
			this.keys.add(key);
		} 
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2323
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 626
original statement= for (int i = 0 ; i < (getSeriesCount()) ; i++) {
	org.jfree.data.gantt.TaskSeries series = ((org.jfree.data.gantt.TaskSeries)(this.data.get(i)));
	java.util.Iterator iterator = series.getTasks().iterator();
	while (iterator.hasNext()) {
		org.jfree.data.gantt.Task task = ((org.jfree.data.gantt.Task)(iterator.next()));
		java.lang.String key = task.getDescription();
		int index = this.keys.indexOf(key);
		if (index < 0) {
			this.keys.add(key);
		} 
	}
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 2325
 
operation: INSERT_BEFORE
location= org.jfree.data.gantt.TaskSeriesCollection
line= 627
original statement= org.jfree.data.gantt.TaskSeries series = ((org.jfree.data.gantt.TaskSeries)(this.data.get(i)))
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 

----stats: 

spaces navigation: [0]: {}
#gen: 0
#patches: 1967
#RightCompilation: 1967
#WrongCompilation: 357
#FailingTestCaseExecution: 1968
#RegressionTestExecution: 1968
#TestcasesExecutedval1: 45264
#TestcasesExecutedval2: 0
#FailingTestCase: 23
#RegressionTestCases: 0
#OfAppliedOp: 0
#NotAppliedOp: 0
#InmutatedGen: 0
#unfinishValidation: 0
#ing {}
#untilcompile {}
Time Total(ms): 1171377


Node: graphene-62.nancy.grid5000.fr


Date: Thu Aug 13 20:58:51 CEST 2015


