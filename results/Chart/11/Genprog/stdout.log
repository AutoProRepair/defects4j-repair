export PATH="/home/tdurieux/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cp -r /home/tdurieux/projects/chart/chart_11 /tmp/chart_11_Genprog;cd /tmp/chart_11_Genprog;defects4j compile;mkdir lib/;cp -r /home/tdurieux/defects4j/framework/projects/lib/* lib/;cp -r /home/tdurieux/defects4j/framework/projects/Chart/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/tdurieux/defects4j-repair/src/python/core/../../../results/Chart/11/Genprog/result
cd /tmp/chart_11_Genprog;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time java  -cp /home/tdurieux/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement -location . -dependencies lib/ -failing org.jfree.chart.util.junit.ShapeUtilitiesTests: -package org.jfree -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -javacompliancelevel 4 -maxgen 1000000 -seed 10 -population 1 -srcjavafolder source/ -srctestfolder tests/ -binjavafolder build/ -bintestfolder build-tests/;echo "

Node: `hostname`
";echo "
Date: `date`
";rm -rf /tmp/chart_11_Genprog;

2015-08-06 21:30:23,364 INFO main - End Repair Loops: NOT Found solution
2015-08-06 21:30:23,364 INFO main - 
Number solutions:0
2015-08-06 21:30:23,364 INFO main - 
All variants:
2015-08-06 21:30:23,364 INFO main - f 1.0, [Variant id: 23965, #gens: 18, #ops: 0, parent:-]
2015-08-06 21:30:23,364 INFO main - --Space: LOCAL
org.jfree.chart.util.ShapeUtilities=183|,
2015-08-06 21:30:23,364 INFO main - 
----stats: 
2015-08-06 21:30:23,364 INFO main - 
spaces navigation: [51]: {(CtInvocationImpl| size: 55| compiles| LOCAL| REPLACE) =2, (CtIfImpl| size: 183| alreadyanalyzed| LOCAL| INSERT_AFTER) =578361, (CtWhileImpl| size: 183| notcompiles| LOCAL| INSERT_AFTER) =161, (CtIfImpl| size: 183| compiles| LOCAL| INSERT_BEFORE) =253, (CtInvocationImpl| size: 183| alreadyanalyzed| LOCAL| INSERT_AFTER) =187743, (CtWhileImpl| size: 1| alreadyanalyzed| LOCAL| REPLACE) =480, (CtReturnImpl| size: 183| alreadyanalyzed| LOCAL| INSERT_AFTER) =97514, (CtInvocationImpl| size: 55| notcompiles| LOCAL| REPLACE) =92, (CtInvocationImpl| size: 183| notcompiles| LOCAL| INSERT_AFTER) =175, (CtIfImpl| size: 31| compiles| LOCAL| REPLACE) =17, (CtInvocationImpl| size: 183| notcompiles| LOCAL| INSERT_BEFORE) =175, (CtLocalVariableImpl| size: 183| compiles| LOCAL| INSERT_BEFORE) =293, (CtIfImpl| size: 31| alreadyanalyzed| LOCAL| REPLACE) =103898, (CtLocalVariableImpl| size: 183| alreadyanalyzed| LOCAL| INSERT_AFTER) =667636, (CtReturnImpl| size: 183| compiles| LOCAL| INSERT_AFTER) =44, (CtInvocationImpl| size: 183| alreadyanalyzed| LOCAL| INSERT_BEFORE) =193199, (CtLocalVariableImpl| size: 183| notcompiles| LOCAL| INSERT_BEFORE) =638, (CtInvocationImpl| size: 183| compiles| LOCAL| INSERT_BEFORE) =89, (CtWhileImpl| size: 183| compiles| LOCAL| INSERT_BEFORE) =110, (CtReturnImpl| size: 50| notcompiles| LOCAL| REPLACE) =16, (CtIfImpl| size: 31| notcompiles| LOCAL| REPLACE) =147, (CtLocalVariableImpl| size: 183| alreadyanalyzed| LOCAL| INSERT_BEFORE) =645101, (CtIfImpl| size: 183| notcompiles| LOCAL| INSERT_BEFORE) =546, (CtAssignmentImpl| size: 183| notcompiles| LOCAL| INSERT_BEFORE) =86, (CtIfImpl| size: 183| notcompiles| LOCAL| INSERT_AFTER) =549, (CtAssignmentImpl| size: 183| alreadyanalyzed| LOCAL| INSERT_AFTER) =95532, (CtAssignmentImpl| size: 3| alreadyanalyzed| LOCAL| REPLACE) =1696, (CtAssignmentImpl| size: 183| compiles| LOCAL| INSERT_BEFORE) =47, (CtAssignmentImpl| size: 183| compiles| LOCAL| INSERT_AFTER) =46, (CtReturnImpl| size: 183| notcompiles| LOCAL| INSERT_BEFORE) =88, (CtWhileImpl| size: 1| compiles| LOCAL| REPLACE) =47, (CtReturnImpl| size: 183| notcompiles| LOCAL| INSERT_AFTER) =89, (CtAssignmentImpl| size: 183| notcompiles| LOCAL| INSERT_AFTER) =87, (CtWhileImpl| size: 183| compiles| LOCAL| INSERT_AFTER) =106, (CtWhileImpl| size: 183| notcompiles| LOCAL| INSERT_BEFORE) =158, (CtLocalVariableImpl| size: 40| alreadyanalyzed| LOCAL| REPLACE) =147036, (CtInvocationImpl| size: 183| compiles| LOCAL| INSERT_AFTER) =89, (CtReturnImpl| size: 183| compiles| LOCAL| INSERT_BEFORE) =45, (CtAssignmentImpl| size: 183| alreadyanalyzed| LOCAL| INSERT_BEFORE) =92619, (CtIfImpl| size: 183| compiles| LOCAL| INSERT_AFTER) =251, (CtReturnImpl| size: 50| alreadyanalyzed| LOCAL| REPLACE) =27189, (CtLocalVariableImpl| size: 40| compiles| LOCAL| REPLACE) =210, (CtIfImpl| size: 183| alreadyanalyzed| LOCAL| INSERT_BEFORE) =578550, (CtReturnImpl| size: 183| alreadyanalyzed| LOCAL| INSERT_BEFORE) =92337, (CtLocalVariableImpl| size: 183| notcompiles| LOCAL| INSERT_AFTER) =640, (CtInvocationImpl| size: 55| alreadyanalyzed| LOCAL| REPLACE) =59072, (CtLocalVariableImpl| size: 183| compiles| LOCAL| INSERT_AFTER) =291, (CtWhileImpl| size: 183| alreadyanalyzed| LOCAL| INSERT_AFTER) =82844, (CtAssignmentImpl| size: 3| notcompiles| LOCAL| REPLACE) =2, (CtWhileImpl| size: 183| alreadyanalyzed| LOCAL| INSERT_BEFORE) =84484, (CtReturnImpl| size: 50| compiles| LOCAL| REPLACE) =3}
#gen: 11982
#patches: 0
#RightCompilation: 621
#WrongCompilation: 11318
#FailingTestCaseExecution: 622
#RegressionTestExecution: 0
#TestcasesExecutedval1: 2484
#TestcasesExecutedval2: 0
#FailingTestCase: 4
#RegressionTestCases: 0
#OfAppliedOp: 11939
#NotAppliedOp: 0
#InmutatedGen: 28143
#unfinishValidation: 0
#ing {CtLocalVariableImpl=15456, CtAssignmentImpl=2260, CtReturnImpl=2237, CtInvocationImpl=4410, CtIfImpl=13523, CtWhileImpl=2196}
#untilcompile {1=405, 2202=1, 2=186, 3=186, 4=108, 2204=1, 5=85, 6=71, 7=67, 8=43, 9=38, 10=44, 2195=1, 11=25, 2196=1, 12=22, 13=21, 14=21, 15=15, 17=13, 16=14, 19=10, 18=12, 2186=1, 2189=1, 21=9, 20=14, 23=6, 22=9, 2177=1, 25=6, 24=8, 27=8, 26=5, 29=8, 28=7, 31=233, 30=2, 34=10, 35=12, 32=41, 33=15, 38=9, 39=8, 2236=1, 36=12, 37=5, 42=12, 43=19, 40=267, 41=11, 46=4, 47=4, 44=4, 45=11, 51=11, 50=41, 49=3, 48=3, 2223=2, 55=79, 54=3, 53=9, 52=2, 59=6, 58=10, 57=1, 56=17, 63=9, 62=22, 61=2, 60=4, 2268=1, 68=4, 69=1, 70=2, 71=44, 64=4, 65=6, 66=3, 67=4, 2267=1, 77=1, 78=1, 79=1, 72=7, 74=7, 75=2, 2253=1, 85=1, 84=3, 87=3, 86=16, 2254=1, 2249=1, 81=13, 80=29, 82=3, 93=5, 92=2, 95=15, 94=3, 2241=1, 89=1, 91=1, 90=9, 102=9, 103=3, 100=1, 101=2, 98=4, 2298=1, 96=1, 111=5, 108=1, 109=1, 107=3, 104=1, 105=5, 2286=1, 118=2, 117=4, 115=2, 114=2, 2282=1, 112=2, 126=2, 2277=1, 124=1, 123=2, 122=1, 121=7, 120=3, 2272=1, 136=1, 2067=2, 138=1, 141=1, 140=1, 142=2, 130=4, 133=1, 135=1, 134=1, 155=1, 156=1, 2053=2, 157=1, 145=2, 2059=1, 147=3, 151=1, 2099=1, 2103=1, 161=1, 167=1, 2111=1, 2109=2, 164=1, 2108=1, 186=41, 187=6, 184=47, 185=7, 190=2, 191=3, 188=1, 2084=1, 189=4, 177=1, 183=1209, 181=1, 2093=2, 2133=1, 205=1, 206=1, 2128=1, 197=2, 196=2, 199=1, 2142=1, 193=1, 192=1, 221=2, 223=220, 216=1, 217=11, 218=1, 219=1, 213=1, 214=205, 215=13, 208=4, 210=2, 211=1, 2167=1, 239=8, 238=61, 236=1, 235=2, 233=33, 232=1, 231=2, 228=2, 2171=1, 227=1, 2170=1, 226=11, 225=1, 224=14, 254=56, 255=6, 2148=1, 248=3, 249=1, 246=2, 244=1, 245=21, 2155=1, 240=1, 241=5, 274=1, 273=7, 272=1, 279=3, 278=23, 276=2, 281=3, 287=1, 286=2, 285=10, 284=1, 258=2, 257=4, 263=29, 260=1, 261=1, 2450=2, 266=1, 267=1, 264=10, 265=1, 2449=1, 270=2, 268=2, 269=25, 304=3, 306=1, 309=9, 308=2, 310=1, 313=1, 312=1, 317=1, 316=1, 318=4, 288=3, 289=1, 291=1, 294=13, 295=3, 297=1, 300=3, 302=2, 303=3, 343=1, 341=1, 340=2, 349=2, 2501=1, 348=1, 344=3, 324=1, 325=2, 334=3, 332=1, 333=1, 328=3, 373=2, 374=1, 369=21, 368=3, 371=2, 370=4, 381=1, 377=1, 379=1, 2531=1, 378=1, 356=2, 358=1, 359=1, 352=2, 354=1, 355=1, 366=589, 367=28, 2545=1, 408=1, 409=5, 414=2, 2309=1, 402=1, 400=10, 401=1, 2318=1, 406=186, 407=6, 2316=1, 393=1, 398=8, 397=148, 2331=2, 386=1, 390=1, 440=4, 441=1, 2339=2, 445=2, 446=29, 447=9, 437=56, 438=2, 425=1, 424=7, 429=4, 2357=1, 428=28, 431=4, 417=2, 416=15, 419=1, 421=39, 420=1, 2367=1, 422=5, 478=4, 2372=1, 476=1, 477=12, 471=4, 468=13, 2381=1, 2379=1, 464=3, 465=1, 463=1, 462=1, 2390=1, 461=20, 459=2, 457=2, 456=5, 455=2, 453=3, 452=17, 451=1, 449=2, 448=1, 508=2, 509=1, 511=2, 2400=1, 507=2, 500=1, 501=4, 502=3, 496=4, 2408=1, 497=1, 2409=1, 499=2, 493=2, 492=7, 495=2, 490=2, 487=4, 486=6, 2424=1, 480=3, 2427=1, 483=3, 550=19, 549=314, 558=1, 557=1, 554=1, 552=21, 553=1, 567=1, 563=1, 561=1, 2728=1, 517=2, 518=3, 2719=1, 514=2, 524=1, 526=4, 527=2, 520=1, 2704=4, 523=1, 2700=1, 535=2, 528=1, 541=2, 540=1, 537=1, 2688=1, 539=3, 611=16, 608=1, 2808=1, 614=3, 612=3, 619=1, 623=7, 620=42, 621=5, 626=1, 624=2, 630=15, 629=20, 635=14, 632=3, 639=8, 638=1, 636=2, 578=1, 580=96, 581=4, 582=1, 583=5, 584=1, 589=89, 590=7, 591=1, 593=1, 592=7, 596=1, 599=25, 598=1, 604=37, 607=4, 685=4, 2613=1, 684=3, 679=1, 678=2, 676=2, 675=8, 673=2, 672=1, 700=2, 701=2, 697=3, 694=2, 692=1, 690=1, 691=2, 652=2, 654=3, 2576=1, 651=7, 650=1, 644=16, 647=2, 640=2, 642=3, 669=2, 670=8, 2561=1, 666=1, 660=14, 661=6, 663=2, 2571=2, 747=1, 2674=1, 739=1, 740=1, 763=64, 766=10, 767=1, 764=3, 765=3, 755=3, 2664=1, 2643=1, 715=5, 714=1, 716=1, 706=1, 709=2, 708=1, 710=3, 2625=1, 730=1, 732=150, 733=5, 734=2, 735=17, 721=1, 2634=1, 722=1, 726=1, 727=1, 821=1, 823=3, 822=5, 2990=1, 817=2, 816=1, 819=1, 818=13, 828=1, 831=1, 825=2, 827=11, 804=3, 806=4, 803=35, 812=18, 813=10, 814=1, 815=2, 2999=1, 791=1, 790=3, 787=26, 785=2, 795=2, 794=13, 774=1, 775=8, 772=64, 773=3, 2971=1, 771=1, 782=13, 783=1, 780=2, 781=1, 779=1, 883=1, 882=1, 884=3, 887=1, 889=2, 893=1, 892=1, 865=5, 866=1, 867=2, 868=1, 874=4, 877=3, 850=1, 849=5, 854=1, 853=5, 852=3, 858=2, 856=2, 862=3, 861=1, 834=9, 835=1, 837=1, 842=2, 843=12, 840=1, 846=1, 847=1, 844=4, 956=4, 957=1, 958=6, 953=1, 955=44, 949=1, 2856=2, 946=35, 947=4, 938=1, 930=1, 926=1, 924=1, 923=2, 920=2, 2817=1, 918=1, 916=7, 914=2, 2826=1, 915=79, 913=2, 911=1, 909=1, 899=3, 898=3, 2841=1, 1017=14, 1018=3, 1020=2, 1021=1, 1008=2, 1009=2, 1010=10, 1013=2, 1001=6, 1002=1, 1005=6, 1006=1, 993=1, 995=11, 996=4, 998=3, 986=26, 987=1, 984=1, 985=1, 989=2, 978=2, 979=1, 977=14, 980=1, 970=9, 973=3, 960=1, 965=8, 1101=3, 1096=3, 1097=3, 1098=40, 1099=4, 1090=1, 1091=1, 1112=1, 1115=1, 1108=1, 1104=1, 1107=2, 1106=1, 1130=3, 1129=19, 1122=2, 1121=1, 1151=1, 1148=3, 1141=3, 1140=1, 1138=20, 1032=1, 1035=1, 1036=4, 1039=1, 1025=3, 1026=3, 1027=4, 1029=1, 1049=2, 1051=3, 1050=1, 1052=1, 1041=6, 1045=3, 1044=1, 1066=1, 1065=1, 1071=1, 1058=3, 1057=4, 1060=1, 1061=1, 1081=1, 1075=1, 1073=1, 1072=1, 1077=1, 1076=2, 1221=1, 1222=1, 1216=1, 1219=2, 1218=2, 1229=1, 1228=2, 1231=1, 1224=3, 1236=1, 1233=5, 1234=3, 1240=2, 1241=2, 1243=1, 1252=1, 1249=4, 1248=1, 1258=1, 1270=1, 1271=1, 1268=1, 1267=1, 1264=3, 1153=5, 1152=1, 1154=2, 1156=3, 1161=1, 1160=3, 1163=1, 1169=16, 1170=3, 1171=1, 1172=3, 1174=1, 1178=7, 1179=7, 1181=1, 1182=1, 1187=2, 1185=1, 1184=7, 1191=2, 1188=4, 1195=1, 1194=1, 1193=4, 1192=1, 1199=1, 1200=4, 1201=1, 1210=1, 1208=1, 1209=7, 1215=2, 1212=3, 1371=3, 1366=1, 1364=1, 1362=1, 1361=3, 1359=1, 1355=2, 1352=7, 1353=1, 1351=1, 1346=2, 1344=4, 1407=7, 1401=4, 1403=1, 1402=1, 1398=1, 1393=2, 1392=4, 1395=4, 1384=1, 1386=1, 1383=5, 1376=6, 1304=1, 1310=1, 1308=1, 1299=1, 1303=1, 1290=1, 1294=1, 1295=3, 1282=3, 1280=1, 1281=12, 1286=1, 1284=2, 1337=2, 1336=6, 1343=7, 1342=1, 1331=1, 1335=1, 1321=12, 1322=1, 1324=4, 1325=2, 1326=2, 1312=7, 1314=2, 1315=1, 1316=1, 1495=9, 1488=2, 1499=2, 1496=1, 1478=1, 1475=1, 1487=3, 1481=1, 1526=3, 1520=1, 1522=2, 1535=7, 1508=1, 1505=3, 1504=3, 1507=2, 1506=1, 1519=5, 1512=1, 1514=1, 1426=1, 1425=1, 1431=1, 1432=1, 1433=1, 1438=1, 1436=1, 1410=1, 1415=1, 1418=1, 1417=1, 1416=3, 1423=5, 1459=1, 1463=2, 1464=7, 1466=2, 1467=2, 1468=2, 1469=1, 1441=1, 1442=2, 1445=2, 1447=1, 1446=1, 1448=1, 1454=1, 1643=1, 1640=3, 1647=3, 1645=2, 1633=1, 1637=3, 1656=1, 1662=1, 1652=1, 1608=1, 1609=2, 1615=4, 1606=1, 1607=1, 1625=2, 1624=1, 1627=1, 1631=1, 1630=3, 1617=1, 1616=2, 1621=2, 1581=2, 1578=2, 1576=2, 1574=1, 1575=7, 1599=2, 1598=1, 1597=1, 1594=1, 1593=1, 1590=2, 1589=1, 1588=1, 1587=1, 1585=1, 1584=2, 1550=5, 1544=2, 1545=2, 1547=2, 1540=2, 1542=1, 1536=1, 1537=2, 1538=3, 1567=1, 1566=5, 1562=2, 1559=1, 1761=1, 1764=1, 1768=1, 1774=1, 1773=3, 1782=1, 1783=1, 1780=2, 1790=1, 1788=1, 1789=1, 1728=2, 1731=1, 1730=1, 1737=2, 1738=1, 1740=2, 1749=2, 1752=1, 1753=1, 1757=1, 1758=2, 1759=2, 1703=1, 1699=1, 1697=1, 1710=2, 1709=2, 1705=1, 1718=6, 1717=1, 1727=1, 1721=1, 1671=1, 1665=3, 1677=1, 1678=1, 1687=12, 1682=1, 1689=1, 1690=1, 1691=1, 1917=1, 1916=1, 1905=1, 1898=1, 1900=1, 1901=2, 1902=1, 1892=1, 1870=2, 1871=1, 1869=1, 1859=1, 1861=2, 1848=1, 1851=1, 1844=1, 1846=1, 1833=1, 1829=1, 1830=4, 1823=1, 1820=1, 1813=2, 1808=1, 1807=1, 1804=1, 1802=1, 1800=1, 1798=2, 1792=1, 2036=1, 2042=1, 2046=1, 2018=1, 2027=2, 2006=1, 2011=1, 2012=2, 2013=3, 1991=1, 1990=1, 1956=3, 1960=1, 1942=1, 1943=1, 1941=1, 1950=1, 1945=1, 1925=1, 1920=1, 1935=1, 1932=2, 1928=1}
2015-08-06 21:30:23,365 INFO main - Time Evolution(ms): 3660089
2015-08-06 21:30:23,365 INFO fr.inria.main.AbstractMain - Time Total(ms): 3701424


Node: griffon-41.nancy.grid5000.fr


Date: Thu Aug  6 23:30:23 CEST 2015


