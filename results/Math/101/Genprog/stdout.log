export PATH="/home/tdurieux/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cp -r /home/tdurieux/projects/math/math_101 /tmp/math_101_Genprog;cd /tmp/math_101_Genprog;defects4j compile;mkdir lib/;cp -r /home/tdurieux/defects4j/framework/projects/lib/* lib/;cp -r /home/tdurieux/defects4j/framework/projects/Math/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/tdurieux/defects4j-repair/src/python/core/../../../results/Math/101/Genprog/result
cd /tmp/math_101_Genprog;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time java  -cp /home/tdurieux/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement -location . -dependencies lib/ -failing org.apache.commons.math.complex.ComplexFormatTest:org.apache.commons.math.complex.FrenchComplexFormatTest: -package org.apache.commons -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -javacompliancelevel 3 -maxgen 1000000 -seed 10 -population 1 -srcjavafolder src/java/ -srctestfolder src/test/ -binjavafolder target/classes/ -bintestfolder target/test-classes/;echo "

Node: `hostname`
";echo "
Date: `date`
";rm -rf /tmp/math_101_Genprog;

2015-08-06 18:11:51,274 INFO main - End Repair Loops: NOT Found solution
2015-08-06 18:11:51,274 INFO main - 
Number solutions:0
2015-08-06 18:11:51,274 INFO main - 
All variants:
2015-08-06 18:11:51,274 INFO main - f 2.0, [Variant id: 55125, #gens: 45, #ops: 0, parent:-]
2015-08-06 18:11:51,274 INFO main - --Space: LOCAL
org.apache.commons.math.complex.ComplexFormat=121|,
2015-08-06 18:11:51,274 INFO main - 
----stats: 
2015-08-06 18:11:51,274 INFO main - 
spaces navigation: [51]: {(CtReturnImpl| size: 21| compiles| LOCAL| REPLACE) =48, (CtInvocationImpl| size: 121| alreadyanalyzed| LOCAL| INSERT_AFTER) =344973, (CtReturnImpl| size: 121| notcompiles| LOCAL| INSERT_AFTER) =375, (CtAssignmentImpl| size: 10| notcompiles| LOCAL| REPLACE) =37, (CtInvocationImpl| size: 121| compiles| LOCAL| INSERT_AFTER) =275, (CtInvocationImpl| size: 37| notcompiles| LOCAL| REPLACE) =110, (CtAssignmentImpl| size: 10| alreadyanalyzed| LOCAL| REPLACE) =26084, (CtLocalVariableImpl| size: 121| notcompiles| LOCAL| INSERT_BEFORE) =761, (CtSwitchImpl| size: 1| alreadyanalyzed| LOCAL| REPLACE) =521, (CtLocalVariableImpl| size: 121| notcompiles| LOCAL| INSERT_AFTER) =762, (CtInvocationImpl| size: 121| notcompiles| LOCAL| INSERT_AFTER) =260, (CtIfImpl| size: 121| notcompiles| LOCAL| INSERT_AFTER) =451, (CtSwitchImpl| size: 121| compiles| LOCAL| INSERT_AFTER) =58, (CtInvocationImpl| size: 121| notcompiles| LOCAL| INSERT_BEFORE) =260, (CtIfImpl| size: 121| notcompiles| LOCAL| INSERT_BEFORE) =452, (CtIfImpl| size: 16| alreadyanalyzed| LOCAL| REPLACE) =70514, (CtLocalVariableImpl| size: 28| compiles| LOCAL| REPLACE) =349, (CtLocalVariableImpl| size: 121| compiles| LOCAL| INSERT_AFTER) =832, (CtReturnImpl| size: 121| compiles| LOCAL| INSERT_BEFORE) =375, (CtAssignmentImpl| size: 121| notcompiles| LOCAL| INSERT_AFTER) =311, (CtAssignmentImpl| size: 121| alreadyanalyzed| LOCAL| INSERT_BEFORE) =274469, (CtReturnImpl| size: 121| alreadyanalyzed| LOCAL| INSERT_BEFORE) =334365, (CtAssignmentImpl| size: 121| alreadyanalyzed| LOCAL| INSERT_AFTER) =278589, (CtLocalVariableImpl| size: 121| alreadyanalyzed| LOCAL| INSERT_AFTER) =912502, (CtAssignmentImpl| size: 121| notcompiles| LOCAL| INSERT_BEFORE) =311, (CtReturnImpl| size: 121| notcompiles| LOCAL| INSERT_BEFORE) =375, (CtInvocationImpl| size: 121| compiles| LOCAL| INSERT_BEFORE) =275, (CtIfImpl| size: 121| alreadyanalyzed| LOCAL| INSERT_BEFORE) =445359, (CtIfImpl| size: 16| compiles| LOCAL| REPLACE) =34, (CtAssignmentImpl| size: 10| compiles| LOCAL| REPLACE) =17, (CtReturnImpl| size: 21| notcompiles| LOCAL| REPLACE) =57, (CtSwitchImpl| size: 121| alreadyanalyzed| LOCAL| INSERT_AFTER) =57327, (CtLocalVariableImpl| size: 28| alreadyanalyzed| LOCAL| REPLACE) =228015, (CtReturnImpl| size: 121| compiles| LOCAL| INSERT_AFTER) =375, (CtIfImpl| size: 16| notcompiles| LOCAL| REPLACE) =101, (CtSwitchImpl| size: 121| notcompiles| LOCAL| INSERT_AFTER) =49, (CtSwitchImpl| size: 121| compiles| LOCAL| INSERT_BEFORE) =58, (CtInvocationImpl| size: 37| alreadyanalyzed| LOCAL| REPLACE) =114060, (CtSwitchImpl| size: 121| alreadyanalyzed| LOCAL| INSERT_BEFORE) =57550, (CtSwitchImpl| size: 121| notcompiles| LOCAL| INSERT_BEFORE) =49, (CtIfImpl| size: 121| compiles| LOCAL| INSERT_AFTER) =512, (CtReturnImpl| size: 21| alreadyanalyzed| LOCAL| REPLACE) =69343, (CtIfImpl| size: 121| alreadyanalyzed| LOCAL| INSERT_AFTER) =467607, (CtInvocationImpl| size: 37| compiles| LOCAL| REPLACE) =48, (CtAssignmentImpl| size: 121| compiles| LOCAL| INSERT_AFTER) =331, (CtLocalVariableImpl| size: 121| compiles| LOCAL| INSERT_BEFORE) =833, (CtAssignmentImpl| size: 121| compiles| LOCAL| INSERT_BEFORE) =331, (CtLocalVariableImpl| size: 121| alreadyanalyzed| LOCAL| INSERT_BEFORE) =918689, (CtInvocationImpl| size: 121| alreadyanalyzed| LOCAL| INSERT_BEFORE) =330904, (CtIfImpl| size: 121| compiles| LOCAL| INSERT_BEFORE) =511, (CtReturnImpl| size: 121| alreadyanalyzed| LOCAL| INSERT_AFTER) =345662}
#gen: 27562
#patches: 0
#RightCompilation: 102
#WrongCompilation: 27460
#FailingTestCaseExecution: 103
#RegressionTestExecution: 0
#TestcasesExecutedval1: 7210
#TestcasesExecutedval2: 0
#FailingTestCase: 70
#RegressionTestCases: 0
#OfAppliedOp: 27562
#NotAppliedOp: 0
#InmutatedGen: 61179
#unfinishValidation: 0
#ing {CtLocalVariableImpl=33637, CtSwitchImpl=2114, CtAssignmentImpl=10485, CtReturnImpl=12951, CtInvocationImpl=12266, CtIfImpl=17288}
#untilcompile {1=1160, 2=705, 3=448, 4=330, 5=214, 6=174, 7=122, 8=102, 9=80, 10=238, 11=77, 12=65, 13=44, 14=32, 15=32, 17=90, 16=356, 19=55, 18=59, 21=279, 20=32, 2188=2, 23=38, 22=36, 25=23, 24=33, 27=21, 26=40, 29=55, 28=599, 31=42, 30=37, 34=26, 35=24, 32=42, 33=20, 38=79, 39=38, 2236=1, 36=12, 37=280, 42=20, 2227=1, 43=15, 40=15, 41=20, 46=5, 47=21, 44=75, 45=15, 51=8, 50=9, 49=54, 48=11, 55=8, 54=19, 53=29, 52=10, 59=10, 58=25, 57=11, 56=58, 63=10, 62=1, 61=8, 60=10, 68=10, 69=5, 70=4, 2271=1, 71=3, 2264=1, 64=4, 65=56, 66=8, 67=4, 76=2, 77=8, 78=6, 79=7, 72=10, 73=3, 74=10, 2259=1, 75=5, 85=2, 84=3, 87=4, 86=6, 81=8, 80=4, 83=6, 2250=1, 82=1, 93=10, 92=3, 95=4, 94=1, 89=3, 88=4, 91=7, 90=3, 102=3, 103=1, 100=6, 98=1, 96=6, 97=3, 2294=1, 111=1, 108=2, 109=3, 106=4, 107=3, 105=1, 119=1, 116=1, 115=3, 114=2, 113=2, 112=3, 127=9, 126=13, 125=20, 124=22, 123=17, 122=53, 121=2601, 120=1, 137=259, 136=3, 139=3, 138=12, 141=12, 140=8, 143=10, 142=224, 129=8, 128=10, 131=138, 130=8, 133=7, 132=5, 135=6, 134=5, 152=22, 153=22, 154=5, 155=4, 156=4, 2053=1, 157=8, 158=230, 159=50, 144=5, 2057=1, 145=10, 146=4, 147=23, 148=2, 2061=1, 149=494, 150=11, 151=7, 171=5, 170=53, 169=9, 168=22, 175=8, 174=26, 172=1, 163=13, 162=5, 161=6, 160=6, 167=4, 166=8, 165=71, 164=8, 186=67, 2083=1, 187=6, 184=3, 185=1, 190=3, 2087=2, 191=5, 188=2, 189=2, 178=7, 179=31, 176=4, 177=76, 2094=1, 183=1, 180=6, 181=8, 205=10, 207=8, 206=4, 201=1, 200=2, 203=2, 202=9, 197=2, 196=13, 198=10, 193=20, 192=1, 195=18, 194=9, 220=1, 221=2, 223=1, 216=1, 217=1, 218=3, 219=2, 212=2, 214=13, 208=4, 209=3, 210=1, 211=1, 239=1, 237=3, 235=3, 233=3, 232=3, 231=2, 228=1, 226=2, 225=1, 224=1, 254=2, 252=119, 253=8, 250=2, 251=4, 248=4, 246=3, 247=3, 244=4, 245=3, 242=1212, 243=31, 240=5, 275=2, 274=10, 273=12, 272=2, 279=171, 278=1, 276=3, 283=2, 282=1, 281=4, 280=51, 287=2, 286=91, 285=1, 284=8, 258=193, 259=2, 256=3, 257=1, 262=7, 263=162, 261=2, 266=3, 264=2, 265=4, 270=346, 271=3, 268=26, 269=2, 305=9, 307=62, 306=1, 309=1, 308=10, 311=5, 310=4, 313=2, 312=11, 315=2, 314=12, 2469=1, 317=13, 316=14, 319=15, 318=3, 289=24, 290=6, 291=57, 292=3, 294=1, 295=33, 296=15, 297=3, 298=71, 299=6, 300=28, 301=10, 302=9, 343=1, 342=3, 340=2, 339=1, 338=4, 337=1, 2504=1, 336=2, 351=3, 349=1, 348=1, 347=6, 345=3, 344=13, 326=10, 327=1, 324=6, 322=2, 323=18, 321=3, 334=3, 335=20, 332=4, 333=3, 330=3, 331=1, 328=8, 329=1, 373=77, 372=2, 375=2, 374=2, 368=1, 371=2, 381=1, 380=5, 383=5, 382=4, 379=108, 378=1, 356=4, 359=2, 352=1, 353=2, 354=3, 364=12, 365=3, 2549=1, 366=1, 367=1, 361=2, 363=611, 410=19, 411=2, 408=2, 415=2, 412=39, 402=1, 400=124, 401=53, 407=64, 404=3, 405=8, 395=18, 394=11, 393=1, 392=6, 399=1, 398=1, 397=2, 387=1, 386=1, 385=5, 384=72, 391=210, 390=1, 389=15, 440=12, 441=1, 442=4, 443=3, 444=20, 445=4, 446=2, 447=14, 432=3, 433=4, 434=1, 435=16, 2348=1, 436=2, 437=17, 438=15, 439=5, 425=1, 424=1, 2355=1, 427=1, 2354=1, 426=8, 429=13, 428=54, 431=3, 417=8, 416=28, 419=57, 418=2, 421=30, 420=8, 423=8, 422=7, 478=2, 476=1, 477=3, 474=1, 475=1, 472=9, 470=2, 471=2, 468=2, 469=2, 466=6, 464=1, 465=9, 463=5, 461=1, 460=3, 459=2, 458=3, 456=15, 455=1, 454=2, 453=5, 452=1, 451=3, 450=4, 449=10, 2392=1, 448=2, 509=1, 510=5, 504=4, 505=54, 506=4, 507=1, 500=80, 501=2, 502=2, 496=4, 497=1, 493=4, 495=5, 494=45, 488=1, 491=2, 485=10, 484=332, 486=5, 481=4, 483=1, 482=5, 550=11, 551=1, 548=1, 549=39, 547=2, 544=3, 558=2, 559=12, 556=18, 554=6, 555=3, 552=2, 553=5, 566=4, 565=11, 564=1, 563=1, 562=3, 561=8, 560=3, 575=6, 574=3, 572=2, 571=7, 570=12, 568=17, 516=14, 517=3, 512=141, 513=7, 514=1, 515=7, 525=1, 526=7, 521=74, 522=28, 523=1, 533=30, 532=2, 534=2, 529=2, 528=37, 531=21, 530=1, 541=4, 540=35, 543=6, 542=25, 537=11, 536=1, 538=12, 610=2, 608=1, 609=1, 614=3, 615=42, 612=3, 619=2, 616=1, 622=4, 623=3, 621=40, 627=2, 626=30, 625=2, 631=12, 630=1, 628=1, 633=91, 632=1, 638=1, 637=8, 636=10, 576=2, 577=14, 578=1, 580=2, 2781=1, 581=4, 582=5, 583=1, 584=7, 585=1, 2769=1, 586=4, 587=5, 588=2, 589=1, 591=2, 593=5, 595=2, 594=2, 596=6, 599=3, 598=4, 603=2, 602=5, 2757=1, 605=153, 604=1, 607=3, 606=6, 687=2, 686=6, 685=2, 684=3, 683=1, 682=7, 681=4, 680=10, 679=7, 678=1, 677=20, 675=6, 674=4, 673=3, 702=1, 703=4, 700=3, 701=3, 698=10, 699=3, 696=1, 694=1, 692=2, 693=1, 690=2, 691=6, 689=6, 653=2, 652=4, 655=1, 654=32, 649=30, 650=2, 644=3, 647=5, 646=4, 641=2, 640=2, 643=21, 642=46, 668=1, 669=3, 670=31, 671=8, 664=10, 665=8, 661=25, 662=3, 663=10, 656=2, 657=1, 658=12, 659=4, 747=20, 746=2, 745=4, 751=1, 750=1, 749=3, 748=3, 739=1, 737=3, 736=19, 743=2, 742=21, 740=1, 763=20, 761=1, 766=2, 767=2, 764=7, 765=1, 754=46, 755=1, 752=5, 758=6, 759=1, 756=1, 757=5, 713=1, 712=2, 714=11, 719=6, 718=1, 705=4, 707=4, 708=1, 710=1, 728=2, 730=1, 731=1, 732=1, 733=1, 734=1, 2630=1, 735=2, 721=1, 723=4, 724=3, 725=1, 726=70, 727=2, 821=1, 820=5, 823=5, 822=4, 817=4, 819=11, 818=1, 829=5, 828=7, 831=1, 824=3, 827=1, 826=3, 804=1, 805=2, 806=1, 807=8, 800=5, 801=8, 803=5, 812=4, 813=3, 814=4, 808=2, 810=6, 811=1, 2995=1, 791=28, 790=1, 789=1, 787=1, 786=1, 785=2, 784=4, 799=1, 798=5, 794=3, 792=5, 774=1, 775=12, 772=1, 773=8, 770=17, 769=1, 782=19, 780=5, 781=1, 778=1, 779=12, 776=2, 881=1, 880=1, 883=1, 882=1, 885=12, 884=13, 887=1, 889=4, 888=1, 891=17, 895=1, 894=4, 864=1, 865=1, 866=2, 867=2, 868=9, 869=1, 870=1, 872=2, 873=2, 875=24, 876=3, 877=2, 878=6, 879=6, 851=1, 850=2, 849=3, 848=4, 854=1, 852=1, 859=1, 858=1, 857=8, 856=2, 863=15, 861=3, 860=1, 834=1, 835=6, 832=1, 833=5, 838=4, 836=2, 837=1, 842=1, 840=1, 841=1, 847=29, 844=3, 845=3, 956=7, 957=1, 958=2, 959=1, 952=1, 954=2, 955=1, 949=8, 951=2, 944=1, 945=2, 946=1, 947=3, 940=3, 943=1, 942=1, 937=3, 936=1, 938=8, 933=3, 932=1, 935=2, 929=4, 928=3, 931=7, 926=2, 927=2, 924=5, 925=1, 922=7, 923=2, 920=1, 919=3, 916=2, 917=1, 912=13, 913=7, 911=1, 910=2, 908=2, 906=6, 905=4, 903=9, 901=6, 900=9, 899=3, 898=2, 896=13, 1016=1, 1017=4, 1021=7, 1022=1, 1023=1, 1010=6, 1012=3, 1014=1, 1015=4, 1001=1, 1000=2, 1003=1, 1002=1, 1005=9, 1004=1, 1006=5, 994=2, 997=1, 996=24, 999=4, 998=1, 986=1, 984=5, 985=1, 990=3, 988=2, 989=6, 978=5, 979=1, 976=1, 977=1, 982=1, 970=1, 969=1, 968=22, 975=1, 972=1, 962=1, 961=4, 967=1, 965=2, 1103=3, 1097=2, 1098=3, 1099=5, 1093=1, 1094=3, 1089=10, 1090=1, 1117=5, 1118=2, 1115=3, 1114=2, 1109=2, 1111=1, 1110=8, 1105=5, 1107=1, 1106=1, 1133=3, 1130=1, 1128=3, 1126=7, 1127=4, 1120=1, 1150=1, 1149=3, 1148=2, 1147=4, 1146=2, 1145=7, 1144=2, 1143=3, 1142=1, 1138=5, 1137=1, 1136=3, 1032=2, 1033=7, 1036=2, 1037=2, 1038=3, 1039=1, 1024=6, 1026=1, 1027=4, 1028=1, 1031=2, 1049=5, 1051=1, 1050=2, 1053=1, 1052=2, 1055=1, 1054=3, 1040=10, 1043=3, 1042=2, 1045=5, 1046=1, 1066=3, 1064=1, 1065=1, 1070=1, 1071=2, 1068=2, 1059=2, 1062=2, 1061=2, 1083=1, 1082=1, 1081=2, 1080=4, 1087=3, 1086=2, 1084=1, 1075=2, 1074=1, 1073=4, 1072=1, 1078=2, 1077=1, 1221=1, 1220=3, 1228=1, 1231=4, 1224=1, 1226=4, 1238=7, 1239=1, 1245=1, 1247=4, 1240=1, 1242=1, 1255=1, 1254=4, 1252=3, 1251=2, 1248=3, 1263=2, 1262=1, 1257=1, 1270=1, 1271=1, 1268=1, 1269=2, 1266=1, 1267=1, 1276=1, 1275=5, 1155=2, 1154=6, 1158=1, 1161=1, 1163=2, 1165=1, 1164=2, 1166=2, 1169=1, 1170=2, 1171=1, 1173=2, 1174=2, 1176=2, 1178=1, 1180=3, 1181=1, 1182=5, 1187=2, 1186=2, 1185=2, 1191=2, 1190=2, 1189=2, 1194=1, 1192=3, 1199=1, 1198=2, 1196=1, 1202=1, 1203=1, 1206=1, 1207=3, 1205=1, 1210=8, 1208=1, 1209=3, 1214=2, 1212=1, 1375=1, 1372=1, 1368=3, 1364=1, 1360=1, 1358=1, 1359=1, 1356=1, 1352=1, 1351=2, 1349=1, 1347=1, 1407=1, 1406=1, 1401=1, 1400=2, 1397=2, 1396=3, 1399=1, 1395=1, 1389=3, 1387=3, 1380=2, 1376=2, 1377=2, 1378=1, 1379=1, 1307=1, 1304=2, 1308=1, 1298=1, 1297=2, 1296=4, 1303=2, 1291=4, 1294=1, 1295=3, 1282=2, 1286=2, 1287=3, 1285=1, 1338=1, 1341=2, 1340=2, 1331=2, 1333=1, 1332=1, 1322=2, 1324=1, 1312=2, 1313=2, 1317=2, 1318=1, 1502=1, 1503=1, 1499=2, 1496=1, 1472=1, 1487=1, 1526=1, 1527=1, 1533=1, 1528=1, 1529=1, 1531=1, 1508=2, 1504=1, 1506=1, 1517=2, 1518=1, 1512=1, 1427=1, 1424=2, 1429=2, 1434=1, 1432=1, 1438=1, 1409=1, 1408=1, 1412=2, 1419=1, 1418=1, 1417=3, 1422=1, 1462=2, 1465=1, 1468=1, 1444=1, 1449=1, 1453=1, 1452=4, 1645=1, 1660=1, 1650=1, 1648=1, 1655=2, 1652=2, 1601=1, 1602=1, 1606=2, 1626=1, 1630=1, 1621=1, 1578=1, 1576=1, 1577=1, 1573=1, 1599=1, 1595=1, 1593=1, 1590=2, 1589=1, 1549=1, 1547=1, 1536=1, 1537=2, 1565=1, 1567=1, 1561=1, 1563=1, 1555=1, 1554=1, 1763=1, 1762=1, 1764=1, 1772=1, 1778=2, 1780=1, 1742=1, 1745=2, 1756=1, 1759=1, 1698=1, 1710=1, 1705=1, 1716=1, 1715=1, 1727=1, 1725=1, 1720=1, 1666=2, 1678=1, 1692=1, 1688=2, 1915=1, 1917=1, 1893=1, 1887=1, 1885=1, 1884=1, 1871=1, 1809=1, 1804=2, 1801=1, 1799=1, 2038=1, 2026=1, 2029=2, 1995=1, 1943=1, 1950=1, 1922=1, 1934=1}
2015-08-06 18:11:51,275 INFO main - Time Evolution(ms): 3660012
2015-08-06 18:11:51,275 INFO fr.inria.main.AbstractMain - Time Total(ms): 3678248


Node: graphene-51.nancy.grid5000.fr


Date: Thu Aug  6 20:11:51 CEST 2015


