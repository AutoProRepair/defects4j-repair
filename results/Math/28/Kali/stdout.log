export PATH="/home/tdurieux/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cp -r /home/tdurieux/projects/math/math_28 /tmp/math_28_Kali;cd /tmp/math_28_Kali;defects4j compile;mkdir lib/;cp -r /home/tdurieux/defects4j/framework/projects/lib/* lib/;cp -r /home/tdurieux/defects4j/framework/projects/Math/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/tdurieux/defects4j-repair/src/python/core/../../../results/Math/28/Kali/result
cd /tmp/math_28_Kali;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time java  -cp /home/tdurieux/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement-remove -location . -dependencies lib/ -failing org.apache.commons.math3.optimization.linear.SimplexSolverTest: -package org.apache.commons -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -javacompliancelevel 5 -maxgen 1000000 -seed 10 -maxtime 60  -scope local  -stopfirst true -flthreshold 0 -population 1 -srcjavafolder src/main/java/ -srctestfolder src/test/java/ -binjavafolder target/classes/ -bintestfolder target/test-classes/;echo "

Node: `hostname`
";echo "
Date: `date`
";rm -rf /tmp/math_28_Kali;

End Repair Loops: Found solution
Solution stored at: ./outputMutation//MainjGenProg-.//src/

Number solutions:13
f (sol): 0.0, [Variant id: 18 (SOL) , #gens: 924, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 22 (SOL) , #gens: 924, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 24 (SOL) , #gens: 924, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 28 (SOL) , #gens: 924, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 62 (SOL) , #gens: 924, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 64 (SOL) , #gens: 924, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 65 (SOL) , #gens: 924, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 66 (SOL) , #gens: 924, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 72 (SOL) , #gens: 924, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 74 (SOL) , #gens: 924, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 76 (SOL) , #gens: 924, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 198 (SOL) , #gens: 924, #ops: 1, parent:1]
f (sol): 0.0, [Variant id: 225 (SOL) , #gens: 924, #ops: 1, parent:1]

All variants:
f 1.0, [Variant id: 1, #gens: 924, #ops: 0, parent:-]

Solution details
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null

 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 18
 
operation: REPLACE
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 138
original statement= if (row == (tableau.getBasicRow(i))) {
	if (i < minIndex) {
		minIndex = i;
		minRow = row;
	} 
} 
fixed statement= if (true) {
	if (i < minIndex) {
		minIndex = i;
		minRow = row;
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 22
 
operation: REPLACE
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 139
original statement= if (i < minIndex) {
	minIndex = i;
	minRow = row;
} 
fixed statement= if (true) {
	minIndex = i;
	minRow = row;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 24
 
operation: DELETE
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 140
original statement= minIndex = i
fixed statement= minIndex = i
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 28
 
operation: DELETE
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 147
original statement= return minRow
fixed statement= return minRow
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 62
 
operation: DELETE
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 123
original statement= if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
	return row;
} 
fixed statement= if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
	return row;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 64
 
operation: REPLACE
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 123
original statement= if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
	return row;
} 
fixed statement= if (true) {
	return row;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 65
 
operation: REPLACE
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 123
original statement= if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
	return row;
} 
fixed statement= if (false) {
	return row;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 66
 
operation: DELETE
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 124
original statement= return row
fixed statement= return row
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 72
 
operation: DELETE
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 104
original statement= minRatioPositions.add(i)
fixed statement= minRatioPositions.add(i)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 74
 
operation: DELETE
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 119
original statement= for (java.lang.Integer row : minRatioPositions) {
	for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
		int column = i + (tableau.getArtificialVariableOffset());
		final double entry = tableau.getEntry(row, column);
		if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
			return row;
		} 
	}
}
fixed statement= for (java.lang.Integer row : minRatioPositions) {
	for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
		int column = i + (tableau.getArtificialVariableOffset());
		final double entry = tableau.getEntry(row, column);
		if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
			return row;
		} 
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 76
 
operation: DELETE
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 120
original statement= for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
	int column = i + (tableau.getArtificialVariableOffset());
	final double entry = tableau.getEntry(row, column);
	if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
		return row;
	} 
}
fixed statement= for (int i = 0 ; i < (tableau.getNumArtificialVariables()) ; i++) {
	int column = i + (tableau.getArtificialVariableOffset());
	final double entry = tableau.getEntry(row, column);
	if ((org.apache.commons.math3.util.Precision.equals(entry, 1.0, maxUlps)) && (row.equals(tableau.getBasicRow(column)))) {
		return row;
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 198
 
operation: DELETE
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 77
original statement= minValue = entry
fixed statement= minValue = entry
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 225
 
operation: REPLACE
location= org.apache.commons.math3.optimization.linear.SimplexSolver
line= 103
original statement= if (cmp == 0) {
	minRatioPositions.add(i);
} else if (cmp < 0) {
	minRatio = ratio;
	minRatioPositions = new java.util.ArrayList<java.lang.Integer>();
	minRatioPositions.add(i);
} 
fixed statement= if (false) {
	minRatioPositions.add(i);
} else if (cmp < 0) {
	minRatio = ratio;
	minRatioPositions = new java.util.ArrayList<java.lang.Integer>();
	minRatioPositions.add(i);
} 
generation= 1
ingredientScope= -
 

----stats: 

spaces navigation: [0]: {}
#gen: 0
#patches: 13
#RightCompilation: 1676
#WrongCompilation: 416
#FailingTestCaseExecution: 1677
#RegressionTestExecution: 13
#TestcasesExecutedval1: 43368
#TestcasesExecutedval2: 51454
#FailingTestCase: 26
#RegressionTestCases: 3958
#OfAppliedOp: 0
#NotAppliedOp: 0
#InmutatedGen: 0
#unfinishValidation: 0
#ing {}
#untilcompile {}
Time Total(ms): 3457844


Node: graphene-7.nancy.grid5000.fr


Date: Thu Aug 13 20:22:23 CEST 2015


