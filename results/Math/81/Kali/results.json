{
    "FailingTestCase": "17", 
    "FailingTestCaseExecution": "652", 
    "InmutatedGen": "0", 
    "NotAppliedOp": "0", 
    "OfAppliedOp": "0", 
    "RegressionTestCases": "1993", 
    "RegressionTestExecution": "19", 
    "RightCompilation": "651", 
    "WrongCompilation": "113", 
    "date": "Thu Jul 23 00:42:30 CEST 2015\n\n", 
    "gen": "0", 
    "node": "graphene-104.nancy.grid5000.fr", 
    "operations": [
        {
            "generation": 1, 
            "patch": "if (true)\n\treturn ;\n", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1526
            }, 
            "type": "INSERT_BEFORE", 
            "variant": 5
        }, 
        {
            "generation": 1, 
            "patch": "if (true)\n\treturn ;\n", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1527
            }, 
            "type": "INSERT_BEFORE", 
            "variant": 7
        }, 
        {
            "generation": 1, 
            "patch": "if (true)\n\treturn ;\n", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1530
            }, 
            "type": "INSERT_BEFORE", 
            "variant": 9
        }, 
        {
            "generation": 1, 
            "patch": "if (true)\n\treturn ;\n", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1531
            }, 
            "type": "INSERT_BEFORE", 
            "variant": 11
        }, 
        {
            "generation": 1, 
            "patch": "if (true)\n\treturn ;\n", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1532
            }, 
            "type": "INSERT_BEFORE", 
            "variant": 13
        }, 
        {
            "generation": 1, 
            "patch": "if (true)\n\treturn ;\n", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1533
            }, 
            "type": "INSERT_BEFORE", 
            "variant": 15
        }, 
        {
            "generation": 1, 
            "patch": "if (true)\n\treturn ;\n", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1534
            }, 
            "type": "INSERT_BEFORE", 
            "variant": 17
        }, 
        {
            "generation": 1, 
            "patch": "if (true) {\n\treturn ;\n} ", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1534
            }, 
            "type": "REPLACE", 
            "variant": 18
        }, 
        {
            "generation": 1, 
            "patch": "if (true)\n\treturn ;\n", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1537
            }, 
            "type": "INSERT_BEFORE", 
            "variant": 21
        }, 
        {
            "generation": 1, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1540
            }, 
            "type": "DELETE", 
            "variant": 22
        }, 
        {
            "generation": 1, 
            "patch": "if (false) {\n\tb2 = (work[(nn - 13)]) / (work[(nn - 15)]);\n\ta2 = a2 + b2;\n\tfor (int i4 = nn - 17 ; i4 >= (((4 * start) + 2) + (pingPong)) ; i4 -= 4) {\n\t\tif (b2 == 0.0) {\n\t\t\tbreak;\n\t\t} \n\t\tb1 = b2;\n\t\tif ((work[i4]) > (work[(i4 - 2)])) {\n\t\t\treturn ;\n\t\t} \n\t\tb2 = b2 * ((work[i4]) / (work[(i4 - 2)]));\n\t\ta2 = a2 + b2;\n\t\tif (((100 * (java.lang.Math.max(b2, b1))) < a2) || (cnst1 < a2)) {\n\t\t\tbreak;\n\t\t} \n\t}\n\ta2 = cnst3 * a2;\n} ", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1540
            }, 
            "type": "REPLACE", 
            "variant": 25
        }, 
        {
            "generation": 1, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1541
            }, 
            "type": "DELETE", 
            "variant": 26
        }, 
        {
            "generation": 1, 
            "patch": "if (true)\n\treturn ;\n", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1541
            }, 
            "type": "INSERT_BEFORE", 
            "variant": 27
        }, 
        {
            "generation": 1, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1477
            }, 
            "type": "DELETE", 
            "variant": 38
        }, 
        {
            "generation": 1, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1481
            }, 
            "type": "DELETE", 
            "variant": 44
        }, 
        {
            "generation": 1, 
            "patch": "remove", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1517
            }, 
            "type": "DELETE", 
            "variant": 88
        }, 
        {
            "generation": 1, 
            "patch": "if (false) {\n\ts = (gam * (1 - (java.lang.Math.sqrt(a2)))) / (1 + a2);\n} ", 
            "patchLocation": {
                "className": "org.apache.commons.math.linear.EigenDecompositionImpl", 
                "line": 1517
            }, 
            "type": "REPLACE", 
            "variant": 91
        }
    ], 
    "patches": "17", 
    "programVariant": "5", 
    "timeEvaluation": null, 
    "timeTotal": "2464971", 
    "timeVal1": [
        327, 
        671, 
        328, 
        319, 
        323, 
        324, 
        322, 
        324, 
        325, 
        320, 
        322, 
        319, 
        335, 
        320, 
        324, 
        320, 
        321, 
        321, 
        319, 
        319, 
        320, 
        320, 
        334, 
        332, 
        322, 
        328, 
        328, 
        331, 
        327, 
        348, 
        320, 
        346, 
        320, 
        334, 
        334, 
        321, 
        320, 
        336, 
        335, 
        321, 
        334, 
        320, 
        321, 
        323, 
        333, 
        322, 
        333, 
        335, 
        326, 
        332, 
        336, 
        321, 
        333, 
        322, 
        338, 
        321, 
        335, 
        60001, 
        310, 
        319, 
        321, 
        329, 
        309, 
        319, 
        310, 
        321, 
        334, 
        332, 
        335, 
        331, 
        335, 
        331, 
        331, 
        321, 
        332, 
        321, 
        331, 
        318, 
        334, 
        320, 
        321, 
        320, 
        332, 
        337, 
        334, 
        296, 
        294, 
        294, 
        295, 
        295, 
        295, 
        306, 
        322, 
        293, 
        295, 
        321, 
        321, 
        303, 
        295, 
        293, 
        330, 
        303, 
        320, 
        293, 
        330, 
        293, 
        321, 
        304, 
        320, 
        293, 
        332, 
        294, 
        332, 
        305, 
        293, 
        293, 
        304, 
        293, 
        332, 
        293, 
        319, 
        293, 
        294, 
        302, 
        299, 
        304, 
        60001, 
        310, 
        331, 
        295, 
        320, 
        295, 
        295, 
        331, 
        330, 
        295, 
        332, 
        330, 
        329, 
        294, 
        330, 
        314, 
        320, 
        296, 
        320, 
        296, 
        330, 
        293, 
        321, 
        292, 
        319, 
        303, 
        294, 
        60002, 
        308, 
        318, 
        294, 
        323, 
        328, 
        316, 
        296, 
        366, 
        294, 
        344, 
        312, 
        332, 
        352, 
        320, 
        305, 
        295, 
        293, 
        294, 
        331, 
        294, 
        320, 
        295, 
        304, 
        321, 
        331, 
        304, 
        323, 
        304, 
        295, 
        304, 
        296, 
        303, 
        297, 
        305, 
        295, 
        304, 
        321, 
        295, 
        296, 
        305, 
        334, 
        305, 
        324, 
        331, 
        331, 
        331, 
        320, 
        294, 
        296, 
        344, 
        295, 
        329, 
        294, 
        318, 
        325, 
        296, 
        60002, 
        308, 
        60001, 
        299, 
        304, 
        60002, 
        325, 
        307, 
        60002, 
        311, 
        60002, 
        331, 
        60002, 
        306, 
        305, 
        330, 
        295, 
        330, 
        326, 
        319, 
        295, 
        321, 
        320, 
        455, 
        305, 
        319, 
        447, 
        361, 
        295, 
        463, 
        318, 
        342, 
        305, 
        60001, 
        299, 
        304, 
        474, 
        330, 
        306, 
        60001, 
        299, 
        336, 
        296, 
        317, 
        331, 
        321, 
        318, 
        319, 
        319, 
        305, 
        304, 
        305, 
        303, 
        359, 
        303, 
        322, 
        304, 
        358, 
        304, 
        303, 
        294, 
        304, 
        302, 
        304, 
        305, 
        304, 
        331, 
        304, 
        293, 
        332, 
        302, 
        328, 
        332, 
        334, 
        294, 
        305, 
        331, 
        302, 
        330, 
        323, 
        338, 
        305, 
        338, 
        304, 
        331, 
        296, 
        320, 
        321, 
        331, 
        293, 
        333, 
        294, 
        294, 
        339, 
        304, 
        334, 
        326, 
        335, 
        296, 
        298, 
        338, 
        304, 
        331, 
        333, 
        337, 
        295, 
        335, 
        295, 
        334, 
        296, 
        304, 
        321, 
        322, 
        322, 
        322, 
        315, 
        320, 
        322, 
        322, 
        333, 
        321, 
        322, 
        320, 
        322, 
        306, 
        316, 
        294, 
        293, 
        295, 
        293, 
        305, 
        293, 
        296, 
        295, 
        332, 
        295, 
        296, 
        317, 
        332, 
        345, 
        342, 
        60002, 
        349, 
        322, 
        343, 
        310, 
        453, 
        354, 
        355, 
        376, 
        351, 
        60002, 
        352, 
        351, 
        321, 
        348, 
        60001, 
        353, 
        323, 
        350, 
        320, 
        349, 
        383, 
        351, 
        60002, 
        350, 
        352, 
        320, 
        352, 
        334, 
        353, 
        320, 
        353, 
        322, 
        351, 
        334, 
        471, 
        333, 
        480, 
        468, 
        471, 
        60001, 
        474, 
        323, 
        471, 
        356, 
        471, 
        324, 
        469, 
        486, 
        483, 
        60001, 
        376, 
        328, 
        360, 
        60001, 
        374, 
        324, 
        374, 
        373, 
        372, 
        373, 
        372, 
        373, 
        372, 
        373, 
        374, 
        373, 
        336, 
        339, 
        372, 
        338, 
        373, 
        336, 
        372, 
        372, 
        373, 
        60002, 
        375, 
        60002, 
        383, 
        60002, 
        360, 
        372, 
        60002, 
        380, 
        60001, 
        388, 
        60007, 
        387, 
        60002, 
        375, 
        60002, 
        369, 
        431, 
        373, 
        441, 
        484, 
        483, 
        373, 
        485, 
        60001, 
        412, 
        328, 
        372, 
        414, 
        373, 
        426, 
        60002, 
        469, 
        373, 
        451, 
        373, 
        453, 
        374, 
        445, 
        60001, 
        456, 
        374, 
        443, 
        396, 
        451, 
        347, 
        373, 
        451, 
        372, 
        452, 
        379, 
        463, 
        377, 
        462, 
        372, 
        463, 
        60002, 
        60002, 
        363, 
        359, 
        358, 
        377, 
        359, 
        310, 
        374, 
        356, 
        368, 
        369, 
        362, 
        361, 
        371, 
        363, 
        361, 
        427, 
        372, 
        371, 
        372, 
        371, 
        382, 
        375, 
        372, 
        382, 
        372, 
        371, 
        372, 
        371, 
        382, 
        373, 
        372, 
        382, 
        373, 
        373, 
        371, 
        373, 
        382, 
        373, 
        372, 
        375, 
        371, 
        373, 
        383, 
        350, 
        350, 
        60002, 
        351, 
        373, 
        349, 
        348, 
        349, 
        351, 
        348, 
        385, 
        349, 
        349, 
        60001, 
        352, 
        382, 
        383, 
        294, 
        382, 
        306, 
        305, 
        373, 
        341, 
        304, 
        373, 
        375, 
        303, 
        372, 
        293, 
        371, 
        304, 
        294, 
        304, 
        349, 
        293, 
        294, 
        294, 
        347, 
        348, 
        349, 
        374, 
        347, 
        373, 
        350, 
        347, 
        348, 
        350, 
        339, 
        375, 
        384, 
        373, 
        373, 
        373, 
        380, 
        385, 
        295, 
        372, 
        304, 
        375, 
        304, 
        308, 
        304, 
        306, 
        305, 
        303, 
        304, 
        304, 
        305, 
        374, 
        304, 
        305, 
        294, 
        305, 
        175, 
        373, 
        175, 
        176, 
        176, 
        176, 
        175, 
        409, 
        176, 
        174, 
        177, 
        404, 
        175, 
        177, 
        403, 
        175, 
        407, 
        176, 
        404, 
        175, 
        177, 
        407, 
        403, 
        176, 
        174, 
        175, 
        373, 
        374, 
        406, 
        176, 
        175, 
        404, 
        403, 
        373, 
        404, 
        408, 
        407, 
        406, 
        408, 
        407, 
        407, 
        407, 
        373, 
        374, 
        410, 
        176, 
        373, 
        371, 
        204, 
        384, 
        171
    ], 
    "timeVal2": [
        8905, 
        9063, 
        8979, 
        9019, 
        9082, 
        8961, 
        8889, 
        8961, 
        9191, 
        9176, 
        8660, 
        9165, 
        9002, 
        9009, 
        9147, 
        8981, 
        9192, 
        9278, 
        8573
    ], 
    "unfinishValidation": "0"
}