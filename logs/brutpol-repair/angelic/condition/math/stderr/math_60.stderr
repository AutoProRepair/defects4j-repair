SLF4J: Failed toString() invocation on an object of type [spoon.support.reflect.code.CtIfImpl]
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:187)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:212)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getDeclaringType(CtSimpleTypeImpl.java:96)
	at spoon.reflect.factory.TypeFactory.createReference(TypeFactory.java:156)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getReference(CtSimpleTypeImpl.java:196)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:798)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtNewClass(DefaultJavaPrettyPrinter.java:1569)
	at spoon.support.reflect.code.CtNewClassImpl.accept(CtNewClassImpl.java:47)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeLocalVariable(DefaultJavaPrettyPrinter.java:1372)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtLocalVariable(DefaultJavaPrettyPrinter.java:1379)
	at spoon.support.reflect.code.CtLocalVariableImpl.accept(CtLocalVariableImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1151)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.support.reflect.declaration.CtElementImpl.toString(CtElementImpl.java:363)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:304)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:276)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:230)
	at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:115)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:439)
	at ch.qos.logback.classic.Logger.filterAndLog_1(Logger.java:413)
	at ch.qos.logback.classic.Logger.debug(Logger.java:506)
	at fr.inria.lille.repair.nopol.spoon.ConditionalReplacer.processCondition(ConditionalReplacer.java:16)
	at fr.inria.lille.repair.nopol.spoon.brutpol.ConditionalInstrumenter.process(ConditionalInstrumenter.java:36)
	at fr.inria.lille.repair.nopol.spoon.brutpol.ConditionalInstrumenter.process(ConditionalInstrumenter.java:13)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:490)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:297)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:134)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:126)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:117)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:113)
	at fr.inria.lille.repair.nopol.synth.brutpol.BrutSynthesizer.buildPatch(BrutSynthesizer.java:68)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:135)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:51)
	at fr.inria.lille.repair.Main.main(Main.java:53)
SLF4J: Failed toString() invocation on an object of type [spoon.support.reflect.code.CtIfImpl]
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:187)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:212)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getDeclaringType(CtSimpleTypeImpl.java:96)
	at spoon.reflect.factory.TypeFactory.createReference(TypeFactory.java:156)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getReference(CtSimpleTypeImpl.java:196)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:798)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtNewClass(DefaultJavaPrettyPrinter.java:1569)
	at spoon.support.reflect.code.CtNewClassImpl.accept(CtNewClassImpl.java:47)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeLocalVariable(DefaultJavaPrettyPrinter.java:1372)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtLocalVariable(DefaultJavaPrettyPrinter.java:1379)
	at spoon.support.reflect.code.CtLocalVariableImpl.accept(CtLocalVariableImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1151)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1148)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.support.reflect.declaration.CtElementImpl.toString(CtElementImpl.java:363)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:304)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:276)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:230)
	at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:115)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:439)
	at ch.qos.logback.classic.Logger.filterAndLog_1(Logger.java:413)
	at ch.qos.logback.classic.Logger.debug(Logger.java:506)
	at fr.inria.lille.repair.nopol.spoon.ConditionalReplacer.processCondition(ConditionalReplacer.java:16)
	at fr.inria.lille.repair.nopol.spoon.brutpol.ConditionalInstrumenter.process(ConditionalInstrumenter.java:36)
	at fr.inria.lille.repair.nopol.spoon.brutpol.ConditionalInstrumenter.process(ConditionalInstrumenter.java:13)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:490)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:297)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:134)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:126)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:117)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:113)
	at fr.inria.lille.repair.nopol.synth.brutpol.BrutSynthesizer.buildPatch(BrutSynthesizer.java:68)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:135)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:51)
	at fr.inria.lille.repair.Main.main(Main.java:53)
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
	at fr.inria.lille.spirals.repair.expression.BinaryExpressionImpl.toString(BinaryExpressionImpl.java:109)
	at fr.inria.lille.spirals.repair.commons.Candidates.add(Candidates.java:30)
	at fr.inria.lille.spirals.repair.commons.Candidates.addAll(Candidates.java:69)
	at fr.inria.lille.spirals.repair.synthesizer.collect.DataCombiner.combine(DataCombiner.java:37)
	at fr.inria.lille.spirals.repair.synthesizer.SynthesizerImpl.combineValues(SynthesizerImpl.java:378)
	at fr.inria.lille.spirals.repair.synthesizer.SynthesizerImpl.run(SynthesizerImpl.java:107)
	at fr.inria.lille.repair.nopol.synth.brutpol.BrutSynthesizer.buildPatch(BrutSynthesizer.java:100)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:135)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:72)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:51)
	at fr.inria.lille.repair.Main.main(Main.java:53)

real	45m2.444s
user	251m45.720s
sys	3m46.222s
