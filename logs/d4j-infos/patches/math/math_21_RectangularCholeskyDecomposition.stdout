65,67c65,67
<         int order = matrix.getRowDimension();
<         double[][] c = matrix.getData();
<         double[][] b = new double[order][order];
---
>         final int order = matrix.getRowDimension();
>         final double[][] c = matrix.getData();
>         final double[][] b = new double[order][order];
69d68
<         int[] swap  = new int[order];
79c78
<             swap[r] = r;
---
>             int swapR = r;
82,84c81,83
<                 int isi = index[swap[i]];
<                 if (c[ii][ii] > c[isi][isi]) {
<                     swap[r] = i;
---
>                 int isr = index[swapR];
>                 if (c[ii][ii] > c[isr][isr]) {
>                     swapR = i;
90,93c89,95
<             if (swap[r] != r) {
<                 int tmp = index[r];
<                 index[r] = index[swap[r]];
<                 index[swap[r]] = tmp;
---
>             if (swapR != r) {
>                 final int tmpIndex    = index[r];
>                 index[r]              = index[swapR];
>                 index[swapR]          = tmpIndex;
>                 final double[] tmpRow = b[r];
>                 b[r]                  = b[swapR];
>                 b[swapR]              = tmpRow;
121c123
<                 double sqrt = FastMath.sqrt(c[ir][ir]);
---
>                 final double sqrt = FastMath.sqrt(c[ir][ir]);
123c125,126
<                 double inverse = 1 / sqrt;
---
>                 final double inverse  = 1 / sqrt;
>                 final double inverse2 = 1 / c[ir][ir];
125,126c128,129
<                     int ii = index[i];
<                     double e = inverse * c[ii][ir];
---
>                     final int ii = index[i];
>                     final double e = inverse * c[ii][ir];
128c131
<                     c[ii][ii] -= e * e;
---
>                     c[ii][ii] -= c[ii][ir] * c[ii][ir] * inverse2;
130,131c133,134
<                         int ij = index[j];
<                         double f = c[ii][ij] - e * b[j][r];
---
>                         final int ij = index[j];
>                         final double f = c[ii][ij] - e * b[j][r];
