257a258,259
>         double[] oldObj  = new double[rows];
>         double[] qtf     = new double[rows];
270c272,274
< 
---
>             for (int i=0;i<rows;i++) {
>                 qtf[i]=residuals[i];
>             }
279,280c283
<             qTy(residuals);
< 
---
>             qTy(qtf);
318c321
<                             sum += jacobian[i][pj] * residuals[i];
---
>                             sum += jacobian[i][pj] * qtf[i];
325a329,330
>             	updateResidualsAndCost();
>             	current = new VectorialPointValuePair(point, objective);
345a351,353
>                 tmpVec    = objective;
>                 objective = oldObj;
>                 oldObj    = tmpVec;
348c356
<                 determineLMParameter(oldRes, delta, diag, work1, work2, work3);
---
>                 determineLMParameter(qtf, delta, diag, work1, work2, work3);
367d374
<                 current = new VectorialPointValuePair(point, objective);
422a430,438
>                     current = new VectorialPointValuePair(point, objective);
> 
>                     // tests for convergence.
>                     if (checker != null) {
>                     // we use the vectorial convergence checker
>                     	if (checker.converged(getIterations(), previous, current)) {
>                     		return current;
>                     	}
>                     }
432a449,451
>                     tmpVec    = objective;
>                     objective = oldObj;
>                     oldObj    = tmpVec;
434,442c453
< 
<                 // tests for convergence.
<                 if (checker != null) {
<                     // we use the vectorial convergence checker
<                     if (checker.converged(getIterations(), previous, current)) {
<                         return current;
<                     }
<                 } else {
<                     // we use the Levenberg-Marquardt specific convergence parameters
---
>                 if (checker==null) {
450d460
< 
