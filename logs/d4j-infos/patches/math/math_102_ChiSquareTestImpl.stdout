66,67d65
<         double sumSq = 0.0d;
<         double dev = 0.0d;
75a74,87
>         double sumExpected = 0d;
>         double sumObserved = 0d;
>         for (int i = 0; i < observed.length; i++) {
>             sumExpected += expected[i];
>             sumObserved += observed[i];
>         }
>         double ratio = 1.0d;
>         boolean rescale = false;
>         if (Math.abs(sumExpected - sumObserved) > 10E-6) {
>             ratio = sumObserved / sumExpected;
>             rescale = true;
>         }
>         double sumSq = 0.0d;
>         double dev = 0.0d;
76a89,92
>             if (rescale) {
>                 dev = ((double) observed[i] - ratio * expected[i]);
>                 sumSq += dev * dev / (ratio * expected[i]);
>             } else {
79a96
>         }
83a101,105
>      * {@inheritDoc}
>      * <p><strong>Note: </strong>This implementation rescales the 
>      * <code>expected</code> array if necessary to ensure that the sum of the
>      * expected and observed counts are equal.</p>
>      * 
