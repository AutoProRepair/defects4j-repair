92a93,105
> 
>       // Don't traverse functions unless they would normally
>       // be able to have a @this annotation associated with them. e.g.,
>       // var a = function() { }; // or
>       // function a() {} // or
>       // a.x = function() {};
>       int pType = parent.getType();
>       if (!(pType == Token.BLOCK ||
>             pType == Token.SCRIPT ||
>             pType == Token.NAME ||
>             pType == Token.ASSIGN)) {
>         return false;
>       }
125c138
<     if (assignLhsChild != null && n.getType() == Token.THIS) {
---
>     if (n.getType() == Token.THIS && shouldReportThis(n, parent)) {
132a146,155
>   private boolean shouldReportThis(Node n, Node parent) {
>     if (assignLhsChild != null) {
>       // Always report a THIS on the left side of an assign.
>       return true;
>     }
> 
>     // Also report a THIS with a property access.
>     return parent != null && NodeUtil.isGet(parent);
>   }
> 
