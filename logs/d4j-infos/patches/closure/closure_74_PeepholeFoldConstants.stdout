907,908c907,909
< 
<     switch (left.getType()) {
---
>     int lhType = getNormalizedNodeType(left);
>     int rhType = getNormalizedNodeType(right);
>     switch (lhType) {
926d926
<         int rhType = right.getType();
935c935
<             result = left.getType() == right.getType();
---
>             result = lhType == rhType;
940c940
<             result = left.getType() != right.getType();
---
>             result = lhType != rhType;
1071a1072,1088
>    * @return Translate NOT expressions into TRUE or FALSE when possible.
>    */
>   private int getNormalizedNodeType(Node n) {
>     int type = n.getType();
>     if (type == Token.NOT) {
>       TernaryValue value = NodeUtil.getPureBooleanValue(n);
>       switch (value) {
>         case TRUE:
>           return Token.TRUE;
>         case FALSE:
>           return Token.FALSE;
>       }
>     }
>     return type;
>   }
> 
>   /**
