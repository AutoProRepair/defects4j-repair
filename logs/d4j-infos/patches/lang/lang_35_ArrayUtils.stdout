3283,3284c3283,3284
<      * in which case it will have the same type as the element (unless that is also null)
<      * in which case the returned type will be Object[].
---
>      * in which case it will have the same type as the element.
>      * If both are null, an IllegalArgumentException is thrown
3285a3286
>      * @throws IllegalArgumentException if both arguments are null
3288,3289c3289,3297
<         Class<?> type = array != null ? array.getClass() : (element != null ? element.getClass() : Object.class);
<         // TODO - this is NOT safe to ignore - see LANG-571
---
>         Class<?> type;
>         if (array != null){
>             type = array.getClass();
>         } else if (element != null) {
>             type = element.getClass();
>         } else {
>             throw new IllegalArgumentException("Arguments cannot both be null");            
>         }
>         @SuppressWarnings("unchecked") // type must be T
3566,3568c3574
<             // TODO this is not type-safe - see LANG-571
<             final T[] emptyArray = (T[]) new Object[] { null };
<             return emptyArray;
---
>             throw new IllegalArgumentException("Array and element cannot both be null");            
