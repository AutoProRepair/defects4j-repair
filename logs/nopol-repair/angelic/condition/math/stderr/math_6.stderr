spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:187)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:212)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at fr.inria.lille.commons.spoon.util.SpoonElementLibrary.parentOfType(SpoonElementLibrary.java:52)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.findFromStatement(CollectableValueFinder.java:83)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.findFromIf(CollectableValueFinder.java:73)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.valueFinderFromIf(CollectableValueFinder.java:49)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.appendValueCollection(ConditionalLoggingInstrumenter.java:48)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:37)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:19)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtFor(CtScanner.java:403)
	at spoon.support.reflect.code.CtForImpl.accept(CtForImpl.java:39)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:490)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:297)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:294)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:134)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:126)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:117)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:113)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:52)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:82)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:105)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:83)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:75)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:51)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:187)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:212)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at fr.inria.lille.commons.spoon.util.SpoonElementLibrary.parentOfType(SpoonElementLibrary.java:52)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.findFromStatement(CollectableValueFinder.java:83)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.findFromIf(CollectableValueFinder.java:73)
	at fr.inria.lille.commons.spoon.collectable.CollectableValueFinder.valueFinderFromIf(CollectableValueFinder.java:49)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.appendValueCollection(ConditionalLoggingInstrumenter.java:48)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:37)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:19)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtFor(CtScanner.java:403)
	at spoon.support.reflect.code.CtForImpl.accept(CtForImpl.java:39)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:420)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:490)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:297)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:134)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:126)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:117)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:113)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:52)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:82)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:105)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:83)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:75)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:51)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
java.lang.RuntimeException: java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at xxl.java.junit.TestSuiteExecution.executionResult(TestSuiteExecution.java:63)
	at xxl.java.junit.TestSuiteExecution.runTestCase(TestSuiteExecution.java:40)
	at xxl.java.junit.TestSuiteExecution.runTestCases(TestSuiteExecution.java:50)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.buildFor(ConstraintModelBuilder.java:62)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:65)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:106)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:83)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:75)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:51)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
Caused by: java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.util.concurrent.FutureTask.report(FutureTask.java:122)
	at java.util.concurrent.FutureTask.get(FutureTask.java:202)
	at xxl.java.junit.TestSuiteExecution.executionResult(TestSuiteExecution.java:59)
	... 10 more
Caused by: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.util.Arrays.copyOfRange(Arrays.java:2694)
	at java.lang.String.<init>(String.java:203)
	at java.lang.StringBuilder.toString(StringBuilder.java:405)
	at ch.qos.logback.core.pattern.PatternLayoutBase.writeLoopOnConverters(PatternLayoutBase.java:122)
	at ch.qos.logback.classic.PatternLayout.doLayout(PatternLayout.java:168)
	at ch.qos.logback.classic.PatternLayout.doLayout(PatternLayout.java:59)
	at ch.qos.logback.core.encoder.LayoutWrappingEncoder.doEncode(LayoutWrappingEncoder.java:134)
	at ch.qos.logback.core.OutputStreamAppender.writeOut(OutputStreamAppender.java:188)
	at ch.qos.logback.core.OutputStreamAppender.subAppend(OutputStreamAppender.java:212)
	at ch.qos.logback.core.OutputStreamAppender.append(OutputStreamAppender.java:103)
	at ch.qos.logback.core.UnsynchronizedAppenderBase.doAppend(UnsynchronizedAppenderBase.java:88)
	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:48)
	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:272)
	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:259)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:441)
	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:395)
	at ch.qos.logback.classic.Logger.debug(Logger.java:502)
	at xxl.java.library.LoggerLibrary.logDebug(LoggerLibrary.java:117)
	at xxl.java.library.LoggerLibrary.logDebug(LoggerLibrary.java:85)
	at xxl.java.junit.TestCasesListener.logTestRunFinished(TestCasesListener.java:143)
	at xxl.java.junit.TestCasesListener.testRunFinished(TestCasesListener.java:63)
	at org.junit.runner.notification.RunNotifier$2.notifyListener(RunNotifier.java:95)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:61)
	at org.junit.runner.notification.RunNotifier.fireTestRunFinished(RunNotifier.java:92)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:161)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:22)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Exception in thread "main" java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.io.UnixFileSystem.resolve(UnixFileSystem.java:108)
	at java.io.File.<init>(File.java:262)
	at java.io.File.listFiles(File.java:1206)
	at spoon.support.compiler.FileSystemFolder.getFiles(FileSystemFolder.java:55)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:100)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:104)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:104)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:104)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:104)
	at spoon.support.compiler.FileSystemFolder.getAllJavaFiles(FileSystemFolder.java:104)
	at spoon.support.StandardEnvironment.verifySourceClasspath(StandardEnvironment.java:437)
	at spoon.support.StandardEnvironment.setSourceClasspath(StandardEnvironment.java:420)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.setSourceClasspath(JDTBasedSpoonCompiler.java:931)
	at fr.inria.lille.commons.spoon.util.SpoonModelLibrary.modelFor(SpoonModelLibrary.java:47)
	at fr.inria.lille.commons.spoon.SpoonedFile.<init>(SpoonedFile.java:48)
	at fr.inria.lille.commons.spoon.SpoonedClass.<init>(SpoonedClass.java:12)
	at fr.inria.lille.commons.spoon.SpoonedProject.forked(SpoonedProject.java:42)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:65)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:105)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:83)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:75)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:51)
	at fr.inria.lille.repair.Main.<init>(Main.java:199)
	at fr.inria.lille.repair.Main.main(Main.java:180)
## OAR [2015-03-23 03:32:12] Job 427554 KILLED
