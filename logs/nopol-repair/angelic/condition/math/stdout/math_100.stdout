Running ant (compile) ... OK
Buildfile: /home/rsommerard/defects4j/framework/projects/Math/Math.build.xml

init:

setProxy:

noProxy:
     [echo] Proxy not used.

get-custom-dep-commons-logging.jar:

get-dep-commons-logging.jar:
      [get] Getting: http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.0.4.jar
      [get] To: /home/rsommerard/.maven/repository/commons-logging/jars/commons-logging-1.0.4.jar
      [get] Error getting http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.0.4.jar to /home/rsommerard/.maven/repository/commons-logging/jars/commons-logging-1.0.4.jar

get-custom-dep-commons-discovery.jar:

get-dep-commons-discovery.jar:
      [get] Getting: http://www.ibiblio.org/maven/commons-discovery/jars/commons-discovery-0.2.jar
      [get] To: /home/rsommerard/.maven/repository/commons-discovery/jars/commons-discovery-0.2.jar
      [get] Error getting http://www.ibiblio.org/maven/commons-discovery/jars/commons-discovery-0.2.jar to /home/rsommerard/.maven/repository/commons-discovery/jars/commons-discovery-0.2.jar

get-deps:

compile:
    [mkdir] Created dir: /tmp/math_100/target/classes
    [javac] /tmp/math_100/build.xml:72: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 223 source files to /tmp/math_100/target/classes
    [javac] /tmp/math_100/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java:22: warning: [deprecation] DistributionFactory in org.apache.commons.math.distribution has been deprecated
    [javac] import org.apache.commons.math.distribution.DistributionFactory;
    [javac]                                            ^
    [javac] /tmp/math_100/src/java/org/apache/commons/math/stat/inference/TTestImpl.java:20: warning: [deprecation] DistributionFactory in org.apache.commons.math.distribution has been deprecated
    [javac] import org.apache.commons.math.distribution.DistributionFactory;
    [javac]                                            ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 2 warnings
    [mkdir] Created dir: /tmp/math_100/target/classes/META-INF
     [copy] Copying 2 files to /tmp/math_100/target/classes/META-INF

BUILD SUCCESSFUL
Total time: 2 minutes 10 seconds
Running ant (compile.tests) ... OK
Buildfile: /home/rsommerard/defects4j/framework/projects/Math/Math.build.xml

init:

junit-present:

setProxy:

noProxy:
     [echo] Proxy not used.

get-custom-dep-commons-logging.jar:

get-dep-commons-logging.jar:
      [get] Getting: http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.0.4.jar
      [get] To: /home/rsommerard/.maven/repository/commons-logging/jars/commons-logging-1.0.4.jar
      [get] Error getting http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.0.4.jar to /home/rsommerard/.maven/repository/commons-logging/jars/commons-logging-1.0.4.jar

get-custom-dep-commons-discovery.jar:

get-dep-commons-discovery.jar:
      [get] Getting: http://www.ibiblio.org/maven/commons-discovery/jars/commons-discovery-0.2.jar
      [get] To: /home/rsommerard/.maven/repository/commons-discovery/jars/commons-discovery-0.2.jar
      [get] Error getting http://www.ibiblio.org/maven/commons-discovery/jars/commons-discovery-0.2.jar to /home/rsommerard/.maven/repository/commons-discovery/jars/commons-discovery-0.2.jar

get-deps:

compile:
    [javac] /tmp/math_100/build.xml:72: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds

compile-tests:
    [mkdir] Created dir: /tmp/math_100/target/test-classes
    [javac] /tmp/math_100/build.xml:151: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 172 source files to /tmp/math_100/target/test-classes
    [javac] /tmp/math_100/src/test/org/apache/commons/math/TestUtils.java:26: warning: [deprecation] Assert in junit.framework has been deprecated
    [javac] import junit.framework.Assert;
    [javac]                       ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java:29: warning: [deprecation] DescriptiveStatisticsAbstractTest in org.apache.commons.math.stat.descriptive has been deprecated
    [javac] public final class DescriptiveStatisticsTest extends DescriptiveStatisticsAbstractTest {
    [javac]                                                      ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java:33: warning: [deprecation] SummaryStatisticsAbstractTest in org.apache.commons.math.stat.descriptive has been deprecated
    [javac] public final class SummaryStatisticsTest extends SummaryStatisticsAbstractTest {
    [javac]                                                  ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java:24: warning: [deprecation] DescriptiveStatisticsAbstractTest in org.apache.commons.math.stat.descriptive has been deprecated
    [javac] public final class SynchronizedDescriptiveStatisticsTest extends DescriptiveStatisticsAbstractTest {
    [javac]                                                                  ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatisticsTest.java:24: warning: [deprecation] SummaryStatisticsAbstractTest in org.apache.commons.math.stat.descriptive has been deprecated
    [javac] public final class SynchronizedSummaryStatisticsTest extends SummaryStatisticsAbstractTest {
    [javac]                                                              ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/TestUtils.java:58: warning: [deprecation] Assert in junit.framework has been deprecated
    [javac]             Assert.assertTrue("" + actual + " is not NaN.",
    [javac]             ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/TestUtils.java:61: warning: [deprecation] Assert in junit.framework has been deprecated
    [javac]             Assert.assertEquals(msg, expected, actual, delta);
    [javac]             ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/TestUtils.java:95: warning: [deprecation] Assert in junit.framework has been deprecated
    [javac]         Assert.assertEquals(a.length, b.length);
    [javac]         ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/TestUtils.java:97: warning: [deprecation] Assert in junit.framework has been deprecated
    [javac]             Assert.assertEquals(a[i], b[i], tolerance);
    [javac]             ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/TestUtils.java:134: warning: [deprecation] Assert in junit.framework has been deprecated
    [javac]         Assert.assertEquals("Equals check", object, object2);
    [javac]         ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/TestUtils.java:135: warning: [deprecation] Assert in junit.framework has been deprecated
    [javac]         Assert.assertEquals("HashCode check", object.hashCode(), object2.hashCode());
    [javac]         ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/TestUtils.java:165: warning: [deprecation] Assert in junit.framework has been deprecated
    [javac]             Assert.assertTrue(msg, Double.isNaN(actual));
    [javac]             ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/TestUtils.java:167: warning: [deprecation] Assert in junit.framework has been deprecated
    [javac]             Assert.assertTrue(msg, Double.isNaN(expected));
    [javac]             ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/TestUtils.java:169: warning: [deprecation] Assert in junit.framework has been deprecated
    [javac]             Assert.assertEquals(expected, actual, relativeError);
    [javac]             ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/TestUtils.java:171: warning: [deprecation] Assert in junit.framework has been deprecated
    [javac]             Assert.assertEquals(msg, actual, expected, relativeError);
    [javac]             ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/TestUtils.java:174: warning: [deprecation] Assert in junit.framework has been deprecated
    [javac]             Assert.assertEquals(msg, 0.0, x, relativeError);
    [javac]             ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/TestUtils.java:200: warning: [deprecation] Assert in junit.framework has been deprecated
    [javac]             Assert.fail(msg + 
    [javac]             ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/TestUtils.java:239: warning: [deprecation] Assert in junit.framework has been deprecated
    [javac]             Assert.fail(msg + " Unable to find" + x);
    [javac]             ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:103: warning: [deprecation] real in Complex has been deprecated
    [javac]         assertEquals(w.real, 4.0, 0);
    [javac]                       ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:104: warning: [deprecation] imaginary in Complex has been deprecated
    [javac]         assertTrue(Double.isNaN(w.imaginary));
    [javac]                                  ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:111: warning: [deprecation] imaginary in Complex has been deprecated
    [javac]         assertEquals(w.imaginary, 1, 0);
    [javac]                       ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:112: warning: [deprecation] real in Complex has been deprecated
    [javac]         assertEquals(inf, w.real, 0);
    [javac]                            ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:115: warning: [deprecation] real in Complex has been deprecated
    [javac]         assertTrue(Double.isNaN(x.add(z).real));
    [javac]                                         ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:132: warning: [deprecation] imaginary in Complex has been deprecated
    [javac]         assertEquals(neginf, z.conjugate().imaginary, 0);
    [javac]                                           ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:134: warning: [deprecation] imaginary in Complex has been deprecated
    [javac]         assertEquals(inf, z.conjugate().imaginary, 0);
    [javac]                                        ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:151: warning: [deprecation] real in Complex has been deprecated
    [javac]         assertTrue(Double.isNaN(z.real));
    [javac]                                  ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:152: warning: [deprecation] imaginary in Complex has been deprecated
    [javac]         assertEquals(inf, z.imaginary, 0);
    [javac]                            ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:156: warning: [deprecation] imaginary in Complex has been deprecated
    [javac]         assertTrue(Double.isNaN(z.imaginary));
    [javac]                                  ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:157: warning: [deprecation] real in Complex has been deprecated
    [javac]         assertEquals(inf, z.real, 0);
    [javac]                            ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:161: warning: [deprecation] real in Complex has been deprecated
    [javac]         assertTrue(Double.isNaN(z.real));
    [javac]                                  ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:162: warning: [deprecation] imaginary in Complex has been deprecated
    [javac]         assertTrue(Double.isNaN(z.imaginary));
    [javac]                                  ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:173: warning: [deprecation] real in Complex has been deprecated
    [javac]        assertTrue(Double.isNaN(z.real));
    [javac]                                 ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:174: warning: [deprecation] imaginary in Complex has been deprecated
    [javac]        assertEquals(inf, z.imaginary, 0);
    [javac]                           ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:177: warning: [deprecation] real in Complex has been deprecated
    [javac]        assertTrue(Double.isNaN(z.real));
    [javac]                                 ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:178: warning: [deprecation] imaginary in Complex has been deprecated
    [javac]        assertTrue(Double.isNaN(z.imaginary));
    [javac]                                 ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:181: warning: [deprecation] real in Complex has been deprecated
    [javac]        assertTrue(Double.isNaN(z.real));
    [javac]                                 ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:182: warning: [deprecation] imaginary in Complex has been deprecated
    [javac]        assertTrue(Double.isNaN(z.imaginary));
    [javac]                                 ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:202: warning: [deprecation] real in Complex has been deprecated
    [javac]         assertEquals(w.real, inf, 0);
    [javac]                       ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:203: warning: [deprecation] imaginary in Complex has been deprecated
    [javac]         assertEquals(w.imaginary, inf, 0);
    [javac]                       ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:211: warning: [deprecation] real in Complex has been deprecated
    [javac]         assertEquals(w.real, inf, 0);
    [javac]                       ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:212: warning: [deprecation] imaginary in Complex has been deprecated
    [javac]         assertEquals(w.imaginary, inf, 0);
    [javac]                       ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:215: warning: [deprecation] real in Complex has been deprecated
    [javac]         assertTrue(Double.isNaN(w.real));
    [javac]                                  ^
    [javac] /tmp/math_100/src/test/org/apache/commons/math/complex/ComplexTest.java:216: warning: [deprecation] imaginary in Complex has been deprecated
    [javac]         assertTrue(Double.isNaN(w.imaginary));  
    [javac]                                  ^
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 43 warnings
     [copy] Copying 12 files to /tmp/math_100/target/test-classes

compile.tests:

BUILD SUCCESSFUL
Total time: 2 minutes 10 seconds
17:26:31.357 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Building Spoon model from src/java]
2015-02-28 17:26:31,498 DEBUG spoon.support.StandardEnvironment - building sources: [src/java/org/apache/commons/math/ConvergenceException.java, src/java/org/apache/commons/math/DimensionMismatchException.java, src/java/org/apache/commons/math/ArgumentOutsideDomainException.java, src/java/org/apache/commons/math/DuplicateSampleAbscissaException.java, src/java/org/apache/commons/math/FunctionEvaluationException.java, src/java/org/apache/commons/math/MessagesResources_fr.java, src/java/org/apache/commons/math/MathException.java, src/java/org/apache/commons/math/MaxIterationsExceededException.java, src/java/org/apache/commons/math/MathConfigurationException.java, src/java/org/apache/commons/math/distribution/DistributionFactory.java, src/java/org/apache/commons/math/distribution/HypergeometricDistribution.java, src/java/org/apache/commons/math/distribution/TDistributionImpl.java, src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java, src/java/org/apache/commons/math/distribution/CauchyDistribution.java, src/java/org/apache/commons/math/distribution/NormalDistribution.java, src/java/org/apache/commons/math/distribution/FDistribution.java, src/java/org/apache/commons/math/distribution/Distribution.java, src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java, src/java/org/apache/commons/math/distribution/IntegerDistribution.java, src/java/org/apache/commons/math/distribution/ExponentialDistribution.java, src/java/org/apache/commons/math/distribution/TDistribution.java, src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java, src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java, src/java/org/apache/commons/math/distribution/GammaDistribution.java, src/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java, src/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java, src/java/org/apache/commons/math/distribution/WeibullDistribution.java, src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java, src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java, src/java/org/apache/commons/math/distribution/PascalDistribution.java, src/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java, src/java/org/apache/commons/math/distribution/PascalDistributionImpl.java, src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java, src/java/org/apache/commons/math/distribution/FDistributionImpl.java, src/java/org/apache/commons/math/distribution/PoissonDistribution.java, src/java/org/apache/commons/math/distribution/AbstractDistribution.java, src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java, src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java, src/java/org/apache/commons/math/distribution/BinomialDistribution.java, src/java/org/apache/commons/math/distribution/ContinuousDistribution.java, src/java/org/apache/commons/math/distribution/DiscreteDistribution.java, src/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java, src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java, src/java/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolator.java, src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java, src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java, src/java/org/apache/commons/math/ode/RungeKuttaStepInterpolator.java, src/java/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolator.java, src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java, src/java/org/apache/commons/math/ode/SwitchingFunction.java, src/java/org/apache/commons/math/ode/MidpointStepInterpolator.java, src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java, src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java, src/java/org/apache/commons/math/ode/FixedStepHandler.java, src/java/org/apache/commons/math/ode/GillStepInterpolator.java, src/java/org/apache/commons/math/ode/StepHandler.java, src/java/org/apache/commons/math/ode/DummyStepHandler.java, src/java/org/apache/commons/math/ode/HighamHall54Integrator.java, src/java/org/apache/commons/math/ode/EulerIntegrator.java, src/java/org/apache/commons/math/ode/FirstOrderConverter.java, src/java/org/apache/commons/math/ode/MidpointIntegrator.java, src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java, src/java/org/apache/commons/math/ode/SecondOrderIntegrator.java, src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java, src/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java, src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java, src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java, src/java/org/apache/commons/math/ode/ThreeEighthesStepInterpolator.java, src/java/org/apache/commons/math/ode/StepInterpolator.java, src/java/org/apache/commons/math/ode/SwitchState.java, src/java/org/apache/commons/math/ode/EulerStepInterpolator.java, src/java/org/apache/commons/math/ode/GillIntegrator.java, src/java/org/apache/commons/math/ode/ThreeEighthesIntegrator.java, src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java, src/java/org/apache/commons/math/ode/HighamHall54StepInterpolator.java, src/java/org/apache/commons/math/ode/ClassicalRungeKuttaIntegrator.java, src/java/org/apache/commons/math/ode/StepNormalizer.java, src/java/org/apache/commons/math/ode/IntegratorException.java, src/java/org/apache/commons/math/ode/FirstOrderDifferentialEquations.java, src/java/org/apache/commons/math/ode/ContinuousOutputModel.java, src/java/org/apache/commons/math/ode/DummyStepInterpolator.java, src/java/org/apache/commons/math/ode/DerivativeException.java, src/java/org/apache/commons/math/optimization/MultiDirectional.java, src/java/org/apache/commons/math/optimization/CostException.java, src/java/org/apache/commons/math/optimization/NelderMead.java, src/java/org/apache/commons/math/optimization/DirectSearchOptimizer.java, src/java/org/apache/commons/math/optimization/ConvergenceChecker.java, src/java/org/apache/commons/math/optimization/CostFunction.java, src/java/org/apache/commons/math/optimization/PointCostPair.java, src/java/org/apache/commons/math/geometry/Vector3D.java, src/java/org/apache/commons/math/geometry/RotationOrder.java, src/java/org/apache/commons/math/geometry/Rotation.java, src/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java, src/java/org/apache/commons/math/geometry/NotARotationMatrixException.java, src/java/org/apache/commons/math/linear/RealMatrixImpl.java, src/java/org/apache/commons/math/linear/QRDecompositionImpl.java, src/java/org/apache/commons/math/linear/BigMatrixImpl.java, src/java/org/apache/commons/math/linear/QRDecomposition.java, src/java/org/apache/commons/math/linear/BigMatrix.java, src/java/org/apache/commons/math/linear/InvalidMatrixException.java, src/java/org/apache/commons/math/linear/MatrixIndexException.java, src/java/org/apache/commons/math/linear/MatrixUtils.java, src/java/org/apache/commons/math/linear/RealMatrix.java, src/java/org/apache/commons/math/util/DefaultTransformer.java, src/java/org/apache/commons/math/util/TransformerMap.java, src/java/org/apache/commons/math/util/NumberTransformer.java, src/java/org/apache/commons/math/util/MathUtils.java, src/java/org/apache/commons/math/util/ResizableDoubleArray.java, src/java/org/apache/commons/math/util/DoubleArray.java, src/java/org/apache/commons/math/util/ContinuedFraction.java, src/java/org/apache/commons/math/special/Erf.java, src/java/org/apache/commons/math/special/Gamma.java, src/java/org/apache/commons/math/special/Beta.java, src/java/org/apache/commons/math/transform/FastCosineTransformer.java, src/java/org/apache/commons/math/transform/FastSineTransformer.java, src/java/org/apache/commons/math/transform/FastFourierTransformer.java, src/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java, src/java/org/apache/commons/math/random/AbstractRandomGenerator.java, src/java/org/apache/commons/math/random/EmpiricalDistribution.java, src/java/org/apache/commons/math/random/RandomGenerator.java, src/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java, src/java/org/apache/commons/math/random/RandomAdaptor.java, src/java/org/apache/commons/math/random/JDKRandomGenerator.java, src/java/org/apache/commons/math/random/RandomDataImpl.java, src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java, src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java, src/java/org/apache/commons/math/random/NormalizedRandomGenerator.java, src/java/org/apache/commons/math/random/RandomData.java, src/java/org/apache/commons/math/random/GaussianRandomGenerator.java, src/java/org/apache/commons/math/random/RandomVectorGenerator.java, src/java/org/apache/commons/math/random/ValueServer.java, src/java/org/apache/commons/math/random/UniformRandomGenerator.java, src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java, src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java, src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java, src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java, src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java, src/java/org/apache/commons/math/analysis/UnivariateRealIntegratorImpl.java, src/java/org/apache/commons/math/analysis/PolynomialFunction.java, src/java/org/apache/commons/math/analysis/NewtonSolver.java, src/java/org/apache/commons/math/analysis/BisectionSolver.java, src/java/org/apache/commons/math/analysis/TrapezoidIntegrator.java, src/java/org/apache/commons/math/analysis/UnivariateRealFunction.java, src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl.java, src/java/org/apache/commons/math/analysis/MullerSolver.java, src/java/org/apache/commons/math/analysis/NevilleInterpolator.java, src/java/org/apache/commons/math/analysis/RombergIntegrator.java, src/java/org/apache/commons/math/analysis/UnivariateRealInterpolator.java, src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java, src/java/org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.java, src/java/org/apache/commons/math/analysis/SimpsonIntegrator.java, src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java, src/java/org/apache/commons/math/analysis/SplineInterpolator.java, src/java/org/apache/commons/math/analysis/RiddersSolver.java, src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java, src/java/org/apache/commons/math/analysis/LaguerreSolver.java, src/java/org/apache/commons/math/analysis/BrentSolver.java, src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java, src/java/org/apache/commons/math/analysis/SecantSolver.java, src/java/org/apache/commons/math/fraction/ProperFractionFormat.java, src/java/org/apache/commons/math/fraction/FractionFormat.java, src/java/org/apache/commons/math/fraction/Fraction.java, src/java/org/apache/commons/math/fraction/FractionConversionException.java, src/java/org/apache/commons/math/estimation/Estimator.java, src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java, src/java/org/apache/commons/math/estimation/WeightedMeasurement.java, src/java/org/apache/commons/math/estimation/EstimatedParameter.java, src/java/org/apache/commons/math/estimation/EstimationException.java, src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java, src/java/org/apache/commons/math/estimation/AbstractEstimator.java, src/java/org/apache/commons/math/estimation/EstimationProblem.java, src/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java, src/java/org/apache/commons/math/stat/Frequency.java, src/java/org/apache/commons/math/stat/StatUtils.java, src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java, src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsImpl.java, src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java, src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java, src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java, src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummary.java, src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java, src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java, src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java, src/java/org/apache/commons/math/stat/descriptive/SummaryStatisticsImpl.java, src/java/org/apache/commons/math/stat/descriptive/StatisticalSummary.java, src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java, src/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValues.java, src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java, src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java, src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java, src/java/org/apache/commons/math/stat/descriptive/summary/Product.java, src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java, src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java, src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java, src/java/org/apache/commons/math/stat/descriptive/rank/Median.java, src/java/org/apache/commons/math/stat/descriptive/rank/Max.java, src/java/org/apache/commons/math/stat/descriptive/rank/Min.java, src/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java, src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java, src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java, src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java, src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java, src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java, src/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java, src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java, src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java, src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java, src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java, src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java, src/java/org/apache/commons/math/stat/regression/SimpleRegression.java, src/java/org/apache/commons/math/stat/inference/TestUtils.java, src/java/org/apache/commons/math/stat/inference/OneWayAnova.java, src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java, src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java, src/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java, src/java/org/apache/commons/math/stat/inference/TTestImpl.java, src/java/org/apache/commons/math/stat/inference/TestFactory.java, src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java, src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java, src/java/org/apache/commons/math/stat/inference/TTest.java, src/java/org/apache/commons/math/complex/Complex.java, src/java/org/apache/commons/math/complex/ComplexFormat.java, src/java/org/apache/commons/math/complex/ComplexUtils.java]
2015-02-28 17:26:31,570 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, src/java/org/apache/commons/math/ConvergenceException.java, src/java/org/apache/commons/math/DimensionMismatchException.java, src/java/org/apache/commons/math/ArgumentOutsideDomainException.java, src/java/org/apache/commons/math/DuplicateSampleAbscissaException.java, src/java/org/apache/commons/math/FunctionEvaluationException.java, src/java/org/apache/commons/math/MessagesResources_fr.java, src/java/org/apache/commons/math/MathException.java, src/java/org/apache/commons/math/MaxIterationsExceededException.java, src/java/org/apache/commons/math/MathConfigurationException.java, src/java/org/apache/commons/math/distribution/DistributionFactory.java, src/java/org/apache/commons/math/distribution/HypergeometricDistribution.java, src/java/org/apache/commons/math/distribution/TDistributionImpl.java, src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java, src/java/org/apache/commons/math/distribution/CauchyDistribution.java, src/java/org/apache/commons/math/distribution/NormalDistribution.java, src/java/org/apache/commons/math/distribution/FDistribution.java, src/java/org/apache/commons/math/distribution/Distribution.java, src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java, src/java/org/apache/commons/math/distribution/IntegerDistribution.java, src/java/org/apache/commons/math/distribution/ExponentialDistribution.java, src/java/org/apache/commons/math/distribution/TDistribution.java, src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java, src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java, src/java/org/apache/commons/math/distribution/GammaDistribution.java, src/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java, src/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java, src/java/org/apache/commons/math/distribution/WeibullDistribution.java, src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java, src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java, src/java/org/apache/commons/math/distribution/PascalDistribution.java, src/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java, src/java/org/apache/commons/math/distribution/PascalDistributionImpl.java, src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java, src/java/org/apache/commons/math/distribution/FDistributionImpl.java, src/java/org/apache/commons/math/distribution/PoissonDistribution.java, src/java/org/apache/commons/math/distribution/AbstractDistribution.java, src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java, src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java, src/java/org/apache/commons/math/distribution/BinomialDistribution.java, src/java/org/apache/commons/math/distribution/ContinuousDistribution.java, src/java/org/apache/commons/math/distribution/DiscreteDistribution.java, src/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java, src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java, src/java/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolator.java, src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java, src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java, src/java/org/apache/commons/math/ode/RungeKuttaStepInterpolator.java, src/java/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolator.java, src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java, src/java/org/apache/commons/math/ode/SwitchingFunction.java, src/java/org/apache/commons/math/ode/MidpointStepInterpolator.java, src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java, src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java, src/java/org/apache/commons/math/ode/FixedStepHandler.java, src/java/org/apache/commons/math/ode/GillStepInterpolator.java, src/java/org/apache/commons/math/ode/StepHandler.java, src/java/org/apache/commons/math/ode/DummyStepHandler.java, src/java/org/apache/commons/math/ode/HighamHall54Integrator.java, src/java/org/apache/commons/math/ode/EulerIntegrator.java, src/java/org/apache/commons/math/ode/FirstOrderConverter.java, src/java/org/apache/commons/math/ode/MidpointIntegrator.java, src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java, src/java/org/apache/commons/math/ode/SecondOrderIntegrator.java, src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java, src/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java, src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java, src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java, src/java/org/apache/commons/math/ode/ThreeEighthesStepInterpolator.java, src/java/org/apache/commons/math/ode/StepInterpolator.java, src/java/org/apache/commons/math/ode/SwitchState.java, src/java/org/apache/commons/math/ode/EulerStepInterpolator.java, src/java/org/apache/commons/math/ode/GillIntegrator.java, src/java/org/apache/commons/math/ode/ThreeEighthesIntegrator.java, src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java, src/java/org/apache/commons/math/ode/HighamHall54StepInterpolator.java, src/java/org/apache/commons/math/ode/ClassicalRungeKuttaIntegrator.java, src/java/org/apache/commons/math/ode/StepNormalizer.java, src/java/org/apache/commons/math/ode/IntegratorException.java, src/java/org/apache/commons/math/ode/FirstOrderDifferentialEquations.java, src/java/org/apache/commons/math/ode/ContinuousOutputModel.java, src/java/org/apache/commons/math/ode/DummyStepInterpolator.java, src/java/org/apache/commons/math/ode/DerivativeException.java, src/java/org/apache/commons/math/optimization/MultiDirectional.java, src/java/org/apache/commons/math/optimization/CostException.java, src/java/org/apache/commons/math/optimization/NelderMead.java, src/java/org/apache/commons/math/optimization/DirectSearchOptimizer.java, src/java/org/apache/commons/math/optimization/ConvergenceChecker.java, src/java/org/apache/commons/math/optimization/CostFunction.java, src/java/org/apache/commons/math/optimization/PointCostPair.java, src/java/org/apache/commons/math/geometry/Vector3D.java, src/java/org/apache/commons/math/geometry/RotationOrder.java, src/java/org/apache/commons/math/geometry/Rotation.java, src/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java, src/java/org/apache/commons/math/geometry/NotARotationMatrixException.java, src/java/org/apache/commons/math/linear/RealMatrixImpl.java, src/java/org/apache/commons/math/linear/QRDecompositionImpl.java, src/java/org/apache/commons/math/linear/BigMatrixImpl.java, src/java/org/apache/commons/math/linear/QRDecomposition.java, src/java/org/apache/commons/math/linear/BigMatrix.java, src/java/org/apache/commons/math/linear/InvalidMatrixException.java, src/java/org/apache/commons/math/linear/MatrixIndexException.java, src/java/org/apache/commons/math/linear/MatrixUtils.java, src/java/org/apache/commons/math/linear/RealMatrix.java, src/java/org/apache/commons/math/util/DefaultTransformer.java, src/java/org/apache/commons/math/util/TransformerMap.java, src/java/org/apache/commons/math/util/NumberTransformer.java, src/java/org/apache/commons/math/util/MathUtils.java, src/java/org/apache/commons/math/util/ResizableDoubleArray.java, src/java/org/apache/commons/math/util/DoubleArray.java, src/java/org/apache/commons/math/util/ContinuedFraction.java, src/java/org/apache/commons/math/special/Erf.java, src/java/org/apache/commons/math/special/Gamma.java, src/java/org/apache/commons/math/special/Beta.java, src/java/org/apache/commons/math/transform/FastCosineTransformer.java, src/java/org/apache/commons/math/transform/FastSineTransformer.java, src/java/org/apache/commons/math/transform/FastFourierTransformer.java, src/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java, src/java/org/apache/commons/math/random/AbstractRandomGenerator.java, src/java/org/apache/commons/math/random/EmpiricalDistribution.java, src/java/org/apache/commons/math/random/RandomGenerator.java, src/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java, src/java/org/apache/commons/math/random/RandomAdaptor.java, src/java/org/apache/commons/math/random/JDKRandomGenerator.java, src/java/org/apache/commons/math/random/RandomDataImpl.java, src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java, src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java, src/java/org/apache/commons/math/random/NormalizedRandomGenerator.java, src/java/org/apache/commons/math/random/RandomData.java, src/java/org/apache/commons/math/random/GaussianRandomGenerator.java, src/java/org/apache/commons/math/random/RandomVectorGenerator.java, src/java/org/apache/commons/math/random/ValueServer.java, src/java/org/apache/commons/math/random/UniformRandomGenerator.java, src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java, src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java, src/java/org/apache/commons/math/analysis/UnivariateRealSolver.java, src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java, src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java, src/java/org/apache/commons/math/analysis/UnivariateRealIntegratorImpl.java, src/java/org/apache/commons/math/analysis/PolynomialFunction.java, src/java/org/apache/commons/math/analysis/NewtonSolver.java, src/java/org/apache/commons/math/analysis/BisectionSolver.java, src/java/org/apache/commons/math/analysis/TrapezoidIntegrator.java, src/java/org/apache/commons/math/analysis/UnivariateRealFunction.java, src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactoryImpl.java, src/java/org/apache/commons/math/analysis/MullerSolver.java, src/java/org/apache/commons/math/analysis/NevilleInterpolator.java, src/java/org/apache/commons/math/analysis/RombergIntegrator.java, src/java/org/apache/commons/math/analysis/UnivariateRealInterpolator.java, src/java/org/apache/commons/math/analysis/UnivariateRealSolverFactory.java, src/java/org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.java, src/java/org/apache/commons/math/analysis/SimpsonIntegrator.java, src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java, src/java/org/apache/commons/math/analysis/SplineInterpolator.java, src/java/org/apache/commons/math/analysis/RiddersSolver.java, src/java/org/apache/commons/math/analysis/UnivariateRealIntegrator.java, src/java/org/apache/commons/math/analysis/LaguerreSolver.java, src/java/org/apache/commons/math/analysis/BrentSolver.java, src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java, src/java/org/apache/commons/math/analysis/SecantSolver.java, src/java/org/apache/commons/math/fraction/ProperFractionFormat.java, src/java/org/apache/commons/math/fraction/FractionFormat.java, src/java/org/apache/commons/math/fraction/Fraction.java, src/java/org/apache/commons/math/fraction/FractionConversionException.java, src/java/org/apache/commons/math/estimation/Estimator.java, src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java, src/java/org/apache/commons/math/estimation/WeightedMeasurement.java, src/java/org/apache/commons/math/estimation/EstimatedParameter.java, src/java/org/apache/commons/math/estimation/EstimationException.java, src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java, src/java/org/apache/commons/math/estimation/AbstractEstimator.java, src/java/org/apache/commons/math/estimation/EstimationProblem.java, src/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java, src/java/org/apache/commons/math/stat/Frequency.java, src/java/org/apache/commons/math/stat/StatUtils.java, src/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java, src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsImpl.java, src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java, src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java, src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java, src/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummary.java, src/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java, src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java, src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java, src/java/org/apache/commons/math/stat/descriptive/SummaryStatisticsImpl.java, src/java/org/apache/commons/math/stat/descriptive/StatisticalSummary.java, src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java, src/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValues.java, src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java, src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java, src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java, src/java/org/apache/commons/math/stat/descriptive/summary/Product.java, src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java, src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java, src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java, src/java/org/apache/commons/math/stat/descriptive/rank/Median.java, src/java/org/apache/commons/math/stat/descriptive/rank/Max.java, src/java/org/apache/commons/math/stat/descriptive/rank/Min.java, src/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java, src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java, src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java, src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java, src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java, src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java, src/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java, src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java, src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java, src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java, src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java, src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java, src/java/org/apache/commons/math/stat/regression/SimpleRegression.java, src/java/org/apache/commons/math/stat/inference/TestUtils.java, src/java/org/apache/commons/math/stat/inference/OneWayAnova.java, src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java, src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java, src/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java, src/java/org/apache/commons/math/stat/inference/TTestImpl.java, src/java/org/apache/commons/math/stat/inference/TestFactory.java, src/java/org/apache/commons/math/stat/inference/ChiSquareTest.java, src/java/org/apache/commons/math/stat/inference/TestFactoryImpl.java, src/java/org/apache/commons/math/stat/inference/TTest.java, src/java/org/apache/commons/math/complex/Complex.java, src/java/org/apache/commons/math/complex/ComplexFormat.java, src/java/org/apache/commons/math/complex/ComplexUtils.java]
2015-02-28 17:26:34,998 DEBUG spoon.support.StandardEnvironment - built in 3498 ms
2015-02-28 17:26:34,998 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:34,999 DEBUG spoon.support.StandardEnvironment - built in 1 ms
17:26:36.466 [main] DEBUG f.i.lille.repair.TestClassesFinder - Test clasess:
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ArgumentOutsideDomainExceptionTest
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ConvergenceExceptionTest
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.DuplicateSampleAbscissaExceptionTest
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.FunctionEvaluationExceptionTest
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.MathConfigurationExceptionTest
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.MathExceptionTest
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.MaxIterationsExceededExceptionTest
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.BisectionSolverTest
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.BrentSolverTest
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.LaguerreSolverTest
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.MullerSolverTest
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.NevilleInterpolatorTest
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.NewtonSolverTest
17:26:36.467 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.PolynomialFunctionTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.PolynomialSplineFunctionTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.RiddersSolverTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.RombergIntegratorTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.SimpsonIntegratorTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.SplineInterpolatorTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.TrapezoidIntegratorTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexFormatTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexUtilsTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.FrenchComplexFormatTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.BinomialDistributionTest
17:26:36.468 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.CauchyDistributionTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.ChiSquareDistributionTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.ExponentialDistributionTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.FDistributionTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.GammaDistributionTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.HypergeometricDistributionTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.NormalDistributionTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.PascalDistributionTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.PoissonDistributionTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.TDistributionTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.WeibullDistributionTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.estimation.EstimatedParameterTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.estimation.GaussNewtonEstimatorTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.estimation.MinpackTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.estimation.WeightedMeasurementTest
17:26:36.469 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.FractionFormatTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.FractionTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.RotationOrderTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.RotationTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.Vector3DTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.BigMatrixImplTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.InvalidMatrixExceptionTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.MatrixIndexExceptionTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.MatrixUtilsTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.QRDecompositionImplTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.RealMatrixImplTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.ContinuousOutputModelTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.DormandPrince54IntegratorTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest
17:26:36.470 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.DormandPrince853IntegratorTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.DummyStepInterpolatorTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.EulerIntegratorTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.EulerStepInterpolatorTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.FirstOrderConverterTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.GillIntegratorTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.GillStepInterpolatorTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.HighamHall54IntegratorTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.HighamHall54StepInterpolatorTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.MidpointIntegratorTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.MidpointStepInterpolatorTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.StepNormalizerTest
17:26:36.471 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.ThreeEighthesIntegratorTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.MultiDirectionalTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.NelderMeadTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.AbstractRandomGeneratorTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.EmpiricalDistributionTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.GaussianRandomGeneratorTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.RandomAdaptorTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.RandomDataTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.UniformRandomGeneratorTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.ValueServerTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.special.BetaTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.special.ErfTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.special.GammaTest
17:26:36.472 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.CertifiedDataTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.FrequencyTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.StatUtilsTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.data.LewTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.data.LotteryTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.InteractionTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.ListUnivariateImplTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SummaryStatisticsTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest
17:26:36.473 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.FirstMomentTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.FourthMomentTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.KurtosisTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.MeanTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.SkewnessTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.VarianceTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.MaxTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.MedianTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.MinTest
17:26:36.474 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.PercentileTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.ProductTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.SumLogTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.SumSqTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.SumTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.ChiSquareFactoryTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.ChiSquareTestTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.OneWayAnovaTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.TTestFactoryTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.TTestTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.TestUtilsTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.regression.SimpleRegressionTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastCosineTransformerTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastFourierTransformerTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastSineTransformerTest
17:26:36.475 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.ContinuedFractionTest
17:26:36.476 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.DefaultTransformerTest
17:26:36.476 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.MathUtilsTest
17:26:36.476 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.ResizableDoubleArrayTest
17:26:36.476 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.TransformerMapTest
17:26:36.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - >>> Begin subprocess output
17:26:36.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.MatrixUtilsTest
17:26:36.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

17:26:37.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRealMatrix, DisplayName: testCreateRealMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
17:26:37.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRealMatrix
17:26:37.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowRealMatrix, DisplayName: testCreateRowRealMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
17:26:37.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowRealMatrix
17:26:37.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateBigMatrix, DisplayName: testCreateBigMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
17:26:37.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateBigMatrix
17:26:37.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnBigMatrix, DisplayName: testCreateColumnBigMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
17:26:37.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnBigMatrix
17:26:37.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateBigIdentityMatrix, DisplayName: testCreateBigIdentityMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
17:26:37.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateBigIdentityMatrix
17:26:37.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowBigMatrix, DisplayName: testCreateRowBigMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
17:26:37.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowBigMatrix
17:26:37.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateIdentityMatrix, DisplayName: testCreateIdentityMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
17:26:37.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateIdentityMatrix
17:26:37.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnRealMatrix, DisplayName: testCreateColumnRealMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
17:26:37.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnRealMatrix
17:26:37.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
17:26:37.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ConvergenceExceptionTest
17:26:37.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
17:26:37.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructorPatternArgumentsCause, DisplayName: testConstructorPatternArgumentsCause(org.apache.commons.math.ConvergenceExceptionTest)
17:26:37.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructorPatternArgumentsCause

17:26:37.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructorPatternArguments, DisplayName: testConstructorPatternArguments(org.apache.commons.math.ConvergenceExceptionTest)
17:26:37.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructorPatternArguments
17:26:37.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructorCause, DisplayName: testConstructorCause(org.apache.commons.math.ConvergenceExceptionTest)
17:26:37.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructorCause
17:26:37.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.ConvergenceExceptionTest)
17:26:37.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructor
17:26:37.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
17:26:37.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest

17:26:37.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
17:26:37.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestPositive, DisplayName: testTestPositive(org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest)
17:26:37.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestPositive
17:26:37.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestNegative, DisplayName: testTestNegative(org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest)
17:26:37.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestNegative
17:26:37.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.111 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
17:26:37.111 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.distribution.FDistributionTest

17:26:37.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
17:26:37.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilityExtremes, DisplayName: testCumulativeProbabilityExtremes(org.apache.commons.math.distribution.FDistributionTest)
17:26:37.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilityExtremes
17:26:37.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testLargeDegreesOfFreedom, DisplayName: testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)
17:26:37.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testLargeDegreesOfFreedom

17:26:37.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testDfAccessors, DisplayName: testDfAccessors(org.apache.commons.math.distribution.FDistributionTest)
17:26:37.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testDfAccessors
17:26:37.175 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.FDistributionTest)
17:26:37.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes
17:26:37.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)
17:26:37.177 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilities
17:26:37.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)
17:26:37.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilities
17:26:37.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.FDistributionTest)
17:26:37.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testIllegalArguments
17:26:37.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.FDistributionTest)
17:26:37.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testConsistency
17:26:37.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
17:26:37.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.fraction.FractionTest
17:26:37.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:37.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: initializationError, DisplayName: initializationError(org.apache.commons.math.fraction.FractionTest)
17:26:37.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : loader (instance of  sun/misc/Launcher$AppClassLoader): attempted  duplicate class definition for name: "org/apache/commons/math/fraction/Fraction"
17:26:37.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.LinkageError: loader (instance of  sun/misc/Launcher$AppClassLoader): attempted  duplicate class definition for name: "org/apache/commons/math/fraction/Fraction"
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods
17:26:37.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (Class.java:2615)
	at java.lang.Class.getDeclaredMethods(Class.java:1860)
	at org.junit.internal.MethodSorter.getDeclaredMethods(MethodSorter.java:54)
	at junit.framework.TestSuite.addTestsFromTestCase(TestSuite.java:152)
	at junit.framework.TestSuite.<init>(TestSuite.java:132)
	at org.junit.internal.runners.JUnit38ClassRunner.<init>(JUnit38ClassRunner.java:72)
	at org.junit.internal.builders.JUnit3Builder.runnerForClass(JUnit3Builder.java:11)
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)
	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)
	at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:26)
	at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:31)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	
17:26:37.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: initializationError

17:26:37.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: initializationError
17:26:37.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
17:26:37.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 1
 Run JUnit Test: org.apache.commons.math.estimation.MinpackTest
17:26:37.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 18
17:26:37.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackLinearRank1, DisplayName: testMinpackLinearRank1(org.apache.commons.math.estimation.MinpackTest)
17:26:37.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackLinearRank1

17:26:37.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackBrownDennis, DisplayName: testMinpackBrownDennis(org.apache.commons.math.estimation.MinpackTest)
17:26:37.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackBrownDennis

17:26:37.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackJennrichSampson, DisplayName: testMinpackJennrichSampson(org.apache.commons.math.estimation.MinpackTest)

17:26:37.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackJennrichSampson
17:26:37.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackRosenbrok, DisplayName: testMinpackRosenbrok(org.apache.commons.math.estimation.MinpackTest)
17:26:37.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackRosenbrok
17:26:37.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackBox3Dimensional, DisplayName: testMinpackBox3Dimensional(org.apache.commons.math.estimation.MinpackTest)
17:26:37.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackBox3Dimensional
17:26:37.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackHelicalValley, DisplayName: testMinpackHelicalValley(org.apache.commons.math.estimation.MinpackTest)
17:26:37.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackHelicalValley
17:26:37.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackMeyer, DisplayName: testMinpackMeyer(org.apache.commons.math.estimation.MinpackTest)
17:26:37.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackMeyer

17:26:37.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackLinearFullRank, DisplayName: testMinpackLinearFullRank(org.apache.commons.math.estimation.MinpackTest)

17:26:37.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackLinearFullRank
17:26:37.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackFreudensteinRoth, DisplayName: testMinpackFreudensteinRoth(org.apache.commons.math.estimation.MinpackTest)
17:26:37.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackFreudensteinRoth
17:26:37.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackOsborne1, DisplayName: testMinpackOsborne1(org.apache.commons.math.estimation.MinpackTest)
17:26:37.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:37.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackOsborne1

17:26:37.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackOsborne2, DisplayName: testMinpackOsborne2(org.apache.commons.math.estimation.MinpackTest)

17:26:37.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackOsborne2

17:26:37.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackWatson, DisplayName: testMinpackWatson(org.apache.commons.math.estimation.MinpackTest)
17:26:37.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackWatson

17:26:38.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackKowalikOsborne, DisplayName: testMinpackKowalikOsborne(org.apache.commons.math.estimation.MinpackTest)

17:26:38.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackKowalikOsborne
17:26:38.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackPowellSingular, DisplayName: testMinpackPowellSingular(org.apache.commons.math.estimation.MinpackTest)
17:26:38.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackPowellSingular
17:26:38.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackChebyquad, DisplayName: testMinpackChebyquad(org.apache.commons.math.estimation.MinpackTest)
17:26:38.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackChebyquad

17:26:38.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackLinearRank1ZeroColsAndRows, DisplayName: testMinpackLinearRank1ZeroColsAndRows(org.apache.commons.math.estimation.MinpackTest)

17:26:38.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackLinearRank1ZeroColsAndRows
17:26:38.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackBard, DisplayName: testMinpackBard(org.apache.commons.math.estimation.MinpackTest)

17:26:38.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackBard
17:26:38.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackBrownAlmostLinear, DisplayName: testMinpackBrownAlmostLinear(org.apache.commons.math.estimation.MinpackTest)
17:26:38.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.MinpackTest, MethodName: testMinpackBrownAlmostLinear

17:26:38.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 18
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.StatUtilsTest

17:26:38.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13
17:26:38.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testDifferenceStats, DisplayName: testDifferenceStats(org.apache.commons.math.stat.StatUtilsTest)

17:26:38.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testDifferenceStats

17:26:38.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testPercentile, DisplayName: testPercentile(org.apache.commons.math.stat.StatUtilsTest)
17:26:38.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testPercentile
17:26:38.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testArrayIndexConditions, DisplayName: testArrayIndexConditions(org.apache.commons.math.stat.StatUtilsTest)
17:26:38.422 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testArrayIndexConditions
17:26:38.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMax, DisplayName: testMax(org.apache.commons.math.stat.StatUtilsTest)
17:26:38.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMax
17:26:38.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMin, DisplayName: testMin(org.apache.commons.math.stat.StatUtilsTest)
17:26:38.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMin
17:26:38.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.StatUtilsTest)
17:26:38.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testStats
17:26:38.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumSq, DisplayName: testSumSq(org.apache.commons.math.stat.StatUtilsTest)
17:26:38.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumSq

17:26:38.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMean, DisplayName: testMean(org.apache.commons.math.stat.StatUtilsTest)
17:26:38.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMean
17:26:38.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.StatUtilsTest)
17:26:38.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testN0andN1Conditions

17:26:38.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testProduct, DisplayName: testProduct(org.apache.commons.math.stat.StatUtilsTest)
17:26:38.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testProduct
17:26:38.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testGeometricMean, DisplayName: testGeometricMean(org.apache.commons.math.stat.StatUtilsTest)
17:26:38.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testGeometricMean

17:26:38.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testVariance, DisplayName: testVariance(org.apache.commons.math.stat.StatUtilsTest)
17:26:38.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testVariance
17:26:38.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumLog, DisplayName: testSumLog(org.apache.commons.math.stat.StatUtilsTest)
17:26:38.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumLog

17:26:38.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
17:26:38.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest

17:26:38.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
17:26:38.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)

17:26:38.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testProductAndGeometricMean
17:26:38.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)
17:26:38.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSerialization
17:26:38.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)
17:26:38.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testStats
17:26:38.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)
17:26:38.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testN0andN1Conditions
17:26:38.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSkewAndKurtosis, DisplayName: testSkewAndKurtosis(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)
17:26:38.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSkewAndKurtosis
17:26:38.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
17:26:38.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.MidpointIntegratorTest

17:26:38.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
17:26:38.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.MidpointIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.MidpointIntegratorTest)

17:26:38.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.MidpointIntegratorTest, MethodName: testDimensionCheck
17:26:38.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.MidpointIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.MidpointIntegratorTest)
17:26:38.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.MidpointIntegratorTest, MethodName: testSmallStep
17:26:38.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.MidpointIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.MidpointIntegratorTest)
17:26:38.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.MidpointIntegratorTest, MethodName: testDecreasingSteps

17:26:38.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.MidpointIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.MidpointIntegratorTest)
17:26:38.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.MidpointIntegratorTest, MethodName: testBigStep
17:26:38.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
17:26:38.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest

17:26:38.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
17:26:38.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest)

17:26:38.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testSerialization
17:26:38.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest)
17:26:38.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testEqualsAndHashCode

17:26:38.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
17:26:38.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.estimation.GaussNewtonEstimatorTest

17:26:38.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 15
17:26:38.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testNoDependency, DisplayName: testNoDependency(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)

17:26:38.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testNoDependency
17:26:38.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testRedundantEquations, DisplayName: testRedundantEquations(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
17:26:38.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testRedundantEquations
17:26:38.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testTrivial, DisplayName: testTrivial(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
17:26:38.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testTrivial
17:26:38.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testQRColumnsPermutation, DisplayName: testQRColumnsPermutation(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
17:26:38.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testQRColumnsPermutation
17:26:38.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testTwoSets, DisplayName: testTwoSets(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
17:26:38.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testTwoSets
17:26:38.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testMaxIterations, DisplayName: testMaxIterations(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
17:26:38.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testMaxIterations
17:26:38.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testMoreEstimatedParametersSimple, DisplayName: testMoreEstimatedParametersSimple(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
17:26:38.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testMoreEstimatedParametersSimple
17:26:38.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testMoreEstimatedParametersUnsorted, DisplayName: testMoreEstimatedParametersUnsorted(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
17:26:38.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testMoreEstimatedParametersUnsorted
17:26:38.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testIllConditioned, DisplayName: testIllConditioned(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
17:26:38.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testIllConditioned
17:26:38.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testNonInversible, DisplayName: testNonInversible(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
17:26:38.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testNonInversible
17:26:38.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testInconsistentEquations, DisplayName: testInconsistentEquations(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
17:26:38.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testInconsistentEquations
17:26:38.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testCircleFitting, DisplayName: testCircleFitting(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
17:26:38.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testCircleFitting
17:26:38.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testBoundParameters, DisplayName: testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
17:26:38.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : 6
17:26:38.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.ArrayIndexOutOfBoundsException: 6
	at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(Unknown Source)
	at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.int
17:26:38.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - ernal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testBoundParameters

17:26:38.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testBoundParameters
17:26:38.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testOneSet, DisplayName: testOneSet(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
17:26:38.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testOneSet
17:26:38.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testCircleFittingBadInit, DisplayName: testCircleFittingBadInit(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
17:26:38.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.GaussNewtonEstimatorTest, MethodName: testCircleFittingBadInit
17:26:38.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 15
17:26:38.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 1
 Run JUnit Test: org.apache.commons.math.analysis.SimpsonIntegratorTest

17:26:38.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:38.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.SimpsonIntegratorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.SimpsonIntegratorTest)

17:26:38.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.SimpsonIntegratorTest, MethodName: testParameters
17:26:38.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.SimpsonIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.SimpsonIntegratorTest)
17:26:38.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.SimpsonIntegratorTest, MethodName: testSinFunction
17:26:38.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.SimpsonIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.SimpsonIntegratorTest)
17:26:38.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.SimpsonIntegratorTest, MethodName: testQuinticFunction
17:26:38.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
17:26:38.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.MedianTest

17:26:38.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:38.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.MedianTest)

17:26:38.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testEvaluation
17:26:38.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:38.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
17:26:38.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest

17:26:38.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:38.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest)

17:26:39.023 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest, MethodName: testSerialization

17:26:39.023 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
17:26:39.024 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.TDistributionTest
17:26:39.024 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
17:26:39.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilityAgaintStackOverflow, DisplayName: testCumulativeProbabilityAgaintStackOverflow(org.apache.commons.math.distribution.TDistributionTest)

17:26:39.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilityAgaintStackOverflow
17:26:39.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testDfAccessors, DisplayName: testDfAccessors(org.apache.commons.math.distribution.TDistributionTest)
17:26:39.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testDfAccessors
17:26:39.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.TDistributionTest)
17:26:39.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

17:26:39.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testSmallDf, DisplayName: testSmallDf(org.apache.commons.math.distribution.TDistributionTest)
17:26:39.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testSmallDf
17:26:39.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)
17:26:39.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilities
17:26:39.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)
17:26:39.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilities
17:26:39.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.TDistributionTest)
17:26:39.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testIllegalArguments
17:26:39.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.TDistributionTest)
17:26:39.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testConsistency
17:26:39.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
17:26:39.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ArgumentOutsideDomainExceptionTest
17:26:39.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:39.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ArgumentOutsideDomainExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.ArgumentOutsideDomainExceptionTest)

17:26:39.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ArgumentOutsideDomainExceptionTest, MethodName: testConstructor
17:26:39.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
17:26:39.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.FrequencyTest

17:26:39.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
17:26:39.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testEmptyTable, DisplayName: testEmptyTable(org.apache.commons.math.stat.FrequencyTest)

17:26:39.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testEmptyTable
17:26:39.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.stat.FrequencyTest)
17:26:39.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testAdd
17:26:39.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testPcts, DisplayName: testPcts(org.apache.commons.math.stat.FrequencyTest)
17:26:39.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testPcts
17:26:39.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.FrequencyTest)
17:26:39.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testToString
17:26:39.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testIntegerValues, DisplayName: testIntegerValues(org.apache.commons.math.stat.FrequencyTest)
17:26:39.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testIntegerValues
17:26:39.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testCounts, DisplayName: testCounts(org.apache.commons.math.stat.FrequencyTest)
17:26:39.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testCounts
17:26:39.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
17:26:39.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest

17:26:39.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:39.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest)

17:26:39.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest, MethodName: testParameters
17:26:39.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest)
17:26:39.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest, MethodName: testSinFunction
17:26:39.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest)
17:26:39.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest, MethodName: testExpm1Function
17:26:39.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
17:26:39.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest

17:26:39.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:39.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRank, DisplayName: testRank(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)

17:26:39.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRank
17:26:39.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCovariance, DisplayName: testMeanAndCovariance(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)
17:26:39.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCovariance
17:26:39.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRootMatrix, DisplayName: testRootMatrix(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)
17:26:39.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRootMatrix
17:26:39.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
17:26:39.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.SumTest

17:26:39.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:39.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.SumTest)

17:26:39.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSpecialValues
17:26:39.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.SumTest)
17:26:39.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testMomentSmallSamples

17:26:39.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.SumTest)
17:26:39.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSerialization
17:26:39.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.SumTest)
17:26:39.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testIncrementation
17:26:39.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.SumTest)
17:26:39.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testConsistency
17:26:39.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.SumTest)
17:26:39.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEqualsAndHashCode
17:26:39.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.SumTest)
17:26:39.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEvaluation

17:26:39.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
17:26:39.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest

17:26:39.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
17:26:39.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest, MethodName: testLinearFunction, DisplayName: testLinearFunction(org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest)

17:26:39.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest, MethodName: testLinearFunction
17:26:39.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest, MethodName: testQuadraticFunction, DisplayName: testQuadraticFunction(org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest)
17:26:39.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest, MethodName: testQuadraticFunction
17:26:39.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest)
17:26:39.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest, MethodName: testParameters

17:26:39.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest)
17:26:39.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest, MethodName: testQuinticFunction
17:26:39.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
17:26:39.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.transform.FastSineTransformerTest

17:26:39.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:39.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testAdHocData, DisplayName: testAdHocData(org.apache.commons.math.transform.FastSineTransformerTest)

17:26:39.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : loader (instance of  sun/misc/Launcher$AppClassLoader): attempted  duplicate class definition for name: "org/apache/commons/math/complex/Complex"
17:26:39.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.LinkageError: loader (instance of  sun/misc/Launcher$AppClassLoader): attempted  duplicate class definition for name: "org/apache/commons/math/complex/Complex"
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at org.apache.commons.math.transform.FastFourierTransformer.<init>(Unknown Source)
	at org.apache.com
17:26:39.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - mons.math.transform.FastSineTransformer.fst(Unknown Source)
	at org.apache.commons.math.transform.FastSineTransformer.transform(Unknown Source)
	at org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(FastSineTransformerTest.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.
17:26:39.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testAdHocData

17:26:39.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testAdHocData
17:26:39.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.transform.FastSineTransformerTest)
17:26:39.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testParameters
17:26:39.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.transform.FastSineTransformerTest)
17:26:39.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : org/apache/commons/math/complex/Complex
17:26:39.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.LinkageError: org/apache/commons/math/complex/Complex
	at org.apache.commons.math.transform.FastFourierTransformer.<init>(Unknown Source)
	at org.apache.commons.math.transform.FastSineTransformer.fst(Unknown Source)
	at org.apache.commons.math.transform.FastSineTransformer.transform(Unknown Source)
	at org.apache.commons.math.transform.FastSineTransformerTest.testSinFunction(FastSineTransformerTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.f
17:26:39.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - ramework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testSinFunction

17:26:39.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testSinFunction
17:26:39.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
17:26:39.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 1
 Run JUnit Test: org.apache.commons.math.stat.regression.SimpleRegressionTest

17:26:39.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
17:26:39.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testClear, DisplayName: testClear(org.apache.commons.math.stat.regression.SimpleRegressionTest)

17:26:39.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testClear
17:26:39.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testCorr, DisplayName: testCorr(org.apache.commons.math.stat.regression.SimpleRegressionTest)
17:26:39.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testCorr

17:26:39.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNaNs, DisplayName: testNaNs(org.apache.commons.math.stat.regression.SimpleRegressionTest)
17:26:39.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNaNs
17:26:39.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfect, DisplayName: testPerfect(org.apache.commons.math.stat.regression.SimpleRegressionTest)
17:26:39.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfect
17:26:39.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testSSENonNegative, DisplayName: testSSENonNegative(org.apache.commons.math.stat.regression.SimpleRegressionTest)
17:26:39.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testSSENonNegative
17:26:39.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfectNegative, DisplayName: testPerfectNegative(org.apache.commons.math.stat.regression.SimpleRegressionTest)
17:26:39.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfectNegative
17:26:39.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNorris, DisplayName: testNorris(org.apache.commons.math.stat.regression.SimpleRegressionTest)
17:26:39.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNorris
17:26:39.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testInference, DisplayName: testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)
17:26:39.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testInference
17:26:39.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRandom, DisplayName: testRandom(org.apache.commons.math.stat.regression.SimpleRegressionTest)
17:26:39.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRandom
17:26:39.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
17:26:39.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest
17:26:39.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13
17:26:39.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testGetSortedValues, DisplayName: testGetSortedValues(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)

17:26:39.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testGetSortedValues
17:26:39.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
17:26:39.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testProductAndGeometricMean
17:26:39.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
17:26:39.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testSerialization
17:26:39.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
17:26:39.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testStats
17:26:39.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
17:26:39.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testToString
17:26:39.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
17:26:39.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testN0andN1Conditions
17:26:39.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testAddValue, DisplayName: testAddValue(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
17:26:39.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testAddValue
17:26:39.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testWindowing, DisplayName: testWindowing(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
17:26:39.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testWindowing
17:26:39.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testPercentiles, DisplayName: testPercentiles(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
17:26:39.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testPercentiles
17:26:39.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testWindowSize, DisplayName: testWindowSize(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
17:26:39.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testWindowSize
17:26:39.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testNewInstanceClassValid, DisplayName: testNewInstanceClassValid(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
17:26:39.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testNewInstanceClassValid
17:26:39.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testNewInstanceClassNull, DisplayName: testNewInstanceClassNull(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
17:26:39.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testNewInstanceClassNull
17:26:39.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testSkewAndKurtosis, DisplayName: testSkewAndKurtosis(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
17:26:39.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testSkewAndKurtosis
17:26:39.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
17:26:39.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.BigMatrixImplTest

17:26:39.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 27
17:26:39.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.BigMatrixImplTest)

17:26:39.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testOperate
17:26:39.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testAddFail
17:26:39.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testAdd
17:26:39.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testScalarAdd
17:26:39.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testSolve
17:26:39.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testTrace
17:26:39.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testNorm
17:26:39.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testToString
17:26:39.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testIsSingular, DisplayName: testIsSingular(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testIsSingular
17:26:39.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testConstructors
17:26:39.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testPlusMinus
17:26:39.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testDeterminant, DisplayName: testDeterminant(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testDeterminant
17:26:39.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testMultiply2
17:26:39.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testDimensions
17:26:39.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testSubMatrix, DisplayName: testSubMatrix(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testSubMatrix
17:26:39.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testPremultiplyVector
17:26:39.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testCopyFunctions
17:26:39.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testLUDecomposition, DisplayName: testLUDecomposition(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testLUDecomposition
17:26:39.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testGetVectors
17:26:39.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testGetColumnMatrix
17:26:39.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testMultiply
17:26:39.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testEqualsAndHashCode
17:26:39.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testInverse, DisplayName: testInverse(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testInverse
17:26:39.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.323 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testTranspose

17:26:39.323 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.323 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testPremultiply
17:26:39.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testGetRowMatrix
17:26:39.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.BigMatrixImplTest)
17:26:39.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BigMatrixImplTest, MethodName: testSetSubMatrix
17:26:39.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 27
17:26:39.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.Vector3DTest

17:26:39.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12
17:26:39.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testVectorialProducts, DisplayName: testVectorialProducts(org.apache.commons.math.geometry.Vector3DTest)
17:26:39.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testVectorialProducts
17:26:39.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.geometry.Vector3DTest)
17:26:39.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAdd
17:26:39.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.geometry.Vector3DTest)
17:26:39.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testSubtract
17:26:39.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAngular, DisplayName: testAngular(org.apache.commons.math.geometry.Vector3DTest)
17:26:39.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAngular
17:26:39.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAngle, DisplayName: testAngle(org.apache.commons.math.geometry.Vector3DTest)
17:26:39.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAngle
17:26:39.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.geometry.Vector3DTest)
17:26:39.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testNorm
17:26:39.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.geometry.Vector3DTest)
17:26:39.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testConstructors

17:26:39.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testScalarProduct, DisplayName: testScalarProduct(org.apache.commons.math.geometry.Vector3DTest)
17:26:39.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testScalarProduct
17:26:39.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testOrthogonal, DisplayName: testOrthogonal(org.apache.commons.math.geometry.Vector3DTest)
17:26:39.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testOrthogonal
17:26:39.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAngularSeparation, DisplayName: testAngularSeparation(org.apache.commons.math.geometry.Vector3DTest)
17:26:39.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testAngularSeparation
17:26:39.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testNormalize, DisplayName: testNormalize(org.apache.commons.math.geometry.Vector3DTest)
17:26:39.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testNormalize
17:26:39.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testCoordinates, DisplayName: testCoordinates(org.apache.commons.math.geometry.Vector3DTest)
17:26:39.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.Vector3DTest, MethodName: testCoordinates

17:26:39.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
17:26:39.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest

17:26:39.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
17:26:39.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
17:26:39.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testNaN
17:26:39.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testPopulation, DisplayName: testPopulation(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
17:26:39.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testPopulation
17:26:39.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
17:26:39.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testMomentSmallSamples
17:26:39.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
17:26:39.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testSerialization
17:26:39.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
17:26:39.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testIncrementation
17:26:39.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
17:26:39.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testConsistency
17:26:39.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
17:26:39.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEqualsAndHashCode
17:26:39.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
17:26:39.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEvaluation
17:26:39.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
17:26:39.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.complex.FrenchComplexFormatTest
17:26:39.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 35
17:26:39.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeImaginary, DisplayName: testParseNegativeImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeImaginary
17:26:39.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testConstructorSingleFormat
17:26:39.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimals
17:26:39.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroImaginary, DisplayName: testZeroImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroImaginary
17:26:39.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSetImaginaryFormatNull, DisplayName: testSetImaginaryFormatNull(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSetImaginaryFormatNull
17:26:39.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testDifferentImaginaryChar, DisplayName: testDifferentImaginaryChar(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testDifferentImaginaryChar
17:26:39.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testFormatNumber, DisplayName: testFormatNumber(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testFormatNumber
17:26:39.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testFormatObject, DisplayName: testFormatObject(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testFormatObject
17:26:39.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNan
17:26:39.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc
17:26:39.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSetImaginaryCharacterNull, DisplayName: testSetImaginaryCharacterNull(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSetImaginaryCharacterNull
17:26:39.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testStaticFormatComplex, DisplayName: testStaticFormatComplex(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testStaticFormatComplex
17:26:39.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetRealFormat, DisplayName: testGetRealFormat(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetRealFormat
17:26:39.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeBoth, DisplayName: testParseNegativeBoth(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeBoth
17:26:39.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeReal, DisplayName: testParseNegativeReal(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeReal
17:26:39.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetImaginaryFormat, DisplayName: testGetImaginaryFormat(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetImaginaryFormat
17:26:39.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc
17:26:39.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeInfinity, DisplayName: testNegativeInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeInfinity
17:26:39.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSetRealFormatNull, DisplayName: testSetRealFormatNull(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSetRealFormatNull
17:26:39.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPaseNegativeInfinity, DisplayName: testPaseNegativeInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPaseNegativeInfinity
17:26:39.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseDifferentImaginaryChar, DisplayName: testParseDifferentImaginaryChar(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseDifferentImaginaryChar
17:26:39.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSetImaginaryCharacterEmpty, DisplayName: testSetImaginaryCharacterEmpty(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSetImaginaryCharacterEmpty
17:26:39.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleNoDecimals
17:26:39.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroReal, DisplayName: testZeroReal(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroReal
17:26:39.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeBoth, DisplayName: testNegativeBoth(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeBoth
17:26:39.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeReal, DisplayName: testNegativeReal(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeReal
17:26:39.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeImaginary, DisplayName: testNegativeImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeImaginary
17:26:39.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)

17:26:39.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleNoDecimals
17:26:39.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPositiveInfinity
17:26:39.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testForgottenImaginaryCharacter, DisplayName: testForgottenImaginaryCharacter(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testForgottenImaginaryCharacter
17:26:39.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroReal, DisplayName: testParseZeroReal(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroReal
17:26:39.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNan
17:26:39.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroImaginary, DisplayName: testParseZeroImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroImaginary
17:26:39.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParsePositiveInfinity
17:26:39.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)
17:26:39.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimals
17:26:39.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 35
TestResult: 0
17:26:39.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ode.DummyStepInterpolatorTest

17:26:39.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
17:26:39.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.DummyStepInterpolatorTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.ode.DummyStepInterpolatorTest)

17:26:39.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DummyStepInterpolatorTest, MethodName: testSerialization
17:26:39.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DummyStepInterpolatorTest, MethodName: testImpossibleSerialization, DisplayName: testImpossibleSerialization(org.apache.commons.math.ode.DummyStepInterpolatorTest)
17:26:39.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DummyStepInterpolatorTest, MethodName: testImpossibleSerialization
17:26:39.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DummyStepInterpolatorTest, MethodName: testFixedState, DisplayName: testFixedState(org.apache.commons.math.ode.DummyStepInterpolatorTest)
17:26:39.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DummyStepInterpolatorTest, MethodName: testFixedState
17:26:39.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DummyStepInterpolatorTest, MethodName: testSerializationError, DisplayName: testSerializationError(org.apache.commons.math.ode.DummyStepInterpolatorTest)
17:26:39.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DummyStepInterpolatorTest, MethodName: testSerializationError
17:26:39.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DummyStepInterpolatorTest, MethodName: testNoReset, DisplayName: testNoReset(org.apache.commons.math.ode.DummyStepInterpolatorTest)

17:26:39.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DummyStepInterpolatorTest, MethodName: testNoReset
17:26:39.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Number of testcases executed : 5
TestResult: 0
17:26:39.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest

17:26:39.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:39.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest)

17:26:39.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest, MethodName: testProductAndGeometricMean
17:26:39.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest, MethodName: testGetSummary, DisplayName: testGetSummary(org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest)
17:26:39.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest, MethodName: testGetSummary
17:26:39.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest)
17:26:39.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest, MethodName: testSerialization
17:26:39.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest)
17:26:39.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest, MethodName: testStats
17:26:39.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest)
17:26:39.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest, MethodName: testNaNContracts
17:26:39.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest)
17:26:39.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest, MethodName: testN0andN1Conditions
17:26:39.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest)
17:26:39.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest, MethodName: testEqualsAndHashCode
17:26:39.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7

17:26:39.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.KurtosisTest
17:26:39.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:39.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
17:26:39.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testNaN
17:26:39.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
17:26:39.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testMomentSmallSamples

17:26:39.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
17:26:39.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testSerialization
17:26:39.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
17:26:39.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testIncrementation
17:26:39.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
17:26:39.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testConsistency
17:26:39.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
17:26:39.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEqualsAndHashCode
17:26:39.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
17:26:39.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEvaluation
17:26:39.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7

17:26:39.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.QRDecompositionImplTest

17:26:39.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
17:26:39.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testAEqualQR, DisplayName: testAEqualQR(org.apache.commons.math.linear.QRDecompositionImplTest)

17:26:39.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testAEqualQR
17:26:39.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.QRDecompositionImplTest)

17:26:39.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testDimensions
17:26:39.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testRUpperTriangular, DisplayName: testRUpperTriangular(org.apache.commons.math.linear.QRDecompositionImplTest)
17:26:39.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testRUpperTriangular
17:26:39.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testQOrthogonal, DisplayName: testQOrthogonal(org.apache.commons.math.linear.QRDecompositionImplTest)
17:26:39.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testQOrthogonal
17:26:39.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Number of testcases executed : 4

17:26:39.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.transform.FastCosineTransformerTest

17:26:39.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:39.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testAdHocData, DisplayName: testAdHocData(org.apache.commons.math.transform.FastCosineTransformerTest)
17:26:39.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : org/apache/commons/math/complex/Complex
17:26:39.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.LinkageError: org/apache/commons/math/complex/Complex
	at org.apache.commons.math.transform.FastFourierTransformer.<init>(Unknown Source)
	at org.apache.commons.math.transform.FastCosineTransformer.fct(Unknown Source)
	at org.apache.commons.math.transform.FastCosineTransformer.transform(Unknown Source)
	at org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(FastCosineTransformerTest.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at j
17:26:39.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - unit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testAdHocData

17:26:39.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testAdHocData
17:26:39.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.transform.FastCosineTransformerTest)
17:26:39.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testParameters
17:26:39.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.transform.FastCosineTransformerTest)

17:26:39.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : org/apache/commons/math/complex/Complex
17:26:39.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.LinkageError: org/apache/commons/math/complex/Complex
	at org.apache.commons.math.transform.FastFourierTransformer.<init>(Unknown Source)
	at org.apache.commons.math.transform.FastCosineTransformer.fct(Unknown Source)
	at org.apache.commons.math.transform.FastCosineTransformer.transform(Unknown Source)
	at org.apache.commons.math.transform.FastCosineTransformerTest.testSinFunction(FastCosineTransformerTest.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at
17:26:39.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testSinFunction

17:26:39.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testSinFunction
17:26:39.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

17:26:39.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 1
 Run JUnit Test: org.apache.commons.math.ode.StepNormalizerTest

17:26:39.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
17:26:39.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.StepNormalizerTest, MethodName: testBoundaries, DisplayName: testBoundaries(org.apache.commons.math.ode.StepNormalizerTest)
17:26:39.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.StepNormalizerTest, MethodName: testBoundaries
17:26:39.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.StepNormalizerTest, MethodName: testBeforeEnd, DisplayName: testBeforeEnd(org.apache.commons.math.ode.StepNormalizerTest)

17:26:39.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.StepNormalizerTest, MethodName: testBeforeEnd
17:26:39.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Number of testcases executed : 2
17:26:39.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.RotationTest
17:26:39.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12
17:26:39.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testAxisAngle, DisplayName: testAxisAngle(org.apache.commons.math.geometry.RotationTest)

17:26:39.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testAxisAngle
17:26:39.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testVectorTwoPairs, DisplayName: testVectorTwoPairs(org.apache.commons.math.geometry.RotationTest)
17:26:39.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testVectorTwoPairs
17:26:39.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testCompose, DisplayName: testCompose(org.apache.commons.math.geometry.RotationTest)
17:26:39.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testCompose
17:26:39.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testIdentity, DisplayName: testIdentity(org.apache.commons.math.geometry.RotationTest)

17:26:39.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testIdentity
17:26:39.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testComposeInverse, DisplayName: testComposeInverse(org.apache.commons.math.geometry.RotationTest)
17:26:39.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testComposeInverse
17:26:39.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testApplyInverseTo, DisplayName: testApplyInverseTo(org.apache.commons.math.geometry.RotationTest)

17:26:39.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testApplyInverseTo
17:26:39.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testAngles, DisplayName: testAngles(org.apache.commons.math.geometry.RotationTest)

17:26:39.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testAngles

17:26:39.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testVectorOnePair, DisplayName: testVectorOnePair(org.apache.commons.math.geometry.RotationTest)
* Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testVectorOnePair
* Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testMatrix, DisplayName: testMatrix(org.apache.commons.math.geometry.RotationTest)

17:26:39.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testMatrix
17:26:39.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testRevert, DisplayName: testRevert(org.apache.commons.math.geometry.RotationTest)

17:26:39.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testRevert
17:26:39.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testSingularities, DisplayName: testSingularities(org.apache.commons.math.geometry.RotationTest)

17:26:39.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testSingularities
17:26:39.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testQuaternion, DisplayName: testQuaternion(org.apache.commons.math.geometry.RotationTest)

17:26:39.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationTest, MethodName: testQuaternion
17:26:39.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Number of testcases executed : 12

17:26:39.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest

17:26:39.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
17:26:39.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest)

17:26:39.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest, MethodName: testSmallStep
17:26:39.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:39.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest)
17:26:39.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest, MethodName: testDecreasingSteps

17:26:40.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest)
17:26:40.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest, MethodName: testBigStep
* Started : ClasseName: org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest)

17:26:40.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest, MethodName: testKepler
17:26:40.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest, MethodName: testSanityChecks, DisplayName: testSanityChecks(org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest)

17:26:40.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest, MethodName: testSanityChecks
17:26:40.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Number of testcases executed : 5

17:26:40.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.CertifiedDataTest
17:26:40.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
17:26:40.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testSummaryStatistics, DisplayName: testSummaryStatistics(org.apache.commons.math.stat.CertifiedDataTest)

17:26:40.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testSummaryStatistics
17:26:40.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testDescriptiveStatistics, DisplayName: testDescriptiveStatistics(org.apache.commons.math.stat.CertifiedDataTest)
17:26:40.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testDescriptiveStatistics
17:26:40.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
17:26:40.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest

17:26:40.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
17:26:40.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

17:26:40.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSerialization
17:26:40.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
17:26:40.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testStats
17:26:40.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
17:26:40.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testNaNContracts
17:26:40.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
17:26:40.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testN0andN1Conditions
17:26:40.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testDimension, DisplayName: testDimension(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
17:26:40.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testDimension
17:26:40.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
17:26:40.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterInjection
17:26:40.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterIllegalState, DisplayName: testSetterIllegalState(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)

17:26:40.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterIllegalState
17:26:40.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
17:26:40.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testEqualsAndHashCode
17:26:40.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Number of testcases executed : 8
17:26:40.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:40.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.data.LotteryTest

17:26:40.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:40.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.data.LotteryTest, MethodName: testCertifiedValues, DisplayName: testCertifiedValues(org.apache.commons.math.stat.data.LotteryTest)

17:26:40.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.data.LotteryTest, MethodName: testCertifiedValues
17:26:40.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
17:26:40.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest

17:26:40.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
17:26:40.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

17:26:40.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testMomentSmallSamples

17:26:40.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

17:26:40.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testSerialization
17:26:40.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)

17:26:40.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testIncrementation

17:26:40.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)
17:26:40.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testConsistency
17:26:40.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)
17:26:40.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEqualsAndHashCode
17:26:40.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)
17:26:40.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEvaluation

17:26:40.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
17:26:40.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.FirstOrderConverterTest

17:26:40.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
17:26:40.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)

17:26:40.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testSmallStep
17:26:40.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)
17:26:40.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDecreasingSteps
17:26:40.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)

17:26:40.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testBigStep
17:26:40.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDoubleDimension, DisplayName: testDoubleDimension(org.apache.commons.math.ode.FirstOrderConverterTest)

17:26:40.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDoubleDimension
17:26:40.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

17:26:40.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.MathExceptionTest

17:26:40.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
17:26:40.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructorPatternArgumentsCause, DisplayName: testConstructorPatternArgumentsCause(org.apache.commons.math.MathExceptionTest)

17:26:40.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructorPatternArgumentsCause
17:26:40.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.MathExceptionTest)

17:26:40.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testSerialization
17:26:40.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructorPatternArguments, DisplayName: testConstructorPatternArguments(org.apache.commons.math.MathExceptionTest)

17:26:40.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructorPatternArguments
17:26:40.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructorCause, DisplayName: testConstructorCause(org.apache.commons.math.MathExceptionTest)
17:26:40.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructorCause
17:26:40.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testPrintStackTrace, DisplayName: testPrintStackTrace(org.apache.commons.math.MathExceptionTest)
17:26:40.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testPrintStackTrace
17:26:40.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.MathExceptionTest)

17:26:40.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructor
17:26:40.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6

17:26:40.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest

17:26:40.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:40.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCorrelation, DisplayName: testMeanAndCorrelation(org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest)

17:26:40.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCorrelation
17:26:40.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

17:26:40.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.ThreeEighthesIntegratorTest

17:26:40.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
17:26:40.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.ThreeEighthesIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.ThreeEighthesIntegratorTest)

17:26:40.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ThreeEighthesIntegratorTest, MethodName: testDimensionCheck
17:26:40.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ThreeEighthesIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.ThreeEighthesIntegratorTest)

17:26:40.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ThreeEighthesIntegratorTest, MethodName: testSmallStep
17:26:40.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ThreeEighthesIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.ThreeEighthesIntegratorTest)
17:26:40.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ThreeEighthesIntegratorTest, MethodName: testDecreasingSteps
17:26:40.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ThreeEighthesIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.ThreeEighthesIntegratorTest)

17:26:40.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ThreeEighthesIntegratorTest, MethodName: testBigStep

17:26:40.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ThreeEighthesIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.ThreeEighthesIntegratorTest)

17:26:40.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ThreeEighthesIntegratorTest, MethodName: testKepler
17:26:40.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Number of testcases executed : 5
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.DefaultTransformerTest
17:26:40.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
17:26:40.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformDouble, DisplayName: testTransformDouble(org.apache.commons.math.util.DefaultTransformerTest)

17:26:40.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformDouble
17:26:40.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformBigDecimal, DisplayName: testTransformBigDecimal(org.apache.commons.math.util.DefaultTransformerTest)
17:26:40.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformBigDecimal
17:26:40.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformObject, DisplayName: testTransformObject(org.apache.commons.math.util.DefaultTransformerTest)

17:26:40.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformObject
17:26:40.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformString, DisplayName: testTransformString(org.apache.commons.math.util.DefaultTransformerTest)
17:26:40.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformString

17:26:40.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformInteger, DisplayName: testTransformInteger(org.apache.commons.math.util.DefaultTransformerTest)
17:26:40.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformInteger
17:26:40.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformNull, DisplayName: testTransformNull(org.apache.commons.math.util.DefaultTransformerTest)
* Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformNull

17:26:40.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
17:26:40.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.RiddersSolverTest
17:26:40.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
17:26:40.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.RiddersSolverTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.RiddersSolverTest)

17:26:40.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.RiddersSolverTest, MethodName: testParameters
17:26:40.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.RiddersSolverTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.RiddersSolverTest)

17:26:40.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.RiddersSolverTest, MethodName: testSinFunction
17:26:40.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.RiddersSolverTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.RiddersSolverTest)

17:26:40.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.RiddersSolverTest, MethodName: testExpm1Function
17:26:40.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.RiddersSolverTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.RiddersSolverTest)
17:26:40.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.RiddersSolverTest, MethodName: testQuinticFunction
17:26:40.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

17:26:40.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest

17:26:40.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13
17:26:40.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testGetSortedValues, DisplayName: testGetSortedValues(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest)

17:26:40.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testGetSortedValues
17:26:40.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest)
17:26:40.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testProductAndGeometricMean
17:26:40.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest)
17:26:40.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testSerialization
17:26:40.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest)
17:26:40.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testStats
17:26:40.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest)
17:26:40.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testToString
17:26:40.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest)
17:26:40.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testN0andN1Conditions
17:26:40.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testAddValue, DisplayName: testAddValue(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest)
17:26:40.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testAddValue
17:26:40.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testWindowing, DisplayName: testWindowing(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest)
17:26:40.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testWindowing
17:26:40.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testPercentiles, DisplayName: testPercentiles(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest)
17:26:40.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testPercentiles
17:26:40.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testWindowSize, DisplayName: testWindowSize(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest)
17:26:40.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testWindowSize
17:26:40.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testNewInstanceClassValid, DisplayName: testNewInstanceClassValid(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest)
17:26:40.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testNewInstanceClassValid
17:26:40.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testNewInstanceClassNull, DisplayName: testNewInstanceClassNull(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest)
17:26:40.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.452 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testNewInstanceClassNull
17:26:40.452 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.452 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testSkewAndKurtosis, DisplayName: testSkewAndKurtosis(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest)

17:26:40.452 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest, MethodName: testSkewAndKurtosis
17:26:40.452 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.452 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
17:26:40.452 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:40.452 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest

17:26:40.453 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:40.453 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testSimplistic, DisplayName: testSimplistic(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)

17:26:40.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testSimplistic
17:26:40.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testBasicStats, DisplayName: testBasicStats(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)

17:26:40.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testBasicStats
17:26:40.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testMismatch, DisplayName: testMismatch(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)
17:26:40.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testMismatch
17:26:40.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

17:26:40.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.RotationOrderTest

17:26:40.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:40.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.RotationOrderTest, MethodName: testName, DisplayName: testName(org.apache.commons.math.geometry.RotationOrderTest)

17:26:40.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.RotationOrderTest, MethodName: testName
17:26:40.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1

17:26:40.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.estimation.WeightedMeasurementTest

17:26:40.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:40.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.estimation.WeightedMeasurementTest, MethodName: testConstruction, DisplayName: testConstruction(org.apache.commons.math.estimation.WeightedMeasurementTest)

17:26:40.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.WeightedMeasurementTest, MethodName: testConstruction
17:26:40.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.WeightedMeasurementTest, MethodName: testIgnored, DisplayName: testIgnored(org.apache.commons.math.estimation.WeightedMeasurementTest)
17:26:40.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.WeightedMeasurementTest, MethodName: testIgnored

17:26:40.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.WeightedMeasurementTest, MethodName: testTheory, DisplayName: testTheory(org.apache.commons.math.estimation.WeightedMeasurementTest)
17:26:40.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.WeightedMeasurementTest, MethodName: testTheory

17:26:40.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
17:26:40.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
17:26:40.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
17:26:40.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

17:26:40.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testMomentSmallSamples
17:26:40.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
17:26:40.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testSerialization
17:26:40.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

17:26:40.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testIncrementation
17:26:40.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

17:26:40.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testConsistency
17:26:40.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
17:26:40.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEqualsAndHashCode
17:26:40.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
17:26:40.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEvaluation
17:26:40.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6

17:26:40.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest

17:26:40.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
17:26:40.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

17:26:40.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testMomentSmallSamples
17:26:40.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)
17:26:40.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testSerialization
17:26:40.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

17:26:40.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testIncrementation
17:26:40.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)
17:26:40.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testConsistency
17:26:40.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)

17:26:40.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEqualsAndHashCode
17:26:40.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)
17:26:40.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEvaluation
17:26:40.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6

17:26:40.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.SumSqTest

17:26:40.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:40.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

17:26:40.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSpecialValues
17:26:40.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
17:26:40.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testMomentSmallSamples

17:26:40.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
17:26:40.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSerialization
17:26:40.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

17:26:40.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testIncrementation
17:26:40.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
17:26:40.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testConsistency
17:26:40.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
17:26:40.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEqualsAndHashCode
17:26:40.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

17:26:40.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEvaluation
17:26:40.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7

17:26:40.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.complex.ComplexUtilsTest

17:26:40.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 69
17:26:40.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanNull, DisplayName: testTanNull(org.apache.commons.math.complex.ComplexUtilsTest)

17:26:40.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanNull
17:26:40.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanhInf, DisplayName: testTanhInf(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanhInf
17:26:40.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanhNaN, DisplayName: testTanhNaN(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanhNaN

17:26:40.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrt1zNull, DisplayName: testSqrt1zNull(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrt1zNull
17:26:40.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testlogNull, DisplayName: testlogNull(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testlogNull
17:26:40.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testExpNull, DisplayName: testExpNull(org.apache.commons.math.complex.ComplexUtilsTest)

17:26:40.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testExpNull
17:26:40.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAcosInf, DisplayName: testAcosInf(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAcosInf
17:26:40.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAcosNaN, DisplayName: testAcosNaN(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAcosNaN

17:26:40.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCos, DisplayName: testCos(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCos
17:26:40.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testExp, DisplayName: testExp(org.apache.commons.math.complex.ComplexUtilsTest)

17:26:40.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testExp

17:26:40.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testLog, DisplayName: testLog(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testLog
17:26:40.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPow
17:26:40.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSin, DisplayName: testSin(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSin
17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTan, DisplayName: testTan(org.apache.commons.math.complex.ComplexUtilsTest)

17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTan
17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAcos, DisplayName: testAcos(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAcos

17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAsin, DisplayName: testAsin(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAsin
17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAtan, DisplayName: testAtan(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAtan
17:26:40.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCosh, DisplayName: testCosh(org.apache.commons.math.complex.ComplexUtilsTest)

17:26:40.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCosh
17:26:40.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSinh, DisplayName: testSinh(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSinh

17:26:40.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanh, DisplayName: testTanh(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanh

17:26:40.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAsinInf, DisplayName: testAsinInf(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAsinInf
17:26:40.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAsinNaN, DisplayName: testAsinNaN(org.apache.commons.math.complex.ComplexUtilsTest)

17:26:40.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAsinNaN
17:26:40.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAtanInf, DisplayName: testAtanInf(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAtanInf
17:26:40.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAtanNaN, DisplayName: testAtanNaN(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAtanNaN

17:26:40.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAcosNull, DisplayName: testAcosNull(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAcosNull

17:26:40.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanhCritical, DisplayName: testTanhCritical(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanhCritical
17:26:40.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPowZero, DisplayName: testPowZero(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPowZero
17:26:40.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtImaginaryZero, DisplayName: testSqrtImaginaryZero(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtImaginaryZero

17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexInf, DisplayName: testPolar2ComplexInf(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexInf
17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexNaN, DisplayName: testPolar2ComplexNaN(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexNaN
17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtRealPositive, DisplayName: testSqrtRealPositive(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtRealPositive
17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrt1zNaN, DisplayName: testSqrt1zNaN(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrt1zNaN

17:26:40.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtRealNegative, DisplayName: testSqrtRealNegative(org.apache.commons.math.complex.ComplexUtilsTest)

17:26:40.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtRealNegative

17:26:40.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtPolar, DisplayName: testSqrtPolar(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtPolar
17:26:40.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtNull, DisplayName: testSqrtNull(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtNull
17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testLogZero, DisplayName: testLogZero(org.apache.commons.math.complex.ComplexUtilsTest)

17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testLogZero
17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAsinNull, DisplayName: testAsinNull(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAsinNull
17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanhNull, DisplayName: testTanhNull(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanhNull
17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanCritical, DisplayName: testTanCritical(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanCritical
17:26:40.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCoshNull, DisplayName: testCoshNull(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCoshNull

17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPowNaNBase, DisplayName: testPowNaNBase(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPowNaNBase
17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexIllegalModulus, DisplayName: testPolar2ComplexIllegalModulus(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexIllegalModulus
17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCosNull, DisplayName: testCosNull(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCosNull
17:26:40.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCoshInf, DisplayName: testCoshInf(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCoshInf
17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCoshNaN, DisplayName: testCoshNaN(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCoshNaN
17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAtanNull, DisplayName: testAtanNull(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testAtanNull
17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPowNaNExponent, DisplayName: testPowNaNExponent(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPowNaNExponent
17:26:40.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtRealZero, DisplayName: testSqrtRealZero(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtRealZero
17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtImaginaryNegative, DisplayName: testSqrtImaginaryNegative(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtImaginaryNegative
17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testsinhNull, DisplayName: testsinhNull(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testsinhNull
17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCosInf, DisplayName: testCosInf(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCosInf
17:26:40.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCosNaN, DisplayName: testCosNaN(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testCosNaN

17:26:40.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testExpInf, DisplayName: testExpInf(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testExpInf
17:26:40.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testExpNaN, DisplayName: testExpNaN(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testExpNaN

17:26:40.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testLogInf, DisplayName: testLogInf(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testLogInf
17:26:40.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testLogNaN, DisplayName: testLogNaN(org.apache.commons.math.complex.ComplexUtilsTest)

17:26:40.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testLogNaN
17:26:40.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPowInf, DisplayName: testPowInf(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPowInf
17:26:40.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSinNull, DisplayName: testSinNull(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSinNull
17:26:40.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSinhInf, DisplayName: testSinhInf(org.apache.commons.math.complex.ComplexUtilsTest)

17:26:40.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSinhInf
17:26:40.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSinhNaN, DisplayName: testSinhNaN(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSinhNaN
17:26:40.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSinInf, DisplayName: testSinInf(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSinInf
17:26:40.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSinNaN, DisplayName: testSinNaN(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSinNaN

17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrt1z, DisplayName: testSqrt1z(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrt1z
17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanInf, DisplayName: testTanInf(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanInf
17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanNaN, DisplayName: testTanNaN(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testTanNaN
17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2Complex, DisplayName: testPolar2Complex(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2Complex
17:26:40.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testpowNull, DisplayName: testpowNull(org.apache.commons.math.complex.ComplexUtilsTest)

17:26:40.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testpowNull
17:26:40.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtInf, DisplayName: testSqrtInf(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtInf
17:26:40.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtNaN, DisplayName: testSqrtNaN(org.apache.commons.math.complex.ComplexUtilsTest)
17:26:40.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testSqrtNaN

17:26:40.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 69

17:26:40.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

17:26:40.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest

17:26:40.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 15
17:26:40.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testPercentileSetter, DisplayName: testPercentileSetter(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

17:26:40.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testPercentileSetter
17:26:40.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
17:26:40.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testSetterInjection
17:26:40.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testGetSortedValues, DisplayName: testGetSortedValues(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
17:26:40.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testGetSortedValues
17:26:40.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
17:26:40.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testProductAndGeometricMean
17:26:40.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
17:26:40.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testSerialization
17:26:40.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
17:26:40.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testStats
17:26:40.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
17:26:40.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testToString
17:26:40.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
17:26:40.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testN0andN1Conditions

17:26:40.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testAddValue, DisplayName: testAddValue(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
17:26:40.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testAddValue
17:26:40.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testWindowing, DisplayName: testWindowing(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
17:26:40.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testWindowing
17:26:40.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testPercentiles, DisplayName: testPercentiles(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
17:26:40.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testPercentiles
17:26:40.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testWindowSize, DisplayName: testWindowSize(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
17:26:40.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testWindowSize
17:26:40.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testNewInstanceClassValid, DisplayName: testNewInstanceClassValid(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
17:26:40.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testNewInstanceClassValid
17:26:40.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testNewInstanceClassNull, DisplayName: testNewInstanceClassNull(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
17:26:40.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testNewInstanceClassNull
17:26:40.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testSkewAndKurtosis, DisplayName: testSkewAndKurtosis(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)

17:26:40.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testSkewAndKurtosis
17:26:40.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 15
17:26:40.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:40.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.PercentileTest

17:26:40.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
17:26:40.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testPercentile, DisplayName: testPercentile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

17:26:40.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testPercentile
17:26:40.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNISTExample, DisplayName: testNISTExample(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
17:26:40.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNISTExample
17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSingleton, DisplayName: testSingleton(org.apache.commons.math.stat.descriptive.rank.PercentileTest)

17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSingleton
17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSetQuantile, DisplayName: testSetQuantile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSetQuantile
17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: test5, DisplayName: test5(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: test5
17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testHighPercentile, DisplayName: testHighPercentile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testHighPercentile
17:26:40.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSpecialValues

17:26:40.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNullEmpty, DisplayName: testNullEmpty(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
17:26:40.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNullEmpty
17:26:40.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
17:26:40.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testEvaluation
17:26:40.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9

17:26:40.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest

17:26:40.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 15
17:26:40.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testNoDependency, DisplayName: testNoDependency(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)

17:26:40.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testNoDependency
17:26:40.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testRedundantEquations, DisplayName: testRedundantEquations(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)
17:26:40.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testRedundantEquations
17:26:40.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testTrivial, DisplayName: testTrivial(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)
17:26:40.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testTrivial
17:26:40.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testQRColumnsPermutation, DisplayName: testQRColumnsPermutation(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)
17:26:40.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testQRColumnsPermutation
17:26:40.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testTwoSets, DisplayName: testTwoSets(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)
17:26:40.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testTwoSets
17:26:40.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testMoreEstimatedParametersSimple, DisplayName: testMoreEstimatedParametersSimple(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)
17:26:40.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testMoreEstimatedParametersSimple

17:26:40.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testMoreEstimatedParametersUnsorted, DisplayName: testMoreEstimatedParametersUnsorted(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)
17:26:40.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testMoreEstimatedParametersUnsorted
17:26:40.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testIllConditioned, DisplayName: testIllConditioned(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)
17:26:40.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testIllConditioned
17:26:40.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testMath199, DisplayName: testMath199(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)

17:26:40.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testMath199
17:26:40.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testNonInversible, DisplayName: testNonInversible(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)
17:26:40.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testNonInversible
17:26:40.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testInconsistentEquations, DisplayName: testInconsistentEquations(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)
17:26:40.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testInconsistentEquations
17:26:40.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testCircleFitting, DisplayName: testCircleFitting(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)
17:26:40.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.614 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testCircleFitting
17:26:40.615 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.615 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testControlParameters, DisplayName: testControlParameters(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)

17:26:40.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testControlParameters
17:26:40.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testOneSet, DisplayName: testOneSet(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)
17:26:40.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testOneSet
17:26:40.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testCircleFittingBadInit, DisplayName: testCircleFittingBadInit(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest)
17:26:40.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, MethodName: testCircleFittingBadInit
17:26:40.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Number of testcases executed : 15
17:26:40.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:40.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.RombergIntegratorTest

17:26:40.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:40.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.RombergIntegratorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.RombergIntegratorTest)

17:26:40.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.RombergIntegratorTest, MethodName: testParameters
17:26:40.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.RombergIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.RombergIntegratorTest)

17:26:40.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.RombergIntegratorTest, MethodName: testSinFunction
17:26:40.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.RombergIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.RombergIntegratorTest)
17:26:40.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.RombergIntegratorTest, MethodName: testQuinticFunction
17:26:40.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
17:26:40.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:40.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest

17:26:40.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
17:26:40.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testSolveNoRoot, DisplayName: testSolveNoRoot(org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest)

17:26:40.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testSolveNoRoot
17:26:40.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testSolveSin, DisplayName: testSolveSin(org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest)
17:26:40.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testSolveSin

17:26:40.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracySin, DisplayName: testSolveAccuracySin(org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest)
17:26:40.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracySin
17:26:40.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testSolveBadParameters, DisplayName: testSolveBadParameters(org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest)
17:26:40.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testSolveBadParameters
17:26:40.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testSolveNull, DisplayName: testSolveNull(org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest)
17:26:40.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testSolveNull
17:26:40.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testBracketSin, DisplayName: testBracketSin(org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest)

17:26:40.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testBracketSin
17:26:40.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testBracketCornerSolution, DisplayName: testBracketCornerSolution(org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest)
17:26:40.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testBracketCornerSolution
17:26:40.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracyNull, DisplayName: testSolveAccuracyNull(org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest)
17:26:40.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracyNull
17:26:40.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testBadParameters, DisplayName: testBadParameters(org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest)
17:26:40.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest, MethodName: testBadParameters
17:26:40.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
17:26:40.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:40.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.RandomAdaptorTest

17:26:40.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17

17:26:40.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testAdaptor, DisplayName: testAdaptor(org.apache.commons.math.random.RandomAdaptorTest)

17:26:40.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testAdaptor
17:26:40.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.RandomAdaptorTest)
17:26:40.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSample
17:26:40.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.RandomAdaptorTest)

17:26:40.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextIntExtremeValues
17:26:40.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.RandomAdaptorTest)
17:26:40.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextUniformExclusiveEndpoints
17:26:40.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.RandomAdaptorTest)
17:26:40.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextGaussian
17:26:40.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.RandomAdaptorTest)

17:26:40.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSecureLong
17:26:40.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.RandomAdaptorTest)

17:26:40.879 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSecureHex

17:26:40.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.RandomAdaptorTest)

17:26:40.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextSecureInt
17:26:40.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.RandomAdaptorTest)

17:26:40.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextLongExtremeValues
17:26:40.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.RandomAdaptorTest)
17:26:40.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.894 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextExponential
17:26:40.894 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.894 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.RandomAdaptorTest)

17:26:40.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextPoisson
17:26:40.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.RandomAdaptorTest)

17:26:40.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextUniform
17:26:40.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.RandomAdaptorTest)
17:26:40.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextPermutation
17:26:40.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.RandomAdaptorTest)

17:26:40.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testConfig
17:26:40.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.RandomAdaptorTest)

17:26:40.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextHex

17:26:40.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.RandomAdaptorTest)

17:26:40.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextInt
17:26:40.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.RandomAdaptorTest)
17:26:40.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testNextLong
17:26:40.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.946 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest

17:26:40.947 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:40.947 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testSimplistic, DisplayName: testSimplistic(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)

17:26:40.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testSimplistic
17:26:40.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testBasicStats, DisplayName: testBasicStats(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)
17:26:40.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testBasicStats
17:26:40.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testMismatch, DisplayName: testMismatch(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)
17:26:40.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testMismatch
17:26:40.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
17:26:40.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:40.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.MultiDirectionalTest

17:26:40.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:40.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.optimization.MultiDirectionalTest, MethodName: testCostExceptions, DisplayName: testCostExceptions(org.apache.commons.math.optimization.MultiDirectionalTest)

17:26:40.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiDirectionalTest, MethodName: testCostExceptions
17:26:40.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.MultiDirectionalTest, MethodName: testRosenbrock, DisplayName: testRosenbrock(org.apache.commons.math.optimization.MultiDirectionalTest)
17:26:40.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiDirectionalTest, MethodName: testRosenbrock
17:26:40.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.MultiDirectionalTest, MethodName: testPowell, DisplayName: testPowell(org.apache.commons.math.optimization.MultiDirectionalTest)

17:26:40.963 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiDirectionalTest, MethodName: testPowell
17:26:40.963 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Number of testcases executed : 3
17:26:40.964 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:40.964 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.inference.TTestFactoryTest

17:26:40.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
17:26:40.969 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.inference.TTestFactoryTest, MethodName: testOneSampleTTest, DisplayName: testOneSampleTTest(org.apache.commons.math.stat.inference.TTestFactoryTest)

17:26:40.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestFactoryTest, MethodName: testOneSampleTTest
17:26:40.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestFactoryTest, MethodName: testSmallSamples, DisplayName: testSmallSamples(org.apache.commons.math.stat.inference.TTestFactoryTest)
17:26:40.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestFactoryTest, MethodName: testSmallSamples
17:26:40.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestFactoryTest, MethodName: testTwoSampleTHeterscedastic, DisplayName: testTwoSampleTHeterscedastic(org.apache.commons.math.stat.inference.TTestFactoryTest)
17:26:40.973 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestFactoryTest, MethodName: testTwoSampleTHeterscedastic
17:26:40.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestFactoryTest, MethodName: testOneSampleT, DisplayName: testOneSampleT(org.apache.commons.math.stat.inference.TTestFactoryTest)

17:26:40.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestFactoryTest, MethodName: testOneSampleT
17:26:40.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestFactoryTest, MethodName: testPaired, DisplayName: testPaired(org.apache.commons.math.stat.inference.TTestFactoryTest)
17:26:40.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestFactoryTest, MethodName: testPaired
17:26:40.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestFactoryTest, MethodName: testTwoSampleTHomoscedastic, DisplayName: testTwoSampleTHomoscedastic(org.apache.commons.math.stat.inference.TTestFactoryTest)
17:26:40.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestFactoryTest, MethodName: testTwoSampleTHomoscedastic
17:26:40.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
17:26:40.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:40.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.special.ErfTest

17:26:40.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
17:26:40.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf1960, DisplayName: testErf1960(org.apache.commons.math.special.ErfTest)

17:26:40.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf1960
17:26:40.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2576, DisplayName: testErf2576(org.apache.commons.math.special.ErfTest)

17:26:40.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2576
17:26:40.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2807, DisplayName: testErf2807(org.apache.commons.math.special.ErfTest)
17:26:40.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2807
* Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf3291, DisplayName: testErf3291(org.apache.commons.math.special.ErfTest)
17:26:40.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf3291
17:26:40.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf0, DisplayName: testErf0(org.apache.commons.math.special.ErfTest)
17:26:40.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf0
17:26:40.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
17:26:40.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:40.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.fraction.FractionFormatTest

17:26:40.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 16
17:26:40.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testNumeratorFormat, DisplayName: testNumeratorFormat(org.apache.commons.math.fraction.FractionFormatTest)

17:26:40.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testNumeratorFormat
17:26:40.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproperNegative, DisplayName: testFormatImproperNegative(org.apache.commons.math.fraction.FractionFormatTest)
17:26:40.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproperNegative
17:26:40.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproper, DisplayName: testFormatImproper(org.apache.commons.math.fraction.FractionFormatTest)
17:26:40.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproper
17:26:40.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProper, DisplayName: testParseProper(org.apache.commons.math.fraction.FractionFormatTest)
17:26:40.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProper
17:26:40.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperNegative, DisplayName: testParseProperNegative(org.apache.commons.math.fraction.FractionFormatTest)
17:26:40.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperNegative
17:26:40.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParse, DisplayName: testParse(org.apache.commons.math.fraction.FractionFormatTest)
17:26:40.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParse
17:26:40.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testWholeFormat, DisplayName: testWholeFormat(org.apache.commons.math.fraction.FractionFormatTest)

17:26:40.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testWholeFormat
17:26:40.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatZero, DisplayName: testFormatZero(org.apache.commons.math.fraction.FractionFormatTest)
17:26:40.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatZero
17:26:40.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatNegative, DisplayName: testFormatNegative(org.apache.commons.math.fraction.FractionFormatTest)
17:26:40.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatNegative
17:26:40.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalidDenominator, DisplayName: testParseInvalidDenominator(org.apache.commons.math.fraction.FractionFormatTest)
17:26:40.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalidDenominator
17:26:40.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testDenominatorFormat, DisplayName: testDenominatorFormat(org.apache.commons.math.fraction.FractionFormatTest)
17:26:40.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testDenominatorFormat
17:26:40.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperInvalidMinus, DisplayName: testParseProperInvalidMinus(org.apache.commons.math.fraction.FractionFormatTest)
17:26:40.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperInvalidMinus
17:26:40.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInteger, DisplayName: testParseInteger(org.apache.commons.math.fraction.FractionFormatTest)
17:26:40.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInteger
17:26:40.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalid, DisplayName: testParseInvalid(org.apache.commons.math.fraction.FractionFormatTest)
17:26:40.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalid
17:26:40.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormat, DisplayName: testFormat(org.apache.commons.math.fraction.FractionFormatTest)

17:26:40.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormat
17:26:40.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseNegative, DisplayName: testParseNegative(org.apache.commons.math.fraction.FractionFormatTest)
17:26:40.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseNegative
17:26:40.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 16
17:26:40.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest
17:26:40.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
17:26:40.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)

17:26:40.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testProductAndGeometricMean
17:26:40.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)
17:26:40.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testStats
17:26:40.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)
17:26:40.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testN0andN1Conditions
17:26:40.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testSkewAndKurtosis, DisplayName: testSkewAndKurtosis(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)
17:26:40.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testSkewAndKurtosis
17:26:40.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:40.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
17:26:40.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.special.BetaTest

17:26:41.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17
17:26:41.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNanPositive, DisplayName: testRegularizedBetaPositiveNanPositive(org.apache.commons.math.special.BetaTest)

17:26:41.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNanPositive
17:26:41.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositivePositive, DisplayName: testRegularizedBetaPositivePositivePositive(org.apache.commons.math.special.BetaTest)
17:26:41.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositivePositive
17:26:41.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNegative, DisplayName: testRegularizedBetaPositivePositiveNegative(org.apache.commons.math.special.BetaTest)
17:26:41.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNegative

17:26:41.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveZeroPositive, DisplayName: testRegularizedBetaPositiveZeroPositive(org.apache.commons.math.special.BetaTest)
17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveZeroPositive

17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositivePositive, DisplayName: testLogBetaPositivePositive(org.apache.commons.math.special.BetaTest)
17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositivePositive
17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNegative, DisplayName: testLogBetaPositiveNegative(org.apache.commons.math.special.BetaTest)
17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNegative
17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNan, DisplayName: testLogBetaPositiveNan(org.apache.commons.math.special.BetaTest)
17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNan

17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNegativePositivePositive, DisplayName: testRegularizedBetaNegativePositivePositive(org.apache.commons.math.special.BetaTest)
17:26:41.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNegativePositivePositive
17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNan, DisplayName: testRegularizedBetaPositivePositiveNan(org.apache.commons.math.special.BetaTest)

17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNan
17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaZeroPositive, DisplayName: testLogBetaZeroPositive(org.apache.commons.math.special.BetaTest)
17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaZeroPositive
17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveZero, DisplayName: testRegularizedBetaPositivePositiveZero(org.apache.commons.math.special.BetaTest)
17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveZero
17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNegativePositive, DisplayName: testRegularizedBetaPositiveNegativePositive(org.apache.commons.math.special.BetaTest)
17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNegativePositive
17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNanPositive, DisplayName: testLogBetaNanPositive(org.apache.commons.math.special.BetaTest)

17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNanPositive
17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNegativePositive, DisplayName: testLogBetaNegativePositive(org.apache.commons.math.special.BetaTest)
17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNegativePositive
17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveZero, DisplayName: testLogBetaPositiveZero(org.apache.commons.math.special.BetaTest)
17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveZero
17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaZeroPositivePositive, DisplayName: testRegularizedBetaZeroPositivePositive(org.apache.commons.math.special.BetaTest)
17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaZeroPositivePositive
17:26:41.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNanPositivePositive, DisplayName: testRegularizedBetaNanPositivePositive(org.apache.commons.math.special.BetaTest)
17:26:41.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNanPositivePositive
17:26:41.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
17:26:41.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.DormandPrince54IntegratorTest

17:26:41.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:41.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.DormandPrince54IntegratorTest, MethodName: testSmallLastStep, DisplayName: testSmallLastStep(org.apache.commons.math.ode.DormandPrince54IntegratorTest)

17:26:41.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince54IntegratorTest, MethodName: testSmallLastStep
17:26:41.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince54IntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.DormandPrince54IntegratorTest)
17:26:41.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince54IntegratorTest, MethodName: testDimensionCheck
17:26:41.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince54IntegratorTest, MethodName: testSwitchingFunctions, DisplayName: testSwitchingFunctions(org.apache.commons.math.ode.DormandPrince54IntegratorTest)
17:26:41.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince54IntegratorTest, MethodName: testSwitchingFunctions
17:26:41.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince54IntegratorTest, MethodName: testVariableSteps, DisplayName: testVariableSteps(org.apache.commons.math.ode.DormandPrince54IntegratorTest)
17:26:41.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince54IntegratorTest, MethodName: testVariableSteps
17:26:41.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince54IntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.DormandPrince54IntegratorTest)
17:26:41.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince54IntegratorTest, MethodName: testMinStep
17:26:41.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince54IntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.DormandPrince54IntegratorTest)
17:26:41.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince54IntegratorTest, MethodName: testKepler
17:26:41.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince54IntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.DormandPrince54IntegratorTest)

17:26:41.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince54IntegratorTest, MethodName: testIncreasingTolerance
17:26:41.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0
17:26:41.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.analysis.TrapezoidIntegratorTest

17:26:41.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:41.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.TrapezoidIntegratorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.TrapezoidIntegratorTest)

17:26:41.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.TrapezoidIntegratorTest, MethodName: testParameters
17:26:41.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.TrapezoidIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.TrapezoidIntegratorTest)
17:26:41.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.TrapezoidIntegratorTest, MethodName: testSinFunction
17:26:41.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.TrapezoidIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.TrapezoidIntegratorTest)

17:26:41.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.TrapezoidIntegratorTest, MethodName: testQuinticFunction
17:26:41.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Number of testcases executed : 3
17:26:41.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.complex.ComplexTest

17:26:41.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 82
17:26:41.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhInf, DisplayName: testTanhInf(org.apache.commons.math.complex.ComplexTest)

17:26:41.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhInf
17:26:41.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhNaN, DisplayName: testTanhNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhNaN

17:26:41.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateNaN, DisplayName: testConjugateNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateNaN

17:26:41.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosInf, DisplayName: testAcosInf(org.apache.commons.math.complex.ComplexTest)
17:26:41.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosInf
17:26:41.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosNaN, DisplayName: testAcosNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosNaN

17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsClass, DisplayName: testEqualsClass(org.apache.commons.math.complex.ComplexTest)
17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsClass
17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddInfinite, DisplayName: testAddInfinite(org.apache.commons.math.complex.ComplexTest)
17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddInfinite

17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbs, DisplayName: testAbs(org.apache.commons.math.complex.ComplexTest)
17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbs

17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.complex.ComplexTest)
17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAdd

17:26:41.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCos, DisplayName: testCos(org.apache.commons.math.complex.ComplexTest)
17:26:41.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCos

17:26:41.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExp, DisplayName: testExp(org.apache.commons.math.complex.ComplexTest)
17:26:41.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExp
17:26:41.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLog, DisplayName: testLog(org.apache.commons.math.complex.ComplexTest)
17:26:41.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLog

17:26:41.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.complex.ComplexTest)
17:26:41.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPow

17:26:41.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSin, DisplayName: testSin(org.apache.commons.math.complex.ComplexTest)
17:26:41.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSin

17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTan, DisplayName: testTan(org.apache.commons.math.complex.ComplexTest)
17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTan

17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.complex.ComplexTest)
17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtract

17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaNInf, DisplayName: testDivideNaNInf(org.apache.commons.math.complex.ComplexTest)
17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaNInf

17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcos, DisplayName: testAcos(org.apache.commons.math.complex.ComplexTest)
17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcos
17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsin, DisplayName: testAsin(org.apache.commons.math.complex.ComplexTest)
17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsin

17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtan, DisplayName: testAtan(org.apache.commons.math.complex.ComplexTest)
17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtan
17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosh, DisplayName: testCosh(org.apache.commons.math.complex.ComplexTest)
17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosh

17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinh, DisplayName: testSinh(org.apache.commons.math.complex.ComplexTest)
17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinh

17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanh, DisplayName: testTanh(org.apache.commons.math.complex.ComplexTest)
17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanh

17:26:41.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinInf, DisplayName: testAsinInf(org.apache.commons.math.complex.ComplexTest)
17:26:41.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinInf
17:26:41.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinNaN, DisplayName: testAsinNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinNaN

17:26:41.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanInf, DisplayName: testAtanInf(org.apache.commons.math.complex.ComplexTest)
17:26:41.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanInf
17:26:41.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanNaN, DisplayName: testAtanNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanNaN

17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaN, DisplayName: testDivideNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaN

17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsRealDifference, DisplayName: testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)
17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsRealDifference

17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegateNaN, DisplayName: testNegateNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegateNaN

17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhCritical, DisplayName: testTanhCritical(org.apache.commons.math.complex.ComplexTest)
17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhCritical

17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowZero, DisplayName: testPowZero(org.apache.commons.math.complex.ComplexTest)
17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowZero
17:26:41.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryZero, DisplayName: testSqrtImaginaryZero(org.apache.commons.math.complex.ComplexTest)
17:26:41.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryZero

17:26:41.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealPositive, DisplayName: testSqrtRealPositive(org.apache.commons.math.complex.ComplexTest)
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealPositive
* Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNull, DisplayName: testEqualsNull(org.apache.commons.math.complex.ComplexTest)
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNull
* Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsSame, DisplayName: testEqualsSame(org.apache.commons.math.complex.ComplexTest)
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsSame

17:26:41.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsTrue, DisplayName: testEqualsTrue(org.apache.commons.math.complex.ComplexTest)
17:26:41.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsTrue

17:26:41.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1zNaN, DisplayName: testSqrt1zNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1zNaN

17:26:41.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealNegative, DisplayName: testSqrtRealNegative(org.apache.commons.math.complex.ComplexTest)

17:26:41.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealNegative
17:26:41.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtPolar, DisplayName: testSqrtPolar(org.apache.commons.math.complex.ComplexTest)
17:26:41.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtPolar
17:26:41.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaN, DisplayName: testMultiplyNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaN

17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogZero, DisplayName: testLogZero(org.apache.commons.math.complex.ComplexTest)
17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogZero

17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugate, DisplayName: testConjugate(org.apache.commons.math.complex.ComplexTest)
17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugate

17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaNInf, DisplayName: testMultiplyNaNInf(org.apache.commons.math.complex.ComplexTest)
17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaNInf

17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsImaginaryDifference, DisplayName: testEqualsImaginaryDifference(org.apache.commons.math.complex.ComplexTest)
17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsImaginaryDifference

17:26:41.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanCritical, DisplayName: testTanCritical(org.apache.commons.math.complex.ComplexTest)
17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanCritical

17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNBase, DisplayName: testPowNaNBase(org.apache.commons.math.complex.ComplexTest)
17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNBase

17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructorNaN, DisplayName: testConstructorNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructorNaN

17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshInf, DisplayName: testCoshInf(org.apache.commons.math.complex.ComplexTest)
17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshInf
17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshNaN, DisplayName: testCoshNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshNaN

17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNExponent, DisplayName: testPowNaNExponent(org.apache.commons.math.complex.ComplexTest)
17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNExponent

17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testHashCode, DisplayName: testHashCode(org.apache.commons.math.complex.ComplexTest)
17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testHashCode
17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealZero, DisplayName: testSqrtRealZero(org.apache.commons.math.complex.ComplexTest)
17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealZero

17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryNegative, DisplayName: testSqrtImaginaryNegative(org.apache.commons.math.complex.ComplexTest)
17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryNegative

17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsNaN, DisplayName: testAbsNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsNaN

17:26:41.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddNaN, DisplayName: testAddNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddNaN

17:26:41.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosInf, DisplayName: testCosInf(org.apache.commons.math.complex.ComplexTest)
17:26:41.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosInf
17:26:41.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosNaN, DisplayName: testCosNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosNaN

17:26:41.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.complex.ComplexTest)
17:26:41.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivide

17:26:41.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpInf, DisplayName: testExpInf(org.apache.commons.math.complex.ComplexTest)
17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpInf
17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpNaN, DisplayName: testExpNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpNaN

17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.complex.ComplexTest)
17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiply

17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNaN, DisplayName: testEqualsNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNaN

17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogInf, DisplayName: testLogInf(org.apache.commons.math.complex.ComplexTest)
17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogInf
17:26:41.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogNaN, DisplayName: testLogNaN(org.apache.commons.math.complex.ComplexTest)

17:26:41.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogNaN
17:26:41.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideInfinite, DisplayName: testDivideInfinite(org.apache.commons.math.complex.ComplexTest)
17:26:41.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideInfinite
17:26:41.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegate, DisplayName: testNegate(org.apache.commons.math.complex.ComplexTest)
17:26:41.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegate

17:26:41.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowInf, DisplayName: testPowInf(org.apache.commons.math.complex.ComplexTest)
17:26:41.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowInf
17:26:41.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateInfiinite, DisplayName: testConjugateInfiinite(org.apache.commons.math.complex.ComplexTest)

17:26:41.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateInfiinite
17:26:41.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhInf, DisplayName: testSinhInf(org.apache.commons.math.complex.ComplexTest)
17:26:41.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhInf
17:26:41.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhNaN, DisplayName: testSinhNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhNaN

17:26:41.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinInf, DisplayName: testSinInf(org.apache.commons.math.complex.ComplexTest)
17:26:41.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinInf
17:26:41.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinNaN, DisplayName: testSinNaN(org.apache.commons.math.complex.ComplexTest)

17:26:41.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinNaN
17:26:41.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1z, DisplayName: testSqrt1z(org.apache.commons.math.complex.ComplexTest)
17:26:41.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1z
17:26:41.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanInf, DisplayName: testTanInf(org.apache.commons.math.complex.ComplexTest)
17:26:41.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanInf
17:26:41.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanNaN, DisplayName: testTanNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanNaN

17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testpowNull, DisplayName: testpowNull(org.apache.commons.math.complex.ComplexTest)
17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testpowNull
17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtractNaN, DisplayName: testSubtractNaN(org.apache.commons.math.complex.ComplexTest)
17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtractNaN

17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsInfinite, DisplayName: testAbsInfinite(org.apache.commons.math.complex.ComplexTest)
17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsInfinite

17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtInf, DisplayName: testSqrtInf(org.apache.commons.math.complex.ComplexTest)
17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtInf
17:26:41.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtNaN, DisplayName: testSqrtNaN(org.apache.commons.math.complex.ComplexTest)

17:26:41.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtNaN
17:26:41.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.complex.ComplexTest)
17:26:41.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructor

17:26:41.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 82
17:26:41.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.ValueServerTest

17:26:41.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
17:26:41.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testProperties, DisplayName: testProperties(org.apache.commons.math.random.ValueServerTest)

17:26:41.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testProperties
17:26:41.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testModes, DisplayName: testModes(org.apache.commons.math.random.ValueServerTest)
17:26:41.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testModes
17:26:41.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testFill, DisplayName: testFill(org.apache.commons.math.random.ValueServerTest)

17:26:41.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testFill
17:26:41.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyDigestFile, DisplayName: testEmptyDigestFile(org.apache.commons.math.random.ValueServerTest)
17:26:41.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyDigestFile
17:26:41.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyReplayFile, DisplayName: testEmptyReplayFile(org.apache.commons.math.random.ValueServerTest)

17:26:41.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyReplayFile
17:26:41.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigestFail, DisplayName: testNextDigestFail(org.apache.commons.math.random.ValueServerTest)

17:26:41.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigestFail
17:26:41.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testReplay, DisplayName: testReplay(org.apache.commons.math.random.ValueServerTest)
17:26:41.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testReplay
17:26:41.125 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.125 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigest, DisplayName: testNextDigest(org.apache.commons.math.random.ValueServerTest)

17:26:41.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigest

17:26:41.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
17:26:41.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest
17:26:41.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
17:26:41.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

17:26:41.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testMomentSmallSamples
17:26:41.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

17:26:41.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testSerialization
17:26:41.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

17:26:41.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testIncrementation
17:26:41.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
17:26:41.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testConsistency
17:26:41.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
17:26:41.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEqualsAndHashCode
17:26:41.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)

17:26:41.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEvaluation
17:26:41.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
17:26:41.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.HighamHall54IntegratorTest

17:26:41.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

17:26:41.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testSwitchingFunctions, DisplayName: testSwitchingFunctions(org.apache.commons.math.ode.HighamHall54IntegratorTest)

17:26:41.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testSwitchingFunctions
17:26:41.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testWrongDerivative, DisplayName: testWrongDerivative(org.apache.commons.math.ode.HighamHall54IntegratorTest)
17:26:41.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testWrongDerivative
17:26:41.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.HighamHall54IntegratorTest)

17:26:41.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testMinStep
17:26:41.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testSwitchingFunctionsNoConvergence, DisplayName: testSwitchingFunctionsNoConvergence(org.apache.commons.math.ode.HighamHall54IntegratorTest)

17:26:41.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testSwitchingFunctionsNoConvergence
17:26:41.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testSwitchingFunctionsError, DisplayName: testSwitchingFunctionsError(org.apache.commons.math.ode.HighamHall54IntegratorTest)
17:26:41.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testSwitchingFunctionsError
17:26:41.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.HighamHall54IntegratorTest)
17:26:41.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testKepler
17:26:41.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.HighamHall54IntegratorTest)

17:26:41.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testIncreasingTolerance
17:26:41.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testSanityChecks, DisplayName: testSanityChecks(org.apache.commons.math.ode.HighamHall54IntegratorTest)

17:26:41.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.HighamHall54IntegratorTest, MethodName: testSanityChecks
17:26:41.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
17:26:41.268 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.util.TransformerMapTest

17:26:41.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:41.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClear, DisplayName: testClear(org.apache.commons.math.util.TransformerMapTest)

17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClear
17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsTransformer, DisplayName: testContainsTransformer(org.apache.commons.math.util.TransformerMapTest)

17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsTransformer
17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testTransformers, DisplayName: testTransformers(org.apache.commons.math.util.TransformerMapTest)
17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testTransformers
17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testPutTransformer, DisplayName: testPutTransformer(org.apache.commons.math.util.TransformerMapTest)
17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testPutTransformer
17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsClass, DisplayName: testContainsClass(org.apache.commons.math.util.TransformerMapTest)
17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsClass

17:26:41.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClasses, DisplayName: testClasses(org.apache.commons.math.util.TransformerMapTest)
17:26:41.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClasses
17:26:41.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testRemoveTransformer, DisplayName: testRemoveTransformer(org.apache.commons.math.util.TransformerMapTest)
17:26:41.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testRemoveTransformer
17:26:41.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
17:26:41.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.MinTest

17:26:41.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
17:26:41.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testNaNs, DisplayName: testNaNs(org.apache.commons.math.stat.descriptive.rank.MinTest)

17:26:41.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testNaNs
17:26:41.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.rank.MinTest)

17:26:41.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSpecialValues
17:26:41.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.rank.MinTest)
17:26:41.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testMomentSmallSamples

17:26:41.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.rank.MinTest)
17:26:41.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSerialization
17:26:41.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.rank.MinTest)

17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testIncrementation

17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.rank.MinTest)
17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testConsistency
17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.rank.MinTest)
17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEqualsAndHashCode
17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.MinTest)
17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEvaluation

17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.InvalidMatrixExceptionTest

17:26:41.276 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
17:26:41.276 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.linear.InvalidMatrixExceptionTest, MethodName: testConstructorMessage, DisplayName: testConstructorMessage(org.apache.commons.math.linear.InvalidMatrixExceptionTest)

17:26:41.276 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.InvalidMatrixExceptionTest, MethodName: testConstructorMessage
17:26:41.276 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.InvalidMatrixExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.linear.InvalidMatrixExceptionTest)
17:26:41.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.InvalidMatrixExceptionTest, MethodName: testConstructor

17:26:41.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
17:26:41.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest

17:26:41.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
17:26:41.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest, MethodName: testLinearFunction, DisplayName: testLinearFunction(org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest)

17:26:41.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest, MethodName: testLinearFunction
17:26:41.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest, MethodName: testQuadraticFunction, DisplayName: testQuadraticFunction(org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest)
17:26:41.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest, MethodName: testQuadraticFunction

17:26:41.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest)
17:26:41.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest, MethodName: testParameters

17:26:41.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest)
17:26:41.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest, MethodName: testQuinticFunction
17:26:41.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
17:26:41.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.special.GammaTest

17:26:41.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
17:26:41.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaPositive, DisplayName: testLogGammaPositive(org.apache.commons.math.special.GammaTest)

17:26:41.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaPositive
17:26:41.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNegative, DisplayName: testLogGammaNegative(org.apache.commons.math.special.GammaTest)

17:26:41.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNegative

17:26:41.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositivePositive, DisplayName: testRegularizedGammaPositivePositive(org.apache.commons.math.special.GammaTest)
17:26:41.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositivePositive
17:26:41.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNegative, DisplayName: testRegularizedGammaPositiveNegative(org.apache.commons.math.special.GammaTest)
17:26:41.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNegative

17:26:41.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNan, DisplayName: testLogGammaNan(org.apache.commons.math.special.GammaTest)
17:26:41.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNan

17:26:41.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNanPositive, DisplayName: testRegularizedGammaNanPositive(org.apache.commons.math.special.GammaTest)
17:26:41.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNanPositive

17:26:41.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaZeroPositive, DisplayName: testRegularizedGammaZeroPositive(org.apache.commons.math.special.GammaTest)
17:26:41.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaZeroPositive

17:26:41.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaZero, DisplayName: testLogGammaZero(org.apache.commons.math.special.GammaTest)
17:26:41.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaZero

17:26:41.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNegativePositive, DisplayName: testRegularizedGammaNegativePositive(org.apache.commons.math.special.GammaTest)
17:26:41.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNegativePositive

17:26:41.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNan, DisplayName: testRegularizedGammaPositiveNan(org.apache.commons.math.special.GammaTest)
17:26:41.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNan

17:26:41.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveZero, DisplayName: testRegularizedGammaPositiveZero(org.apache.commons.math.special.GammaTest)
17:26:41.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveZero

17:26:41.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
17:26:41.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.UniformRandomGeneratorTest

17:26:41.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:41.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.random.UniformRandomGeneratorTest, MethodName: testMeanAndStandardDeviation, DisplayName: testMeanAndStandardDeviation(org.apache.commons.math.random.UniformRandomGeneratorTest)

17:26:41.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.UniformRandomGeneratorTest, MethodName: testMeanAndStandardDeviation
17:26:41.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
17:26:41.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.util.ResizableDoubleArrayTest

17:26:41.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
17:26:41.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAdd1000, DisplayName: testAdd1000(org.apache.commons.math.util.ResizableDoubleArrayTest)

17:26:41.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAdd1000
17:26:41.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.util.ResizableDoubleArrayTest)
17:26:41.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testConstructors
17:26:41.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAddElementRolling, DisplayName: testAddElementRolling(org.apache.commons.math.util.ResizableDoubleArrayTest)
17:26:41.293 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.293 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAddElementRolling
17:26:41.293 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.293 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacityAndExpansionFactor, DisplayName: testWithInitialCapacityAndExpansionFactor(org.apache.commons.math.util.ResizableDoubleArrayTest)
17:26:41.293 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacityAndExpansionFactor
17:26:41.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetNumberOfElements, DisplayName: testSetNumberOfElements(org.apache.commons.math.util.ResizableDoubleArrayTest)

17:26:41.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetNumberOfElements
17:26:41.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacity, DisplayName: testWithInitialCapacity(org.apache.commons.math.util.ResizableDoubleArrayTest)
17:26:41.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacity
17:26:41.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testDiscard, DisplayName: testDiscard(org.apache.commons.math.util.ResizableDoubleArrayTest)
17:26:41.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testDiscard
17:26:41.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMutators, DisplayName: testMutators(org.apache.commons.math.util.ResizableDoubleArrayTest)
17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMutators

17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetElementArbitraryExpansion, DisplayName: testSetElementArbitraryExpansion(org.apache.commons.math.util.ResizableDoubleArrayTest)
17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetElementArbitraryExpansion
17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testGetValues, DisplayName: testGetValues(org.apache.commons.math.util.ResizableDoubleArrayTest)
17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testGetValues
17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMinMax, DisplayName: testMinMax(org.apache.commons.math.util.ResizableDoubleArrayTest)
17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMinMax
17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.SkewnessTest

17:26:41.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:41.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

17:26:41.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testNaN
17:26:41.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
17:26:41.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testMomentSmallSamples

17:26:41.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
17:26:41.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testSerialization
17:26:41.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

17:26:41.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testIncrementation
17:26:41.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
17:26:41.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.301 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testConsistency
17:26:41.301 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.301 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)

17:26:41.301 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEqualsAndHashCode
17:26:41.301 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.301 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
17:26:41.301 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.301 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEvaluation

17:26:41.301 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
17:26:41.301 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.301 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.ContinuedFractionTest

17:26:41.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:41.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.util.ContinuedFractionTest, MethodName: testGoldenRatio, DisplayName: testGoldenRatio(org.apache.commons.math.util.ContinuedFractionTest)

17:26:41.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ContinuedFractionTest, MethodName: testGoldenRatio
17:26:41.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

17:26:41.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.GillIntegratorTest

17:26:41.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
17:26:41.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.GillIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.GillIntegratorTest)

17:26:41.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GillIntegratorTest, MethodName: testDimensionCheck
17:26:41.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.GillIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.GillIntegratorTest)
17:26:41.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GillIntegratorTest, MethodName: testSmallStep
17:26:41.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.GillIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.GillIntegratorTest)

17:26:41.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GillIntegratorTest, MethodName: testDecreasingSteps
17:26:41.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.GillIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.GillIntegratorTest)

17:26:41.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GillIntegratorTest, MethodName: testBigStep
17:26:41.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.GillIntegratorTest, MethodName: testUnstableDerivative, DisplayName: testUnstableDerivative(org.apache.commons.math.ode.GillIntegratorTest)
17:26:41.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GillIntegratorTest, MethodName: testUnstableDerivative
17:26:41.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.GillIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.GillIntegratorTest)
17:26:41.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GillIntegratorTest, MethodName: testKepler
17:26:41.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
TestResult: 0
17:26:41.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.FunctionEvaluationExceptionTest

17:26:41.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
17:26:41.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.FunctionEvaluationExceptionTest, MethodName: testConstructorArgumentCause, DisplayName: testConstructorArgumentCause(org.apache.commons.math.FunctionEvaluationExceptionTest)

17:26:41.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.FunctionEvaluationExceptionTest, MethodName: testConstructorArgumentCause
17:26:41.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.FunctionEvaluationExceptionTest, MethodName: testConstructorPatternArgumentsCause, DisplayName: testConstructorPatternArgumentsCause(org.apache.commons.math.FunctionEvaluationExceptionTest)
17:26:41.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.FunctionEvaluationExceptionTest, MethodName: testConstructorPatternArgumentsCause
17:26:41.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.FunctionEvaluationExceptionTest, MethodName: testConstructorPatternArguments, DisplayName: testConstructorPatternArguments(org.apache.commons.math.FunctionEvaluationExceptionTest)
17:26:41.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.FunctionEvaluationExceptionTest, MethodName: testConstructorPatternArguments
17:26:41.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.FunctionEvaluationExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.FunctionEvaluationExceptionTest)
17:26:41.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.FunctionEvaluationExceptionTest, MethodName: testConstructor
17:26:41.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
17:26:41.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.GillStepInterpolatorTest

17:26:41.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:41.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.GillStepInterpolatorTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.ode.GillStepInterpolatorTest)

17:26:41.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GillStepInterpolatorTest, MethodName: testSerialization

17:26:41.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.data.LewTest

17:26:41.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:41.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.data.LewTest, MethodName: testCertifiedValues, DisplayName: testCertifiedValues(org.apache.commons.math.stat.data.LewTest)

17:26:41.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.data.LewTest, MethodName: testCertifiedValues
17:26:41.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
17:26:41.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.inference.ChiSquareFactoryTest

17:26:41.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:41.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareFactoryTest, MethodName: testChiSquareDataSetsComparisonEqualCounts, DisplayName: testChiSquareDataSetsComparisonEqualCounts(org.apache.commons.math.stat.inference.ChiSquareFactoryTest)

17:26:41.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareFactoryTest, MethodName: testChiSquareDataSetsComparisonEqualCounts
17:26:41.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareFactoryTest, MethodName: testChiSquareIndependence, DisplayName: testChiSquareIndependence(org.apache.commons.math.stat.inference.ChiSquareFactoryTest)
17:26:41.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareFactoryTest, MethodName: testChiSquareIndependence
17:26:41.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareFactoryTest, MethodName: testChiSquareDataSetsComparisonUnEqualCounts, DisplayName: testChiSquareDataSetsComparisonUnEqualCounts(org.apache.commons.math.stat.inference.ChiSquareFactoryTest)
17:26:41.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareFactoryTest, MethodName: testChiSquareDataSetsComparisonUnEqualCounts
17:26:41.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareFactoryTest, MethodName: testChiSquareZeroCount, DisplayName: testChiSquareZeroCount(org.apache.commons.math.stat.inference.ChiSquareFactoryTest)
17:26:41.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareFactoryTest, MethodName: testChiSquareZeroCount
17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareFactoryTest, MethodName: testChiSquareLargeTestStatistic, DisplayName: testChiSquareLargeTestStatistic(org.apache.commons.math.stat.inference.ChiSquareFactoryTest)

17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareFactoryTest, MethodName: testChiSquareLargeTestStatistic
17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareFactoryTest, MethodName: testChiSquare, DisplayName: testChiSquare(org.apache.commons.math.stat.inference.ChiSquareFactoryTest)
17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareFactoryTest, MethodName: testChiSquare
17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareFactoryTest, MethodName: testChiSquareDataSetsComparisonBadCounts, DisplayName: testChiSquareDataSetsComparisonBadCounts(org.apache.commons.math.stat.inference.ChiSquareFactoryTest)
17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareFactoryTest, MethodName: testChiSquareDataSetsComparisonBadCounts
17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
17:26:41.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.RealMatrixImplTest

17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 28
17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.RealMatrixImplTest)

17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testOperate
17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testExamples
17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testGetEntry
17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testAddFail
17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.RealMatrixImplTest)

17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testAdd
17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testScalarAdd
17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testSolve
17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testTrace
17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.linear.RealMatrixImplTest)

17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testNorm
17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testToString
17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testIsSingular, DisplayName: testIsSingular(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testIsSingular
17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testPlusMinus
17:26:41.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testDeterminant, DisplayName: testDeterminant(org.apache.commons.math.linear.RealMatrixImplTest)

17:26:41.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testDeterminant
17:26:41.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testMultiply2
17:26:41.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testDimensions
17:26:41.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testSubMatrix, DisplayName: testSubMatrix(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testSubMatrix
17:26:41.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.RealMatrixImplTest)

17:26:41.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testPremultiplyVector
17:26:41.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testCopyFunctions
17:26:41.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testLUDecomposition, DisplayName: testLUDecomposition(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testLUDecomposition
17:26:41.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.RealMatrixImplTest)

17:26:41.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testGetVectors
17:26:41.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testGetColumnMatrix
17:26:41.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testMultiply
17:26:41.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testEqualsAndHashCode
17:26:41.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testInverse, DisplayName: testInverse(org.apache.commons.math.linear.RealMatrixImplTest)

17:26:41.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testInverse
17:26:41.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testTranspose
17:26:41.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testPremultiply
17:26:41.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testGetRowMatrix

17:26:41.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.RealMatrixImplTest)
17:26:41.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealMatrixImplTest, MethodName: testSetSubMatrix
17:26:41.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 28
17:26:41.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.495 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.MathConfigurationExceptionTest

17:26:41.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
17:26:41.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructorPatternArgumentsCause, DisplayName: testConstructorPatternArgumentsCause(org.apache.commons.math.MathConfigurationExceptionTest)

17:26:41.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructorPatternArgumentsCause
17:26:41.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructorPatternArguments, DisplayName: testConstructorPatternArguments(org.apache.commons.math.MathConfigurationExceptionTest)

17:26:41.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructorPatternArguments
17:26:41.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructorCause, DisplayName: testConstructorCause(org.apache.commons.math.MathConfigurationExceptionTest)
17:26:41.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructorCause

17:26:41.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.MathConfigurationExceptionTest)
17:26:41.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructor

17:26:41.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
17:26:41.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest

17:26:41.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:41.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

17:26:41.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testProductAndGeometricMean
17:26:41.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testGetSummary, DisplayName: testGetSummary(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
17:26:41.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testGetSummary
17:26:41.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
17:26:41.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSerialization
17:26:41.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)

17:26:41.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testStats
17:26:41.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
17:26:41.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testNaNContracts
17:26:41.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
17:26:41.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testN0andN1Conditions
17:26:41.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
17:26:41.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testEqualsAndHashCode
17:26:41.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0
17:26:41.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.distribution.PoissonDistributionTest

17:26:41.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
17:26:41.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDegenerateInverseCumulativeProbability, DisplayName: testDegenerateInverseCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest)

17:26:41.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDegenerateInverseCumulativeProbability
17:26:41.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testMean, DisplayName: testMean(org.apache.commons.math.distribution.PoissonDistributionTest)
17:26:41.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testMean
17:26:41.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanInverseCumulativeProbability, DisplayName: testLargeMeanInverseCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest)
17:26:41.517 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanInverseCumulativeProbability
17:26:41.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testNormalApproximateProbability, DisplayName: testNormalApproximateProbability(org.apache.commons.math.distribution.PoissonDistributionTest)

17:26:41.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testNormalApproximateProbability
17:26:41.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanCumulativeProbability, DisplayName: testLargeMeanCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest)
17:26:41.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanCumulativeProbability
17:26:41.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.PoissonDistributionTest)
17:26:41.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDensities
17:26:41.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.PoissonDistributionTest)
17:26:41.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testInverseCumulativeProbabilities
17:26:41.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.PoissonDistributionTest)
17:26:41.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testCumulativeProbabilities
17:26:41.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.PoissonDistributionTest)

17:26:41.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testIllegalArguments
17:26:41.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.PoissonDistributionTest)
17:26:41.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testFloatingPointArguments
17:26:41.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
17:26:41.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.NevilleInterpolatorTest

17:26:41.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:41.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.NevilleInterpolatorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.NevilleInterpolatorTest)

17:26:41.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.NevilleInterpolatorTest, MethodName: testParameters
17:26:41.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.NevilleInterpolatorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.NevilleInterpolatorTest)
17:26:41.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.NevilleInterpolatorTest, MethodName: testSinFunction
17:26:41.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.NevilleInterpolatorTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.NevilleInterpolatorTest)
17:26:41.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.NevilleInterpolatorTest, MethodName: testExpm1Function
17:26:41.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
17:26:41.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.inference.TestUtilsTest

17:26:41.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
17:26:41.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleTTest, DisplayName: testOneSampleTTest(org.apache.commons.math.stat.inference.TestUtilsTest)

17:26:41.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleTTest
17:26:41.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareIndependence, DisplayName: testChiSquareIndependence(org.apache.commons.math.stat.inference.TestUtilsTest)
17:26:41.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareIndependence
17:26:41.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareZeroCount, DisplayName: testChiSquareZeroCount(org.apache.commons.math.stat.inference.TestUtilsTest)
17:26:41.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareZeroCount
17:26:41.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testSmallSamples, DisplayName: testSmallSamples(org.apache.commons.math.stat.inference.TestUtilsTest)

17:26:41.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testSmallSamples
17:26:41.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHeterscedastic, DisplayName: testTwoSampleTHeterscedastic(org.apache.commons.math.stat.inference.TestUtilsTest)
17:26:41.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHeterscedastic
17:26:41.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareLargeTestStatistic, DisplayName: testChiSquareLargeTestStatistic(org.apache.commons.math.stat.inference.TestUtilsTest)
17:26:41.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareLargeTestStatistic
17:26:41.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquare, DisplayName: testChiSquare(org.apache.commons.math.stat.inference.TestUtilsTest)
17:26:41.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquare
17:26:41.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleT, DisplayName: testOneSampleT(org.apache.commons.math.stat.inference.TestUtilsTest)
17:26:41.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleT
17:26:41.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testPaired, DisplayName: testPaired(org.apache.commons.math.stat.inference.TestUtilsTest)
17:26:41.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testPaired
17:26:41.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHomoscedastic, DisplayName: testTwoSampleTHomoscedastic(org.apache.commons.math.stat.inference.TestUtilsTest)
17:26:41.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHomoscedastic
17:26:41.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneWayAnovaUtils, DisplayName: testOneWayAnovaUtils(org.apache.commons.math.stat.inference.TestUtilsTest)
17:26:41.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneWayAnovaUtils
17:26:41.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11

17:26:41.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.EulerIntegratorTest

17:26:41.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
17:26:41.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.EulerIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.EulerIntegratorTest)

17:26:41.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.EulerIntegratorTest, MethodName: testDimensionCheck
17:26:41.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.EulerIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.EulerIntegratorTest)
17:26:41.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.EulerIntegratorTest, MethodName: testSmallStep
17:26:41.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.EulerIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.EulerIntegratorTest)

17:26:41.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.EulerIntegratorTest, MethodName: testDecreasingSteps

17:26:41.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.EulerIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.EulerIntegratorTest)
17:26:41.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.EulerIntegratorTest, MethodName: testBigStep
17:26:41.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
17:26:41.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest

17:26:41.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
17:26:41.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewBrentSolverValid, DisplayName: testNewBrentSolverValid(org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest)

17:26:41.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewBrentSolverValid
17:26:41.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewBisectionSolverValid, DisplayName: testNewBisectionSolverValid(org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest)
17:26:41.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewBisectionSolverValid
17:26:41.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewBrentSolverNull, DisplayName: testNewBrentSolverNull(org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest)

17:26:41.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewBrentSolverNull
17:26:41.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.614 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewBisectionSolverNull, DisplayName: testNewBisectionSolverNull(org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest)
17:26:41.614 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewBisectionSolverNull

17:26:41.614 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewNewtonSolverNull, DisplayName: testNewNewtonSolverNull(org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest)
17:26:41.614 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.615 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewNewtonSolverNull
17:26:41.615 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.615 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewNewtonSolverValid, DisplayName: testNewNewtonSolverValid(org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest)

17:26:41.615 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewNewtonSolverValid
17:26:41.615 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewSecantSolverValid, DisplayName: testNewSecantSolverValid(org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest)
17:26:41.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.616 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewSecantSolverValid
17:26:41.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewSecantSolverNull, DisplayName: testNewSecantSolverNull(org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest)

17:26:41.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest, MethodName: testNewSecantSolverNull
17:26:41.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
17:26:41.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.RandomDataTest

17:26:41.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 16
17:26:41.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.RandomDataTest)

17:26:41.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSample
17:26:41.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.RandomDataTest)

17:26:41.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextIntExtremeValues

17:26:41.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.RandomDataTest)
17:26:41.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniformExclusiveEndpoints
17:26:41.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.RandomDataTest)
17:26:41.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextGaussian
17:26:41.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.RandomDataTest)

17:26:41.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureLong
17:26:41.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.RandomDataTest)

17:26:41.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureHex

17:26:41.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.RandomDataTest)

17:26:41.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureInt
17:26:41.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.RandomDataTest)

17:26:41.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLongExtremeValues
17:26:41.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.RandomDataTest)
17:26:41.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextExponential
17:26:41.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.RandomDataTest)

17:26:41.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPoisson
17:26:41.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.RandomDataTest)

17:26:41.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniform
17:26:41.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.RandomDataTest)

17:26:41.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPermutation
17:26:41.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.RandomDataTest)

17:26:41.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testConfig
17:26:41.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.RandomDataTest)
17:26:41.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextHex

17:26:41.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.RandomDataTest)

17:26:41.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextInt
17:26:41.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.RandomDataTest)
17:26:41.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLong
17:26:41.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 16

17:26:41.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

17:26:41.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.BrentSolverTest

17:26:41.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
17:26:41.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.BrentSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.BrentSolverTest)

17:26:41.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.BrentSolverTest, MethodName: testBadEndpoints
17:26:41.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.BrentSolverTest, MethodName: testInitialGuess, DisplayName: testInitialGuess(org.apache.commons.math.analysis.BrentSolverTest)
17:26:41.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.BrentSolverTest, MethodName: testInitialGuess
17:26:41.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.BrentSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.BrentSolverTest)
17:26:41.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.BrentSolverTest, MethodName: testQuinticZero
17:26:41.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.BrentSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.BrentSolverTest)
17:26:41.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.BrentSolverTest, MethodName: testSinZero
17:26:41.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
17:26:41.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.BisectionSolverTest

17:26:41.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
17:26:41.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testSetMaximalIterationCount, DisplayName: testSetMaximalIterationCount(org.apache.commons.math.analysis.BisectionSolverTest)

17:26:41.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testSetMaximalIterationCount
17:26:41.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testSetRelativeAccuracy, DisplayName: testSetRelativeAccuracy(org.apache.commons.math.analysis.BisectionSolverTest)
17:26:41.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testSetRelativeAccuracy

17:26:41.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testSetAbsoluteAccuracy, DisplayName: testSetAbsoluteAccuracy(org.apache.commons.math.analysis.BisectionSolverTest)
17:26:41.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testSetAbsoluteAccuracy
17:26:41.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.analysis.BisectionSolverTest)
17:26:41.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testSerialization
17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testSetFunctionValueAccuracy, DisplayName: testSetFunctionValueAccuracy(org.apache.commons.math.analysis.BisectionSolverTest)

17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testSetFunctionValueAccuracy
17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testResetRelativeAccuracy, DisplayName: testResetRelativeAccuracy(org.apache.commons.math.analysis.BisectionSolverTest)
17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testResetRelativeAccuracy

17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testResetAbsoluteAccuracy, DisplayName: testResetAbsoluteAccuracy(org.apache.commons.math.analysis.BisectionSolverTest)
17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testResetAbsoluteAccuracy

17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testResetMaximalIterationCount, DisplayName: testResetMaximalIterationCount(org.apache.commons.math.analysis.BisectionSolverTest)
17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testResetMaximalIterationCount

17:26:41.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testResetFunctionValueAccuracy, DisplayName: testResetFunctionValueAccuracy(org.apache.commons.math.analysis.BisectionSolverTest)
17:26:41.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testResetFunctionValueAccuracy

17:26:41.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.BisectionSolverTest)
17:26:41.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testQuinticZero
17:26:41.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.BisectionSolverTest)
17:26:41.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.BisectionSolverTest, MethodName: testSinZero
17:26:41.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
17:26:41.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.GaussianRandomGeneratorTest

17:26:41.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:41.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.random.GaussianRandomGeneratorTest, MethodName: testMeanAndStandardDeviation, DisplayName: testMeanAndStandardDeviation(org.apache.commons.math.random.GaussianRandomGeneratorTest)

17:26:41.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.GaussianRandomGeneratorTest, MethodName: testMeanAndStandardDeviation
17:26:41.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
17:26:41.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest

17:26:41.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
17:26:41.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest)

17:26:41.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest, MethodName: testSerialization

17:26:41.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest, MethodName: testClone, DisplayName: testClone(org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest)
17:26:41.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest, MethodName: testClone
17:26:41.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0

17:26:41.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.MaxIterationsExceededExceptionTest

17:26:41.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
17:26:41.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.MaxIterationsExceededExceptionTest, MethodName: testComplexConstructor, DisplayName: testComplexConstructor(org.apache.commons.math.MaxIterationsExceededExceptionTest)

17:26:41.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MaxIterationsExceededExceptionTest, MethodName: testComplexConstructor
17:26:41.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MaxIterationsExceededExceptionTest, MethodName: testSimpleConstructor, DisplayName: testSimpleConstructor(org.apache.commons.math.MaxIterationsExceededExceptionTest)
17:26:41.801 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MaxIterationsExceededExceptionTest, MethodName: testSimpleConstructor
17:26:41.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Number of testcases executed : 2
17:26:41.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.inference.ChiSquareTestTest

17:26:41.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:41.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonEqualCounts, DisplayName: testChiSquareDataSetsComparisonEqualCounts(org.apache.commons.math.stat.inference.ChiSquareTestTest)
17:26:41.802 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonEqualCounts
17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareIndependence, DisplayName: testChiSquareIndependence(org.apache.commons.math.stat.inference.ChiSquareTestTest)
17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareIndependence
17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonUnEqualCounts, DisplayName: testChiSquareDataSetsComparisonUnEqualCounts(org.apache.commons.math.stat.inference.ChiSquareTestTest)
17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonUnEqualCounts
17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareZeroCount, DisplayName: testChiSquareZeroCount(org.apache.commons.math.stat.inference.ChiSquareTestTest)
17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareZeroCount
17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.803 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareLargeTestStatistic, DisplayName: testChiSquareLargeTestStatistic(org.apache.commons.math.stat.inference.ChiSquareTestTest)
17:26:41.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareLargeTestStatistic

17:26:41.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquare, DisplayName: testChiSquare(org.apache.commons.math.stat.inference.ChiSquareTestTest)
17:26:41.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquare
17:26:41.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonBadCounts, DisplayName: testChiSquareDataSetsComparisonBadCounts(org.apache.commons.math.stat.inference.ChiSquareTestTest)
17:26:41.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonBadCounts
17:26:41.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
17:26:41.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.804 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest

17:26:41.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:41.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest)

17:26:41.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest, MethodName: testSerialization

17:26:41.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.PolynomialFunctionTest

17:26:41.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
17:26:41.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionTest, MethodName: testfirstDerivativeComparison, DisplayName: testfirstDerivativeComparison(org.apache.commons.math.analysis.PolynomialFunctionTest)

17:26:41.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionTest, MethodName: testfirstDerivativeComparison
17:26:41.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionTest, MethodName: testQuadratic, DisplayName: testQuadratic(org.apache.commons.math.analysis.PolynomialFunctionTest)
17:26:41.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionTest, MethodName: testQuadratic

17:26:41.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionTest, MethodName: testConstants, DisplayName: testConstants(org.apache.commons.math.analysis.PolynomialFunctionTest)
17:26:41.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionTest, MethodName: testConstants
17:26:41.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionTest, MethodName: testQuintic, DisplayName: testQuintic(org.apache.commons.math.analysis.PolynomialFunctionTest)
17:26:41.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionTest, MethodName: testQuintic
17:26:41.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionTest, MethodName: testLinear, DisplayName: testLinear(org.apache.commons.math.analysis.PolynomialFunctionTest)
17:26:41.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialFunctionTest, MethodName: testLinear

17:26:41.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
17:26:41.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.CauchyDistributionTest

17:26:41.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
17:26:41.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testScale, DisplayName: testScale(org.apache.commons.math.distribution.CauchyDistributionTest)

17:26:41.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testScale
17:26:41.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testMedian, DisplayName: testMedian(org.apache.commons.math.distribution.CauchyDistributionTest)

17:26:41.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testMedian
17:26:41.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.CauchyDistributionTest)
17:26:41.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes
17:26:41.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testSetScale, DisplayName: testSetScale(org.apache.commons.math.distribution.CauchyDistributionTest)
17:26:41.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testSetScale
17:26:41.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.CauchyDistributionTest)
17:26:41.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilities
17:26:41.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.CauchyDistributionTest)

17:26:41.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testCumulativeProbabilities
17:26:41.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.CauchyDistributionTest)
17:26:41.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testIllegalArguments
17:26:41.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.CauchyDistributionTest)
17:26:41.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testConsistency
17:26:41.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8

17:26:41.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.estimation.EstimatedParameterTest

17:26:41.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:41.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.estimation.EstimatedParameterTest, MethodName: testEstimate, DisplayName: testEstimate(org.apache.commons.math.estimation.EstimatedParameterTest)

17:26:41.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.EstimatedParameterTest, MethodName: testEstimate
17:26:41.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.EstimatedParameterTest, MethodName: testBound, DisplayName: testBound(org.apache.commons.math.estimation.EstimatedParameterTest)
17:26:41.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.EstimatedParameterTest, MethodName: testBound

17:26:41.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.estimation.EstimatedParameterTest, MethodName: testConstruction, DisplayName: testConstruction(org.apache.commons.math.estimation.EstimatedParameterTest)
17:26:41.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.estimation.EstimatedParameterTest, MethodName: testConstruction
17:26:41.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
17:26:41.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.NormalDistributionTest

17:26:41.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
17:26:41.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testExtremeValues, DisplayName: testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)

17:26:41.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testExtremeValues
17:26:41.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testSetStandardDeviation, DisplayName: testSetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)
17:26:41.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testSetStandardDeviation
17:26:41.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetStandardDeviation, DisplayName: testGetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)
17:26:41.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetStandardDeviation

17:26:41.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testQuantiles, DisplayName: testQuantiles(org.apache.commons.math.distribution.NormalDistributionTest)
17:26:41.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testQuantiles
17:26:41.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetMean, DisplayName: testGetMean(org.apache.commons.math.distribution.NormalDistributionTest)
17:26:41.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetMean

17:26:41.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testSetMean, DisplayName: testSetMean(org.apache.commons.math.distribution.NormalDistributionTest)
17:26:41.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testSetMean
17:26:41.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.NormalDistributionTest)
17:26:41.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes
17:26:41.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)
17:26:41.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilities
17:26:41.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)
17:26:41.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testCumulativeProbabilities
17:26:41.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.NormalDistributionTest)
17:26:41.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testIllegalArguments
17:26:41.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.NormalDistributionTest)
17:26:41.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testConsistency
17:26:41.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11

17:26:41.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.PascalDistributionTest

17:26:41.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:41.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate0, DisplayName: testDegenerate0(org.apache.commons.math.distribution.PascalDistributionTest)

17:26:41.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate0
17:26:41.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate1, DisplayName: testDegenerate1(org.apache.commons.math.distribution.PascalDistributionTest)
17:26:41.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate1
17:26:41.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.PascalDistributionTest)
17:26:41.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDensities
17:26:41.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.PascalDistributionTest)
17:26:41.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testInverseCumulativeProbabilities
17:26:41.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.PascalDistributionTest)
17:26:41.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testCumulativeProbabilities
17:26:41.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.PascalDistributionTest)
17:26:41.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testIllegalArguments
17:26:41.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.PascalDistributionTest)
17:26:41.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testFloatingPointArguments
17:26:41.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
TestResult: 0
17:26:41.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.analysis.SplineInterpolatorTest

17:26:41.919 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
17:26:41.919 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.SplineInterpolatorTest, MethodName: testInterpolateSin, DisplayName: testInterpolateSin(org.apache.commons.math.analysis.SplineInterpolatorTest)

17:26:41.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.SplineInterpolatorTest, MethodName: testInterpolateSin
17:26:41.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateTwoSegment, DisplayName: testInterpolateLinearDegenerateTwoSegment(org.apache.commons.math.analysis.SplineInterpolatorTest)
17:26:41.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateTwoSegment
17:26:41.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.SplineInterpolatorTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.analysis.SplineInterpolatorTest)
17:26:41.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.SplineInterpolatorTest, MethodName: testIllegalArguments
17:26:41.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.SplineInterpolatorTest, MethodName: testInterpolateLinear, DisplayName: testInterpolateLinear(org.apache.commons.math.analysis.SplineInterpolatorTest)
17:26:41.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.SplineInterpolatorTest, MethodName: testInterpolateLinear
17:26:41.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateThreeSegment, DisplayName: testInterpolateLinearDegenerateThreeSegment(org.apache.commons.math.analysis.SplineInterpolatorTest)
17:26:41.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateThreeSegment
17:26:41.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
17:26:41.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:41.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.BinomialDistributionTest

17:26:41.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:41.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate0, DisplayName: testDegenerate0(org.apache.commons.math.distribution.BinomialDistributionTest)

17:26:41.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate0
17:26:41.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate1, DisplayName: testDegenerate1(org.apache.commons.math.distribution.BinomialDistributionTest)
17:26:41.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate1
17:26:41.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.BinomialDistributionTest)
17:26:41.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDensities

17:26:41.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.BinomialDistributionTest)
17:26:41.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testInverseCumulativeProbabilities
17:26:41.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.BinomialDistributionTest)
17:26:41.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testCumulativeProbabilities
17:26:41.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.BinomialDistributionTest)
17:26:41.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testIllegalArguments
17:26:41.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.BinomialDistributionTest)
17:26:41.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testFloatingPointArguments
17:26:41.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7

17:26:41.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.AbstractRandomGeneratorTest

17:26:41.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 18
17:26:41.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBoolean, DisplayName: testNextBoolean(org.apache.commons.math.random.AbstractRandomGeneratorTest)

17:26:41.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBoolean
17:26:41.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.AbstractRandomGeneratorTest)
17:26:41.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInt
17:26:41.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextFloat, DisplayName: testNextFloat(org.apache.commons.math.random.AbstractRandomGeneratorTest)
17:26:41.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextFloat
17:26:41.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.AbstractRandomGeneratorTest)
17:26:41.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLong
17:26:41.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.AbstractRandomGeneratorTest)
17:26:41.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSample
17:26:41.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.AbstractRandomGeneratorTest)

17:26:41.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntExtremeValues
17:26:41.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.AbstractRandomGeneratorTest)

17:26:41.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniformExclusiveEndpoints
17:26:41.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.AbstractRandomGeneratorTest)
17:26:41.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.954 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextGaussian
17:26:41.954 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.954 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.AbstractRandomGeneratorTest)
17:26:41.955 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureLong
17:26:41.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:41.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.AbstractRandomGeneratorTest)
17:26:41.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureHex

17:26:42.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.AbstractRandomGeneratorTest)

17:26:42.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureInt
17:26:42.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.AbstractRandomGeneratorTest)
17:26:42.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLongExtremeValues

17:26:42.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.AbstractRandomGeneratorTest)
17:26:42.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextExponential
17:26:42.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.AbstractRandomGeneratorTest)
17:26:42.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPoisson
17:26:42.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.AbstractRandomGeneratorTest)
17:26:42.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniform
17:26:42.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.AbstractRandomGeneratorTest)
17:26:42.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPermutation
17:26:42.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.AbstractRandomGeneratorTest)
17:26:42.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testConfig
17:26:42.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.AbstractRandomGeneratorTest)
17:26:42.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextHex

17:26:42.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 18
TestResult: 0

17:26:42.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.WeibullDistributionTest

17:26:42.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
17:26:42.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testAlpha, DisplayName: testAlpha(org.apache.commons.math.distribution.WeibullDistributionTest)

17:26:42.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testAlpha
17:26:42.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testBeta, DisplayName: testBeta(org.apache.commons.math.distribution.WeibullDistributionTest)
17:26:42.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testBeta

17:26:42.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testSetBeta, DisplayName: testSetBeta(org.apache.commons.math.distribution.WeibullDistributionTest)
17:26:42.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testSetBeta
17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.WeibullDistributionTest)
17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes
17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testSetAlpha, DisplayName: testSetAlpha(org.apache.commons.math.distribution.WeibullDistributionTest)
17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testSetAlpha
17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.WeibullDistributionTest)
17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilities
17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.WeibullDistributionTest)
17:26:42.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testCumulativeProbabilities
17:26:42.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.WeibullDistributionTest)
17:26:42.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testIllegalArguments
17:26:42.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.WeibullDistributionTest)
17:26:42.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testConsistency
17:26:42.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
17:26:42.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:42.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest

17:26:42.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:42.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)

17:26:42.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSpecialValues
17:26:42.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
17:26:42.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testMomentSmallSamples
17:26:42.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
17:26:42.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSerialization
17:26:42.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
17:26:42.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testIncrementation
17:26:42.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
17:26:42.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testConsistency
17:26:42.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
17:26:42.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEqualsAndHashCode
17:26:42.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
17:26:42.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEvaluation

17:26:42.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
17:26:42.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:42.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.NewtonSolverTest

17:26:42.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:42.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.NewtonSolverTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.analysis.NewtonSolverTest)

17:26:42.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.NewtonSolverTest, MethodName: testSerialization
17:26:42.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.NewtonSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.NewtonSolverTest)
17:26:42.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.NewtonSolverTest, MethodName: testQuinticZero
17:26:42.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.NewtonSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.NewtonSolverTest)
17:26:42.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.NewtonSolverTest, MethodName: testSinZero

17:26:42.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
17:26:42.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:42.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.MaxTest

17:26:42.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
17:26:42.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testNaNs, DisplayName: testNaNs(org.apache.commons.math.stat.descriptive.rank.MaxTest)

17:26:42.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testNaNs
17:26:42.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.rank.MaxTest)
17:26:42.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSpecialValues
17:26:42.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.rank.MaxTest)
17:26:42.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testMomentSmallSamples

17:26:42.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.rank.MaxTest)
17:26:42.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSerialization
17:26:42.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.rank.MaxTest)
17:26:42.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testIncrementation
17:26:42.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.rank.MaxTest)
17:26:42.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testConsistency
17:26:42.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.rank.MaxTest)
17:26:42.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEqualsAndHashCode
17:26:42.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.MaxTest)
17:26:42.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEvaluation

17:26:42.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
17:26:42.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:42.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.transform.FastFourierTransformerTest

17:26:42.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:42.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testAdHocData, DisplayName: testAdHocData(org.apache.commons.math.transform.FastFourierTransformerTest)

17:26:42.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : org/apache/commons/math/complex/Complex
17:26:42.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.LinkageError: org/apache/commons/math/complex/Complex
	at org.apache.commons.math.transform.FastFourierTransformer.<init>(Unknown Source)
	at org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(FastFourierTransformerTest.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at o
17:26:42.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - rg.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testAdHocData

17:26:42.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testAdHocData
17:26:42.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.transform.FastFourierTransformerTest)
17:26:42.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : org/apache/commons/math/complex/Complex

17:26:42.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.LinkageError: org/apache/commons/math/complex/Complex
	at org.apache.commons.math.transform.FastFourierTransformer.<init>(Unknown Source)
	at org.apache.commons.math.transform.FastFourierTransformerTest.testParameters(FastFourierTransformerTest.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at
17:26:42.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testParameters

17:26:42.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testParameters
17:26:42.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.transform.FastFourierTransformerTest)
17:26:42.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : org/apache/commons/math/complex/Complex
17:26:42.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.LinkageError: org/apache/commons/math/complex/Complex
	at org.apache.commons.math.transform.FastFourierTransformer.<init>(Unknown Source)
	at org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(FastFourierTransformerTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at
17:26:42.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testSinFunction

17:26:42.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testSinFunction
17:26:42.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

17:26:42.077 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 1
 Run JUnit Test: org.apache.commons.math.complex.ComplexFormatTest

17:26:42.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 35
17:26:42.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeImaginary, DisplayName: testParseNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)

17:26:42.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeImaginary
17:26:42.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testConstructorSingleFormat
17:26:42.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimals
17:26:42.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroImaginary, DisplayName: testZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)

17:26:42.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroImaginary
17:26:42.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSetImaginaryFormatNull, DisplayName: testSetImaginaryFormatNull(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSetImaginaryFormatNull
17:26:42.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testDifferentImaginaryChar, DisplayName: testDifferentImaginaryChar(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testDifferentImaginaryChar
17:26:42.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testFormatNumber, DisplayName: testFormatNumber(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testFormatNumber
17:26:42.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testFormatObject, DisplayName: testFormatObject(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testFormatObject
17:26:42.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNan
17:26:42.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc
17:26:42.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSetImaginaryCharacterNull, DisplayName: testSetImaginaryCharacterNull(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSetImaginaryCharacterNull
17:26:42.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testStaticFormatComplex, DisplayName: testStaticFormatComplex(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testStaticFormatComplex
17:26:42.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetRealFormat, DisplayName: testGetRealFormat(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetRealFormat
17:26:42.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeBoth, DisplayName: testParseNegativeBoth(org.apache.commons.math.complex.ComplexFormatTest)

17:26:42.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeBoth
17:26:42.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeReal, DisplayName: testParseNegativeReal(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeReal
17:26:42.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetImaginaryFormat, DisplayName: testGetImaginaryFormat(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetImaginaryFormat
17:26:42.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc
17:26:42.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeInfinity, DisplayName: testNegativeInfinity(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeInfinity
17:26:42.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSetRealFormatNull, DisplayName: testSetRealFormatNull(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSetRealFormatNull
17:26:42.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPaseNegativeInfinity, DisplayName: testPaseNegativeInfinity(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPaseNegativeInfinity
17:26:42.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseDifferentImaginaryChar, DisplayName: testParseDifferentImaginaryChar(org.apache.commons.math.complex.ComplexFormatTest)

17:26:42.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseDifferentImaginaryChar
17:26:42.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSetImaginaryCharacterEmpty, DisplayName: testSetImaginaryCharacterEmpty(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSetImaginaryCharacterEmpty
17:26:42.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleNoDecimals
17:26:42.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroReal, DisplayName: testZeroReal(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroReal
17:26:42.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeBoth, DisplayName: testNegativeBoth(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeBoth
17:26:42.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeReal, DisplayName: testNegativeReal(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeReal
17:26:42.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeImaginary, DisplayName: testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeImaginary
17:26:42.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleNoDecimals
17:26:42.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPositiveInfinity
17:26:42.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testForgottenImaginaryCharacter, DisplayName: testForgottenImaginaryCharacter(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testForgottenImaginaryCharacter
17:26:42.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroReal, DisplayName: testParseZeroReal(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroReal
17:26:42.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNan
17:26:42.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroImaginary, DisplayName: testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroImaginary
17:26:42.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParsePositiveInfinity
17:26:42.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)
17:26:42.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimals
17:26:42.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 35
17:26:42.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:42.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.MathUtilsTest

17:26:42.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 40
17:26:42.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficient, DisplayName: testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)

17:26:42.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficient
17:26:42.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorialFail, DisplayName: testFactorialFail(org.apache.commons.math.util.MathUtilsTest)
17:26:42.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorialFail
17:26:42.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorDouble, DisplayName: testIndicatorDouble(org.apache.commons.math.util.MathUtilsTest)
17:26:42.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorDouble
17:26:42.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundDouble, DisplayName: testRoundDouble(org.apache.commons.math.util.MathUtilsTest)
17:26:42.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundDouble
17:26:42.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNormalizeAngle, DisplayName: testNormalizeAngle(org.apache.commons.math.util.MathUtilsTest)
17:26:42.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNormalizeAngle
17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorInt, DisplayName: testIndicatorInt(org.apache.commons.math.util.MathUtilsTest)

17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorInt

17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcd, DisplayName: testGcd(org.apache.commons.math.util.MathUtilsTest)
17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcd
17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLcm, DisplayName: testLcm(org.apache.commons.math.util.MathUtilsTest)
17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLcm
17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLog, DisplayName: testLog(org.apache.commons.math.util.MathUtilsTest)
17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLog

17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCosh, DisplayName: testCosh(org.apache.commons.math.util.MathUtilsTest)
17:26:42.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCosh

17:26:42.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testHash, DisplayName: testHash(org.apache.commons.math.util.MathUtilsTest)
17:26:42.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testHash
17:26:42.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinh, DisplayName: testSinh(org.apache.commons.math.util.MathUtilsTest)
17:26:42.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinh

17:26:42.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckLong, DisplayName: testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)
17:26:42.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckLong
17:26:42.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundFloat, DisplayName: testRoundFloat(org.apache.commons.math.util.MathUtilsTest)
17:26:42.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundFloat
17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayHash, DisplayName: testArrayHash(org.apache.commons.math.util.MathUtilsTest)
17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayHash
17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorial, DisplayName: testFactorial(org.apache.commons.math.util.MathUtilsTest)
17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorial
17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayEquals, DisplayName: testArrayEquals(org.apache.commons.math.util.MathUtilsTest)
17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayEquals
17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheck, DisplayName: testSubAndCheck(org.apache.commons.math.util.MathUtilsTest)
17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheck
17:26:42.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheckLong, DisplayName: testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)
17:26:42.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheckLong

17:26:42.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficientFail, DisplayName: testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)
17:26:42.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficientFail
17:26:42.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCoshNaN, DisplayName: testCoshNaN(org.apache.commons.math.util.MathUtilsTest)
17:26:42.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCoshNaN

17:26:42.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckErrorMessage, DisplayName: testSubAndCheckErrorMessage(org.apache.commons.math.util.MathUtilsTest)
17:26:42.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckErrorMessage
17:26:42.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: test0Choose0, DisplayName: test0Choose0(org.apache.commons.math.util.MathUtilsTest)
17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: test0Choose0

17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheck, DisplayName: testMulAndCheck(org.apache.commons.math.util.MathUtilsTest)
17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheck
17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignByte, DisplayName: testSignByte(org.apache.commons.math.util.MathUtilsTest)
17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignByte
17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignLong, DisplayName: testSignLong(org.apache.commons.math.util.MathUtilsTest)
17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignLong

17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEquals, DisplayName: testEquals(org.apache.commons.math.util.MathUtilsTest)
17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEquals
17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheckLong, DisplayName: testAddAndCheckLong(org.apache.commons.math.util.MathUtilsTest)

17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheckLong
17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorFloat, DisplayName: testIndicatorFloat(org.apache.commons.math.util.MathUtilsTest)
17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorFloat

17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorShort, DisplayName: testIndicatorShort(org.apache.commons.math.util.MathUtilsTest)
17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorShort
17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorByte, DisplayName: testIndicatorByte(org.apache.commons.math.util.MathUtilsTest)
17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorByte

17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorLong, DisplayName: testIndicatorLong(org.apache.commons.math.util.MathUtilsTest)
17:26:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorLong

17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignDouble, DisplayName: testSignDouble(org.apache.commons.math.util.MathUtilsTest)
17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignDouble

17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheck, DisplayName: testAddAndCheck(org.apache.commons.math.util.MathUtilsTest)
17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheck
17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignInt, DisplayName: testSignInt(org.apache.commons.math.util.MathUtilsTest)
17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignInt

17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinhNaN, DisplayName: testSinhNaN(org.apache.commons.math.util.MathUtilsTest)
17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinhNaN

17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignFloat, DisplayName: testSignFloat(org.apache.commons.math.util.MathUtilsTest)
17:26:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignFloat

17:26:42.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignShort, DisplayName: testSignShort(org.apache.commons.math.util.MathUtilsTest)
17:26:42.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignShort

17:26:42.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNextAfter, DisplayName: testNextAfter(org.apache.commons.math.util.MathUtilsTest)
17:26:42.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNextAfter

17:26:42.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNextAfterSpecialCases, DisplayName: testNextAfterSpecialCases(org.apache.commons.math.util.MathUtilsTest)
17:26:42.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNextAfterSpecialCases

17:26:42.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 40
17:26:42.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:42.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.PolynomialSplineFunctionTest

17:26:42.121 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
17:26:42.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.PolynomialSplineFunctionTest, MethodName: testValues, DisplayName: testValues(org.apache.commons.math.analysis.PolynomialSplineFunctionTest)

17:26:42.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialSplineFunctionTest, MethodName: testValues
17:26:42.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.PolynomialSplineFunctionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.analysis.PolynomialSplineFunctionTest)
17:26:42.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.PolynomialSplineFunctionTest, MethodName: testConstructor
17:26:42.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0
17:26:42.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ode.ContinuousOutputModelTest

17:26:42.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
17:26:42.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testBoundaries, DisplayName: testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)

17:26:42.125 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testBoundaries
17:26:42.125 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.125 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testModelsMerging, DisplayName: testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)
17:26:42.125 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testModelsMerging
17:26:42.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testRandomAccess, DisplayName: testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)
17:26:42.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.130 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testRandomAccess
17:26:42.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testErrorConditions, DisplayName: testErrorConditions(org.apache.commons.math.ode.ContinuousOutputModelTest)

17:26:42.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testErrorConditions
17:26:42.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
17:26:42.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:42.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.inference.TTestTest

17:26:42.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
17:26:42.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleTTest, DisplayName: testOneSampleTTest(org.apache.commons.math.stat.inference.TTestTest)

17:26:42.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleTTest
17:26:42.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testSmallSamples, DisplayName: testSmallSamples(org.apache.commons.math.stat.inference.TTestTest)
17:26:42.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testSmallSamples
17:26:42.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHeterscedastic, DisplayName: testTwoSampleTHeterscedastic(org.apache.commons.math.stat.inference.TTestTest)
17:26:42.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHeterscedastic
17:26:42.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleT, DisplayName: testOneSampleT(org.apache.commons.math.stat.inference.TTestTest)
17:26:42.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleT
17:26:42.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testPaired, DisplayName: testPaired(org.apache.commons.math.stat.inference.TTestTest)
17:26:42.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testPaired
17:26:42.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHomoscedastic, DisplayName: testTwoSampleTHomoscedastic(org.apache.commons.math.stat.inference.TTestTest)
17:26:42.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHomoscedastic
17:26:42.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
17:26:42.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:42.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.ChiSquareDistributionTest

17:26:42.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
17:26:42.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDfAccessors, DisplayName: testDfAccessors(org.apache.commons.math.distribution.ChiSquareDistributionTest)

17:26:42.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDfAccessors
17:26:42.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testSmallDf, DisplayName: testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)
17:26:42.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testSmallDf
17:26:42.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)
17:26:42.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testInverseCumulativeProbabilities
17:26:42.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)
17:26:42.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testCumulativeProbabilities
17:26:42.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.ChiSquareDistributionTest)
17:26:42.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testIllegalArguments
17:26:42.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.ChiSquareDistributionTest)
17:26:42.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testConsistency
17:26:42.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
17:26:42.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:42.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.HighamHall54StepInterpolatorTest

17:26:42.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
17:26:42.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.HighamHall54StepInterpolatorTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.ode.HighamHall54StepInterpolatorTest)

17:26:42.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.HighamHall54StepInterpolatorTest, MethodName: testSerialization

17:26:42.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.HighamHall54StepInterpolatorTest, MethodName: testClone, DisplayName: testClone(org.apache.commons.math.ode.HighamHall54StepInterpolatorTest)
17:26:42.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.HighamHall54StepInterpolatorTest, MethodName: testClone
17:26:42.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2

17:26:42.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.SumLogTest
17:26:42.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:42.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

17:26:42.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSpecialValues
17:26:42.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
17:26:42.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testMomentSmallSamples

17:26:42.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
17:26:42.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSerialization
17:26:42.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
17:26:42.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testIncrementation

17:26:42.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
17:26:42.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testConsistency
17:26:42.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
17:26:42.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEqualsAndHashCode
17:26:42.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.SumLogTest)
17:26:42.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEvaluation

17:26:42.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
17:26:42.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:42.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.LaguerreSolverTest

17:26:42.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
17:26:42.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.LaguerreSolverTest, MethodName: testLinearFunction, DisplayName: testLinearFunction(org.apache.commons.math.analysis.LaguerreSolverTest)

17:26:42.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.LaguerreSolverTest, MethodName: testLinearFunction
17:26:42.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.LaguerreSolverTest, MethodName: testQuadraticFunction, DisplayName: testQuadraticFunction(org.apache.commons.math.analysis.LaguerreSolverTest)
17:26:42.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.LaguerreSolverTest, MethodName: testQuadraticFunction
17:26:42.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.LaguerreSolverTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.LaguerreSolverTest)
17:26:42.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.LaguerreSolverTest, MethodName: testParameters
17:26:42.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.LaguerreSolverTest, MethodName: testQuinticFunction2, DisplayName: testQuinticFunction2(org.apache.commons.math.analysis.LaguerreSolverTest)
17:26:42.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.LaguerreSolverTest, MethodName: testQuinticFunction2
17:26:42.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.LaguerreSolverTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.LaguerreSolverTest)

17:26:42.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.LaguerreSolverTest, MethodName: testQuinticFunction
17:26:42.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5

17:26:42.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.MeanTest

17:26:42.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:42.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSmallSamples, DisplayName: testSmallSamples(org.apache.commons.math.stat.descriptive.moment.MeanTest)

17:26:42.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSmallSamples
17:26:42.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.MeanTest)
17:26:42.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testMomentSmallSamples

17:26:42.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.MeanTest)
17:26:42.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSerialization
17:26:42.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.MeanTest)
17:26:42.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testIncrementation

17:26:42.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.MeanTest)
17:26:42.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testConsistency
17:26:42.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.MeanTest)
17:26:42.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEqualsAndHashCode
17:26:42.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.MeanTest)

17:26:42.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEvaluation
17:26:42.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
17:26:42.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:42.170 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.EulerStepInterpolatorTest

17:26:42.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
17:26:42.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.EulerStepInterpolatorTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.ode.EulerStepInterpolatorTest)

17:26:42.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.EulerStepInterpolatorTest, MethodName: testSerialization
17:26:42.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.EulerStepInterpolatorTest, MethodName: testInterpolationInside, DisplayName: testInterpolationInside(org.apache.commons.math.ode.EulerStepInterpolatorTest)
17:26:42.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.EulerStepInterpolatorTest, MethodName: testInterpolationInside
17:26:42.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.EulerStepInterpolatorTest, MethodName: testInterpolationAtBounds, DisplayName: testInterpolationAtBounds(org.apache.commons.math.ode.EulerStepInterpolatorTest)
17:26:42.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.EulerStepInterpolatorTest, MethodName: testInterpolationAtBounds
17:26:42.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.EulerStepInterpolatorTest, MethodName: testNoReset, DisplayName: testNoReset(org.apache.commons.math.ode.EulerStepInterpolatorTest)
17:26:42.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.EulerStepInterpolatorTest, MethodName: testNoReset

17:26:42.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
17:26:42.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.EmpiricalDistributionTest

17:26:42.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
17:26:42.185 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testBinIndexOverflow, DisplayName: testBinIndexOverflow(org.apache.commons.math.random.EmpiricalDistributionTest)

17:26:42.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testBinIndexOverflow
17:26:42.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.random.EmpiricalDistributionTest)
17:26:42.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testSerialization

17:26:42.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoad, DisplayName: testLoad(org.apache.commons.math.random.EmpiricalDistributionTest)
17:26:42.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoad
17:26:42.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNext, DisplayName: testNext(org.apache.commons.math.random.EmpiricalDistributionTest)
17:26:42.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNext
17:26:42.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullDoubleArray, DisplayName: testLoadNullDoubleArray(org.apache.commons.math.random.EmpiricalDistributionTest)
17:26:42.275 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullDoubleArray
17:26:42.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.280 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFat, DisplayName: testGridTooFat(org.apache.commons.math.random.EmpiricalDistributionTest)

17:26:42.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFat
17:26:42.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testDoubleLoad, DisplayName: testDoubleLoad(org.apache.commons.math.random.EmpiricalDistributionTest)

17:26:42.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testDoubleLoad
17:26:42.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFine, DisplayName: testGridTooFine(org.apache.commons.math.random.EmpiricalDistributionTest)
17:26:42.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFine

17:26:42.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullFile, DisplayName: testLoadNullFile(org.apache.commons.math.random.EmpiricalDistributionTest)
17:26:42.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullFile
17:26:42.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullURL, DisplayName: testLoadNullURL(org.apache.commons.math.random.EmpiricalDistributionTest)

17:26:42.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullURL
17:26:42.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNexFail, DisplayName: testNexFail(org.apache.commons.math.random.EmpiricalDistributionTest)

17:26:42.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNexFail
17:26:42.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11

17:26:42.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.ExponentialDistributionTest
17:26:42.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
17:26:42.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbability2, DisplayName: testCumulativeProbability2(org.apache.commons.math.distribution.ExponentialDistributionTest)

17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbability2
17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilityExtremes, DisplayName: testCumulativeProbabilityExtremes(org.apache.commons.math.distribution.ExponentialDistributionTest)
17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilityExtremes
17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.ExponentialDistributionTest)
17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes
17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testMeanAccessors, DisplayName: testMeanAccessors(org.apache.commons.math.distribution.ExponentialDistributionTest)
17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testMeanAccessors
17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ExponentialDistributionTest)
17:26:42.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilities
17:26:42.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.ExponentialDistributionTest)
17:26:42.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilities
17:26:42.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.ExponentialDistributionTest)
17:26:42.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testIllegalArguments
17:26:42.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.ExponentialDistributionTest)
17:26:42.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testConsistency
17:26:42.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0
17:26:42.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest

17:26:42.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
17:26:42.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest)

17:26:42.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testDimensionCheck
17:26:42.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testSwitchingFunctions, DisplayName: testSwitchingFunctions(org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest)
17:26:42.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testSwitchingFunctions
17:26:42.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testVariableSteps, DisplayName: testVariableSteps(org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest)
17:26:42.400 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testVariableSteps
17:26:42.404 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testIntegratorControls, DisplayName: testIntegratorControls(org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest)
17:26:42.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testIntegratorControls

17:26:42.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest)
17:26:42.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testMinStep
17:26:42.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testUnstableDerivative, DisplayName: testUnstableDerivative(org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest)
17:26:42.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testUnstableDerivative
17:26:42.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testNullIntervalCheck, DisplayName: testNullIntervalCheck(org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest)
17:26:42.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testNullIntervalCheck
17:26:42.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest)
17:26:42.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testKepler
17:26:42.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest)

17:26:42.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest, MethodName: testIncreasingTolerance
17:26:42.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9

17:26:42.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.inference.OneWayAnovaTest
17:26:42.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:42.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaTest, DisplayName: testAnovaTest(org.apache.commons.math.stat.inference.OneWayAnovaTest)

17:26:42.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaTest
17:26:42.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaFValue, DisplayName: testAnovaFValue(org.apache.commons.math.stat.inference.OneWayAnovaTest)
17:26:42.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaFValue
17:26:42.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaPValue, DisplayName: testAnovaPValue(org.apache.commons.math.stat.inference.OneWayAnovaTest)
17:26:42.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaPValue
17:26:42.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
17:26:42.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:42.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.MullerSolverTest

17:26:42.453 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:42.453 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.analysis.MullerSolverTest, MethodName: testExpm1Function2, DisplayName: testExpm1Function2(org.apache.commons.math.analysis.MullerSolverTest)

17:26:42.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.MullerSolverTest, MethodName: testExpm1Function2
17:26:42.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.MullerSolverTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.MullerSolverTest)
17:26:42.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.MullerSolverTest, MethodName: testParameters
17:26:42.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.MullerSolverTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.MullerSolverTest)
17:26:42.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.MullerSolverTest, MethodName: testSinFunction
17:26:42.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.MullerSolverTest, MethodName: testQuinticFunction2, DisplayName: testQuinticFunction2(org.apache.commons.math.analysis.MullerSolverTest)
17:26:42.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.MullerSolverTest, MethodName: testQuinticFunction2
17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.MullerSolverTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.MullerSolverTest)
17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.MullerSolverTest, MethodName: testExpm1Function
17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.MullerSolverTest, MethodName: testSinFunction2, DisplayName: testSinFunction2(org.apache.commons.math.analysis.MullerSolverTest)
17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.MullerSolverTest, MethodName: testSinFunction2
17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.MullerSolverTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.MullerSolverTest)
17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.MullerSolverTest, MethodName: testQuinticFunction
17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:42.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.VarianceTest

17:26:42.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
17:26:42.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

17:26:42.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testNaN
17:26:42.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testPopulation, DisplayName: testPopulation(org.apache.commons.math.stat.descriptive.moment.VarianceTest)
17:26:42.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testPopulation
17:26:42.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.VarianceTest)
17:26:42.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testMomentSmallSamples

17:26:42.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.VarianceTest)
17:26:42.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testSerialization
17:26:42.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

17:26:42.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testIncrementation
17:26:42.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.VarianceTest)
17:26:42.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testConsistency
17:26:42.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.VarianceTest)
17:26:42.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEqualsAndHashCode
17:26:42.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.VarianceTest)
17:26:42.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEvaluation
17:26:42.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
17:26:42.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:42.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.DormandPrince853IntegratorTest

17:26:42.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
17:26:42.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.DormandPrince853IntegratorTest)

17:26:42.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testDimensionCheck
17:26:42.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testSwitchingFunctions, DisplayName: testSwitchingFunctions(org.apache.commons.math.ode.DormandPrince853IntegratorTest)
17:26:42.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testSwitchingFunctions
17:26:42.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testVariableSteps, DisplayName: testVariableSteps(org.apache.commons.math.ode.DormandPrince853IntegratorTest)
17:26:42.465 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testVariableSteps
17:26:42.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testNoDenseOutput, DisplayName: testNoDenseOutput(org.apache.commons.math.ode.DormandPrince853IntegratorTest)
17:26:42.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testNoDenseOutput
17:26:42.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.DormandPrince853IntegratorTest)
17:26:42.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testMinStep
17:26:42.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testUnstableDerivative, DisplayName: testUnstableDerivative(org.apache.commons.math.ode.DormandPrince853IntegratorTest)
17:26:42.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testUnstableDerivative
17:26:42.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testNullIntervalCheck, DisplayName: testNullIntervalCheck(org.apache.commons.math.ode.DormandPrince853IntegratorTest)
17:26:42.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testNullIntervalCheck
17:26:42.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.DormandPrince853IntegratorTest)
17:26:42.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testKepler
17:26:42.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.DormandPrince853IntegratorTest)
17:26:42.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince853IntegratorTest, MethodName: testIncreasingTolerance
17:26:42.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9

17:26:42.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.NelderMeadTest
17:26:42.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
17:26:42.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.optimization.NelderMeadTest, MethodName: testCostExceptions, DisplayName: testCostExceptions(org.apache.commons.math.optimization.NelderMeadTest)

17:26:42.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.NelderMeadTest, MethodName: testCostExceptions
17:26:42.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.NelderMeadTest, MethodName: testRosenbrock, DisplayName: testRosenbrock(org.apache.commons.math.optimization.NelderMeadTest)
17:26:42.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.NelderMeadTest, MethodName: testRosenbrock
17:26:42.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.NelderMeadTest, MethodName: testPowell, DisplayName: testPowell(org.apache.commons.math.optimization.NelderMeadTest)
17:26:42.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.NelderMeadTest, MethodName: testPowell
17:26:42.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

17:26:42.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest
17:26:42.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
17:26:42.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest)

17:26:42.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest, MethodName: testSerialization
17:26:42.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest, MethodName: testClone, DisplayName: testClone(org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest)

17:26:42.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest, MethodName: testClone
17:26:42.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2

17:26:42.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.HypergeometricDistributionTest
17:26:42.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:42.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
17:26:42.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testLargeValues, DisplayName: testLargeValues(org.apache.commons.math.distribution.HypergeometricDistributionTest)

17:26:43.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testLargeValues
17:26:43.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:43.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoFailures, DisplayName: testDegenerateNoFailures(org.apache.commons.math.distribution.HypergeometricDistributionTest)
17:26:43.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:43.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoFailures
17:26:43.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:43.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoSuccesses, DisplayName: testDegenerateNoSuccesses(org.apache.commons.math.distribution.HypergeometricDistributionTest)
17:26:43.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:43.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoSuccesses
17:26:43.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:43.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateFullSample, DisplayName: testDegenerateFullSample(org.apache.commons.math.distribution.HypergeometricDistributionTest)
17:26:43.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:43.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateFullSample
17:26:43.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:43.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testPopulationSize, DisplayName: testPopulationSize(org.apache.commons.math.distribution.HypergeometricDistributionTest)
17:26:43.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:43.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testPopulationSize
17:26:43.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testMoreLargeValues, DisplayName: testMoreLargeValues(org.apache.commons.math.distribution.HypergeometricDistributionTest)

17:26:45.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testMoreLargeValues
17:26:45.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.HypergeometricDistributionTest)
17:26:45.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDensities
17:26:45.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.HypergeometricDistributionTest)

17:26:45.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testInverseCumulativeProbabilities
17:26:45.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.HypergeometricDistributionTest)
17:26:45.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testCumulativeProbabilities
17:26:45.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.HypergeometricDistributionTest)
17:26:45.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testIllegalArguments

17:26:45.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.HypergeometricDistributionTest)
17:26:45.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testFloatingPointArguments
17:26:45.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
17:26:45.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.DuplicateSampleAbscissaExceptionTest

17:26:45.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:45.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.DuplicateSampleAbscissaExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.DuplicateSampleAbscissaExceptionTest)

17:26:45.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.DuplicateSampleAbscissaExceptionTest, MethodName: testConstructor
17:26:45.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
17:26:45.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:45.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest

17:26:45.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
17:26:45.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterInjection
17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterIllegalState, DisplayName: testSetterIllegalState(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)
17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterIllegalState
17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)
17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testProductAndGeometricMean
17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testGetSummary, DisplayName: testGetSummary(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)
17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testGetSummary
17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)
17:26:45.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSerialization
17:26:45.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)
17:26:45.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testStats
17:26:45.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)
17:26:45.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testNaNContracts

17:26:45.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)
17:26:45.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testN0andN1Conditions
17:26:45.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)
17:26:45.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testEqualsAndHashCode
17:26:45.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
17:26:45.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:45.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.MidpointStepInterpolatorTest

17:26:45.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:45.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.MidpointStepInterpolatorTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.ode.MidpointStepInterpolatorTest)

17:26:45.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.MidpointStepInterpolatorTest, MethodName: testSerialization
17:26:45.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
17:26:45.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:45.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.GammaDistributionTest

17:26:45.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
17:26:45.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testProbabilities, DisplayName: testProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)

17:26:45.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testProbabilities
17:26:45.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testParameterAccessors, DisplayName: testParameterAccessors(org.apache.commons.math.distribution.GammaDistributionTest)
17:26:45.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testParameterAccessors
17:26:45.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.GammaDistributionTest)
17:26:45.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes
17:26:45.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testValues, DisplayName: testValues(org.apache.commons.math.distribution.GammaDistributionTest)
17:26:45.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testValues
17:26:45.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)
17:26:45.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilities
17:26:45.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)
17:26:45.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testCumulativeProbabilities
17:26:45.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.GammaDistributionTest)
17:26:45.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testIllegalArguments
17:26:45.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.GammaDistributionTest)
17:26:45.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testConsistency
17:26:45.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
17:26:45.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.InteractionTest
17:26:45.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:45.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.InteractionTest, MethodName: testInteraction, DisplayName: testInteraction(org.apache.commons.math.stat.descriptive.InteractionTest)

17:26:45.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.InteractionTest, MethodName: testInteraction
17:26:45.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
17:26:45.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:45.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.ProductTest

17:26:45.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
17:26:45.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.ProductTest)

17:26:45.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSpecialValues
17:26:45.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.ProductTest)
17:26:45.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testMomentSmallSamples
17:26:45.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.ProductTest)
17:26:45.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSerialization
17:26:45.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.ProductTest)
17:26:45.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testIncrementation
17:26:45.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.ProductTest)
17:26:45.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testConsistency
17:26:45.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.ProductTest)
17:26:45.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEqualsAndHashCode
17:26:45.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.ProductTest)
17:26:45.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEvaluation

17:26:45.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
17:26:45.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:45.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.MatrixIndexExceptionTest

17:26:45.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
17:26:45.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.linear.MatrixIndexExceptionTest, MethodName: testConstructorMessage, DisplayName: testConstructorMessage(org.apache.commons.math.linear.MatrixIndexExceptionTest)

17:26:45.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixIndexExceptionTest, MethodName: testConstructorMessage
17:26:45.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
17:26:45.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

17:26:45.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest

17:26:45.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
17:26:45.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest)

17:26:45.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest, MethodName: testSerialization

17:26:45.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest, MethodName: testClone, DisplayName: testClone(org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest)
17:26:45.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest, MethodName: testClone
17:26:45.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

17:26:45.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2

17:26:45.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

17:26:45.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - <<< End subprocess output
17:26:46.131 [main] DEBUG f.i.l.r.n.s.g.GZoltarSuspiciousProgramStatements - Suspicious statements:
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=108, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=58, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=63, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=66, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=69, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=109, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=110, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=111, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=390, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=394, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=395, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=399, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=400, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=404, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=405, Suspiciousness=0.04578685464956301]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=404, Suspiciousness=0.04578685464956301]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=410, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=411, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=413, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=414, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=416, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=420, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=421, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=420, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=423, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=424, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=523, Suspiciousness=0.046225016352102424]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=526, Suspiciousness=0.046225016352102424]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=604, Suspiciousness=0.041666666666666664]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=611, Suspiciousness=0.041666666666666664]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1020, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1021, Suspiciousness=0.044946657497549475]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1031, Suspiciousness=0.04578685464956301]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1032, Suspiciousness=0.04578685464956301]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1034, Suspiciousness=0.04578685464956301]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=88, Suspiciousness=0.05337605126836238]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=58, Suspiciousness=0.05337605126836238]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=63, Suspiciousness=0.05337605126836238]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=66, Suspiciousness=0.05337605126836238]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=69, Suspiciousness=0.05337605126836238]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=89, Suspiciousness=0.05337605126836238]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=93, Suspiciousness=0.05407380704358752]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=94, Suspiciousness=0.05407380704358752]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=95, Suspiciousness=0.05407380704358752]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=278, Suspiciousness=0.05337605126836238]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=79, Suspiciousness=0.04914731871829905]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=80, Suspiciousness=0.04914731871829905]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=86, Suspiciousness=0.04578685464956301]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=92, Suspiciousness=0.047619047619047616]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=111, Suspiciousness=0.047619047619047616]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=38, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=39, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=48, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=49, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=73, Suspiciousness=0.05716619504750295]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=74, Suspiciousness=0.05716619504750295]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=75, Suspiciousness=0.05716619504750295]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=76, Suspiciousness=0.05716619504750295]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=77, Suspiciousness=0.05716619504750295]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=78, Suspiciousness=0.05716619504750295]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=79, Suspiciousness=0.05716619504750295]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=78, Suspiciousness=0.05716619504750295]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=75, Suspiciousness=0.05716619504750295]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=82, Suspiciousness=0.05716619504750295]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=88, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=89, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=99, Suspiciousness=0.049690399499995326]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=104, Suspiciousness=0.049690399499995326]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=105, Suspiciousness=0.049690399499995326]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=106, Suspiciousness=0.049690399499995326]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=107, Suspiciousness=0.049690399499995326]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=108, Suspiciousness=0.049690399499995326]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=109, Suspiciousness=0.049690399499995326]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=105, Suspiciousness=0.049690399499995326]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=111, Suspiciousness=0.049690399499995326]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=113, Suspiciousness=0.049690399499995326]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=127, Suspiciousness=0.052057920629535355]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=128, Suspiciousness=0.052057920629535355]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=129, Suspiciousness=0.052057920629535355]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=130, Suspiciousness=0.052057920629535355]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=131, Suspiciousness=0.052057920629535355]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=129, Suspiciousness=0.052057920629535355]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=133, Suspiciousness=0.052057920629535355]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=226, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=227, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=230, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=231, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=234, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=235, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=236, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=237, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=239, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=241, Suspiciousness=0.048112522432468816]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=73, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=74, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=75, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=76, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=77, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=105, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=108, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=109, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=110, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=111, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=112, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=115, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=119, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=120, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=121, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=122, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=123, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=125, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=126, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=129, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=130, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=131, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=129, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=135, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=136, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=137, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=138, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=139, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=138, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=135, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=144, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=145, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=122, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=153, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=156, Suspiciousness=0.09622504486493763]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=157, Suspiciousness=0.09622504486493763]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=156, Suspiciousness=0.09622504486493763]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=162, Suspiciousness=0.09622504486493763]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=165, Suspiciousness=0.09622504486493763]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=166, Suspiciousness=0.09622504486493763]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=168, Suspiciousness=0.09622504486493763]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=172, Suspiciousness=0.10540925533894598]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=147, Suspiciousness=0.07856742013183861]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=151, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=152, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=153, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=154, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=155, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=156, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=155, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=154, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=159, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=267, Suspiciousness=0.05716619504750295]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=581, Suspiciousness=0.06666666666666667]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=588, Suspiciousness=0.06950480468569159]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=590, Suspiciousness=0.06950480468569159]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=591, Suspiciousness=0.07647191129018725]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=710, Suspiciousness=0.07273929674533079]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=713, Suspiciousness=0.07273929674533079]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=716, Suspiciousness=0.07273929674533079]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=720, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=721, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=722, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=725, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=726, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=727, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=728, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=727, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=726, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=733, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=734, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=735, Suspiciousness=0.08333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=736, Suspiciousness=0.08333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=735, Suspiciousness=0.08333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=734, Suspiciousness=0.08333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=733, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=742, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=743, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=744, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=743, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=746, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=747, Suspiciousness=0.08333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=748, Suspiciousness=0.08333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=747, Suspiciousness=0.08333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=746, Suspiciousness=0.08333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=742, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=753, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=754, Suspiciousness=0.08084520834544433]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=777, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=778, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=779, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=782, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=785, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=786, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=787, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=786, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=789, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=792, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=794, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=797, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=798, Suspiciousness=0.06950480468569159]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=799, Suspiciousness=0.06950480468569159]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=802, Suspiciousness=0.06950480468569159]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=797, Suspiciousness=0.06950480468569159]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=806, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=807, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=808, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=809, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=810, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=811, Suspiciousness=0.06950480468569159]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=810, Suspiciousness=0.06950480468569159]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=813, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=816, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=817, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=818, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=808, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=823, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=829, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=843, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=844, Suspiciousness=0.06950480468569159]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=843, Suspiciousness=0.06950480468569159]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=792, Suspiciousness=0.06804138174397717]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=847, Suspiciousness=0.07453559924999299]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1000, Suspiciousness=0.0563436169819011]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1001, Suspiciousness=0.0563436169819011]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1003, Suspiciousness=0.0563436169819011]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1004, Suspiciousness=0.0563436169819011]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1003, Suspiciousness=0.0563436169819011]
GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1006, Suspiciousness=0.0563436169819011]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=107, Suspiciousness=0.08606629658238704]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=80, Suspiciousness=0.09622504486493763]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=81, Suspiciousness=0.09622504486493763]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=82, Suspiciousness=0.09622504486493763]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=83, Suspiciousness=0.09622504486493763]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=84, Suspiciousness=0.09622504486493763]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=146, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=147, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=155, Suspiciousness=0.08333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=48, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=49, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=50, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=51, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=68, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=69, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=70, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=71, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=72, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=74, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=77, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=86, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=93, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=94, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=101, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=102, Suspiciousness=0.09245003270420485]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=57, Suspiciousness=0.0890870806374748]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=58, Suspiciousness=0.23570226039551587]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=59, Suspiciousness=0.23570226039551587]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=60, Suspiciousness=0.23570226039551587]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=61, Suspiciousness=0.23570226039551587]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=62, Suspiciousness=0.23570226039551587]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=63, Suspiciousness=0.23570226039551587]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=162, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=165, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=166, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=167, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=168, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=169, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=170, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=171, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=172, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=173, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=172, Suspiciousness=0.19245008972987526]
GZoltarStatement [ContainingClass=org.apache.commons.math.analysis.SinFunction, LineNumber=31, Suspiciousness=0.23210354127426377]
GZoltarStatement [ContainingClass=org.apache.commons.math.analysis.SinFunction, LineNumber=37, Suspiciousness=0.13608276348795434]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=49, Suspiciousness=0.3849001794597505]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=50, Suspiciousness=0.3849001794597505]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=66, Suspiciousness=0.3333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=225, Suspiciousness=0.3849001794597505]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=227, Suspiciousness=0.3849001794597505]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=228, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=232, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=233, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=239, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=240, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=241, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=242, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=243, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=244, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=245, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=246, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=242, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=248, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=61, Suspiciousness=0.8819171036881969]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=49, Suspiciousness=0.8819171036881969]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=520, Suspiciousness=0.5443310539518174]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=530, Suspiciousness=0.3849001794597505]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=534, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=87, Suspiciousness=0.23570226039551587]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=88, Suspiciousness=0.23570226039551587]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=89, Suspiciousness=0.23570226039551587]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=470, Suspiciousness=0.3333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=473, Suspiciousness=0.3333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=475, Suspiciousness=0.3333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=476, Suspiciousness=0.3333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=477, Suspiciousness=0.3333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=478, Suspiciousness=0.3333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=477, Suspiciousness=0.3333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=480, Suspiciousness=0.3333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=559, Suspiciousness=0.3333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=564, Suspiciousness=0.3333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=49, Suspiciousness=0.3849001794597505]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=50, Suspiciousness=0.3849001794597505]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=67, Suspiciousness=0.3333333333333333]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=231, Suspiciousness=0.3849001794597505]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=233, Suspiciousness=0.3849001794597505]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=234, Suspiciousness=0.3849001794597505]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=238, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=245, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=246, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=247, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=248, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=249, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=250, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=251, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=252, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=253, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=254, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=255, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=249, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=257, Suspiciousness=0.47140452079103173]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=89, Suspiciousness=0.23570226039551587]
GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=90, Suspiciousness=0.23570226039551587]
17:26:46.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1. org.apache.commons.math.ArgumentOutsideDomainExceptionTest#testConstructor started...]
17:26:46.465 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
17:26:46.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2. org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArgumentsCause started...]
17:26:46.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
17:26:46.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#3. org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArguments started...]
17:26:46.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
17:26:46.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#4. org.apache.commons.math.ConvergenceExceptionTest#testConstructorCause started...]
17:26:46.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
17:26:46.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#5. org.apache.commons.math.ConvergenceExceptionTest#testConstructor started...]
17:26:46.468 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
17:26:46.468 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#6. org.apache.commons.math.DuplicateSampleAbscissaExceptionTest#testConstructor started...]
17:26:46.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
17:26:46.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#7. org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArgumentCause started...]
17:26:46.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
17:26:46.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#8. org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArgumentsCause started...]
17:26:46.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
17:26:46.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#9. org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArguments started...]
17:26:46.470 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
17:26:46.471 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#10. org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructor started...]
17:26:46.471 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
17:26:46.471 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#11. org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArgumentsCause started...]
17:26:46.472 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
17:26:46.472 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#12. org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArguments started...]
17:26:46.472 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
17:26:46.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#13. org.apache.commons.math.MathConfigurationExceptionTest#testConstructorCause started...]
17:26:46.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
17:26:46.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#14. org.apache.commons.math.MathConfigurationExceptionTest#testConstructor started...]
17:26:46.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
17:26:46.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#15. org.apache.commons.math.MathExceptionTest#testConstructorPatternArgumentsCause started...]
17:26:46.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
17:26:46.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#16. org.apache.commons.math.MathExceptionTest#testSerialization started...]
17:26:46.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
17:26:46.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#17. org.apache.commons.math.MathExceptionTest#testConstructorPatternArguments started...]
17:26:46.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
17:26:46.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#18. org.apache.commons.math.MathExceptionTest#testConstructorCause started...]
17:26:46.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
17:26:46.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#19. org.apache.commons.math.MathExceptionTest#testPrintStackTrace started...]
17:26:46.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
17:26:46.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#20. org.apache.commons.math.MathExceptionTest#testConstructor started...]
17:26:46.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
17:26:46.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#21. org.apache.commons.math.MaxIterationsExceededExceptionTest#testComplexConstructor started...]
17:26:46.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
17:26:46.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#22. org.apache.commons.math.MaxIterationsExceededExceptionTest#testSimpleConstructor started...]
17:26:46.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
17:26:46.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#23. org.apache.commons.math.analysis.BisectionSolverTest#testSetMaximalIterationCount started...]
17:26:46.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
17:26:46.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#24. org.apache.commons.math.analysis.BisectionSolverTest#testSetRelativeAccuracy started...]
17:26:46.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#24. SUCCESS]
17:26:46.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#25. org.apache.commons.math.analysis.BisectionSolverTest#testSetAbsoluteAccuracy started...]
17:26:46.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
17:26:46.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#26. org.apache.commons.math.analysis.BisectionSolverTest#testSerialization started...]
17:26:46.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#26. SUCCESS]
17:26:46.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#27. org.apache.commons.math.analysis.BisectionSolverTest#testSetFunctionValueAccuracy started...]
17:26:46.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
17:26:46.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#28. org.apache.commons.math.analysis.BisectionSolverTest#testResetRelativeAccuracy started...]
17:26:46.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#28. SUCCESS]
17:26:46.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#29. org.apache.commons.math.analysis.BisectionSolverTest#testResetAbsoluteAccuracy started...]
17:26:46.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
17:26:46.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#30. org.apache.commons.math.analysis.BisectionSolverTest#testResetMaximalIterationCount started...]
17:26:46.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
17:26:46.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#31. org.apache.commons.math.analysis.BisectionSolverTest#testResetFunctionValueAccuracy started...]
17:26:46.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
17:26:46.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#32. org.apache.commons.math.analysis.BisectionSolverTest#testQuinticZero started...]
17:26:46.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
17:26:46.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#33. org.apache.commons.math.analysis.BisectionSolverTest#testSinZero started...]
17:26:46.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
17:26:46.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#34. org.apache.commons.math.analysis.BrentSolverTest#testBadEndpoints started...]
17:26:46.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
17:26:46.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#35. org.apache.commons.math.analysis.BrentSolverTest#testInitialGuess started...]
17:26:46.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
17:26:46.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#36. org.apache.commons.math.analysis.BrentSolverTest#testQuinticZero started...]
17:26:46.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
17:26:46.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#37. org.apache.commons.math.analysis.BrentSolverTest#testSinZero started...]
17:26:46.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
17:26:46.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#38. org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest#testParameters started...]
17:26:46.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
17:26:46.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#39. org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest#testSinFunction started...]
17:26:46.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
17:26:46.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#40. org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest#testExpm1Function started...]
17:26:46.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
17:26:46.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#41. org.apache.commons.math.analysis.LaguerreSolverTest#testLinearFunction started...]
17:26:46.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
17:26:46.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#42. org.apache.commons.math.analysis.LaguerreSolverTest#testQuadraticFunction started...]
17:26:46.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
17:26:46.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#43. org.apache.commons.math.analysis.LaguerreSolverTest#testParameters started...]
17:26:46.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
17:26:46.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#44. org.apache.commons.math.analysis.LaguerreSolverTest#testQuinticFunction2 started...]
17:26:46.513 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
17:26:46.513 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#45. org.apache.commons.math.analysis.LaguerreSolverTest#testQuinticFunction started...]
17:26:46.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
17:26:46.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#46. org.apache.commons.math.analysis.MullerSolverTest#testExpm1Function2 started...]
17:26:46.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
17:26:46.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#47. org.apache.commons.math.analysis.MullerSolverTest#testParameters started...]
17:26:46.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
17:26:46.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#48. org.apache.commons.math.analysis.MullerSolverTest#testSinFunction started...]
17:26:46.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
17:26:46.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#49. org.apache.commons.math.analysis.MullerSolverTest#testQuinticFunction2 started...]
17:26:46.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
17:26:46.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#50. org.apache.commons.math.analysis.MullerSolverTest#testExpm1Function started...]
17:26:46.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
17:26:46.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#51. org.apache.commons.math.analysis.MullerSolverTest#testSinFunction2 started...]
17:26:46.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
17:26:46.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#52. org.apache.commons.math.analysis.MullerSolverTest#testQuinticFunction started...]
17:26:46.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
17:26:46.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#53. org.apache.commons.math.analysis.NevilleInterpolatorTest#testParameters started...]
17:26:46.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
17:26:46.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#54. org.apache.commons.math.analysis.NevilleInterpolatorTest#testSinFunction started...]
17:26:46.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
17:26:46.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#55. org.apache.commons.math.analysis.NevilleInterpolatorTest#testExpm1Function started...]
17:26:46.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
17:26:46.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#56. org.apache.commons.math.analysis.NewtonSolverTest#testSerialization started...]
17:26:46.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
17:26:46.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#57. org.apache.commons.math.analysis.NewtonSolverTest#testQuinticZero started...]
17:26:46.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
17:26:46.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#58. org.apache.commons.math.analysis.NewtonSolverTest#testSinZero started...]
17:26:46.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
17:26:46.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#59. org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testLinearFunction started...]
17:26:46.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
17:26:46.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#60. org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testQuadraticFunction started...]
17:26:46.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
17:26:46.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#61. org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testParameters started...]
17:26:46.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
17:26:46.521 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#62. org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testQuinticFunction started...]
17:26:46.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
17:26:46.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#63. org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testLinearFunction started...]
17:26:46.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
17:26:46.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#64. org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testQuadraticFunction started...]
17:26:46.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
17:26:46.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#65. org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testParameters started...]
17:26:46.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
17:26:46.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#66. org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testQuinticFunction started...]
17:26:46.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
17:26:46.522 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#67. org.apache.commons.math.analysis.PolynomialFunctionTest#testfirstDerivativeComparison started...]
17:26:46.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
17:26:46.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#68. org.apache.commons.math.analysis.PolynomialFunctionTest#testQuadratic started...]
17:26:46.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
17:26:46.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#69. org.apache.commons.math.analysis.PolynomialFunctionTest#testConstants started...]
17:26:46.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
17:26:46.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#70. org.apache.commons.math.analysis.PolynomialFunctionTest#testQuintic started...]
17:26:46.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
17:26:46.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#71. org.apache.commons.math.analysis.PolynomialFunctionTest#testLinear started...]
17:26:46.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
17:26:46.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#72. org.apache.commons.math.analysis.PolynomialSplineFunctionTest#testValues started...]
17:26:46.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
17:26:46.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#73. org.apache.commons.math.analysis.PolynomialSplineFunctionTest#testConstructor started...]
17:26:46.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
17:26:46.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#74. org.apache.commons.math.analysis.RiddersSolverTest#testParameters started...]
17:26:46.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
17:26:46.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#75. org.apache.commons.math.analysis.RiddersSolverTest#testSinFunction started...]
17:26:46.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#75. SUCCESS]
17:26:46.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#76. org.apache.commons.math.analysis.RiddersSolverTest#testExpm1Function started...]
17:26:46.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#76. SUCCESS]
17:26:46.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#77. org.apache.commons.math.analysis.RiddersSolverTest#testQuinticFunction started...]
17:26:46.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#77. SUCCESS]
17:26:46.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#78. org.apache.commons.math.analysis.RombergIntegratorTest#testParameters started...]
17:26:46.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#78. SUCCESS]
17:26:46.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#79. org.apache.commons.math.analysis.RombergIntegratorTest#testSinFunction started...]
17:26:46.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#79. SUCCESS]
17:26:46.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#80. org.apache.commons.math.analysis.RombergIntegratorTest#testQuinticFunction started...]
17:26:46.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#80. SUCCESS]
17:26:46.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#81. org.apache.commons.math.analysis.SimpsonIntegratorTest#testParameters started...]
17:26:46.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#81. SUCCESS]
17:26:46.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#82. org.apache.commons.math.analysis.SimpsonIntegratorTest#testSinFunction started...]
17:26:46.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#82. SUCCESS]
17:26:46.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#83. org.apache.commons.math.analysis.SimpsonIntegratorTest#testQuinticFunction started...]
17:26:46.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#83. SUCCESS]
17:26:46.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#84. org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateSin started...]
17:26:46.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#84. SUCCESS]
17:26:46.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#85. org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment started...]
17:26:46.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#85. SUCCESS]
17:26:46.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#86. org.apache.commons.math.analysis.SplineInterpolatorTest#testIllegalArguments started...]
17:26:46.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#86. SUCCESS]
17:26:46.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#87. org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateLinear started...]
17:26:46.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#87. SUCCESS]
17:26:46.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#88. org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment started...]
17:26:46.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#88. SUCCESS]
17:26:46.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#89. org.apache.commons.math.analysis.TrapezoidIntegratorTest#testParameters started...]
17:26:46.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#89. SUCCESS]
17:26:46.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#90. org.apache.commons.math.analysis.TrapezoidIntegratorTest#testSinFunction started...]
17:26:46.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#90. SUCCESS]
17:26:46.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#91. org.apache.commons.math.analysis.TrapezoidIntegratorTest#testQuinticFunction started...]
17:26:46.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#91. SUCCESS]
17:26:46.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#92. org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBrentSolverValid started...]
17:26:46.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#92. SUCCESS]
17:26:46.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#93. org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBisectionSolverValid started...]
17:26:46.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#93. SUCCESS]
17:26:46.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#94. org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBrentSolverNull started...]
17:26:46.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#94. SUCCESS]
17:26:46.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#95. org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBisectionSolverNull started...]
17:26:46.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#95. SUCCESS]
17:26:46.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#96. org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewNewtonSolverNull started...]
17:26:46.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#96. SUCCESS]
17:26:46.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#97. org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewNewtonSolverValid started...]
17:26:46.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#97. SUCCESS]
17:26:46.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#98. org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewSecantSolverValid started...]
17:26:46.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#98. SUCCESS]
17:26:46.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#99. org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewSecantSolverNull started...]
17:26:46.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#99. SUCCESS]
17:26:46.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#100. org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveNoRoot started...]
17:26:46.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#100. SUCCESS]
17:26:46.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#101. org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveSin started...]
17:26:46.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#101. SUCCESS]
17:26:46.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#102. org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveAccuracySin started...]
17:26:46.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#102. SUCCESS]
17:26:46.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#103. org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveBadParameters started...]
17:26:46.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#103. SUCCESS]
17:26:46.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#104. org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveNull started...]
17:26:46.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#104. SUCCESS]
17:26:46.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#105. org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testBracketSin started...]
17:26:46.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#105. SUCCESS]
17:26:46.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#106. org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testBracketCornerSolution started...]
17:26:46.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#106. SUCCESS]
17:26:46.536 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#107. org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveAccuracyNull started...]
17:26:46.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#107. SUCCESS]
17:26:46.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#108. org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testBadParameters started...]
17:26:46.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#108. SUCCESS]
17:26:46.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#109. org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary started...]
17:26:46.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#109. SUCCESS]
17:26:46.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#110. org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat started...]
17:26:46.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#110. SUCCESS]
17:26:46.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#111. org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals started...]
17:26:46.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#111. SUCCESS]
17:26:46.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#112. org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary started...]
17:26:46.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#112. SUCCESS]
17:26:46.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#113. org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryFormatNull started...]
17:26:46.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#113. SUCCESS]
17:26:46.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#114. org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar started...]
17:26:46.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#114. SUCCESS]
17:26:46.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#115. org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber started...]
17:26:46.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#115. SUCCESS]
17:26:46.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#116. org.apache.commons.math.complex.ComplexFormatTest#testFormatObject started...]
17:26:46.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#116. SUCCESS]
17:26:46.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#117. org.apache.commons.math.complex.ComplexFormatTest#testNan started...]
17:26:46.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#117. SUCCESS]
17:26:46.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#118. org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc started...]
17:26:46.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#118. SUCCESS]
17:26:46.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#119. org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterNull started...]
17:26:46.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#119. SUCCESS]
17:26:46.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#120. org.apache.commons.math.complex.ComplexFormatTest#testStaticFormatComplex started...]
17:26:46.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#120. SUCCESS]
17:26:46.541 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#121. org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat started...]
17:26:46.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#121. SUCCESS]
17:26:46.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#122. org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth started...]
17:26:46.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#122. SUCCESS]
17:26:46.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#123. org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal started...]
17:26:46.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#123. SUCCESS]
17:26:46.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#124. org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat started...]
17:26:46.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#124. SUCCESS]
17:26:46.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#125. org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc started...]
17:26:46.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#125. SUCCESS]
17:26:46.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#126. org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity started...]
17:26:46.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#126. SUCCESS]
17:26:46.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#127. org.apache.commons.math.complex.ComplexFormatTest#testSetRealFormatNull started...]
17:26:46.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#127. SUCCESS]
17:26:46.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#128. org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity started...]
17:26:46.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#128. SUCCESS]
17:26:46.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#129. org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar started...]
17:26:46.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#129. SUCCESS]
17:26:46.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#130. org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterEmpty started...]
17:26:46.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#130. SUCCESS]
17:26:46.544 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#131. org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals started...]
17:26:46.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#131. SUCCESS]
17:26:46.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#132. org.apache.commons.math.complex.ComplexFormatTest#testZeroReal started...]
17:26:46.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#132. SUCCESS]
17:26:46.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#133. org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth started...]
17:26:46.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#133. SUCCESS]
17:26:46.545 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#134. org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal started...]
17:26:46.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#134. SUCCESS]
17:26:46.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#135. org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary started...]
17:26:46.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#135. SUCCESS]
17:26:46.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#136. org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals started...]
17:26:46.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#136. SUCCESS]
17:26:46.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#137. org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity started...]
17:26:46.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#137. SUCCESS]
17:26:46.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#138. org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter started...]
17:26:46.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#138. SUCCESS]
17:26:46.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#139. org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal started...]
17:26:46.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#139. SUCCESS]
17:26:46.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#140. org.apache.commons.math.complex.ComplexFormatTest#testParseNan started...]
17:26:46.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#140. SUCCESS]
17:26:46.547 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#141. org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary started...]
17:26:46.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#141. SUCCESS]
17:26:46.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#142. org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity started...]
17:26:46.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#142. SUCCESS]
17:26:46.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#143. org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals started...]
17:26:46.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#143. SUCCESS]
17:26:46.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#144. org.apache.commons.math.complex.ComplexTest#testTanhInf started...]
17:26:46.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#144. SUCCESS]
17:26:46.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#145. org.apache.commons.math.complex.ComplexTest#testTanhNaN started...]
17:26:46.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#145. SUCCESS]
17:26:46.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#146. org.apache.commons.math.complex.ComplexTest#testConjugateNaN started...]
17:26:46.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#146. SUCCESS]
17:26:46.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#147. org.apache.commons.math.complex.ComplexTest#testAcosInf started...]
17:26:46.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#147. SUCCESS]
17:26:46.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#148. org.apache.commons.math.complex.ComplexTest#testAcosNaN started...]
17:26:46.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#148. SUCCESS]
17:26:46.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#149. org.apache.commons.math.complex.ComplexTest#testEqualsClass started...]
17:26:46.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#149. SUCCESS]
17:26:46.549 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#150. org.apache.commons.math.complex.ComplexTest#testAddInfinite started...]
17:26:46.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#150. SUCCESS]
17:26:46.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#151. org.apache.commons.math.complex.ComplexTest#testAbs started...]
17:26:46.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#151. SUCCESS]
17:26:46.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#152. org.apache.commons.math.complex.ComplexTest#testAdd started...]
17:26:46.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#152. SUCCESS]
17:26:46.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#153. org.apache.commons.math.complex.ComplexTest#testCos started...]
17:26:46.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#153. SUCCESS]
17:26:46.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#154. org.apache.commons.math.complex.ComplexTest#testExp started...]
17:26:46.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#154. SUCCESS]
17:26:46.550 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#155. org.apache.commons.math.complex.ComplexTest#testLog started...]
17:26:46.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#155. SUCCESS]
17:26:46.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#156. org.apache.commons.math.complex.ComplexTest#testPow started...]
17:26:46.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#156. SUCCESS]
17:26:46.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#157. org.apache.commons.math.complex.ComplexTest#testSin started...]
17:26:46.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#157. SUCCESS]
17:26:46.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#158. org.apache.commons.math.complex.ComplexTest#testTan started...]
17:26:46.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#158. SUCCESS]
17:26:46.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#159. org.apache.commons.math.complex.ComplexTest#testSubtract started...]
17:26:46.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#159. SUCCESS]
17:26:46.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#160. org.apache.commons.math.complex.ComplexTest#testDivideNaNInf started...]
17:26:46.551 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#160. SUCCESS]
17:26:46.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#161. org.apache.commons.math.complex.ComplexTest#testAcos started...]
17:26:46.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#161. SUCCESS]
17:26:46.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#162. org.apache.commons.math.complex.ComplexTest#testAsin started...]
17:26:46.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#162. SUCCESS]
17:26:46.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#163. org.apache.commons.math.complex.ComplexTest#testAtan started...]
17:26:46.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#163. SUCCESS]
17:26:46.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#164. org.apache.commons.math.complex.ComplexTest#testCosh started...]
17:26:46.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#164. SUCCESS]
17:26:46.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#165. org.apache.commons.math.complex.ComplexTest#testSinh started...]
17:26:46.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#165. SUCCESS]
17:26:46.552 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#166. org.apache.commons.math.complex.ComplexTest#testTanh started...]
17:26:46.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#166. SUCCESS]
17:26:46.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#167. org.apache.commons.math.complex.ComplexTest#testAsinInf started...]
17:26:46.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#167. SUCCESS]
17:26:46.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#168. org.apache.commons.math.complex.ComplexTest#testAsinNaN started...]
17:26:46.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#168. SUCCESS]
17:26:46.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#169. org.apache.commons.math.complex.ComplexTest#testAtanInf started...]
17:26:46.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#169. SUCCESS]
17:26:46.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#170. org.apache.commons.math.complex.ComplexTest#testAtanNaN started...]
17:26:46.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#170. SUCCESS]
17:26:46.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#171. org.apache.commons.math.complex.ComplexTest#testDivideNaN started...]
17:26:46.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#171. SUCCESS]
17:26:46.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#172. org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference started...]
17:26:46.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#172. SUCCESS]
17:26:46.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#173. org.apache.commons.math.complex.ComplexTest#testNegateNaN started...]
17:26:46.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#173. SUCCESS]
17:26:46.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#174. org.apache.commons.math.complex.ComplexTest#testTanhCritical started...]
17:26:46.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#174. SUCCESS]
17:26:46.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#175. org.apache.commons.math.complex.ComplexTest#testPowZero started...]
17:26:46.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#175. SUCCESS]
17:26:46.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#176. org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero started...]
17:26:46.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#176. SUCCESS]
17:26:46.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#177. org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive started...]
17:26:46.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#177. SUCCESS]
17:26:46.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#178. org.apache.commons.math.complex.ComplexTest#testEqualsNull started...]
17:26:46.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#178. SUCCESS]
17:26:46.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#179. org.apache.commons.math.complex.ComplexTest#testEqualsSame started...]
17:26:46.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#179. SUCCESS]
17:26:46.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#180. org.apache.commons.math.complex.ComplexTest#testEqualsTrue started...]
17:26:46.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#180. SUCCESS]
17:26:46.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#181. org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN started...]
17:26:46.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#181. SUCCESS]
17:26:46.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#182. org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative started...]
17:26:46.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#182. SUCCESS]
17:26:46.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#183. org.apache.commons.math.complex.ComplexTest#testSqrtPolar started...]
17:26:46.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#183. SUCCESS]
17:26:46.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#184. org.apache.commons.math.complex.ComplexTest#testMultiplyNaN started...]
17:26:46.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#184. SUCCESS]
17:26:46.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#185. org.apache.commons.math.complex.ComplexTest#testLogZero started...]
17:26:46.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#185. SUCCESS]
17:26:46.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#186. org.apache.commons.math.complex.ComplexTest#testConjugate started...]
17:26:46.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#186. SUCCESS]
17:26:46.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#187. org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf started...]
17:26:46.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#187. SUCCESS]
17:26:46.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#188. org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference started...]
17:26:46.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#188. SUCCESS]
17:26:46.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#189. org.apache.commons.math.complex.ComplexTest#testTanCritical started...]
17:26:46.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#189. SUCCESS]
17:26:46.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#190. org.apache.commons.math.complex.ComplexTest#testPowNaNBase started...]
17:26:46.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#190. SUCCESS]
17:26:46.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#191. org.apache.commons.math.complex.ComplexTest#testConstructorNaN started...]
17:26:46.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#191. SUCCESS]
17:26:46.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#192. org.apache.commons.math.complex.ComplexTest#testCoshInf started...]
17:26:46.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#192. SUCCESS]
17:26:46.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#193. org.apache.commons.math.complex.ComplexTest#testCoshNaN started...]
17:26:46.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#193. SUCCESS]
17:26:46.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#194. org.apache.commons.math.complex.ComplexTest#testPowNaNExponent started...]
17:26:46.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#194. SUCCESS]
17:26:46.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#195. org.apache.commons.math.complex.ComplexTest#testHashCode started...]
17:26:46.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#195. SUCCESS]
17:26:46.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#196. org.apache.commons.math.complex.ComplexTest#testSqrtRealZero started...]
17:26:46.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#196. SUCCESS]
17:26:46.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#197. org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative started...]
17:26:46.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#197. SUCCESS]
17:26:46.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#198. org.apache.commons.math.complex.ComplexTest#testAbsNaN started...]
17:26:46.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#198. SUCCESS]
17:26:46.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#199. org.apache.commons.math.complex.ComplexTest#testAddNaN started...]
17:26:46.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#199. SUCCESS]
17:26:46.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#200. org.apache.commons.math.complex.ComplexTest#testCosInf started...]
17:26:46.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#200. SUCCESS]
17:26:46.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#201. org.apache.commons.math.complex.ComplexTest#testCosNaN started...]
17:26:46.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#201. SUCCESS]
17:26:46.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#202. org.apache.commons.math.complex.ComplexTest#testDivide started...]
17:26:46.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#202. SUCCESS]
17:26:46.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#203. org.apache.commons.math.complex.ComplexTest#testExpInf started...]
17:26:46.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#203. SUCCESS]
17:26:46.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#204. org.apache.commons.math.complex.ComplexTest#testExpNaN started...]
17:26:46.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#204. SUCCESS]
17:26:46.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#205. org.apache.commons.math.complex.ComplexTest#testMultiply started...]
17:26:46.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#205. SUCCESS]
17:26:46.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#206. org.apache.commons.math.complex.ComplexTest#testEqualsNaN started...]
17:26:46.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#206. SUCCESS]
17:26:46.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#207. org.apache.commons.math.complex.ComplexTest#testLogInf started...]
17:26:46.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#207. SUCCESS]
17:26:46.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#208. org.apache.commons.math.complex.ComplexTest#testLogNaN started...]
17:26:46.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#208. SUCCESS]
17:26:46.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#209. org.apache.commons.math.complex.ComplexTest#testDivideInfinite started...]
17:26:46.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#209. SUCCESS]
17:26:46.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#210. org.apache.commons.math.complex.ComplexTest#testNegate started...]
17:26:46.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#210. SUCCESS]
17:26:46.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#211. org.apache.commons.math.complex.ComplexTest#testPowInf started...]
17:26:46.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#211. SUCCESS]
17:26:46.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#212. org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite started...]
17:26:46.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#212. SUCCESS]
17:26:46.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#213. org.apache.commons.math.complex.ComplexTest#testSinhInf started...]
17:26:46.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#213. SUCCESS]
17:26:46.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#214. org.apache.commons.math.complex.ComplexTest#testSinhNaN started...]
17:26:46.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#214. SUCCESS]
17:26:46.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#215. org.apache.commons.math.complex.ComplexTest#testSinInf started...]
17:26:46.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#215. SUCCESS]
17:26:46.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#216. org.apache.commons.math.complex.ComplexTest#testSinNaN started...]
17:26:46.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#216. SUCCESS]
17:26:46.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#217. org.apache.commons.math.complex.ComplexTest#testSqrt1z started...]
17:26:46.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#217. SUCCESS]
17:26:46.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#218. org.apache.commons.math.complex.ComplexTest#testTanInf started...]
17:26:46.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#218. SUCCESS]
17:26:46.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#219. org.apache.commons.math.complex.ComplexTest#testTanNaN started...]
17:26:46.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#219. SUCCESS]
17:26:46.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#220. org.apache.commons.math.complex.ComplexTest#testpowNull started...]
17:26:46.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#220. SUCCESS]
17:26:46.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#221. org.apache.commons.math.complex.ComplexTest#testSubtractNaN started...]
17:26:46.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#221. SUCCESS]
17:26:46.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#222. org.apache.commons.math.complex.ComplexTest#testAbsInfinite started...]
17:26:46.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#222. SUCCESS]
17:26:46.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#223. org.apache.commons.math.complex.ComplexTest#testSqrtInf started...]
17:26:46.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#223. SUCCESS]
17:26:46.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#224. org.apache.commons.math.complex.ComplexTest#testSqrtNaN started...]
17:26:46.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#224. SUCCESS]
17:26:46.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#225. org.apache.commons.math.complex.ComplexTest#testConstructor started...]
17:26:46.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#225. SUCCESS]
17:26:46.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#226. org.apache.commons.math.complex.ComplexUtilsTest#testTanNull started...]
17:26:46.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#226. SUCCESS]
17:26:46.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#227. org.apache.commons.math.complex.ComplexUtilsTest#testTanhInf started...]
17:26:46.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#227. SUCCESS]
17:26:46.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#228. org.apache.commons.math.complex.ComplexUtilsTest#testTanhNaN started...]
17:26:46.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#228. SUCCESS]
17:26:46.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#229. org.apache.commons.math.complex.ComplexUtilsTest#testSqrt1zNull started...]
17:26:46.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#229. SUCCESS]
17:26:46.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#230. org.apache.commons.math.complex.ComplexUtilsTest#testlogNull started...]
17:26:46.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#230. SUCCESS]
17:26:46.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#231. org.apache.commons.math.complex.ComplexUtilsTest#testExpNull started...]
17:26:46.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#231. SUCCESS]
17:26:46.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#232. org.apache.commons.math.complex.ComplexUtilsTest#testAcosInf started...]
17:26:46.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#232. SUCCESS]
17:26:46.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#233. org.apache.commons.math.complex.ComplexUtilsTest#testAcosNaN started...]
17:26:46.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#233. SUCCESS]
17:26:46.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#234. org.apache.commons.math.complex.ComplexUtilsTest#testCos started...]
17:26:46.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#234. SUCCESS]
17:26:46.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#235. org.apache.commons.math.complex.ComplexUtilsTest#testExp started...]
17:26:46.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#235. SUCCESS]
17:26:46.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#236. org.apache.commons.math.complex.ComplexUtilsTest#testLog started...]
17:26:46.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#236. SUCCESS]
17:26:46.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#237. org.apache.commons.math.complex.ComplexUtilsTest#testPow started...]
17:26:46.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#237. SUCCESS]
17:26:46.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#238. org.apache.commons.math.complex.ComplexUtilsTest#testSin started...]
17:26:46.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#238. SUCCESS]
17:26:46.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#239. org.apache.commons.math.complex.ComplexUtilsTest#testTan started...]
17:26:46.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#239. SUCCESS]
17:26:46.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#240. org.apache.commons.math.complex.ComplexUtilsTest#testAcos started...]
17:26:46.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#240. SUCCESS]
17:26:46.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#241. org.apache.commons.math.complex.ComplexUtilsTest#testAsin started...]
17:26:46.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#241. SUCCESS]
17:26:46.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#242. org.apache.commons.math.complex.ComplexUtilsTest#testAtan started...]
17:26:46.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#242. SUCCESS]
17:26:46.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#243. org.apache.commons.math.complex.ComplexUtilsTest#testCosh started...]
17:26:46.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#243. SUCCESS]
17:26:46.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#244. org.apache.commons.math.complex.ComplexUtilsTest#testSinh started...]
17:26:46.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#244. SUCCESS]
17:26:46.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#245. org.apache.commons.math.complex.ComplexUtilsTest#testTanh started...]
17:26:46.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#245. SUCCESS]
17:26:46.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#246. org.apache.commons.math.complex.ComplexUtilsTest#testAsinInf started...]
17:26:46.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#246. SUCCESS]
17:26:46.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#247. org.apache.commons.math.complex.ComplexUtilsTest#testAsinNaN started...]
17:26:46.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#247. SUCCESS]
17:26:46.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#248. org.apache.commons.math.complex.ComplexUtilsTest#testAtanInf started...]
17:26:46.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#248. SUCCESS]
17:26:46.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#249. org.apache.commons.math.complex.ComplexUtilsTest#testAtanNaN started...]
17:26:46.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#249. SUCCESS]
17:26:46.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#250. org.apache.commons.math.complex.ComplexUtilsTest#testAcosNull started...]
17:26:46.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#250. SUCCESS]
17:26:46.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#251. org.apache.commons.math.complex.ComplexUtilsTest#testTanhCritical started...]
17:26:46.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#251. SUCCESS]
17:26:46.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#252. org.apache.commons.math.complex.ComplexUtilsTest#testPowZero started...]
17:26:46.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#252. SUCCESS]
17:26:46.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#253. org.apache.commons.math.complex.ComplexUtilsTest#testSqrtImaginaryZero started...]
17:26:46.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#253. SUCCESS]
17:26:46.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#254. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf started...]
17:26:46.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#254. SUCCESS]
17:26:46.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#255. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN started...]
17:26:46.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#255. SUCCESS]
17:26:46.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#256. org.apache.commons.math.complex.ComplexUtilsTest#testSqrtRealPositive started...]
17:26:46.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#256. SUCCESS]
17:26:46.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#257. org.apache.commons.math.complex.ComplexUtilsTest#testSqrt1zNaN started...]
17:26:46.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#257. SUCCESS]
17:26:46.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#258. org.apache.commons.math.complex.ComplexUtilsTest#testSqrtRealNegative started...]
17:26:46.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#258. SUCCESS]
17:26:46.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#259. org.apache.commons.math.complex.ComplexUtilsTest#testSqrtPolar started...]
17:26:46.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#259. SUCCESS]
17:26:46.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#260. org.apache.commons.math.complex.ComplexUtilsTest#testSqrtNull started...]
17:26:46.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#260. SUCCESS]
17:26:46.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#261. org.apache.commons.math.complex.ComplexUtilsTest#testLogZero started...]
17:26:46.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#261. SUCCESS]
17:26:46.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#262. org.apache.commons.math.complex.ComplexUtilsTest#testAsinNull started...]
17:26:46.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#262. SUCCESS]
17:26:46.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#263. org.apache.commons.math.complex.ComplexUtilsTest#testTanhNull started...]
17:26:46.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#263. SUCCESS]
17:26:46.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#264. org.apache.commons.math.complex.ComplexUtilsTest#testTanCritical started...]
17:26:46.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#264. SUCCESS]
17:26:46.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#265. org.apache.commons.math.complex.ComplexUtilsTest#testCoshNull started...]
17:26:46.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#265. SUCCESS]
17:26:46.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#266. org.apache.commons.math.complex.ComplexUtilsTest#testPowNaNBase started...]
17:26:46.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#266. SUCCESS]
17:26:46.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#267. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus started...]
17:26:46.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#267. SUCCESS]
17:26:46.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#268. org.apache.commons.math.complex.ComplexUtilsTest#testCosNull started...]
17:26:46.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#268. SUCCESS]
17:26:46.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#269. org.apache.commons.math.complex.ComplexUtilsTest#testCoshInf started...]
17:26:46.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#269. SUCCESS]
17:26:46.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#270. org.apache.commons.math.complex.ComplexUtilsTest#testCoshNaN started...]
17:26:46.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#270. SUCCESS]
17:26:46.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#271. org.apache.commons.math.complex.ComplexUtilsTest#testAtanNull started...]
17:26:46.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#271. SUCCESS]
17:26:46.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#272. org.apache.commons.math.complex.ComplexUtilsTest#testPowNaNExponent started...]
17:26:46.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#272. SUCCESS]
17:26:46.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#273. org.apache.commons.math.complex.ComplexUtilsTest#testSqrtRealZero started...]
17:26:46.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#273. SUCCESS]
17:26:46.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#274. org.apache.commons.math.complex.ComplexUtilsTest#testSqrtImaginaryNegative started...]
17:26:46.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#274. SUCCESS]
17:26:46.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#275. org.apache.commons.math.complex.ComplexUtilsTest#testsinhNull started...]
17:26:46.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#275. SUCCESS]
17:26:46.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#276. org.apache.commons.math.complex.ComplexUtilsTest#testCosInf started...]
17:26:46.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#276. SUCCESS]
17:26:46.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#277. org.apache.commons.math.complex.ComplexUtilsTest#testCosNaN started...]
17:26:46.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#277. SUCCESS]
17:26:46.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#278. org.apache.commons.math.complex.ComplexUtilsTest#testExpInf started...]
17:26:46.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#278. SUCCESS]
17:26:46.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#279. org.apache.commons.math.complex.ComplexUtilsTest#testExpNaN started...]
17:26:46.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#279. SUCCESS]
17:26:46.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#280. org.apache.commons.math.complex.ComplexUtilsTest#testLogInf started...]
17:26:46.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#280. SUCCESS]
17:26:46.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#281. org.apache.commons.math.complex.ComplexUtilsTest#testLogNaN started...]
17:26:46.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#281. SUCCESS]
17:26:46.575 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#282. org.apache.commons.math.complex.ComplexUtilsTest#testPowInf started...]
17:26:46.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#282. SUCCESS]
17:26:46.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#283. org.apache.commons.math.complex.ComplexUtilsTest#testSinNull started...]
17:26:46.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#283. SUCCESS]
17:26:46.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#284. org.apache.commons.math.complex.ComplexUtilsTest#testSinhInf started...]
17:26:46.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#284. SUCCESS]
17:26:46.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#285. org.apache.commons.math.complex.ComplexUtilsTest#testSinhNaN started...]
17:26:46.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#285. SUCCESS]
17:26:46.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#286. org.apache.commons.math.complex.ComplexUtilsTest#testSinInf started...]
17:26:46.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#286. SUCCESS]
17:26:46.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#287. org.apache.commons.math.complex.ComplexUtilsTest#testSinNaN started...]
17:26:46.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#287. SUCCESS]
17:26:46.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#288. org.apache.commons.math.complex.ComplexUtilsTest#testSqrt1z started...]
17:26:46.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#288. SUCCESS]
17:26:46.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#289. org.apache.commons.math.complex.ComplexUtilsTest#testTanInf started...]
17:26:46.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#289. SUCCESS]
17:26:46.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#290. org.apache.commons.math.complex.ComplexUtilsTest#testTanNaN started...]
17:26:46.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#290. SUCCESS]
17:26:46.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#291. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex started...]
17:26:46.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#291. SUCCESS]
17:26:46.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#292. org.apache.commons.math.complex.ComplexUtilsTest#testpowNull started...]
17:26:46.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#292. SUCCESS]
17:26:46.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#293. org.apache.commons.math.complex.ComplexUtilsTest#testSqrtInf started...]
17:26:46.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#293. SUCCESS]
17:26:46.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#294. org.apache.commons.math.complex.ComplexUtilsTest#testSqrtNaN started...]
17:26:46.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#294. SUCCESS]
17:26:46.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#295. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary started...]
17:26:46.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#295. SUCCESS]
17:26:46.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#296. org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat started...]
17:26:46.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#296. SUCCESS]
17:26:46.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#297. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals started...]
17:26:46.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#297. SUCCESS]
17:26:46.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#298. org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary started...]
17:26:46.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#298. SUCCESS]
17:26:46.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#299. org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryFormatNull started...]
17:26:46.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#299. SUCCESS]
17:26:46.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#300. org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar started...]
17:26:46.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#300. SUCCESS]
17:26:46.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#301. org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber started...]
17:26:46.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#301. SUCCESS]
17:26:46.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#302. org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatObject started...]
17:26:46.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#302. SUCCESS]
17:26:46.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#303. org.apache.commons.math.complex.FrenchComplexFormatTest#testNan started...]
17:26:46.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#303. SUCCESS]
17:26:46.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#304. org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc started...]
17:26:46.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#304. SUCCESS]
17:26:46.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#305. org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterNull started...]
17:26:46.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#305. SUCCESS]
17:26:46.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#306. org.apache.commons.math.complex.FrenchComplexFormatTest#testStaticFormatComplex started...]
17:26:46.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#306. SUCCESS]
17:26:46.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#307. org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat started...]
17:26:46.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#307. SUCCESS]
17:26:46.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#308. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth started...]
17:26:46.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#308. SUCCESS]
17:26:46.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#309. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal started...]
17:26:46.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#309. SUCCESS]
17:26:46.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#310. org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat started...]
17:26:46.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#310. SUCCESS]
17:26:46.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#311. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc started...]
17:26:46.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#311. SUCCESS]
17:26:46.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#312. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity started...]
17:26:46.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#312. SUCCESS]
17:26:46.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#313. org.apache.commons.math.complex.FrenchComplexFormatTest#testSetRealFormatNull started...]
17:26:46.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#313. SUCCESS]
17:26:46.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#314. org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity started...]
17:26:46.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#314. SUCCESS]
17:26:46.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#315. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar started...]
17:26:46.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#315. SUCCESS]
17:26:46.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#316. org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterEmpty started...]
17:26:46.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#316. SUCCESS]
17:26:46.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#317. org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals started...]
17:26:46.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#317. SUCCESS]
17:26:46.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#318. org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal started...]
17:26:46.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#318. SUCCESS]
17:26:46.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#319. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth started...]
17:26:46.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#319. SUCCESS]
17:26:46.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#320. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal started...]
17:26:46.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#320. SUCCESS]
17:26:46.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#321. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary started...]
17:26:46.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#321. SUCCESS]
17:26:46.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#322. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals started...]
17:26:46.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#322. SUCCESS]
17:26:46.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#323. org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity started...]
17:26:46.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#323. SUCCESS]
17:26:46.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#324. org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter started...]
17:26:46.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#324. SUCCESS]
17:26:46.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#325. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal started...]
17:26:46.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#325. SUCCESS]
17:26:46.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#326. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan started...]
17:26:46.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#326. SUCCESS]
17:26:46.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#327. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary started...]
17:26:46.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#327. SUCCESS]
17:26:46.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#328. org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity started...]
17:26:46.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#328. SUCCESS]
17:26:46.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#329. org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals started...]
17:26:46.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#329. SUCCESS]
17:26:46.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#330. org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0 started...]
17:26:46.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#330. SUCCESS]
17:26:46.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#331. org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1 started...]
17:26:46.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#331. SUCCESS]
17:26:46.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#332. org.apache.commons.math.distribution.BinomialDistributionTest#testDensities started...]
17:26:46.592 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#332. SUCCESS]
17:26:46.592 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#333. org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities started...]
17:26:46.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#333. SUCCESS]
17:26:46.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#334. org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities started...]
17:26:46.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#334. SUCCESS]
17:26:46.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#335. org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments started...]
17:26:46.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#335. SUCCESS]
17:26:46.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#336. org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments started...]
17:26:46.595 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#336. SUCCESS]
17:26:46.595 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#337. org.apache.commons.math.distribution.CauchyDistributionTest#testScale started...]
17:26:46.596 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#337. SUCCESS]
17:26:46.596 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#338. org.apache.commons.math.distribution.CauchyDistributionTest#testMedian started...]
17:26:46.596 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#338. SUCCESS]
17:26:46.596 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#339. org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes started...]
17:26:46.596 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#339. SUCCESS]
17:26:46.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#340. org.apache.commons.math.distribution.CauchyDistributionTest#testSetScale started...]
17:26:46.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#340. SUCCESS]
17:26:46.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#341. org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities started...]
17:26:46.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#341. SUCCESS]
17:26:46.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#342. org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities started...]
17:26:46.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#342. SUCCESS]
17:26:46.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#343. org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments started...]
17:26:46.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#343. SUCCESS]
17:26:46.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#344. org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency started...]
17:26:46.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#344. SUCCESS]
17:26:46.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#345. org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors started...]
17:26:46.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#345. SUCCESS]
17:26:46.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#346. org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf started...]
17:26:46.599 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#346. SUCCESS]
17:26:46.600 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#347. org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities started...]
17:26:46.601 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#347. SUCCESS]
17:26:46.602 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#348. org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities started...]
17:26:46.602 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#348. SUCCESS]
17:26:46.602 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#349. org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments started...]
17:26:46.602 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#349. SUCCESS]
17:26:46.602 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#350. org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency started...]
17:26:46.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#350. SUCCESS]
17:26:46.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#351. org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2 started...]
17:26:46.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#351. SUCCESS]
17:26:46.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#352. org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes started...]
17:26:46.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#352. SUCCESS]
17:26:46.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#353. org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes started...]
17:26:46.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#353. SUCCESS]
17:26:46.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#354. org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors started...]
17:26:46.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#354. SUCCESS]
17:26:46.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#355. org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities started...]
17:26:46.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#355. SUCCESS]
17:26:46.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#356. org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities started...]
17:26:46.605 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#356. SUCCESS]
17:26:46.605 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#357. org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments started...]
17:26:46.605 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#357. SUCCESS]
17:26:46.605 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#358. org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency started...]
17:26:46.605 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#358. SUCCESS]
17:26:46.605 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#359. org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes started...]
17:26:46.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#359. SUCCESS]
17:26:46.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#360. org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom started...]
17:26:46.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#360. SUCCESS]
17:26:46.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#361. org.apache.commons.math.distribution.FDistributionTest#testDfAccessors started...]
17:26:46.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#361. SUCCESS]
17:26:46.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#362. org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes started...]
17:26:46.608 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#362. SUCCESS]
17:26:46.608 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#363. org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities started...]
17:26:46.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#363. SUCCESS]
17:26:46.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#364. org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities started...]
17:26:46.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#364. SUCCESS]
17:26:46.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#365. org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments started...]
17:26:46.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#365. SUCCESS]
17:26:46.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#366. org.apache.commons.math.distribution.FDistributionTest#testConsistency started...]
17:26:46.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#366. SUCCESS]
17:26:46.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#367. org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities started...]
17:26:46.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#367. SUCCESS]
17:26:46.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#368. org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors started...]
17:26:46.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#368. SUCCESS]
17:26:46.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#369. org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes started...]
17:26:46.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#369. SUCCESS]
17:26:46.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#370. org.apache.commons.math.distribution.GammaDistributionTest#testValues started...]
17:26:46.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#370. SUCCESS]
17:26:46.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#371. org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities started...]
17:26:46.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#371. SUCCESS]
17:26:46.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#372. org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities started...]
17:26:46.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#372. SUCCESS]
17:26:46.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#373. org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments started...]
17:26:46.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#373. SUCCESS]
17:26:46.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#374. org.apache.commons.math.distribution.GammaDistributionTest#testConsistency started...]
17:26:46.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#374. SUCCESS]
17:26:46.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#375. org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues started...]
17:26:47.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#375. SUCCESS]
17:26:47.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#376. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures started...]
17:26:47.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#376. SUCCESS]
17:26:47.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#377. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses started...]
17:26:47.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#377. SUCCESS]
17:26:47.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#378. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample started...]
17:26:47.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#378. SUCCESS]
17:26:47.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#379. org.apache.commons.math.distribution.HypergeometricDistributionTest#testPopulationSize started...]
17:26:47.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#379. SUCCESS]
17:26:47.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#380. org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues started...]
17:26:49.384 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#380. SUCCESS]
17:26:49.384 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#381. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities started...]
17:26:49.384 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#381. SUCCESS]
17:26:49.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#382. org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities started...]
17:26:49.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#382. SUCCESS]
17:26:49.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#383. org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities started...]
17:26:49.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#383. SUCCESS]
17:26:49.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#384. org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments started...]
17:26:49.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#384. SUCCESS]
17:26:49.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#385. org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments started...]
17:26:49.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#385. SUCCESS]
17:26:49.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#386. org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues started...]
17:26:49.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#386. SUCCESS]
17:26:49.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#387. org.apache.commons.math.distribution.NormalDistributionTest#testSetStandardDeviation started...]
17:26:49.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#387. SUCCESS]
17:26:49.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#388. org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation started...]
17:26:49.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#388. SUCCESS]
17:26:49.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#389. org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles started...]
17:26:49.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#389. SUCCESS]
17:26:49.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#390. org.apache.commons.math.distribution.NormalDistributionTest#testGetMean started...]
17:26:49.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#390. SUCCESS]
17:26:49.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#391. org.apache.commons.math.distribution.NormalDistributionTest#testSetMean started...]
17:26:49.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#391. SUCCESS]
17:26:49.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#392. org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes started...]
17:26:49.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#392. SUCCESS]
17:26:49.403 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#393. org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities started...]
17:26:49.403 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#393. SUCCESS]
17:26:49.403 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#394. org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities started...]
17:26:49.403 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#394. SUCCESS]
17:26:49.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#395. org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments started...]
17:26:49.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#395. SUCCESS]
17:26:49.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#396. org.apache.commons.math.distribution.NormalDistributionTest#testConsistency started...]
17:26:49.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#396. SUCCESS]
17:26:49.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#397. org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0 started...]
17:26:49.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#397. SUCCESS]
17:26:49.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#398. org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1 started...]
17:26:49.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#398. SUCCESS]
17:26:49.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#399. org.apache.commons.math.distribution.PascalDistributionTest#testDensities started...]
17:26:49.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#399. SUCCESS]
17:26:49.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#400. org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities started...]
17:26:49.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#400. SUCCESS]
17:26:49.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#401. org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities started...]
17:26:49.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#401. SUCCESS]
17:26:49.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#402. org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments started...]
17:26:49.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#402. SUCCESS]
17:26:49.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#403. org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments started...]
17:26:49.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#403. SUCCESS]
17:26:49.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#404. org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability started...]
17:26:49.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#404. SUCCESS]
17:26:49.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#405. org.apache.commons.math.distribution.PoissonDistributionTest#testMean started...]
17:26:49.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#405. SUCCESS]
17:26:49.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#406. org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability started...]
17:26:49.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#406. SUCCESS]
17:26:49.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#407. org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability started...]
17:26:49.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#407. SUCCESS]
17:26:49.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#408. org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability started...]
17:26:49.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#408. SUCCESS]
17:26:49.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#409. org.apache.commons.math.distribution.PoissonDistributionTest#testDensities started...]
17:26:49.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#409. SUCCESS]
17:26:49.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#410. org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities started...]
17:26:49.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#410. SUCCESS]
17:26:49.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#411. org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities started...]
17:26:49.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#411. SUCCESS]
17:26:49.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#412. org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments started...]
17:26:49.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#412. SUCCESS]
17:26:49.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#413. org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments started...]
17:26:49.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#413. SUCCESS]
17:26:49.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#414. org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow started...]
17:26:49.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#414. SUCCESS]
17:26:49.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#415. org.apache.commons.math.distribution.TDistributionTest#testDfAccessors started...]
17:26:49.443 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#415. SUCCESS]
17:26:49.443 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#416. org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes started...]
17:26:49.443 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#416. SUCCESS]
17:26:49.443 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#417. org.apache.commons.math.distribution.TDistributionTest#testSmallDf started...]
17:26:49.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#417. SUCCESS]
17:26:49.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#418. org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities started...]
17:26:49.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#418. SUCCESS]
17:26:49.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#419. org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities started...]
17:26:49.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#419. SUCCESS]
17:26:49.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#420. org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments started...]
17:26:49.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#420. SUCCESS]
17:26:49.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#421. org.apache.commons.math.distribution.TDistributionTest#testConsistency started...]
17:26:49.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#421. SUCCESS]
17:26:49.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#422. org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha started...]
17:26:49.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#422. SUCCESS]
17:26:49.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#423. org.apache.commons.math.distribution.WeibullDistributionTest#testBeta started...]
17:26:49.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#423. SUCCESS]
17:26:49.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#424. org.apache.commons.math.distribution.WeibullDistributionTest#testSetBeta started...]
17:26:49.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#424. SUCCESS]
17:26:49.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#425. org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes started...]
17:26:49.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#425. SUCCESS]
17:26:49.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#426. org.apache.commons.math.distribution.WeibullDistributionTest#testSetAlpha started...]
17:26:49.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#426. SUCCESS]
17:26:49.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#427. org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities started...]
17:26:49.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#427. SUCCESS]
17:26:49.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#428. org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities started...]
17:26:49.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#428. SUCCESS]
17:26:49.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#429. org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments started...]
17:26:49.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#429. SUCCESS]
17:26:49.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#430. org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency started...]
17:26:49.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#430. SUCCESS]
17:26:49.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#431. org.apache.commons.math.estimation.EstimatedParameterTest#testEstimate started...]
17:26:49.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#431. SUCCESS]
17:26:49.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#432. org.apache.commons.math.estimation.EstimatedParameterTest#testBound started...]
17:26:49.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#432. SUCCESS]
17:26:49.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#433. org.apache.commons.math.estimation.EstimatedParameterTest#testConstruction started...]
17:26:49.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#433. SUCCESS]
17:26:49.453 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#434. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNoDependency started...]
17:26:49.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#434. SUCCESS]
17:26:49.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#435. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testRedundantEquations started...]
17:26:49.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#435. SUCCESS]
17:26:49.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#436. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTrivial started...]
17:26:49.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#436. SUCCESS]
17:26:49.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#437. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testQRColumnsPermutation started...]
17:26:49.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#437. SUCCESS]
17:26:49.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#438. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTwoSets started...]
17:26:49.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#438. SUCCESS]
17:26:49.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#439. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMaxIterations started...]
17:26:49.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#439. SUCCESS]
17:26:49.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#440. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersSimple started...]
17:26:49.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#440. SUCCESS]
17:26:49.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#441. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersUnsorted started...]
17:26:49.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#441. SUCCESS]
17:26:49.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#442. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testIllConditioned started...]
17:26:49.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#442. SUCCESS]
17:26:49.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#443. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNonInversible started...]
17:26:49.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#443. SUCCESS]
17:26:49.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#444. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testInconsistentEquations started...]
17:26:49.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#444. SUCCESS]
17:26:49.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#445. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFitting started...]
17:26:49.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#445. SUCCESS]
17:26:49.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#446. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:49.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#446. FAILED]
17:26:49.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#447. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testOneSet started...]
17:26:49.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#447. SUCCESS]
17:26:49.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#448. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFittingBadInit started...]
17:26:49.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#448. SUCCESS]
17:26:49.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#449. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNoDependency started...]
17:26:49.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#449. SUCCESS]
17:26:49.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#450. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testRedundantEquations started...]
17:26:49.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#450. SUCCESS]
17:26:49.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#451. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTrivial started...]
17:26:49.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#451. SUCCESS]
17:26:49.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#452. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testQRColumnsPermutation started...]
17:26:49.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#452. SUCCESS]
17:26:49.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#453. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTwoSets started...]
17:26:49.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#453. SUCCESS]
17:26:49.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#454. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersSimple started...]
17:26:49.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#454. SUCCESS]
17:26:49.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#455. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersUnsorted started...]
17:26:49.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#455. SUCCESS]
17:26:49.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#456. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testIllConditioned started...]
17:26:49.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#456. SUCCESS]
17:26:49.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#457. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMath199 started...]
17:26:49.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#457. SUCCESS]
17:26:49.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#458. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNonInversible started...]
17:26:49.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#458. SUCCESS]
17:26:49.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#459. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testInconsistentEquations started...]
17:26:49.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#459. SUCCESS]
17:26:49.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#460. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFitting started...]
17:26:49.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#460. SUCCESS]
17:26:49.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#461. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testControlParameters started...]
17:26:49.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#461. SUCCESS]
17:26:49.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#462. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testOneSet started...]
17:26:49.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#462. SUCCESS]
17:26:49.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#463. org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFittingBadInit started...]
17:26:49.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#463. SUCCESS]
17:26:49.561 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#464. org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1 started...]
17:26:49.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#464. SUCCESS]
17:26:49.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#465. org.apache.commons.math.estimation.MinpackTest#testMinpackBrownDennis started...]
17:26:49.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#465. SUCCESS]
17:26:49.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#466. org.apache.commons.math.estimation.MinpackTest#testMinpackJennrichSampson started...]
17:26:49.808 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#466. SUCCESS]
17:26:49.809 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#467. org.apache.commons.math.estimation.MinpackTest#testMinpackRosenbrok started...]
17:26:49.809 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#467. SUCCESS]
17:26:49.809 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#468. org.apache.commons.math.estimation.MinpackTest#testMinpackBox3Dimensional started...]
17:26:49.811 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#468. SUCCESS]
17:26:49.811 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#469. org.apache.commons.math.estimation.MinpackTest#testMinpackHelicalValley started...]
17:26:49.812 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#469. SUCCESS]
17:26:49.812 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#470. org.apache.commons.math.estimation.MinpackTest#testMinpackMeyer started...]
17:26:49.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#470. SUCCESS]
17:26:49.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#471. org.apache.commons.math.estimation.MinpackTest#testMinpackLinearFullRank started...]
17:26:49.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#471. SUCCESS]
17:26:49.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#472. org.apache.commons.math.estimation.MinpackTest#testMinpackFreudensteinRoth started...]
17:26:49.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#472. SUCCESS]
17:26:49.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#473. org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne1 started...]
17:26:49.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#473. SUCCESS]
17:26:49.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#474. org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne2 started...]
17:26:50.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#474. SUCCESS]
17:26:50.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#475. org.apache.commons.math.estimation.MinpackTest#testMinpackWatson started...]
17:26:50.234 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#475. SUCCESS]
17:26:50.235 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#476. org.apache.commons.math.estimation.MinpackTest#testMinpackKowalikOsborne started...]
17:26:50.257 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#476. SUCCESS]
17:26:50.257 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#477. org.apache.commons.math.estimation.MinpackTest#testMinpackPowellSingular started...]
17:26:50.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#477. SUCCESS]
17:26:50.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#478. org.apache.commons.math.estimation.MinpackTest#testMinpackChebyquad started...]
17:26:50.281 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#478. SUCCESS]
17:26:50.281 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#479. org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1ZeroColsAndRows started...]
17:26:50.289 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#479. SUCCESS]
17:26:50.289 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#480. org.apache.commons.math.estimation.MinpackTest#testMinpackBard started...]
17:26:50.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#480. SUCCESS]
17:26:50.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#481. org.apache.commons.math.estimation.MinpackTest#testMinpackBrownAlmostLinear started...]
17:26:50.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#481. SUCCESS]
17:26:50.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#482. org.apache.commons.math.estimation.WeightedMeasurementTest#testConstruction started...]
17:26:50.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#482. SUCCESS]
17:26:50.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#483. org.apache.commons.math.estimation.WeightedMeasurementTest#testIgnored started...]
17:26:50.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#483. SUCCESS]
17:26:50.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#484. org.apache.commons.math.estimation.WeightedMeasurementTest#testTheory started...]
17:26:50.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#484. SUCCESS]
17:26:50.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#485. org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat started...]
17:26:50.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#485. SUCCESS]
17:26:50.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#486. org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative started...]
17:26:50.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#486. SUCCESS]
17:26:50.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#487. org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper started...]
17:26:50.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#487. SUCCESS]
17:26:50.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#488. org.apache.commons.math.fraction.FractionFormatTest#testParseProper started...]
17:26:50.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#488. SUCCESS]
17:26:50.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#489. org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative started...]
17:26:50.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#489. SUCCESS]
17:26:50.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#490. org.apache.commons.math.fraction.FractionFormatTest#testParse started...]
17:26:50.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#490. SUCCESS]
17:26:50.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#491. org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat started...]
17:26:50.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#491. SUCCESS]
17:26:50.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#492. org.apache.commons.math.fraction.FractionFormatTest#testFormatZero started...]
17:26:50.564 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#492. SUCCESS]
17:26:50.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#493. org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative started...]
17:26:50.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#493. SUCCESS]
17:26:50.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#494. org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator started...]
17:26:50.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#494. SUCCESS]
17:26:50.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#495. org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat started...]
17:26:50.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#495. SUCCESS]
17:26:50.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#496. org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus started...]
17:26:50.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#496. SUCCESS]
17:26:50.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#497. org.apache.commons.math.fraction.FractionFormatTest#testParseInteger started...]
17:26:50.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#497. SUCCESS]
17:26:50.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#498. org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid started...]
17:26:50.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#498. SUCCESS]
17:26:50.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#499. org.apache.commons.math.fraction.FractionFormatTest#testFormat started...]
17:26:50.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#499. SUCCESS]
17:26:50.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#500. org.apache.commons.math.fraction.FractionFormatTest#testParseNegative started...]
17:26:50.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#500. SUCCESS]
17:26:50.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#501. org.apache.commons.math.fraction.FractionTest#testFloatValue started...]
17:26:50.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#501. SUCCESS]
17:26:50.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#502. org.apache.commons.math.fraction.FractionTest#testAbs started...]
17:26:50.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#502. SUCCESS]
17:26:50.567 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#503. org.apache.commons.math.fraction.FractionTest#testAdd started...]
17:26:50.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#503. SUCCESS]
17:26:50.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#504. org.apache.commons.math.fraction.FractionTest#testSubtract started...]
17:26:50.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#504. SUCCESS]
17:26:50.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#505. org.apache.commons.math.fraction.FractionTest#testReciprocal started...]
17:26:50.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#505. SUCCESS]
17:26:50.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#506. org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor started...]
17:26:50.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#506. SUCCESS]
17:26:50.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#507. org.apache.commons.math.fraction.FractionTest#testGetReducedFraction started...]
17:26:50.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#507. SUCCESS]
17:26:50.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#508. org.apache.commons.math.fraction.FractionTest#testConstructorDouble started...]
17:26:50.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#508. SUCCESS]
17:26:50.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#509. org.apache.commons.math.fraction.FractionTest#testCompareTo started...]
17:26:50.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#509. SUCCESS]
17:26:50.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#510. org.apache.commons.math.fraction.FractionTest#testDoubleConstructor started...]
17:26:50.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#510. SUCCESS]
17:26:50.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#511. org.apache.commons.math.fraction.FractionTest#testLongValue started...]
17:26:50.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#511. SUCCESS]
17:26:50.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#512. org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor started...]
17:26:50.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#512. SUCCESS]
17:26:50.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#513. org.apache.commons.math.fraction.FractionTest#testIntValue started...]
17:26:50.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#513. SUCCESS]
17:26:50.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#514. org.apache.commons.math.fraction.FractionTest#testDivide started...]
17:26:50.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#514. SUCCESS]
17:26:50.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#515. org.apache.commons.math.fraction.FractionTest#testMultiply started...]
17:26:50.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#515. SUCCESS]
17:26:50.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#516. org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode started...]
17:26:50.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#516. SUCCESS]
17:26:50.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#517. org.apache.commons.math.fraction.FractionTest#testNegate started...]
17:26:50.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#517. SUCCESS]
17:26:50.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#518. org.apache.commons.math.fraction.FractionTest#testGoldenRatio started...]
17:26:50.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#518. SUCCESS]
17:26:50.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#519. org.apache.commons.math.fraction.FractionTest#testIntegerOverflow started...]
17:26:50.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#519. SUCCESS]
17:26:50.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#520. org.apache.commons.math.fraction.FractionTest#testDoubleValue started...]
17:26:50.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#520. SUCCESS]
17:26:50.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#521. org.apache.commons.math.fraction.FractionTest#testConstructor started...]
17:26:50.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#521. SUCCESS]
17:26:50.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#522. org.apache.commons.math.geometry.RotationOrderTest#testName started...]
17:26:50.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#522. SUCCESS]
17:26:50.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#523. org.apache.commons.math.geometry.RotationTest#testAxisAngle started...]
17:26:50.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#523. SUCCESS]
17:26:50.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#524. org.apache.commons.math.geometry.RotationTest#testVectorTwoPairs started...]
17:26:50.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#524. SUCCESS]
17:26:50.574 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#525. org.apache.commons.math.geometry.RotationTest#testCompose started...]
17:26:50.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#525. SUCCESS]
17:26:50.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#526. org.apache.commons.math.geometry.RotationTest#testIdentity started...]
17:26:50.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#526. SUCCESS]
17:26:50.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#527. org.apache.commons.math.geometry.RotationTest#testComposeInverse started...]
17:26:50.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#527. SUCCESS]
17:26:50.580 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#528. org.apache.commons.math.geometry.RotationTest#testApplyInverseTo started...]
17:26:50.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#528. SUCCESS]
17:26:50.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#529. org.apache.commons.math.geometry.RotationTest#testAngles started...]
17:26:50.739 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#529. SUCCESS]
17:26:50.739 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#530. org.apache.commons.math.geometry.RotationTest#testVectorOnePair started...]
17:26:50.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#530. SUCCESS]
17:26:50.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#531. org.apache.commons.math.geometry.RotationTest#testMatrix started...]
17:26:50.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#531. SUCCESS]
17:26:50.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#532. org.apache.commons.math.geometry.RotationTest#testRevert started...]
17:26:50.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#532. SUCCESS]
17:26:50.751 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#533. org.apache.commons.math.geometry.RotationTest#testSingularities started...]
17:26:50.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#533. SUCCESS]
17:26:50.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#534. org.apache.commons.math.geometry.RotationTest#testQuaternion started...]
17:26:50.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#534. SUCCESS]
17:26:50.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#535. org.apache.commons.math.geometry.Vector3DTest#testVectorialProducts started...]
17:26:50.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#535. SUCCESS]
17:26:50.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#536. org.apache.commons.math.geometry.Vector3DTest#testAdd started...]
17:26:50.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#536. SUCCESS]
17:26:50.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#537. org.apache.commons.math.geometry.Vector3DTest#testSubtract started...]
17:26:50.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#537. SUCCESS]
17:26:50.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#538. org.apache.commons.math.geometry.Vector3DTest#testAngular started...]
17:26:50.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#538. SUCCESS]
17:26:50.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#539. org.apache.commons.math.geometry.Vector3DTest#testAngle started...]
17:26:50.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#539. SUCCESS]
17:26:50.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#540. org.apache.commons.math.geometry.Vector3DTest#testNorm started...]
17:26:50.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#540. SUCCESS]
17:26:50.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#541. org.apache.commons.math.geometry.Vector3DTest#testConstructors started...]
17:26:50.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#541. SUCCESS]
17:26:50.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#542. org.apache.commons.math.geometry.Vector3DTest#testScalarProduct started...]
17:26:50.754 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#542. SUCCESS]
17:26:50.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#543. org.apache.commons.math.geometry.Vector3DTest#testOrthogonal started...]
17:26:50.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#543. SUCCESS]
17:26:50.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#544. org.apache.commons.math.geometry.Vector3DTest#testAngularSeparation started...]
17:26:50.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#544. SUCCESS]
17:26:50.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#545. org.apache.commons.math.geometry.Vector3DTest#testNormalize started...]
17:26:50.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#545. SUCCESS]
17:26:50.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#546. org.apache.commons.math.geometry.Vector3DTest#testCoordinates started...]
17:26:50.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#546. SUCCESS]
17:26:50.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#547. org.apache.commons.math.linear.BigMatrixImplTest#testOperate started...]
17:26:50.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#547. SUCCESS]
17:26:50.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#548. org.apache.commons.math.linear.BigMatrixImplTest#testAddFail started...]
17:26:50.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#548. SUCCESS]
17:26:50.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#549. org.apache.commons.math.linear.BigMatrixImplTest#testAdd started...]
17:26:50.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#549. SUCCESS]
17:26:50.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#550. org.apache.commons.math.linear.BigMatrixImplTest#testScalarAdd started...]
17:26:50.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#550. SUCCESS]
17:26:50.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#551. org.apache.commons.math.linear.BigMatrixImplTest#testSolve started...]
17:26:50.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#551. SUCCESS]
17:26:50.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#552. org.apache.commons.math.linear.BigMatrixImplTest#testTrace started...]
17:26:50.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#552. SUCCESS]
17:26:50.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#553. org.apache.commons.math.linear.BigMatrixImplTest#testNorm started...]
17:26:50.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#553. SUCCESS]
17:26:50.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#554. org.apache.commons.math.linear.BigMatrixImplTest#testToString started...]
17:26:50.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#554. SUCCESS]
17:26:50.761 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#555. org.apache.commons.math.linear.BigMatrixImplTest#testIsSingular started...]
17:26:50.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#555. SUCCESS]
17:26:50.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#556. org.apache.commons.math.linear.BigMatrixImplTest#testConstructors started...]
17:26:50.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#556. SUCCESS]
17:26:50.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#557. org.apache.commons.math.linear.BigMatrixImplTest#testPlusMinus started...]
17:26:50.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#557. SUCCESS]
17:26:50.762 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#558. org.apache.commons.math.linear.BigMatrixImplTest#testDeterminant started...]
17:26:50.764 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#558. SUCCESS]
17:26:50.764 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#559. org.apache.commons.math.linear.BigMatrixImplTest#testMultiply2 started...]
17:26:50.764 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#559. SUCCESS]
17:26:50.764 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#560. org.apache.commons.math.linear.BigMatrixImplTest#testDimensions started...]
17:26:50.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#560. SUCCESS]
17:26:50.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#561. org.apache.commons.math.linear.BigMatrixImplTest#testSubMatrix started...]
17:26:50.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#561. SUCCESS]
17:26:50.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#562. org.apache.commons.math.linear.BigMatrixImplTest#testPremultiplyVector started...]
17:26:50.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#562. SUCCESS]
17:26:50.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#563. org.apache.commons.math.linear.BigMatrixImplTest#testCopyFunctions started...]
17:26:50.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#563. SUCCESS]
17:26:50.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#564. org.apache.commons.math.linear.BigMatrixImplTest#testLUDecomposition started...]
17:26:50.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#564. SUCCESS]
17:26:50.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#565. org.apache.commons.math.linear.BigMatrixImplTest#testGetVectors started...]
17:26:50.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#565. SUCCESS]
17:26:50.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#566. org.apache.commons.math.linear.BigMatrixImplTest#testGetColumnMatrix started...]
17:26:50.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#566. SUCCESS]
17:26:50.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#567. org.apache.commons.math.linear.BigMatrixImplTest#testMultiply started...]
17:26:50.770 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#567. SUCCESS]
17:26:50.770 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#568. org.apache.commons.math.linear.BigMatrixImplTest#testEqualsAndHashCode started...]
17:26:50.770 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#568. SUCCESS]
17:26:50.770 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#569. org.apache.commons.math.linear.BigMatrixImplTest#testInverse started...]
17:26:50.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#569. SUCCESS]
17:26:50.773 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#570. org.apache.commons.math.linear.BigMatrixImplTest#testTranspose started...]
17:26:50.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#570. SUCCESS]
17:26:50.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#571. org.apache.commons.math.linear.BigMatrixImplTest#testPremultiply started...]
17:26:50.775 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#571. SUCCESS]
17:26:50.775 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#572. org.apache.commons.math.linear.BigMatrixImplTest#testGetRowMatrix started...]
17:26:50.775 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#572. SUCCESS]
17:26:50.775 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#573. org.apache.commons.math.linear.BigMatrixImplTest#testSetSubMatrix started...]
17:26:50.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#573. SUCCESS]
17:26:50.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#574. org.apache.commons.math.linear.InvalidMatrixExceptionTest#testConstructorMessage started...]
17:26:50.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#574. SUCCESS]
17:26:50.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#575. org.apache.commons.math.linear.InvalidMatrixExceptionTest#testConstructor started...]
17:26:50.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#575. SUCCESS]
17:26:50.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#576. org.apache.commons.math.linear.MatrixIndexExceptionTest#testConstructorMessage started...]
17:26:50.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#576. SUCCESS]
17:26:50.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#577. org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix started...]
17:26:50.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#577. SUCCESS]
17:26:50.777 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#578. org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix started...]
17:26:50.777 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#578. SUCCESS]
17:26:50.777 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#579. org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigMatrix started...]
17:26:50.777 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#579. SUCCESS]
17:26:50.777 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#580. org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnBigMatrix started...]
17:26:50.777 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#580. SUCCESS]
17:26:50.777 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#581. org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigIdentityMatrix started...]
17:26:50.777 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#581. SUCCESS]
17:26:50.777 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#582. org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowBigMatrix started...]
17:26:50.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#582. SUCCESS]
17:26:50.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#583. org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix started...]
17:26:50.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#583. SUCCESS]
17:26:50.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#584. org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix started...]
17:26:50.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#584. SUCCESS]
17:26:50.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#585. org.apache.commons.math.linear.QRDecompositionImplTest#testAEqualQR started...]
17:26:50.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#585. SUCCESS]
17:26:50.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#586. org.apache.commons.math.linear.QRDecompositionImplTest#testDimensions started...]
17:26:50.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#586. SUCCESS]
17:26:50.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#587. org.apache.commons.math.linear.QRDecompositionImplTest#testRUpperTriangular started...]
17:26:50.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#587. SUCCESS]
17:26:50.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#588. org.apache.commons.math.linear.QRDecompositionImplTest#testQOrthogonal started...]
17:26:50.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#588. SUCCESS]
17:26:50.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#589. org.apache.commons.math.linear.RealMatrixImplTest#testOperate started...]
17:26:50.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#589. SUCCESS]
17:26:50.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#590. org.apache.commons.math.linear.RealMatrixImplTest#testExamples started...]
17:26:50.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#590. SUCCESS]
17:26:50.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#591. org.apache.commons.math.linear.RealMatrixImplTest#testGetEntry started...]
17:26:50.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#591. SUCCESS]
17:26:50.780 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#592. org.apache.commons.math.linear.RealMatrixImplTest#testAddFail started...]
17:26:50.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#592. SUCCESS]
17:26:50.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#593. org.apache.commons.math.linear.RealMatrixImplTest#testAdd started...]
17:26:50.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#593. SUCCESS]
17:26:50.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#594. org.apache.commons.math.linear.RealMatrixImplTest#testScalarAdd started...]
17:26:50.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#594. SUCCESS]
17:26:50.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#595. org.apache.commons.math.linear.RealMatrixImplTest#testSolve started...]
17:26:50.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#595. SUCCESS]
17:26:50.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#596. org.apache.commons.math.linear.RealMatrixImplTest#testTrace started...]
17:26:50.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#596. SUCCESS]
17:26:50.781 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#597. org.apache.commons.math.linear.RealMatrixImplTest#testNorm started...]
17:26:50.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#597. SUCCESS]
17:26:50.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#598. org.apache.commons.math.linear.RealMatrixImplTest#testToString started...]
17:26:50.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#598. SUCCESS]
17:26:50.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#599. org.apache.commons.math.linear.RealMatrixImplTest#testIsSingular started...]
17:26:50.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#599. SUCCESS]
17:26:50.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#600. org.apache.commons.math.linear.RealMatrixImplTest#testPlusMinus started...]
17:26:50.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#600. SUCCESS]
17:26:50.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#601. org.apache.commons.math.linear.RealMatrixImplTest#testDeterminant started...]
17:26:50.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#601. SUCCESS]
17:26:50.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#602. org.apache.commons.math.linear.RealMatrixImplTest#testMultiply2 started...]
17:26:50.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#602. SUCCESS]
17:26:50.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#603. org.apache.commons.math.linear.RealMatrixImplTest#testDimensions started...]
17:26:50.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#603. SUCCESS]
17:26:50.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#604. org.apache.commons.math.linear.RealMatrixImplTest#testSubMatrix started...]
17:26:50.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#604. SUCCESS]
17:26:50.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#605. org.apache.commons.math.linear.RealMatrixImplTest#testPremultiplyVector started...]
17:26:50.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#605. SUCCESS]
17:26:50.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#606. org.apache.commons.math.linear.RealMatrixImplTest#testCopyFunctions started...]
17:26:50.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#606. SUCCESS]
17:26:50.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#607. org.apache.commons.math.linear.RealMatrixImplTest#testLUDecomposition started...]
17:26:50.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#607. SUCCESS]
17:26:50.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#608. org.apache.commons.math.linear.RealMatrixImplTest#testGetVectors started...]
17:26:50.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#608. SUCCESS]
17:26:50.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#609. org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnMatrix started...]
17:26:50.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#609. SUCCESS]
17:26:50.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#610. org.apache.commons.math.linear.RealMatrixImplTest#testMultiply started...]
17:26:50.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#610. SUCCESS]
17:26:50.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#611. org.apache.commons.math.linear.RealMatrixImplTest#testEqualsAndHashCode started...]
17:26:50.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#611. SUCCESS]
17:26:50.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#612. org.apache.commons.math.linear.RealMatrixImplTest#testInverse started...]
17:26:50.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#612. SUCCESS]
17:26:50.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#613. org.apache.commons.math.linear.RealMatrixImplTest#testTranspose started...]
17:26:50.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#613. SUCCESS]
17:26:50.785 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#614. org.apache.commons.math.linear.RealMatrixImplTest#testPremultiply started...]
17:26:50.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#614. SUCCESS]
17:26:50.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#615. org.apache.commons.math.linear.RealMatrixImplTest#testGetRowMatrix started...]
17:26:50.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#615. SUCCESS]
17:26:50.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#616. org.apache.commons.math.linear.RealMatrixImplTest#testSetSubMatrix started...]
17:26:50.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#616. SUCCESS]
17:26:50.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#617. org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest#testSmallStep started...]
17:26:50.810 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#617. SUCCESS]
17:26:50.810 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#618. org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps started...]
17:26:50.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#618. SUCCESS]
17:26:50.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#619. org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest#testBigStep started...]
17:26:50.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#619. SUCCESS]
17:26:50.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#620. org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest#testKepler started...]
17:26:50.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#620. SUCCESS]
17:26:50.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#621. org.apache.commons.math.ode.ClassicalRungeKuttaIntegratorTest#testSanityChecks started...]
17:26:50.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#621. SUCCESS]
17:26:50.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#622. org.apache.commons.math.ode.ClassicalRungeKuttaStepInterpolatorTest#testSerialization started...]
17:26:51.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#622. SUCCESS]
17:26:51.072 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#623. org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries started...]
17:26:51.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#623. SUCCESS]
17:26:51.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#624. org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging started...]
17:26:51.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#624. SUCCESS]
17:26:51.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#625. org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess started...]
17:26:51.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#625. SUCCESS]
17:26:51.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#626. org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions started...]
17:26:51.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#626. SUCCESS]
17:26:51.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#627. org.apache.commons.math.ode.DormandPrince54IntegratorTest#testSmallLastStep started...]
17:26:51.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#627. SUCCESS]
17:26:51.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#628. org.apache.commons.math.ode.DormandPrince54IntegratorTest#testDimensionCheck started...]
17:26:51.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#628. SUCCESS]
17:26:51.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#629. org.apache.commons.math.ode.DormandPrince54IntegratorTest#testSwitchingFunctions started...]
17:26:51.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#629. SUCCESS]
17:26:51.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#630. org.apache.commons.math.ode.DormandPrince54IntegratorTest#testVariableSteps started...]
17:26:51.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#630. SUCCESS]
17:26:51.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#631. org.apache.commons.math.ode.DormandPrince54IntegratorTest#testMinStep started...]
17:26:51.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#631. SUCCESS]
17:26:51.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#632. org.apache.commons.math.ode.DormandPrince54IntegratorTest#testKepler started...]
17:26:51.134 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#632. SUCCESS]
17:26:51.134 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#633. org.apache.commons.math.ode.DormandPrince54IntegratorTest#testIncreasingTolerance started...]
17:26:51.158 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#633. SUCCESS]
17:26:51.158 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#634. org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest#testSerialization started...]
17:26:51.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#634. SUCCESS]
17:26:51.189 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#635. org.apache.commons.math.ode.DormandPrince54StepInterpolatorTest#testClone started...]
17:26:51.206 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#635. SUCCESS]
17:26:51.206 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#636. org.apache.commons.math.ode.DormandPrince853IntegratorTest#testDimensionCheck started...]
17:26:51.207 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#636. SUCCESS]
17:26:51.207 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#637. org.apache.commons.math.ode.DormandPrince853IntegratorTest#testSwitchingFunctions started...]
17:26:51.209 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#637. SUCCESS]
17:26:51.209 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#638. org.apache.commons.math.ode.DormandPrince853IntegratorTest#testVariableSteps started...]
17:26:51.214 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#638. SUCCESS]
17:26:51.214 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#639. org.apache.commons.math.ode.DormandPrince853IntegratorTest#testNoDenseOutput started...]
17:26:51.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#639. SUCCESS]
17:26:51.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#640. org.apache.commons.math.ode.DormandPrince853IntegratorTest#testMinStep started...]
17:26:51.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#640. SUCCESS]
17:26:51.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#641. org.apache.commons.math.ode.DormandPrince853IntegratorTest#testUnstableDerivative started...]
17:26:51.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#641. SUCCESS]
17:26:51.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#642. org.apache.commons.math.ode.DormandPrince853IntegratorTest#testNullIntervalCheck started...]
17:26:51.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#642. SUCCESS]
17:26:51.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#643. org.apache.commons.math.ode.DormandPrince853IntegratorTest#testKepler started...]
17:26:51.226 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#643. SUCCESS]
17:26:51.226 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#644. org.apache.commons.math.ode.DormandPrince853IntegratorTest#testIncreasingTolerance started...]
17:26:51.230 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#644. SUCCESS]
17:26:51.230 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#645. org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest#testSerialization started...]
17:26:51.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#645. SUCCESS]
17:26:51.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#646. org.apache.commons.math.ode.DormandPrince853StepInterpolatorTest#testClone started...]
17:26:51.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#646. SUCCESS]
17:26:51.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#647. org.apache.commons.math.ode.DummyStepInterpolatorTest#testSerialization started...]
17:26:51.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#647. SUCCESS]
17:26:51.273 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#648. org.apache.commons.math.ode.DummyStepInterpolatorTest#testImpossibleSerialization started...]
17:26:51.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#648. SUCCESS]
17:26:51.275 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#649. org.apache.commons.math.ode.DummyStepInterpolatorTest#testFixedState started...]
17:26:51.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#649. SUCCESS]
17:26:51.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#650. org.apache.commons.math.ode.DummyStepInterpolatorTest#testSerializationError started...]
17:26:51.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#650. SUCCESS]
17:26:51.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#651. org.apache.commons.math.ode.DummyStepInterpolatorTest#testNoReset started...]
17:26:51.276 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#651. SUCCESS]
17:26:51.277 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#652. org.apache.commons.math.ode.EulerIntegratorTest#testDimensionCheck started...]
17:26:51.278 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#652. SUCCESS]
17:26:51.278 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#653. org.apache.commons.math.ode.EulerIntegratorTest#testSmallStep started...]
17:26:51.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#653. SUCCESS]
17:26:51.301 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#654. org.apache.commons.math.ode.EulerIntegratorTest#testDecreasingSteps started...]
17:26:51.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#654. SUCCESS]
17:26:51.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#655. org.apache.commons.math.ode.EulerIntegratorTest#testBigStep started...]
17:26:51.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#655. SUCCESS]
17:26:51.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#656. org.apache.commons.math.ode.EulerStepInterpolatorTest#testSerialization started...]
17:26:51.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#656. SUCCESS]
17:26:51.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#657. org.apache.commons.math.ode.EulerStepInterpolatorTest#testInterpolationInside started...]
17:26:51.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#657. SUCCESS]
17:26:51.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#658. org.apache.commons.math.ode.EulerStepInterpolatorTest#testInterpolationAtBounds started...]
17:26:51.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#658. SUCCESS]
17:26:51.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#659. org.apache.commons.math.ode.EulerStepInterpolatorTest#testNoReset started...]
17:26:51.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#659. SUCCESS]
17:26:51.476 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#660. org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep started...]
17:26:51.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#660. SUCCESS]
17:26:51.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#661. org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps started...]
17:26:51.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#661. SUCCESS]
17:26:51.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#662. org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep started...]
17:26:51.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#662. SUCCESS]
17:26:51.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#663. org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension started...]
17:26:51.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#663. SUCCESS]
17:26:51.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#664. org.apache.commons.math.ode.GillIntegratorTest#testDimensionCheck started...]
17:26:51.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#664. SUCCESS]
17:26:51.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#665. org.apache.commons.math.ode.GillIntegratorTest#testSmallStep started...]
17:26:51.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#665. SUCCESS]
17:26:51.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#666. org.apache.commons.math.ode.GillIntegratorTest#testDecreasingSteps started...]
17:26:51.594 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#666. SUCCESS]
17:26:51.594 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#667. org.apache.commons.math.ode.GillIntegratorTest#testBigStep started...]
17:26:51.595 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#667. SUCCESS]
17:26:51.595 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#668. org.apache.commons.math.ode.GillIntegratorTest#testUnstableDerivative started...]
17:26:51.595 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#668. SUCCESS]
17:26:51.595 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#669. org.apache.commons.math.ode.GillIntegratorTest#testKepler started...]
17:26:51.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#669. SUCCESS]
17:26:51.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#670. org.apache.commons.math.ode.GillStepInterpolatorTest#testSerialization started...]
17:26:51.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#670. SUCCESS]
17:26:51.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#671. org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest#testDimensionCheck started...]
17:26:51.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#671. SUCCESS]
17:26:51.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#672. org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest#testSwitchingFunctions started...]
17:26:51.662 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#672. SUCCESS]
17:26:51.663 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#673. org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest#testVariableSteps started...]
17:26:51.666 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#673. SUCCESS]
17:26:51.666 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#674. org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest#testIntegratorControls started...]
17:26:51.666 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#674. SUCCESS]
17:26:51.666 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#675. org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest#testMinStep started...]
17:26:51.666 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#675. SUCCESS]
17:26:51.666 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#676. org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest#testUnstableDerivative started...]
17:26:51.667 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#676. SUCCESS]
17:26:51.667 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#677. org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest#testNullIntervalCheck started...]
17:26:51.667 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#677. SUCCESS]
17:26:51.667 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#678. org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest#testKepler started...]
17:26:51.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#678. SUCCESS]
17:26:51.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#679. org.apache.commons.math.ode.GraggBulirschStoerIntegratorTest#testIncreasingTolerance started...]
17:26:51.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#679. SUCCESS]
17:26:51.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#680. org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest#testSerialization started...]
17:26:51.728 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#680. SUCCESS]
17:26:51.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#681. org.apache.commons.math.ode.GraggBulirschStoerStepInterpolatorTest#testClone started...]
17:26:51.741 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#681. SUCCESS]
17:26:51.741 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#682. org.apache.commons.math.ode.HighamHall54IntegratorTest#testSwitchingFunctions started...]
17:26:51.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#682. SUCCESS]
17:26:51.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#683. org.apache.commons.math.ode.HighamHall54IntegratorTest#testWrongDerivative started...]
17:26:51.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#683. SUCCESS]
17:26:51.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#684. org.apache.commons.math.ode.HighamHall54IntegratorTest#testMinStep started...]
17:26:51.746 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#684. SUCCESS]
17:26:51.746 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#685. org.apache.commons.math.ode.HighamHall54IntegratorTest#testSwitchingFunctionsNoConvergence started...]
17:26:51.747 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#685. SUCCESS]
17:26:51.747 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#686. org.apache.commons.math.ode.HighamHall54IntegratorTest#testSwitchingFunctionsError started...]
17:26:51.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#686. SUCCESS]
17:26:51.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#687. org.apache.commons.math.ode.HighamHall54IntegratorTest#testKepler started...]
17:26:51.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#687. SUCCESS]
17:26:51.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#688. org.apache.commons.math.ode.HighamHall54IntegratorTest#testIncreasingTolerance started...]
17:26:51.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#688. SUCCESS]
17:26:51.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#689. org.apache.commons.math.ode.HighamHall54IntegratorTest#testSanityChecks started...]
17:26:51.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#689. SUCCESS]
17:26:51.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#690. org.apache.commons.math.ode.HighamHall54StepInterpolatorTest#testSerialization started...]
17:26:51.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#690. SUCCESS]
17:26:51.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#691. org.apache.commons.math.ode.HighamHall54StepInterpolatorTest#testClone started...]
17:26:51.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#691. SUCCESS]
17:26:51.806 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#692. org.apache.commons.math.ode.MidpointIntegratorTest#testDimensionCheck started...]
17:26:51.807 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#692. SUCCESS]
17:26:51.807 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#693. org.apache.commons.math.ode.MidpointIntegratorTest#testSmallStep started...]
17:26:51.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#693. SUCCESS]
17:26:51.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#694. org.apache.commons.math.ode.MidpointIntegratorTest#testDecreasingSteps started...]
17:26:51.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#694. SUCCESS]
17:26:51.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#695. org.apache.commons.math.ode.MidpointIntegratorTest#testBigStep started...]
17:26:51.925 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#695. SUCCESS]
17:26:51.925 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#696. org.apache.commons.math.ode.MidpointStepInterpolatorTest#testSerialization started...]
17:26:51.936 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#696. SUCCESS]
17:26:51.936 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#697. org.apache.commons.math.ode.StepNormalizerTest#testBoundaries started...]
17:26:51.938 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#697. SUCCESS]
17:26:51.938 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#698. org.apache.commons.math.ode.StepNormalizerTest#testBeforeEnd started...]
17:26:51.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#698. SUCCESS]
17:26:51.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#699. org.apache.commons.math.ode.ThreeEighthesIntegratorTest#testDimensionCheck started...]
17:26:51.940 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#699. SUCCESS]
17:26:51.940 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#700. org.apache.commons.math.ode.ThreeEighthesIntegratorTest#testSmallStep started...]
17:26:51.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#700. SUCCESS]
17:26:51.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#701. org.apache.commons.math.ode.ThreeEighthesIntegratorTest#testDecreasingSteps started...]
17:26:52.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#701. SUCCESS]
17:26:52.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#702. org.apache.commons.math.ode.ThreeEighthesIntegratorTest#testBigStep started...]
17:26:52.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#702. SUCCESS]
17:26:52.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#703. org.apache.commons.math.ode.ThreeEighthesIntegratorTest#testKepler started...]
17:26:52.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#703. SUCCESS]
17:26:52.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#704. org.apache.commons.math.ode.ThreeEighthesStepInterpolatorTest#testSerialization started...]
17:26:52.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#704. SUCCESS]
17:26:52.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#705. org.apache.commons.math.optimization.MultiDirectionalTest#testCostExceptions started...]
17:26:52.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#705. SUCCESS]
17:26:52.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#706. org.apache.commons.math.optimization.MultiDirectionalTest#testRosenbrock started...]
17:26:52.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#706. SUCCESS]
17:26:52.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#707. org.apache.commons.math.optimization.MultiDirectionalTest#testPowell started...]
17:26:52.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#707. SUCCESS]
17:26:52.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#708. org.apache.commons.math.optimization.NelderMeadTest#testCostExceptions started...]
17:26:52.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#708. SUCCESS]
17:26:52.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#709. org.apache.commons.math.optimization.NelderMeadTest#testRosenbrock started...]
17:26:52.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#709. SUCCESS]
17:26:52.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#710. org.apache.commons.math.optimization.NelderMeadTest#testPowell started...]
17:26:52.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#710. SUCCESS]
17:26:52.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#711. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBoolean started...]
17:26:52.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#711. SUCCESS]
17:26:52.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#712. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt started...]
17:26:52.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#712. SUCCESS]
17:26:52.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#713. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloat started...]
17:26:52.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#713. SUCCESS]
17:26:52.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#714. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong started...]
17:26:52.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#714. SUCCESS]
17:26:52.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#715. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample started...]
17:26:52.166 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#715. SUCCESS]
17:26:52.166 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#716. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues started...]
17:26:52.166 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#716. SUCCESS]
17:26:52.166 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#717. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints started...]
17:26:52.166 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#717. SUCCESS]
17:26:52.166 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#718. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian started...]
17:26:52.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#718. SUCCESS]
17:26:52.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#719. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureLong started...]
17:26:52.210 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#719. SUCCESS]
17:26:52.210 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#720. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureHex started...]
17:26:52.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#720. SUCCESS]
17:26:52.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#721. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureInt started...]
17:26:52.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#721. SUCCESS]
17:26:52.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#722. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues started...]
17:26:52.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#722. SUCCESS]
17:26:52.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#723. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential started...]
17:26:52.354 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#723. SUCCESS]
17:26:52.355 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#724. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson started...]
17:26:52.364 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#724. SUCCESS]
17:26:52.364 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#725. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform started...]
17:26:52.364 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#725. SUCCESS]
17:26:52.364 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#726. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation started...]
17:26:52.366 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#726. SUCCESS]
17:26:52.366 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#727. org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig started...]
17:26:52.366 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#727. SUCCESS]
17:26:52.366 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#728. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex started...]
17:26:52.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#728. SUCCESS]
17:26:52.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#729. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank started...]
17:26:52.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#729. SUCCESS]
17:26:52.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#730. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance started...]
17:26:52.420 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#730. SUCCESS]
17:26:52.420 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#731. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix started...]
17:26:52.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#731. SUCCESS]
17:26:52.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#732. org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow started...]
17:26:52.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#732. SUCCESS]
17:26:52.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#733. org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization started...]
17:26:52.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#733. SUCCESS]
17:26:52.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#734. org.apache.commons.math.random.EmpiricalDistributionTest#testLoad started...]
17:26:52.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#734. SUCCESS]
17:26:52.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#735. org.apache.commons.math.random.EmpiricalDistributionTest#testNext started...]
17:26:52.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#735. SUCCESS]
17:26:52.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#736. org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray started...]
17:26:52.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#736. SUCCESS]
17:26:52.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#737. org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat started...]
17:26:52.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#737. SUCCESS]
17:26:52.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#738. org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad started...]
17:26:52.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#738. SUCCESS]
17:26:52.542 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#739. org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine started...]
17:26:52.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#739. SUCCESS]
17:26:52.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#740. org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile started...]
17:26:52.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#740. SUCCESS]
17:26:52.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#741. org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL started...]
17:26:52.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#741. SUCCESS]
17:26:52.559 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#742. org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail started...]
17:26:52.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#742. SUCCESS]
17:26:52.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#743. org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation started...]
17:26:52.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#743. SUCCESS]
17:26:52.565 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#744. org.apache.commons.math.random.RandomAdaptorTest#testAdaptor started...]
17:26:52.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#744. SUCCESS]
17:26:52.566 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#745. org.apache.commons.math.random.RandomAdaptorTest#testNextSample started...]
17:26:52.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#745. SUCCESS]
17:26:52.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#746. org.apache.commons.math.random.RandomAdaptorTest#testNextIntExtremeValues started...]
17:26:52.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#746. SUCCESS]
17:26:52.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#747. org.apache.commons.math.random.RandomAdaptorTest#testNextUniformExclusiveEndpoints started...]
17:26:52.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#747. SUCCESS]
17:26:52.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#748. org.apache.commons.math.random.RandomAdaptorTest#testNextGaussian started...]
17:26:52.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#748. SUCCESS]
17:26:52.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#749. org.apache.commons.math.random.RandomAdaptorTest#testNextSecureLong started...]
17:26:52.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#749. SUCCESS]
17:26:52.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#750. org.apache.commons.math.random.RandomAdaptorTest#testNextSecureHex started...]
17:26:52.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#750. SUCCESS]
17:26:52.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#751. org.apache.commons.math.random.RandomAdaptorTest#testNextSecureInt started...]
17:26:52.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#751. SUCCESS]
17:26:52.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#752. org.apache.commons.math.random.RandomAdaptorTest#testNextLongExtremeValues started...]
17:26:52.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#752. SUCCESS]
17:26:52.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#753. org.apache.commons.math.random.RandomAdaptorTest#testNextExponential started...]
17:26:52.662 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#753. SUCCESS]
17:26:52.662 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#754. org.apache.commons.math.random.RandomAdaptorTest#testNextPoisson started...]
17:26:52.680 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#754. SUCCESS]
17:26:52.680 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#755. org.apache.commons.math.random.RandomAdaptorTest#testNextUniform started...]
17:26:52.681 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#755. SUCCESS]
17:26:52.681 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#756. org.apache.commons.math.random.RandomAdaptorTest#testNextPermutation started...]
17:26:52.682 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#756. SUCCESS]
17:26:52.682 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#757. org.apache.commons.math.random.RandomAdaptorTest#testConfig started...]
17:26:52.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#757. SUCCESS]
17:26:52.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#758. org.apache.commons.math.random.RandomAdaptorTest#testNextHex started...]
17:26:52.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#758. SUCCESS]
17:26:52.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#759. org.apache.commons.math.random.RandomAdaptorTest#testNextInt started...]
17:26:52.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#759. SUCCESS]
17:26:52.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#760. org.apache.commons.math.random.RandomAdaptorTest#testNextLong started...]
17:26:52.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#760. SUCCESS]
17:26:52.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#761. org.apache.commons.math.random.RandomDataTest#testNextSample started...]
17:26:52.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#761. SUCCESS]
17:26:52.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#762. org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues started...]
17:26:52.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#762. SUCCESS]
17:26:52.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#763. org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints started...]
17:26:52.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#763. SUCCESS]
17:26:52.717 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#764. org.apache.commons.math.random.RandomDataTest#testNextGaussian started...]
17:26:52.719 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#764. SUCCESS]
17:26:52.719 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#765. org.apache.commons.math.random.RandomDataTest#testNextSecureLong started...]
17:26:52.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#765. SUCCESS]
17:26:52.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#766. org.apache.commons.math.random.RandomDataTest#testNextSecureHex started...]
17:26:52.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#766. SUCCESS]
17:26:52.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#767. org.apache.commons.math.random.RandomDataTest#testNextSecureInt started...]
17:26:52.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#767. SUCCESS]
17:26:52.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#768. org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues started...]
17:26:52.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#768. SUCCESS]
17:26:52.778 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#769. org.apache.commons.math.random.RandomDataTest#testNextExponential started...]
17:26:52.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#769. SUCCESS]
17:26:52.779 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#770. org.apache.commons.math.random.RandomDataTest#testNextPoisson started...]
17:26:52.782 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#770. SUCCESS]
17:26:52.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#771. org.apache.commons.math.random.RandomDataTest#testNextUniform started...]
17:26:52.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#771. SUCCESS]
17:26:52.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#772. org.apache.commons.math.random.RandomDataTest#testNextPermutation started...]
17:26:52.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#772. SUCCESS]
17:26:52.783 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#773. org.apache.commons.math.random.RandomDataTest#testConfig started...]
17:26:52.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#773. SUCCESS]
17:26:52.784 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#774. org.apache.commons.math.random.RandomDataTest#testNextHex started...]
17:26:52.799 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#774. SUCCESS]
17:26:52.799 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#775. org.apache.commons.math.random.RandomDataTest#testNextInt started...]
17:26:52.800 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#775. SUCCESS]
17:26:52.800 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#776. org.apache.commons.math.random.RandomDataTest#testNextLong started...]
17:26:52.800 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#776. SUCCESS]
17:26:52.800 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#777. org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation started...]
17:26:52.810 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#777. SUCCESS]
17:26:52.810 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#778. org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation started...]
17:26:52.813 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#778. SUCCESS]
17:26:52.813 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#779. org.apache.commons.math.random.ValueServerTest#testProperties started...]
17:26:52.813 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#779. SUCCESS]
17:26:52.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#780. org.apache.commons.math.random.ValueServerTest#testModes started...]
17:26:52.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#780. SUCCESS]
17:26:52.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#781. org.apache.commons.math.random.ValueServerTest#testFill started...]
17:26:52.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#781. SUCCESS]
17:26:52.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#782. org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile started...]
17:26:52.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#782. SUCCESS]
17:26:52.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#783. org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile started...]
17:26:52.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#783. SUCCESS]
17:26:52.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#784. org.apache.commons.math.random.ValueServerTest#testNextDigestFail started...]
17:26:52.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#784. SUCCESS]
17:26:52.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#785. org.apache.commons.math.random.ValueServerTest#testReplay started...]
17:26:52.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#785. SUCCESS]
17:26:52.817 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#786. org.apache.commons.math.random.ValueServerTest#testNextDigest started...]
17:26:52.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#786. SUCCESS]
17:26:52.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#787. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive started...]
17:26:52.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#787. SUCCESS]
17:26:52.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#788. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive started...]
17:26:52.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#788. SUCCESS]
17:26:52.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#789. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative started...]
17:26:52.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#789. SUCCESS]
17:26:52.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#790. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive started...]
17:26:52.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#790. SUCCESS]
17:26:52.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#791. org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive started...]
17:26:52.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#791. SUCCESS]
17:26:52.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#792. org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative started...]
17:26:52.845 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#792. SUCCESS]
17:26:52.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#793. org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan started...]
17:26:52.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#793. SUCCESS]
17:26:52.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#794. org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive started...]
17:26:52.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#794. SUCCESS]
17:26:52.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#795. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan started...]
17:26:52.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#795. SUCCESS]
17:26:52.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#796. org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive started...]
17:26:52.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#796. SUCCESS]
17:26:52.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#797. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero started...]
17:26:52.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#797. SUCCESS]
17:26:52.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#798. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive started...]
17:26:52.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#798. SUCCESS]
17:26:52.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#799. org.apache.commons.math.special.BetaTest#testLogBetaNanPositive started...]
17:26:52.846 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#799. SUCCESS]
17:26:52.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#800. org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive started...]
17:26:52.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#800. SUCCESS]
17:26:52.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#801. org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero started...]
17:26:52.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#801. SUCCESS]
17:26:52.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#802. org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive started...]
17:26:52.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#802. SUCCESS]
17:26:52.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#803. org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive started...]
17:26:52.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#803. SUCCESS]
17:26:52.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#804. org.apache.commons.math.special.ErfTest#testErf1960 started...]
17:26:52.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#804. SUCCESS]
17:26:52.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#805. org.apache.commons.math.special.ErfTest#testErf2576 started...]
17:26:52.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#805. SUCCESS]
17:26:52.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#806. org.apache.commons.math.special.ErfTest#testErf2807 started...]
17:26:52.847 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#806. SUCCESS]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#807. org.apache.commons.math.special.ErfTest#testErf3291 started...]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#807. SUCCESS]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#808. org.apache.commons.math.special.ErfTest#testErf0 started...]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#808. SUCCESS]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#809. org.apache.commons.math.special.GammaTest#testLogGammaPositive started...]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#809. SUCCESS]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#810. org.apache.commons.math.special.GammaTest#testLogGammaNegative started...]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#810. SUCCESS]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#811. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive started...]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#811. SUCCESS]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#812. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative started...]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#812. SUCCESS]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#813. org.apache.commons.math.special.GammaTest#testLogGammaNan started...]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#813. SUCCESS]
17:26:52.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#814. org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive started...]
17:26:52.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#814. SUCCESS]
17:26:52.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#815. org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive started...]
17:26:52.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#815. SUCCESS]
17:26:52.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#816. org.apache.commons.math.special.GammaTest#testLogGammaZero started...]
17:26:52.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#816. SUCCESS]
17:26:52.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#817. org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive started...]
17:26:52.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#817. SUCCESS]
17:26:52.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#818. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan started...]
17:26:52.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#818. SUCCESS]
17:26:52.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#819. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero started...]
17:26:52.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#819. SUCCESS]
17:26:52.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#820. org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics started...]
17:26:52.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#820. SUCCESS]
17:26:52.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#821. org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics started...]
17:26:52.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#821. SUCCESS]
17:26:52.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#822. org.apache.commons.math.stat.FrequencyTest#testEmptyTable started...]
17:26:52.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#822. SUCCESS]
17:26:52.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#823. org.apache.commons.math.stat.FrequencyTest#testAdd started...]
17:26:52.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#823. SUCCESS]
17:26:52.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#824. org.apache.commons.math.stat.FrequencyTest#testPcts started...]
17:26:52.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#824. SUCCESS]
17:26:52.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#825. org.apache.commons.math.stat.FrequencyTest#testToString started...]
17:26:52.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#825. SUCCESS]
17:26:52.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#826. org.apache.commons.math.stat.FrequencyTest#testIntegerValues started...]
17:26:52.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#826. SUCCESS]
17:26:52.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#827. org.apache.commons.math.stat.FrequencyTest#testCounts started...]
17:26:52.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#827. SUCCESS]
17:26:52.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#828. org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats started...]
17:26:52.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#828. SUCCESS]
17:26:52.868 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#829. org.apache.commons.math.stat.StatUtilsTest#testPercentile started...]
17:26:52.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#829. SUCCESS]
17:26:52.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#830. org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions started...]
17:26:52.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#830. SUCCESS]
17:26:52.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#831. org.apache.commons.math.stat.StatUtilsTest#testMax started...]
17:26:52.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#831. SUCCESS]
17:26:52.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#832. org.apache.commons.math.stat.StatUtilsTest#testMin started...]
17:26:52.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#832. SUCCESS]
17:26:52.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#833. org.apache.commons.math.stat.StatUtilsTest#testStats started...]
17:26:52.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#833. SUCCESS]
17:26:52.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#834. org.apache.commons.math.stat.StatUtilsTest#testSumSq started...]
17:26:52.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#834. SUCCESS]
17:26:52.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#835. org.apache.commons.math.stat.StatUtilsTest#testMean started...]
17:26:52.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#835. SUCCESS]
17:26:52.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#836. org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions started...]
17:26:52.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#836. SUCCESS]
17:26:52.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#837. org.apache.commons.math.stat.StatUtilsTest#testProduct started...]
17:26:52.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#837. SUCCESS]
17:26:52.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#838. org.apache.commons.math.stat.StatUtilsTest#testGeometricMean started...]
17:26:52.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#838. SUCCESS]
17:26:52.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#839. org.apache.commons.math.stat.StatUtilsTest#testVariance started...]
17:26:52.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#839. SUCCESS]
17:26:52.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#840. org.apache.commons.math.stat.StatUtilsTest#testSumLog started...]
17:26:52.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#840. SUCCESS]
17:26:52.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#841. org.apache.commons.math.stat.data.LewTest#testCertifiedValues started...]
17:26:52.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#841. SUCCESS]
17:26:52.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#842. org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues started...]
17:26:52.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#842. SUCCESS]
17:26:52.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#843. org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive started...]
17:26:52.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#843. SUCCESS]
17:26:52.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#844. org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative started...]
17:26:52.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#844. SUCCESS]
17:26:52.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#845. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest#testGetSortedValues started...]
17:26:52.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#845. SUCCESS]
17:26:52.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#846. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest#testProductAndGeometricMean started...]
17:26:52.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#846. SUCCESS]
17:26:52.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#847. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest#testSerialization started...]
17:26:52.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#847. SUCCESS]
17:26:52.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#848. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest#testStats started...]
17:26:52.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#848. SUCCESS]
17:26:52.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#849. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest#testToString started...]
17:26:52.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#849. SUCCESS]
17:26:52.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#850. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest#testN0andN1Conditions started...]
17:26:52.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#850. SUCCESS]
17:26:52.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#851. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest#testAddValue started...]
17:26:52.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#851. SUCCESS]
17:26:52.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#852. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest#testWindowing started...]
17:26:52.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#852. SUCCESS]
17:26:52.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#853. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest#testPercentiles started...]
17:26:52.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#853. SUCCESS]
17:26:52.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#854. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest#testWindowSize started...]
17:26:52.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#854. SUCCESS]
17:26:52.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#855. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest#testNewInstanceClassValid started...]
17:26:52.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#855. SUCCESS]
17:26:52.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#856. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest#testNewInstanceClassNull started...]
17:26:52.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#856. SUCCESS]
17:26:52.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#857. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsImplTest#testSkewAndKurtosis started...]
17:26:52.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#857. SUCCESS]
17:26:52.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#858. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter started...]
17:26:52.887 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#858. SUCCESS]
17:26:52.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#859. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection started...]
17:26:52.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#859. SUCCESS]
17:26:52.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#860. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetSortedValues started...]
17:26:52.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#860. SUCCESS]
17:26:52.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#861. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testProductAndGeometricMean started...]
17:26:52.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#861. SUCCESS]
17:26:52.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#862. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSerialization started...]
17:26:52.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#862. SUCCESS]
17:26:52.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#863. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testStats started...]
17:26:52.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#863. SUCCESS]
17:26:52.890 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#864. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString started...]
17:26:52.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#864. SUCCESS]
17:26:52.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#865. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testN0andN1Conditions started...]
17:26:52.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#865. SUCCESS]
17:26:52.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#866. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testAddValue started...]
17:26:52.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#866. SUCCESS]
17:26:52.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#867. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowing started...]
17:26:52.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#867. SUCCESS]
17:26:52.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#868. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentiles started...]
17:26:52.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#868. SUCCESS]
17:26:52.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#869. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize started...]
17:26:52.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#869. SUCCESS]
17:26:52.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#870. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testNewInstanceClassValid started...]
17:26:52.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#870. SUCCESS]
17:26:52.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#871. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testNewInstanceClassNull started...]
17:26:52.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#871. SUCCESS]
17:26:52.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#872. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSkewAndKurtosis started...]
17:26:52.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#872. SUCCESS]
17:26:52.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#873. org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction started...]
17:26:52.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#873. SUCCESS]
17:26:52.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#874. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean started...]
17:26:52.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#874. SUCCESS]
17:26:52.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#875. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization started...]
17:26:52.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#875. SUCCESS]
17:26:52.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#876. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats started...]
17:26:52.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#876. SUCCESS]
17:26:52.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#877. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions started...]
17:26:52.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#877. SUCCESS]
17:26:52.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#878. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis started...]
17:26:52.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#878. SUCCESS]
17:26:52.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#879. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean started...]
17:26:52.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#879. SUCCESS]
17:26:52.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#880. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats started...]
17:26:52.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#880. SUCCESS]
17:26:52.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#881. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions started...]
17:26:52.902 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#881. SUCCESS]
17:26:52.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#882. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis started...]
17:26:52.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#882. SUCCESS]
17:26:52.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#883. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization started...]
17:26:52.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#883. SUCCESS]
17:26:52.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#884. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats started...]
17:26:52.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#884. SUCCESS]
17:26:52.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#885. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts started...]
17:26:52.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#885. SUCCESS]
17:26:52.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#886. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions started...]
17:26:52.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#886. SUCCESS]
17:26:52.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#887. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension started...]
17:26:52.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#887. SUCCESS]
17:26:52.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#888. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection started...]
17:26:52.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#888. SUCCESS]
17:26:52.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#889. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState started...]
17:26:52.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#889. SUCCESS]
17:26:52.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#890. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode started...]
17:26:52.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#890. SUCCESS]
17:26:52.911 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#891. org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization started...]
17:26:52.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#891. SUCCESS]
17:26:52.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#892. org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode started...]
17:26:52.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#892. SUCCESS]
17:26:52.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#893. org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest#testProductAndGeometricMean started...]
17:26:52.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#893. SUCCESS]
17:26:52.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#894. org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest#testGetSummary started...]
17:26:52.913 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#894. SUCCESS]
17:26:52.913 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#895. org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest#testSerialization started...]
17:26:52.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#895. SUCCESS]
17:26:52.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#896. org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest#testStats started...]
17:26:52.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#896. SUCCESS]
17:26:52.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#897. org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest#testNaNContracts started...]
17:26:52.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#897. SUCCESS]
17:26:52.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#898. org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest#testN0andN1Conditions started...]
17:26:52.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#898. SUCCESS]
17:26:52.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#899. org.apache.commons.math.stat.descriptive.SummaryStatisticsImplTest#testEqualsAndHashCode started...]
17:26:52.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#899. SUCCESS]
17:26:52.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#900. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection started...]
17:26:52.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#900. SUCCESS]
17:26:52.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#901. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState started...]
17:26:52.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#901. SUCCESS]
17:26:52.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#902. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean started...]
17:26:52.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#902. SUCCESS]
17:26:52.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#903. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary started...]
17:26:52.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#903. SUCCESS]
17:26:52.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#904. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization started...]
17:26:52.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#904. SUCCESS]
17:26:52.922 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#905. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats started...]
17:26:52.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#905. SUCCESS]
17:26:52.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#906. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts started...]
17:26:52.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#906. SUCCESS]
17:26:52.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#907. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions started...]
17:26:52.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#907. SUCCESS]
17:26:52.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#908. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode started...]
17:26:52.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#908. SUCCESS]
17:26:52.923 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#909. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetSortedValues started...]
17:26:52.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#909. SUCCESS]
17:26:52.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#910. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testProductAndGeometricMean started...]
17:26:52.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#910. SUCCESS]
17:26:52.924 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#911. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSerialization started...]
17:26:52.926 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#911. SUCCESS]
17:26:52.926 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#912. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testStats started...]
17:26:52.926 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#912. SUCCESS]
17:26:52.926 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#913. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString started...]
17:26:52.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#913. SUCCESS]
17:26:52.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#914. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testN0andN1Conditions started...]
17:26:52.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#914. SUCCESS]
17:26:52.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#915. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testAddValue started...]
17:26:52.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#915. SUCCESS]
17:26:52.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#916. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowing started...]
17:26:52.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#916. SUCCESS]
17:26:52.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#917. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentiles started...]
17:26:52.933 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#917. SUCCESS]
17:26:52.933 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#918. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize started...]
17:26:52.933 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#918. SUCCESS]
17:26:52.933 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#919. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testNewInstanceClassValid started...]
17:26:52.933 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#919. SUCCESS]
17:26:52.933 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#920. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testNewInstanceClassNull started...]
17:26:52.933 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#920. SUCCESS]
17:26:52.933 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#921. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSkewAndKurtosis started...]
17:26:52.933 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#921. SUCCESS]
17:26:52.934 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#922. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean started...]
17:26:52.934 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#922. SUCCESS]
17:26:52.934 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#923. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary started...]
17:26:52.934 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#923. SUCCESS]
17:26:52.934 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#924. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization started...]
17:26:52.938 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#924. SUCCESS]
17:26:52.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#925. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats started...]
17:26:52.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#925. SUCCESS]
17:26:52.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#926. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts started...]
17:26:52.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#926. SUCCESS]
17:26:52.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#927. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions started...]
17:26:52.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#927. SUCCESS]
17:26:52.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#928. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode started...]
17:26:52.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#928. SUCCESS]
17:26:52.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#929. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples started...]
17:26:52.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#929. SUCCESS]
17:26:52.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#930. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization started...]
17:26:52.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#930. SUCCESS]
17:26:52.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#931. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation started...]
17:26:52.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#931. SUCCESS]
17:26:52.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#932. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency started...]
17:26:52.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#932. SUCCESS]
17:26:52.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#933. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode started...]
17:26:52.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#933. SUCCESS]
17:26:52.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#934. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation started...]
17:26:52.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#934. SUCCESS]
17:26:52.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#935. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples started...]
17:26:52.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#935. SUCCESS]
17:26:52.942 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#936. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization started...]
17:26:52.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#936. SUCCESS]
17:26:52.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#937. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation started...]
17:26:52.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#937. SUCCESS]
17:26:52.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#938. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency started...]
17:26:52.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#938. SUCCESS]
17:26:52.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#939. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode started...]
17:26:52.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#939. SUCCESS]
17:26:52.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#940. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation started...]
17:26:52.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#940. SUCCESS]
17:26:52.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#941. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues started...]
17:26:52.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#941. SUCCESS]
17:26:52.944 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#942. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples started...]
17:26:52.945 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#942. SUCCESS]
17:26:52.945 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#943. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization started...]
17:26:52.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#943. SUCCESS]
17:26:52.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#944. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation started...]
17:26:52.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#944. SUCCESS]
17:26:52.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#945. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency started...]
17:26:52.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#945. SUCCESS]
17:26:52.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#946. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode started...]
17:26:52.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#946. SUCCESS]
17:26:52.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#947. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation started...]
17:26:52.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#947. SUCCESS]
17:26:52.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#948. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN started...]
17:26:52.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#948. SUCCESS]
17:26:52.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#949. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples started...]
17:26:52.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#949. SUCCESS]
17:26:52.947 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#950. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization started...]
17:26:52.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#950. SUCCESS]
17:26:52.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#951. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation started...]
17:26:52.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#951. SUCCESS]
17:26:52.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#952. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency started...]
17:26:52.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#952. SUCCESS]
17:26:52.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#953. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode started...]
17:26:52.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#953. SUCCESS]
17:26:52.950 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#954. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation started...]
17:26:52.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#954. SUCCESS]
17:26:52.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#955. org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples started...]
17:26:52.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#955. SUCCESS]
17:26:52.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#956. org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples started...]
17:26:52.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#956. SUCCESS]
17:26:52.951 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#957. org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization started...]
17:26:52.952 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#957. SUCCESS]
17:26:52.952 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#958. org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation started...]
17:26:52.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#958. SUCCESS]
17:26:52.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#959. org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency started...]
17:26:52.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#959. SUCCESS]
17:26:52.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#960. org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode started...]
17:26:52.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#960. SUCCESS]
17:26:52.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#961. org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation started...]
17:26:52.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#961. SUCCESS]
17:26:52.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#962. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples started...]
17:26:52.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#962. SUCCESS]
17:26:52.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#963. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization started...]
17:26:52.954 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#963. SUCCESS]
17:26:52.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#964. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation started...]
17:26:52.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#964. SUCCESS]
17:26:52.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#965. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency started...]
17:26:52.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#965. SUCCESS]
17:26:52.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#966. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode started...]
17:26:52.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#966. SUCCESS]
17:26:52.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#967. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation started...]
17:26:52.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#967. SUCCESS]
17:26:52.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#968. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN started...]
17:26:52.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#968. SUCCESS]
17:26:52.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#969. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples started...]
17:26:52.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#969. SUCCESS]
17:26:52.955 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#970. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization started...]
17:26:52.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#970. SUCCESS]
17:26:52.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#971. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation started...]
17:26:52.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#971. SUCCESS]
17:26:52.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#972. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency started...]
17:26:52.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#972. SUCCESS]
17:26:52.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#973. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode started...]
17:26:52.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#973. SUCCESS]
17:26:52.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#974. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation started...]
17:26:52.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#974. SUCCESS]
17:26:52.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#975. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN started...]
17:26:52.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#975. SUCCESS]
17:26:52.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#976. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation started...]
17:26:52.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#976. SUCCESS]
17:26:52.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#977. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples started...]
17:26:52.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#977. SUCCESS]
17:26:52.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#978. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization started...]
17:26:52.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#978. SUCCESS]
17:26:52.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#979. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation started...]
17:26:52.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#979. SUCCESS]
17:26:52.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#980. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency started...]
17:26:52.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#980. SUCCESS]
17:26:52.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#981. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode started...]
17:26:52.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#981. SUCCESS]
17:26:52.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#982. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation started...]
17:26:52.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#982. SUCCESS]
17:26:52.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#983. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples started...]
17:26:52.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#983. SUCCESS]
17:26:52.963 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#984. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization started...]
17:26:52.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#984. SUCCESS]
17:26:52.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#985. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation started...]
17:26:52.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#985. SUCCESS]
17:26:52.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#986. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency started...]
17:26:52.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#986. SUCCESS]
17:26:52.964 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#987. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode started...]
17:26:52.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#987. SUCCESS]
17:26:52.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#988. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation started...]
17:26:52.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#988. SUCCESS]
17:26:52.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#989. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN started...]
17:26:52.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#989. SUCCESS]
17:26:52.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#990. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation started...]
17:26:52.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#990. SUCCESS]
17:26:52.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#991. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples started...]
17:26:52.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#991. SUCCESS]
17:26:52.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#992. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization started...]
17:26:52.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#992. SUCCESS]
17:26:52.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#993. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation started...]
17:26:52.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#993. SUCCESS]
17:26:52.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#994. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency started...]
17:26:52.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#994. SUCCESS]
17:26:52.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#995. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode started...]
17:26:52.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#995. SUCCESS]
17:26:52.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#996. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation started...]
17:26:52.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#996. SUCCESS]
17:26:52.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#997. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic started...]
17:26:52.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#997. SUCCESS]
17:26:52.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#998. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats started...]
17:26:52.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#998. SUCCESS]
17:26:52.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#999. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch started...]
17:26:52.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#999. SUCCESS]
17:26:52.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1000. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic started...]
17:26:52.968 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1000. SUCCESS]
17:26:52.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1001. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats started...]
17:26:52.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1001. SUCCESS]
17:26:52.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1002. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch started...]
17:26:52.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1002. SUCCESS]
17:26:52.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1003. org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs started...]
17:26:52.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1003. SUCCESS]
17:26:52.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1004. org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues started...]
17:26:52.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1004. SUCCESS]
17:26:52.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1005. org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples started...]
17:26:52.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1005. SUCCESS]
17:26:52.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1006. org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization started...]
17:26:52.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1006. SUCCESS]
17:26:52.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1007. org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation started...]
17:26:52.970 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1007. SUCCESS]
17:26:52.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1008. org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency started...]
17:26:52.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1008. SUCCESS]
17:26:52.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1009. org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode started...]
17:26:52.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1009. SUCCESS]
17:26:52.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1010. org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation started...]
17:26:52.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1010. SUCCESS]
17:26:52.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1011. org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation started...]
17:26:52.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1011. SUCCESS]
17:26:52.971 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1012. org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs started...]
17:26:52.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1012. SUCCESS]
17:26:52.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1013. org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues started...]
17:26:52.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1013. SUCCESS]
17:26:52.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1014. org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples started...]
17:26:52.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1014. SUCCESS]
17:26:52.972 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1015. org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization started...]
17:26:52.973 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1015. SUCCESS]
17:26:52.973 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1016. org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation started...]
17:26:52.973 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1016. SUCCESS]
17:26:52.973 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1017. org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency started...]
17:26:52.973 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1017. SUCCESS]
17:26:52.973 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1018. org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode started...]
17:26:52.973 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1018. SUCCESS]
17:26:52.973 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1019. org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation started...]
17:26:52.973 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1019. SUCCESS]
17:26:52.973 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1020. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile started...]
17:26:52.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1020. SUCCESS]
17:26:52.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1021. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample started...]
17:26:52.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1021. SUCCESS]
17:26:52.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1022. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton started...]
17:26:52.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1022. SUCCESS]
17:26:52.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1023. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile started...]
17:26:52.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1023. SUCCESS]
17:26:52.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1024. org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5 started...]
17:26:52.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1024. SUCCESS]
17:26:52.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1025. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile started...]
17:26:52.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1025. SUCCESS]
17:26:52.974 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1026. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues started...]
17:26:52.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1026. SUCCESS]
17:26:52.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1027. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty started...]
17:26:52.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1027. SUCCESS]
17:26:52.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1028. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation started...]
17:26:52.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1028. SUCCESS]
17:26:52.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1029. org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues started...]
17:26:52.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1029. SUCCESS]
17:26:52.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1030. org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples started...]
17:26:52.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1030. SUCCESS]
17:26:52.975 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1031. org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization started...]
17:26:52.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1031. SUCCESS]
17:26:52.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1032. org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation started...]
17:26:52.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1032. SUCCESS]
17:26:52.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1033. org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency started...]
17:26:52.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1033. SUCCESS]
17:26:52.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1034. org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode started...]
17:26:52.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1034. SUCCESS]
17:26:52.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1035. org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation started...]
17:26:52.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1035. SUCCESS]
17:26:52.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1036. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues started...]
17:26:52.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1036. SUCCESS]
17:26:52.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1037. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples started...]
17:26:52.978 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1037. SUCCESS]
17:26:52.978 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1038. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization started...]
17:26:52.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1038. SUCCESS]
17:26:52.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1039. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation started...]
17:26:52.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1039. SUCCESS]
17:26:52.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1040. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency started...]
17:26:52.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1040. SUCCESS]
17:26:52.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1041. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode started...]
17:26:52.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1041. SUCCESS]
17:26:52.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1042. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation started...]
17:26:52.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1042. SUCCESS]
17:26:52.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1043. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues started...]
17:26:52.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1043. SUCCESS]
17:26:52.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1044. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples started...]
17:26:52.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1044. SUCCESS]
17:26:52.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1045. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization started...]
17:26:52.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1045. SUCCESS]
17:26:52.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1046. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation started...]
17:26:52.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1046. SUCCESS]
17:26:52.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1047. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency started...]
17:26:52.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1047. SUCCESS]
17:26:52.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1048. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode started...]
17:26:52.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1048. SUCCESS]
17:26:52.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1049. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation started...]
17:26:52.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1049. SUCCESS]
17:26:52.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1050. org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues started...]
17:26:52.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1050. SUCCESS]
17:26:52.981 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1051. org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples started...]
17:26:52.982 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1051. SUCCESS]
17:26:52.982 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1052. org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization started...]
17:26:52.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1052. SUCCESS]
17:26:52.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1053. org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation started...]
17:26:52.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1053. SUCCESS]
17:26:52.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1054. org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency started...]
17:26:52.984 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1054. SUCCESS]
17:26:52.984 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1055. org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode started...]
17:26:52.984 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1055. SUCCESS]
17:26:52.984 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1056. org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation started...]
17:26:52.984 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1056. SUCCESS]
17:26:52.984 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1057. org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonEqualCounts started...]
17:26:52.985 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1057. SUCCESS]
17:26:52.985 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1058. org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareIndependence started...]
17:26:52.985 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1058. SUCCESS]
17:26:52.985 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1059. org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonUnEqualCounts started...]
17:26:52.985 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1059. SUCCESS]
17:26:52.985 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1060. org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareZeroCount started...]
17:26:52.985 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1060. SUCCESS]
17:26:52.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1061. org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareLargeTestStatistic started...]
17:26:52.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1061. SUCCESS]
17:26:52.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1062. org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquare started...]
17:26:52.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1062. SUCCESS]
17:26:52.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1063. org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonBadCounts started...]
17:26:52.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1063. SUCCESS]
17:26:52.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1064. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts started...]
17:26:52.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1064. SUCCESS]
17:26:52.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1065. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence started...]
17:26:52.986 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1065. SUCCESS]
17:26:52.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1066. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts started...]
17:26:52.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1066. SUCCESS]
17:26:52.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1067. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount started...]
17:26:52.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1067. SUCCESS]
17:26:52.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1068. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic started...]
17:26:52.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1068. SUCCESS]
17:26:52.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1069. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare started...]
17:26:52.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1069. SUCCESS]
17:26:52.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1070. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts started...]
17:26:52.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1070. SUCCESS]
17:26:52.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1071. org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest started...]
17:26:52.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1071. SUCCESS]
17:26:52.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1072. org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue started...]
17:26:52.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1072. SUCCESS]
17:26:52.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1073. org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue started...]
17:26:52.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1073. SUCCESS]
17:26:52.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1074. org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleTTest started...]
17:26:52.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1074. SUCCESS]
17:26:52.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1075. org.apache.commons.math.stat.inference.TTestFactoryTest#testSmallSamples started...]
17:26:52.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1075. SUCCESS]
17:26:52.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1076. org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHeterscedastic started...]
17:26:52.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1076. SUCCESS]
17:26:52.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1077. org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleT started...]
17:26:52.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1077. SUCCESS]
17:26:52.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1078. org.apache.commons.math.stat.inference.TTestFactoryTest#testPaired started...]
17:26:52.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1078. SUCCESS]
17:26:52.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1079. org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHomoscedastic started...]
17:26:52.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1079. SUCCESS]
17:26:52.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1080. org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest started...]
17:26:52.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1080. SUCCESS]
17:26:52.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1081. org.apache.commons.math.stat.inference.TTestTest#testSmallSamples started...]
17:26:52.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1081. SUCCESS]
17:26:52.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1082. org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic started...]
17:26:52.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1082. SUCCESS]
17:26:52.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1083. org.apache.commons.math.stat.inference.TTestTest#testOneSampleT started...]
17:26:52.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1083. SUCCESS]
17:26:52.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1084. org.apache.commons.math.stat.inference.TTestTest#testPaired started...]
17:26:52.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1084. SUCCESS]
17:26:52.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1085. org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic started...]
17:26:52.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1085. SUCCESS]
17:26:52.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1086. org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest started...]
17:26:52.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1086. SUCCESS]
17:26:52.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1087. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence started...]
17:26:52.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1087. SUCCESS]
17:26:52.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1088. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount started...]
17:26:52.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1088. SUCCESS]
17:26:52.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1089. org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples started...]
17:26:52.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1089. SUCCESS]
17:26:52.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1090. org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic started...]
17:26:52.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1090. SUCCESS]
17:26:52.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1091. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic started...]
17:26:52.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1091. SUCCESS]
17:26:52.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1092. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare started...]
17:26:52.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1092. SUCCESS]
17:26:52.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1093. org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT started...]
17:26:52.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1093. SUCCESS]
17:26:52.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1094. org.apache.commons.math.stat.inference.TestUtilsTest#testPaired started...]
17:26:52.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1094. SUCCESS]
17:26:52.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1095. org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic started...]
17:26:52.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1095. SUCCESS]
17:26:52.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1096. org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils started...]
17:26:52.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1096. SUCCESS]
17:26:52.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1097. org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear started...]
17:26:52.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1097. SUCCESS]
17:26:52.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1098. org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr started...]
17:26:52.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1098. SUCCESS]
17:26:52.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1099. org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs started...]
17:26:52.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1099. SUCCESS]
17:26:52.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1100. org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect started...]
17:26:52.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1100. SUCCESS]
17:26:52.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1101. org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative started...]
17:26:52.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1101. SUCCESS]
17:26:52.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1102. org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative started...]
17:26:52.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1102. SUCCESS]
17:26:52.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1103. org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris started...]
17:26:52.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1103. SUCCESS]
17:26:52.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1104. org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference started...]
17:26:52.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1104. SUCCESS]
17:26:52.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1105. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom started...]
17:26:52.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1105. SUCCESS]
17:26:52.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1106. org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData started...]
17:26:52.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1106. SUCCESS]
17:26:52.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1107. org.apache.commons.math.transform.FastCosineTransformerTest#testParameters started...]
17:26:52.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1107. SUCCESS]
17:26:52.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1108. org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction started...]
17:26:52.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1108. SUCCESS]
17:26:52.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1109. org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData started...]
17:26:52.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1109. SUCCESS]
17:26:52.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1110. org.apache.commons.math.transform.FastFourierTransformerTest#testParameters started...]
17:26:52.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1110. SUCCESS]
17:26:52.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1111. org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction started...]
17:26:53.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1111. SUCCESS]
17:26:53.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1112. org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData started...]
17:26:53.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1112. SUCCESS]
17:26:53.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1113. org.apache.commons.math.transform.FastSineTransformerTest#testParameters started...]
17:26:53.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1113. SUCCESS]
17:26:53.004 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1114. org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction started...]
17:26:53.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1114. SUCCESS]
17:26:53.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1115. org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio started...]
17:26:53.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1115. SUCCESS]
17:26:53.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1116. org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble started...]
17:26:53.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1116. SUCCESS]
17:26:53.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1117. org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal started...]
17:26:53.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1117. SUCCESS]
17:26:53.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1118. org.apache.commons.math.util.DefaultTransformerTest#testTransformObject started...]
17:26:53.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1118. SUCCESS]
17:26:53.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1119. org.apache.commons.math.util.DefaultTransformerTest#testTransformString started...]
17:26:53.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1119. SUCCESS]
17:26:53.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1120. org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger started...]
17:26:53.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1120. SUCCESS]
17:26:53.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1121. org.apache.commons.math.util.DefaultTransformerTest#testTransformNull started...]
17:26:53.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1121. SUCCESS]
17:26:53.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1122. org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficient started...]
17:26:53.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1122. SUCCESS]
17:26:53.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1123. org.apache.commons.math.util.MathUtilsTest#testFactorialFail started...]
17:26:53.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1123. SUCCESS]
17:26:53.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1124. org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble started...]
17:26:53.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1124. SUCCESS]
17:26:53.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1125. org.apache.commons.math.util.MathUtilsTest#testRoundDouble started...]
17:26:53.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1125. SUCCESS]
17:26:53.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1126. org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle started...]
17:26:53.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1126. SUCCESS]
17:26:53.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1127. org.apache.commons.math.util.MathUtilsTest#testIndicatorInt started...]
17:26:53.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1127. SUCCESS]
17:26:53.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1128. org.apache.commons.math.util.MathUtilsTest#testGcd started...]
17:26:53.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1128. SUCCESS]
17:26:53.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1129. org.apache.commons.math.util.MathUtilsTest#testLcm started...]
17:26:53.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1129. SUCCESS]
17:26:53.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1130. org.apache.commons.math.util.MathUtilsTest#testLog started...]
17:26:53.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1130. SUCCESS]
17:26:53.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1131. org.apache.commons.math.util.MathUtilsTest#testCosh started...]
17:26:53.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1131. SUCCESS]
17:26:53.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1132. org.apache.commons.math.util.MathUtilsTest#testHash started...]
17:26:53.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1132. SUCCESS]
17:26:53.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1133. org.apache.commons.math.util.MathUtilsTest#testSinh started...]
17:26:53.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1133. SUCCESS]
17:26:53.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1134. org.apache.commons.math.util.MathUtilsTest#testSubAndCheckLong started...]
17:26:53.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1134. SUCCESS]
17:26:53.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1135. org.apache.commons.math.util.MathUtilsTest#testRoundFloat started...]
17:26:53.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1135. SUCCESS]
17:26:53.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1136. org.apache.commons.math.util.MathUtilsTest#testArrayHash started...]
17:26:53.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1136. SUCCESS]
17:26:53.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1137. org.apache.commons.math.util.MathUtilsTest#testFactorial started...]
17:26:53.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1137. SUCCESS]
17:26:53.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1138. org.apache.commons.math.util.MathUtilsTest#testArrayEquals started...]
17:26:53.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1138. SUCCESS]
17:26:53.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1139. org.apache.commons.math.util.MathUtilsTest#testSubAndCheck started...]
17:26:53.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1139. SUCCESS]
17:26:53.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1140. org.apache.commons.math.util.MathUtilsTest#testMulAndCheckLong started...]
17:26:53.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1140. SUCCESS]
17:26:53.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1141. org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientFail started...]
17:26:53.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1141. SUCCESS]
17:26:53.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1142. org.apache.commons.math.util.MathUtilsTest#testCoshNaN started...]
17:26:53.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1142. SUCCESS]
17:26:53.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1143. org.apache.commons.math.util.MathUtilsTest#testSubAndCheckErrorMessage started...]
17:26:53.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1143. SUCCESS]
17:26:53.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1144. org.apache.commons.math.util.MathUtilsTest#test0Choose0 started...]
17:26:53.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1144. SUCCESS]
17:26:53.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1145. org.apache.commons.math.util.MathUtilsTest#testMulAndCheck started...]
17:26:53.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1145. SUCCESS]
17:26:53.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1146. org.apache.commons.math.util.MathUtilsTest#testSignByte started...]
17:26:53.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1146. SUCCESS]
17:26:53.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1147. org.apache.commons.math.util.MathUtilsTest#testSignLong started...]
17:26:53.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1147. SUCCESS]
17:26:53.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1148. org.apache.commons.math.util.MathUtilsTest#testEquals started...]
17:26:53.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1148. SUCCESS]
17:26:53.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1149. org.apache.commons.math.util.MathUtilsTest#testAddAndCheckLong started...]
17:26:53.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1149. SUCCESS]
17:26:53.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1150. org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat started...]
17:26:53.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1150. SUCCESS]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1151. org.apache.commons.math.util.MathUtilsTest#testIndicatorShort started...]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1151. SUCCESS]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1152. org.apache.commons.math.util.MathUtilsTest#testIndicatorByte started...]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1152. SUCCESS]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1153. org.apache.commons.math.util.MathUtilsTest#testIndicatorLong started...]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1153. SUCCESS]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1154. org.apache.commons.math.util.MathUtilsTest#testSignDouble started...]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1154. SUCCESS]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1155. org.apache.commons.math.util.MathUtilsTest#testAddAndCheck started...]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1155. SUCCESS]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1156. org.apache.commons.math.util.MathUtilsTest#testSignInt started...]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1156. SUCCESS]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1157. org.apache.commons.math.util.MathUtilsTest#testSinhNaN started...]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1157. SUCCESS]
17:26:53.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1158. org.apache.commons.math.util.MathUtilsTest#testSignFloat started...]
17:26:53.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1158. SUCCESS]
17:26:53.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1159. org.apache.commons.math.util.MathUtilsTest#testSignShort started...]
17:26:53.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1159. SUCCESS]
17:26:53.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1160. org.apache.commons.math.util.MathUtilsTest#testNextAfter started...]
17:26:53.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1160. SUCCESS]
17:26:53.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1161. org.apache.commons.math.util.MathUtilsTest#testNextAfterSpecialCases started...]
17:26:53.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1161. SUCCESS]
17:26:53.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1162. org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000 started...]
17:26:53.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1162. SUCCESS]
17:26:53.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1163. org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors started...]
17:26:53.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1163. SUCCESS]
17:26:53.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1164. org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling started...]
17:26:53.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1164. SUCCESS]
17:26:53.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1165. org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor started...]
17:26:53.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1165. SUCCESS]
17:26:53.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1166. org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements started...]
17:26:53.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1166. SUCCESS]
17:26:53.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1167. org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity started...]
17:26:53.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1167. SUCCESS]
17:26:53.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1168. org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard started...]
17:26:53.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1168. SUCCESS]
17:26:53.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1169. org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators started...]
17:26:53.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1169. SUCCESS]
17:26:53.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1170. org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion started...]
17:26:53.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1170. SUCCESS]
17:26:53.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1171. org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues started...]
17:26:53.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1171. SUCCESS]
17:26:53.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1172. org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax started...]
17:26:53.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1172. SUCCESS]
17:26:53.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1173. org.apache.commons.math.util.TransformerMapTest#testClear started...]
17:26:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1173. SUCCESS]
17:26:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1174. org.apache.commons.math.util.TransformerMapTest#testContainsTransformer started...]
17:26:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1174. SUCCESS]
17:26:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1175. org.apache.commons.math.util.TransformerMapTest#testTransformers started...]
17:26:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1175. SUCCESS]
17:26:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1176. org.apache.commons.math.util.TransformerMapTest#testPutTransformer started...]
17:26:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1176. SUCCESS]
17:26:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1177. org.apache.commons.math.util.TransformerMapTest#testContainsClass started...]
17:26:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1177. SUCCESS]
17:26:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1178. org.apache.commons.math.util.TransformerMapTest#testClasses started...]
17:26:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1178. SUCCESS]
17:26:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1179. org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer started...]
17:26:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1179. SUCCESS]
17:26:53.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (6611 ms)
<> Total tests run: 1179
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:53.033 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=61, Suspiciousness=0.8819171036881969]
17:26:53.037 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:53,037 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:53.053 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:53.063 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:53.534 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:53.534 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:61.
17:26:53.535 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=61, Suspiciousness=0.8819171036881969]
17:26:53.535 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=49, Suspiciousness=0.8819171036881969]
17:26:53.535 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:53,535 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:53.546 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:53.554 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:53.676 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:53.676 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:49.
17:26:53.676 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=49, Suspiciousness=0.8819171036881969]
17:26:53.676 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=520, Suspiciousness=0.5443310539518174]
17:26:53.677 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:53,677 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:53.687 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:53.696 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:53.794 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:53.794 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:520.
17:26:53.794 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=520, Suspiciousness=0.5443310539518174]
17:26:53.794 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=228, Suspiciousness=0.47140452079103173]
17:26:53.795 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:53,795 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:53.798 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:53.800 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:53.847 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:53.849 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:53,860 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:53,861 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:53,917 DEBUG spoon.support.StandardEnvironment - built in 57 ms
2015-02-28 17:26:53,917 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:53,917 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:53.918 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:53,918 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:53.933 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((f[0]) != 0.0) {
    throw new java.lang.IllegalArgumentException(("The first element is not zero: " + (f[0])));
} 
17:26:53.936 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:53.939 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:54.000 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:54.006 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:54.010 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:54.011 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:54.012 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:54.012 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:54.012 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:54.013 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastSineTransformer:228
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:54.013 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:54.013 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:54.013 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastSineTransformer:228 otherwise the patch would be "true" or "false"
17:26:54.014 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=228, Suspiciousness=0.47140452079103173]
17:26:54.014 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=232, Suspiciousness=0.47140452079103173]
17:26:54.014 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:54,014 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:54.017 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:54.020 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:54.067 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:54.067 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastSineTransformer:232.
17:26:54.067 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=232, Suspiciousness=0.47140452079103173]
17:26:54.067 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=233, Suspiciousness=0.47140452079103173]
17:26:54.067 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:54,067 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:54.070 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:54.073 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:54.116 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:54.116 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,126 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,127 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,175 DEBUG spoon.support.StandardEnvironment - built in 48 ms
2015-02-28 17:26:54,175 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:54,175 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:54.176 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:54,176 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:54.179 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (N == 1) {
    F[0] = 0.0;
    return F;
} 
17:26:54.181 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:54.184 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:54.235 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:54.239 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:54.243 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:54.243 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:54.244 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:54.245 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:54.245 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:54.245 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastSineTransformer:233
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:54.245 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:54.245 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:54.245 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastSineTransformer:233 otherwise the patch would be "true" or "false"
17:26:54.245 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=233, Suspiciousness=0.47140452079103173]
17:26:54.245 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=239, Suspiciousness=0.47140452079103173]
17:26:54.246 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:54,246 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:54.248 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:54.251 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:54.291 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:54.291 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,303 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,303 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,358 DEBUG spoon.support.StandardEnvironment - built in 55 ms
2015-02-28 17:26:54,359 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:54,359 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:54.360 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:54,360 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:54.363 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x = new double[N] ##### Before:
{
    double A;
    double B;
    double[] x;
    double[] F = new double[f.length];
    org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(f);
    if ((f[0]) != 0.0) {
        throw new java.lang.IllegalArgumentException(("The first element is not zero: " + (f[0])));
    } 
    int N = f.length;
    if (N == 1) {
        F[0] = 0.0;
        return F;
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x = new double[N];
    x[0] = 0.0;
    x[(N >> 1)] = 2.0 * (f[(N >> 1)]);
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
        B = 0.5 * ((f[i]) - (f[(N - i)]));
        x[i] = A + B;
        x[(N - i)] = A - B;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = 0.0;
    F[1] = 0.5 * (y[0].getReal());
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = -(y[i].getImaginary());
        F[((2 * i) + 1)] = (y[i].getReal()) + (F[((2 * i) - 1)]);
    }
    return F;
}
17:26:54.365 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x = new double[N] ##### After:
{
    double A;
    double B;
    double[] x;
    double[] F = new double[f.length];
    org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(f);
    if ((f[0]) != 0.0) {
        throw new java.lang.IllegalArgumentException(("The first element is not zero: " + (f[0])));
    } 
    int N = f.length;
    if (N == 1) {
        F[0] = 0.0;
        return F;
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x = new double[N];
    
    x[0] = 0.0;
    x[(N >> 1)] = 2.0 * (f[(N >> 1)]);
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
        B = 0.5 * ((f[i]) - (f[(N - i)]));
        x[i] = A + B;
        x[(N - i)] = A - B;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = 0.0;
    F[1] = 0.5 * (y[0].getReal());
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = -(y[i].getImaginary());
        F[((2 * i) + 1)] = (y[i].getReal()) + (F[((2 * i) - 1)]);
    }
    return F;
}
17:26:54.366 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:54.369 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:54.409 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastSineTransformer.java:208: error: variable x might not have been initialized
        x[0] = 0.0;
        ^
17:26:54.411 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=240, Suspiciousness=0.47140452079103173]
17:26:54.411 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:54,411 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:54.414 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:54.416 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:54.453 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:54.453 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,464 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,464 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,521 DEBUG spoon.support.StandardEnvironment - built in 57 ms
2015-02-28 17:26:54,521 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:54,521 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:54.522 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:54,522 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:54.526 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[0] = 0.0 ##### Before:
{
    double A;
    double B;
    double[] x;
    double[] F = new double[f.length];
    org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(f);
    if ((f[0]) != 0.0) {
        throw new java.lang.IllegalArgumentException(("The first element is not zero: " + (f[0])));
    } 
    int N = f.length;
    if (N == 1) {
        F[0] = 0.0;
        return F;
    } 
    x = new double[N];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x[0] = 0.0;
    x[(N >> 1)] = 2.0 * (f[(N >> 1)]);
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
        B = 0.5 * ((f[i]) - (f[(N - i)]));
        x[i] = A + B;
        x[(N - i)] = A - B;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = 0.0;
    F[1] = 0.5 * (y[0].getReal());
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = -(y[i].getImaginary());
        F[((2 * i) + 1)] = (y[i].getReal()) + (F[((2 * i) - 1)]);
    }
    return F;
}
17:26:54.527 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[0] = 0.0 ##### After:
{
    double A;
    double B;
    double[] x;
    double[] F = new double[f.length];
    org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(f);
    if ((f[0]) != 0.0) {
        throw new java.lang.IllegalArgumentException(("The first element is not zero: " + (f[0])));
    } 
    int N = f.length;
    if (N == 1) {
        F[0] = 0.0;
        return F;
    } 
    x = new double[N];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x[0] = 0.0;
    
    x[(N >> 1)] = 2.0 * (f[(N >> 1)]);
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
        B = 0.5 * ((f[i]) - (f[(N - i)]));
        x[i] = A + B;
        x[(N - i)] = A - B;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = 0.0;
    F[1] = 0.5 * (y[0].getReal());
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = -(y[i].getImaginary());
        F[((2 * i) + 1)] = (y[i].getReal()) + (F[((2 * i) - 1)]);
    }
    return F;
}
17:26:54.528 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:54.531 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:54.574 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:54.578 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:54.583 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:54.583 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:54.584 [Thread-8] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:54.585 [Thread-8] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:54.585 [Thread-8] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:54.585 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastSineTransformer:240
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:54.585 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:54.585 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:54.585 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastSineTransformer:240 otherwise the patch would be "true" or "false"
17:26:54.585 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=240, Suspiciousness=0.47140452079103173]
17:26:54.585 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=241, Suspiciousness=0.47140452079103173]
17:26:54.586 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:54,586 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:54.588 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:54.590 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:54.624 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:54.624 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,634 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,635 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,688 DEBUG spoon.support.StandardEnvironment - built in 54 ms
2015-02-28 17:26:54,689 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:54,689 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:54.690 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:54,690 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:54.693 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[(N >> 1)] = 2.0 * (f[(N >> 1)]) ##### Before:
{
    double A;
    double B;
    double[] x;
    double[] F = new double[f.length];
    org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(f);
    if ((f[0]) != 0.0) {
        throw new java.lang.IllegalArgumentException(("The first element is not zero: " + (f[0])));
    } 
    int N = f.length;
    if (N == 1) {
        F[0] = 0.0;
        return F;
    } 
    x = new double[N];
    x[0] = 0.0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x[(N >> 1)] = 2.0 * (f[(N >> 1)]);
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
        B = 0.5 * ((f[i]) - (f[(N - i)]));
        x[i] = A + B;
        x[(N - i)] = A - B;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = 0.0;
    F[1] = 0.5 * (y[0].getReal());
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = -(y[i].getImaginary());
        F[((2 * i) + 1)] = (y[i].getReal()) + (F[((2 * i) - 1)]);
    }
    return F;
}
17:26:54.695 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[(N >> 1)] = 2.0 * (f[(N >> 1)]) ##### After:
{
    double A;
    double B;
    double[] x;
    double[] F = new double[f.length];
    org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(f);
    if ((f[0]) != 0.0) {
        throw new java.lang.IllegalArgumentException(("The first element is not zero: " + (f[0])));
    } 
    int N = f.length;
    if (N == 1) {
        F[0] = 0.0;
        return F;
    } 
    x = new double[N];
    x[0] = 0.0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x[(N >> 1)] = 2.0 * (f[(N >> 1)]);
    
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
        B = 0.5 * ((f[i]) - (f[(N - i)]));
        x[i] = A + B;
        x[(N - i)] = A - B;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = 0.0;
    F[1] = 0.5 * (y[0].getReal());
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = -(y[i].getImaginary());
        F[((2 * i) + 1)] = (y[i].getReal()) + (F[((2 * i) - 1)]);
    }
    return F;
}
17:26:54.695 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:54.698 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:54.738 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:54.741 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:54.746 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:54.746 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:54.748 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:54.748 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:54.748 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:54.748 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastSineTransformer:241
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:54.748 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:54.749 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:54.749 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastSineTransformer:241 otherwise the patch would be "true" or "false"
17:26:54.749 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=241, Suspiciousness=0.47140452079103173]
17:26:54.749 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=242, Suspiciousness=0.47140452079103173]
17:26:54.749 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:54,749 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:54.751 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:54.754 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:54.784 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:54.785 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,795 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,795 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,848 DEBUG spoon.support.StandardEnvironment - built in 53 ms
2015-02-28 17:26:54,848 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:54,848 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:54.849 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:54,849 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:54.853 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 1 ; i < (N >> 1) ; i++) {
    A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
    B = 0.5 * ((f[i]) - (f[(N - i)]));
    x[i] = A + B;
    x[(N - i)] = A - B;
} ##### Before:
{
    double A;
    double B;
    double[] x;
    double[] F = new double[f.length];
    org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(f);
    if ((f[0]) != 0.0) {
        throw new java.lang.IllegalArgumentException(("The first element is not zero: " + (f[0])));
    } 
    int N = f.length;
    if (N == 1) {
        F[0] = 0.0;
        return F;
    } 
    x = new double[N];
    x[0] = 0.0;
    x[(N >> 1)] = 2.0 * (f[(N >> 1)]);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
        B = 0.5 * ((f[i]) - (f[(N - i)]));
        x[i] = A + B;
        x[(N - i)] = A - B;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = 0.0;
    F[1] = 0.5 * (y[0].getReal());
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = -(y[i].getImaginary());
        F[((2 * i) + 1)] = (y[i].getReal()) + (F[((2 * i) - 1)]);
    }
    return F;
}
17:26:54.854 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 1 ; i < (N >> 1) ; i++) {
    A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
    B = 0.5 * ((f[i]) - (f[(N - i)]));
    x[i] = A + B;
    x[(N - i)] = A - B;
} ##### After:
{
    double A;
    double B;
    double[] x;
    double[] F = new double[f.length];
    org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(f);
    if ((f[0]) != 0.0) {
        throw new java.lang.IllegalArgumentException(("The first element is not zero: " + (f[0])));
    } 
    int N = f.length;
    if (N == 1) {
        F[0] = 0.0;
        return F;
    } 
    x = new double[N];
    x[0] = 0.0;
    x[(N >> 1)] = 2.0 * (f[(N >> 1)]);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 1 ; i < (N >> 1) ; i++) {
            A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
            B = 0.5 * ((f[i]) - (f[(N - i)]));
            x[i] = A + B;
            x[(N - i)] = A - B;
        }
    
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = 0.0;
    F[1] = 0.5 * (y[0].getReal());
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = -(y[i].getImaginary());
        F[((2 * i) + 1)] = (y[i].getReal()) + (F[((2 * i) - 1)]);
    }
    return F;
}
17:26:54.855 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:54.858 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:54.896 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:54.899 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:54.903 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:54.903 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:54.922 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:54.923 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:54.924 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:54.925 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastSineTransformer:242
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:54.925 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:54.925 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:54.925 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastSineTransformer:242 otherwise the patch would be "true" or "false"
17:26:54.926 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=242, Suspiciousness=0.47140452079103173]
17:26:54.926 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=243, Suspiciousness=0.47140452079103173]
17:26:54.926 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:54,926 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:54.933 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:54.936 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:54.963 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:54.963 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,972 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:54,972 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:55,015 DEBUG spoon.support.StandardEnvironment - built in 43 ms
2015-02-28 17:26:55,015 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:55,015 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:55.016 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:55,016 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:55.019 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)])) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
    B = 0.5 * ((f[i]) - (f[(N - i)]));
    x[i] = A + B;
    x[(N - i)] = A - B;
}
17:26:55.019 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)])) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
    
    B = 0.5 * ((f[i]) - (f[(N - i)]));
    x[i] = A + B;
    x[(N - i)] = A - B;
}
17:26:55.020 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:55.022 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.048 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastSineTransformer.java:214: error: variable A might not have been initialized
            x[i] = A + B;
                   ^
17:26:55.049 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=244, Suspiciousness=0.47140452079103173]
17:26:55.049 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:55,049 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:55.051 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:55.053 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.078 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.078 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:55,087 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:55,087 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:55,129 DEBUG spoon.support.StandardEnvironment - built in 42 ms
2015-02-28 17:26:55,129 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:55,129 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:55.130 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:55,130 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:55.133 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### B = 0.5 * ((f[i]) - (f[(N - i)])) ##### Before:
{
    A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    B = 0.5 * ((f[i]) - (f[(N - i)]));
    x[i] = A + B;
    x[(N - i)] = A - B;
}
17:26:55.133 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### B = 0.5 * ((f[i]) - (f[(N - i)])) ##### After:
{
    A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        B = 0.5 * ((f[i]) - (f[(N - i)]));
    
    x[i] = A + B;
    x[(N - i)] = A - B;
}
17:26:55.133 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:55.135 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.161 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastSineTransformer.java:215: error: variable B might not have been initialized
            x[i] = A + B;
                       ^
17:26:55.161 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=245, Suspiciousness=0.47140452079103173]
17:26:55.161 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:55,161 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:55.163 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:55.165 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.189 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.190 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:55,198 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:55,199 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:55,240 DEBUG spoon.support.StandardEnvironment - built in 42 ms
2015-02-28 17:26:55,240 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:55,240 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:55.241 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:55,241 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:55.244 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[i] = A + B ##### Before:
{
    A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
    B = 0.5 * ((f[i]) - (f[(N - i)]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("B",B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x[i] = A + B;
    x[(N - i)] = A - B;
}
17:26:55.244 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[i] = A + B ##### After:
{
    A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
    B = 0.5 * ((f[i]) - (f[(N - i)]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("B",B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x[i] = A + B;
    
    x[(N - i)] = A - B;
}
17:26:55.245 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:55.246 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.280 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.284 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:55.288 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:55.288 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:55.290 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:55.290 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:55.290 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:55.290 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastSineTransformer:245
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:55.290 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:55.290 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:55.291 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastSineTransformer:245 otherwise the patch would be "true" or "false"
17:26:55.291 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=245, Suspiciousness=0.47140452079103173]
17:26:55.291 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=246, Suspiciousness=0.47140452079103173]
17:26:55.291 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:55,291 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:55.292 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:55.294 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.317 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.317 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:55,327 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:55,327 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:55,369 DEBUG spoon.support.StandardEnvironment - built in 42 ms
2015-02-28 17:26:55,369 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:55,369 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:55.370 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:55,370 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:55.373 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[(N - i)] = A - B ##### Before:
{
    A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
    B = 0.5 * ((f[i]) - (f[(N - i)]));
    x[i] = A + B;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("B",B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x[(N - i)] = A - B;
}
17:26:55.373 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[(N - i)] = A - B ##### After:
{
    A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
    B = 0.5 * ((f[i]) - (f[(N - i)]));
    x[i] = A + B;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("B",B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x[(N - i)] = A - B;
    
}
17:26:55.373 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:55.375 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.405 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.408 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:55.412 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:55.412 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:55.413 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:55.413 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:55.413 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:55.414 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastSineTransformer:246
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:55.414 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:55.414 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:55.414 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastSineTransformer:246 otherwise the patch would be "true" or "false"
17:26:55.414 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=246, Suspiciousness=0.47140452079103173]
17:26:55.414 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=242, Suspiciousness=0.47140452079103173]
17:26:55.414 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:55,414 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:55.416 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:55.418 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.439 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.439 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:55,447 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:55,448 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:55,489 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 17:26:55,489 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:55,489 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:55.490 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:55,490 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:55.493 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 1 ; i < (N >> 1) ; i++) {
    A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
    B = 0.5 * ((f[i]) - (f[(N - i)]));
    x[i] = A + B;
    x[(N - i)] = A - B;
} ##### Before:
{
    double A;
    double B;
    double[] x;
    double[] F = new double[f.length];
    org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(f);
    if ((f[0]) != 0.0) {
        throw new java.lang.IllegalArgumentException(("The first element is not zero: " + (f[0])));
    } 
    int N = f.length;
    if (N == 1) {
        F[0] = 0.0;
        return F;
    } 
    x = new double[N];
    x[0] = 0.0;
    x[(N >> 1)] = 2.0 * (f[(N >> 1)]);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
        B = 0.5 * ((f[i]) - (f[(N - i)]));
        x[i] = A + B;
        x[(N - i)] = A - B;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = 0.0;
    F[1] = 0.5 * (y[0].getReal());
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = -(y[i].getImaginary());
        F[((2 * i) + 1)] = (y[i].getReal()) + (F[((2 * i) - 1)]);
    }
    return F;
}
17:26:55.494 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 1 ; i < (N >> 1) ; i++) {
    A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
    B = 0.5 * ((f[i]) - (f[(N - i)]));
    x[i] = A + B;
    x[(N - i)] = A - B;
} ##### After:
{
    double A;
    double B;
    double[] x;
    double[] F = new double[f.length];
    org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(f);
    if ((f[0]) != 0.0) {
        throw new java.lang.IllegalArgumentException(("The first element is not zero: " + (f[0])));
    } 
    int N = f.length;
    if (N == 1) {
        F[0] = 0.0;
        return F;
    } 
    x = new double[N];
    x[0] = 0.0;
    x[(N >> 1)] = 2.0 * (f[(N >> 1)]);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 1 ; i < (N >> 1) ; i++) {
            A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
            B = 0.5 * ((f[i]) - (f[(N - i)]));
            x[i] = A + B;
            x[(N - i)] = A - B;
        }
    
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = 0.0;
    F[1] = 0.5 * (y[0].getReal());
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = -(y[i].getImaginary());
        F[((2 * i) + 1)] = (y[i].getReal()) + (F[((2 * i) - 1)]);
    }
    return F;
}
17:26:55.494 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:55.496 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.523 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.525 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:55.530 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:55.530 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:55.531 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:55.531 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:55.531 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:55.532 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastSineTransformer:242
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:55.532 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:55.532 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:55.532 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastSineTransformer:242 otherwise the patch would be "true" or "false"
17:26:55.532 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=242, Suspiciousness=0.47140452079103173]
17:26:55.532 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=248, Suspiciousness=0.47140452079103173]
17:26:55.532 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:55,532 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:55.533 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:55.535 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.555 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.555 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastSineTransformer:248.
17:26:55.555 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=248, Suspiciousness=0.47140452079103173]
17:26:55.555 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=534, Suspiciousness=0.47140452079103173]
17:26:55.555 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:55,555 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:55.557 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:55.562 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.605 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.605 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:534.
17:26:55.605 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=534, Suspiciousness=0.47140452079103173]
17:26:55.605 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=238, Suspiciousness=0.47140452079103173]
17:26:55.605 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:55,605 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:55.607 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:55.608 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.631 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.631 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:55,639 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:55,639 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:55,682 DEBUG spoon.support.StandardEnvironment - built in 43 ms
2015-02-28 17:26:55,682 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:55,682 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:55.683 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:55,683 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:55.686 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (N == 1) {
    F[0] = 0.5 * ((f[0]) + (f[1]));
    F[1] = 0.5 * ((f[0]) - (f[1]));
    return F;
} 
17:26:55.686 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:55.688 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.714 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.717 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:55.721 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:55.722 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:55.723 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:55.724 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:55.724 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:55.724 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastCosineTransformer:238
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:55.724 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:55.724 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:55.724 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:238 otherwise the patch would be "true" or "false"
17:26:55.725 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=238, Suspiciousness=0.47140452079103173]
17:26:55.725 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=245, Suspiciousness=0.47140452079103173]
17:26:55.725 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:55,725 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:55.726 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:55.728 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.747 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.748 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:55,766 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:55,767 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:55,809 DEBUG spoon.support.StandardEnvironment - built in 42 ms
2015-02-28 17:26:55,809 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:55,809 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:55.810 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:55,810 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:55.813 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x = new double[N] ##### Before:
{
    double A;
    double B;
    double C;
    double F1;
    double[] x;
    double[] F = new double[f.length];
    int N = (f.length) - 1;
    if (!(org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(N))) {
        throw new java.lang.IllegalArgumentException(("Number of samples not power of 2 plus one: " + (f.length)));
    } 
    if (N == 1) {
        F[0] = 0.5 * ((f[0]) + (f[1]));
        F[1] = 0.5 * ((f[0]) - (f[1]));
        return F;
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x = new double[N];
    x[0] = 0.5 * ((f[0]) + (f[N]));
    x[(N >> 1)] = f[(N >> 1)];
    F1 = 0.5 * ((f[0]) - (f[N]));
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = 0.5 * ((f[i]) + (f[(N - i)]));
        B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        x[i] = A - B;
        x[(N - i)] = A + B;
        F1 += C;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = y[0].getReal();
    F[1] = F1;
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = y[i].getReal();
        F[((2 * i) + 1)] = (F[((2 * i) - 1)]) - (y[i].getImaginary());
    }
    F[N] = y[(N >> 1)].getReal();
    return F;
}
17:26:55.814 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x = new double[N] ##### After:
{
    double A;
    double B;
    double C;
    double F1;
    double[] x;
    double[] F = new double[f.length];
    int N = (f.length) - 1;
    if (!(org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(N))) {
        throw new java.lang.IllegalArgumentException(("Number of samples not power of 2 plus one: " + (f.length)));
    } 
    if (N == 1) {
        F[0] = 0.5 * ((f[0]) + (f[1]));
        F[1] = 0.5 * ((f[0]) - (f[1]));
        return F;
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x = new double[N];
    
    x[0] = 0.5 * ((f[0]) + (f[N]));
    x[(N >> 1)] = f[(N >> 1)];
    F1 = 0.5 * ((f[0]) - (f[N]));
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = 0.5 * ((f[i]) + (f[(N - i)]));
        B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        x[i] = A - B;
        x[(N - i)] = A + B;
        F1 += C;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = y[0].getReal();
    F[1] = F1;
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = y[i].getReal();
        F[((2 * i) + 1)] = (F[((2 * i) - 1)]) - (y[i].getImaginary());
    }
    F[N] = y[(N >> 1)].getReal();
    return F;
}
17:26:55.814 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:55.816 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.834 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastCosineTransformer.java:216: error: variable x might not have been initialized
        x[0] = 0.5 * ((f[0]) + (f[N]));
        ^
17:26:55.835 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=246, Suspiciousness=0.47140452079103173]
17:26:55.835 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:55,835 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:55.836 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:55.838 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.856 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.856 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:55,865 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:55,865 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:55,908 DEBUG spoon.support.StandardEnvironment - built in 43 ms
2015-02-28 17:26:55,908 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:55,908 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:55.909 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:55,909 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:55.912 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[0] = 0.5 * ((f[0]) + (f[N])) ##### Before:
{
    double A;
    double B;
    double C;
    double F1;
    double[] x;
    double[] F = new double[f.length];
    int N = (f.length) - 1;
    if (!(org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(N))) {
        throw new java.lang.IllegalArgumentException(("Number of samples not power of 2 plus one: " + (f.length)));
    } 
    if (N == 1) {
        F[0] = 0.5 * ((f[0]) + (f[1]));
        F[1] = 0.5 * ((f[0]) - (f[1]));
        return F;
    } 
    x = new double[N];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x[0] = 0.5 * ((f[0]) + (f[N]));
    x[(N >> 1)] = f[(N >> 1)];
    F1 = 0.5 * ((f[0]) - (f[N]));
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = 0.5 * ((f[i]) + (f[(N - i)]));
        B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        x[i] = A - B;
        x[(N - i)] = A + B;
        F1 += C;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = y[0].getReal();
    F[1] = F1;
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = y[i].getReal();
        F[((2 * i) + 1)] = (F[((2 * i) - 1)]) - (y[i].getImaginary());
    }
    F[N] = y[(N >> 1)].getReal();
    return F;
}
17:26:55.913 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[0] = 0.5 * ((f[0]) + (f[N])) ##### After:
{
    double A;
    double B;
    double C;
    double F1;
    double[] x;
    double[] F = new double[f.length];
    int N = (f.length) - 1;
    if (!(org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(N))) {
        throw new java.lang.IllegalArgumentException(("Number of samples not power of 2 plus one: " + (f.length)));
    } 
    if (N == 1) {
        F[0] = 0.5 * ((f[0]) + (f[1]));
        F[1] = 0.5 * ((f[0]) - (f[1]));
        return F;
    } 
    x = new double[N];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x[0] = 0.5 * ((f[0]) + (f[N]));
    
    x[(N >> 1)] = f[(N >> 1)];
    F1 = 0.5 * ((f[0]) - (f[N]));
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = 0.5 * ((f[i]) + (f[(N - i)]));
        B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        x[i] = A - B;
        x[(N - i)] = A + B;
        F1 += C;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = y[0].getReal();
    F[1] = F1;
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = y[i].getReal();
        F[((2 * i) + 1)] = (F[((2 * i) - 1)]) - (y[i].getImaginary());
    }
    F[N] = y[(N >> 1)].getReal();
    return F;
}
17:26:55.914 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:55.915 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.940 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.943 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:55.947 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:55.947 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:55.948 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:55.948 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:55.948 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:55.949 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastCosineTransformer:246
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:55.949 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:55.949 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:55.949 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:246 otherwise the patch would be "true" or "false"
17:26:55.949 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=246, Suspiciousness=0.47140452079103173]
17:26:55.949 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=247, Suspiciousness=0.47140452079103173]
17:26:55.949 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:55,949 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:55.950 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:55.952 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:55.971 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:55.971 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:55,978 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:55,979 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,020 DEBUG spoon.support.StandardEnvironment - built in 42 ms
2015-02-28 17:26:56,020 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:56,020 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:56.022 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,022 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:56.025 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[(N >> 1)] = f[(N >> 1)] ##### Before:
{
    double A;
    double B;
    double C;
    double F1;
    double[] x;
    double[] F = new double[f.length];
    int N = (f.length) - 1;
    if (!(org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(N))) {
        throw new java.lang.IllegalArgumentException(("Number of samples not power of 2 plus one: " + (f.length)));
    } 
    if (N == 1) {
        F[0] = 0.5 * ((f[0]) + (f[1]));
        F[1] = 0.5 * ((f[0]) - (f[1]));
        return F;
    } 
    x = new double[N];
    x[0] = 0.5 * ((f[0]) + (f[N]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x[(N >> 1)] = f[(N >> 1)];
    F1 = 0.5 * ((f[0]) - (f[N]));
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = 0.5 * ((f[i]) + (f[(N - i)]));
        B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        x[i] = A - B;
        x[(N - i)] = A + B;
        F1 += C;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = y[0].getReal();
    F[1] = F1;
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = y[i].getReal();
        F[((2 * i) + 1)] = (F[((2 * i) - 1)]) - (y[i].getImaginary());
    }
    F[N] = y[(N >> 1)].getReal();
    return F;
}
17:26:56.026 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[(N >> 1)] = f[(N >> 1)] ##### After:
{
    double A;
    double B;
    double C;
    double F1;
    double[] x;
    double[] F = new double[f.length];
    int N = (f.length) - 1;
    if (!(org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(N))) {
        throw new java.lang.IllegalArgumentException(("Number of samples not power of 2 plus one: " + (f.length)));
    } 
    if (N == 1) {
        F[0] = 0.5 * ((f[0]) + (f[1]));
        F[1] = 0.5 * ((f[0]) - (f[1]));
        return F;
    } 
    x = new double[N];
    x[0] = 0.5 * ((f[0]) + (f[N]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x[(N >> 1)] = f[(N >> 1)];
    
    F1 = 0.5 * ((f[0]) - (f[N]));
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = 0.5 * ((f[i]) + (f[(N - i)]));
        B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        x[i] = A - B;
        x[(N - i)] = A + B;
        F1 += C;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = y[0].getReal();
    F[1] = F1;
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = y[i].getReal();
        F[((2 * i) + 1)] = (F[((2 * i) - 1)]) - (y[i].getImaginary());
    }
    F[N] = y[(N >> 1)].getReal();
    return F;
}
17:26:56.026 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.028 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.052 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:56.055 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:56.060 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:56.060 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:56.061 [Thread-24] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:56.061 [Thread-24] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:56.061 [Thread-24] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:56.062 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastCosineTransformer:247
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:56.062 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:56.062 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:56.062 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:247 otherwise the patch would be "true" or "false"
17:26:56.062 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=247, Suspiciousness=0.47140452079103173]
17:26:56.062 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=248, Suspiciousness=0.47140452079103173]
17:26:56.062 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,062 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:56.063 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.065 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.084 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:56.084 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,091 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,092 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,134 DEBUG spoon.support.StandardEnvironment - built in 42 ms
2015-02-28 17:26:56,134 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:56,134 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:56.135 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,135 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:56.138 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### F1 = 0.5 * ((f[0]) - (f[N])) ##### Before:
{
    double A;
    double B;
    double C;
    double F1;
    double[] x;
    double[] F = new double[f.length];
    int N = (f.length) - 1;
    if (!(org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(N))) {
        throw new java.lang.IllegalArgumentException(("Number of samples not power of 2 plus one: " + (f.length)));
    } 
    if (N == 1) {
        F[0] = 0.5 * ((f[0]) + (f[1]));
        F[1] = 0.5 * ((f[0]) - (f[1]));
        return F;
    } 
    x = new double[N];
    x[0] = 0.5 * ((f[0]) + (f[N]));
    x[(N >> 1)] = f[(N >> 1)];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    F1 = 0.5 * ((f[0]) - (f[N]));
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = 0.5 * ((f[i]) + (f[(N - i)]));
        B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        x[i] = A - B;
        x[(N - i)] = A + B;
        F1 += C;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = y[0].getReal();
    F[1] = F1;
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = y[i].getReal();
        F[((2 * i) + 1)] = (F[((2 * i) - 1)]) - (y[i].getImaginary());
    }
    F[N] = y[(N >> 1)].getReal();
    return F;
}
17:26:56.139 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### F1 = 0.5 * ((f[0]) - (f[N])) ##### After:
{
    double A;
    double B;
    double C;
    double F1;
    double[] x;
    double[] F = new double[f.length];
    int N = (f.length) - 1;
    if (!(org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(N))) {
        throw new java.lang.IllegalArgumentException(("Number of samples not power of 2 plus one: " + (f.length)));
    } 
    if (N == 1) {
        F[0] = 0.5 * ((f[0]) + (f[1]));
        F[1] = 0.5 * ((f[0]) - (f[1]));
        return F;
    } 
    x = new double[N];
    x[0] = 0.5 * ((f[0]) + (f[N]));
    x[(N >> 1)] = f[(N >> 1)];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        F1 = 0.5 * ((f[0]) - (f[N]));
    
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = 0.5 * ((f[i]) + (f[(N - i)]));
        B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        x[i] = A - B;
        x[(N - i)] = A + B;
        F1 += C;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = y[0].getReal();
    F[1] = F1;
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = y[i].getReal();
        F[((2 * i) + 1)] = (F[((2 * i) - 1)]) - (y[i].getImaginary());
    }
    F[N] = y[(N >> 1)].getReal();
    return F;
}
17:26:56.139 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.141 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.158 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastCosineTransformer.java:226: error: variable F1 might not have been initialized
            F1 += C;
            ^
FastCosineTransformer.java:231: error: variable F1 might not have been initialized
        F[1] = F1;
               ^
17:26:56.159 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=249, Suspiciousness=0.47140452079103173]
17:26:56.159 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,159 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:56.160 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.162 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.180 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:56.180 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,187 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,188 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,229 DEBUG spoon.support.StandardEnvironment - built in 42 ms
2015-02-28 17:26:56,229 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:56,229 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:56.230 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,230 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:56.234 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 1 ; i < (N >> 1) ; i++) {
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    x[i] = A - B;
    x[(N - i)] = A + B;
    F1 += C;
} ##### Before:
{
    double A;
    double B;
    double C;
    double F1;
    double[] x;
    double[] F = new double[f.length];
    int N = (f.length) - 1;
    if (!(org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(N))) {
        throw new java.lang.IllegalArgumentException(("Number of samples not power of 2 plus one: " + (f.length)));
    } 
    if (N == 1) {
        F[0] = 0.5 * ((f[0]) + (f[1]));
        F[1] = 0.5 * ((f[0]) - (f[1]));
        return F;
    } 
    x = new double[N];
    x[0] = 0.5 * ((f[0]) + (f[N]));
    x[(N >> 1)] = f[(N >> 1)];
    F1 = 0.5 * ((f[0]) - (f[N]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = 0.5 * ((f[i]) + (f[(N - i)]));
        B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        x[i] = A - B;
        x[(N - i)] = A + B;
        F1 += C;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = y[0].getReal();
    F[1] = F1;
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = y[i].getReal();
        F[((2 * i) + 1)] = (F[((2 * i) - 1)]) - (y[i].getImaginary());
    }
    F[N] = y[(N >> 1)].getReal();
    return F;
}
17:26:56.235 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 1 ; i < (N >> 1) ; i++) {
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    x[i] = A - B;
    x[(N - i)] = A + B;
    F1 += C;
} ##### After:
{
    double A;
    double B;
    double C;
    double F1;
    double[] x;
    double[] F = new double[f.length];
    int N = (f.length) - 1;
    if (!(org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(N))) {
        throw new java.lang.IllegalArgumentException(("Number of samples not power of 2 plus one: " + (f.length)));
    } 
    if (N == 1) {
        F[0] = 0.5 * ((f[0]) + (f[1]));
        F[1] = 0.5 * ((f[0]) - (f[1]));
        return F;
    } 
    x = new double[N];
    x[0] = 0.5 * ((f[0]) + (f[N]));
    x[(N >> 1)] = f[(N >> 1)];
    F1 = 0.5 * ((f[0]) - (f[N]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 1 ; i < (N >> 1) ; i++) {
            A = 0.5 * ((f[i]) + (f[(N - i)]));
            B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
            C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
            x[i] = A - B;
            x[(N - i)] = A + B;
            F1 += C;
        }
    
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = y[0].getReal();
    F[1] = F1;
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = y[i].getReal();
        F[((2 * i) + 1)] = (F[((2 * i) - 1)]) - (y[i].getImaginary());
    }
    F[N] = y[(N >> 1)].getReal();
    return F;
}
17:26:56.235 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.237 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.261 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:56.265 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:56.269 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:56.269 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:56.270 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:56.271 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:56.271 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:56.271 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastCosineTransformer:249
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:56.271 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:56.271 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:56.271 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:249 otherwise the patch would be "true" or "false"
17:26:56.271 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=249, Suspiciousness=0.47140452079103173]
17:26:56.271 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=250, Suspiciousness=0.47140452079103173]
17:26:56.272 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,272 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:56.273 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.275 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.293 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:56.293 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,301 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,301 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,342 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 17:26:56,343 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:56,343 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:56.344 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,344 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:56.347 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### A = 0.5 * ((f[i]) + (f[(N - i)])) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    x[i] = A - B;
    x[(N - i)] = A + B;
    F1 += C;
}
17:26:56.347 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### A = 0.5 * ((f[i]) + (f[(N - i)])) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        A = 0.5 * ((f[i]) + (f[(N - i)]));
    
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    x[i] = A - B;
    x[(N - i)] = A + B;
    F1 += C;
}
17:26:56.347 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.349 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.367 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastCosineTransformer.java:225: error: variable A might not have been initialized
            x[i] = A - B;
                   ^
17:26:56.368 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=251, Suspiciousness=0.47140452079103173]
17:26:56.368 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,368 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:56.369 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.371 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.389 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:56.389 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,397 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,397 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,440 DEBUG spoon.support.StandardEnvironment - built in 43 ms
2015-02-28 17:26:56,440 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:56,440 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:56.441 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,441 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:56.444 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)])) ##### Before:
{
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    x[i] = A - B;
    x[(N - i)] = A + B;
    F1 += C;
}
17:26:56.444 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)])) ##### After:
{
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    x[i] = A - B;
    x[(N - i)] = A + B;
    F1 += C;
}
17:26:56.445 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.447 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.463 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastCosineTransformer.java:226: error: variable B might not have been initialized
            x[i] = A - B;
                       ^
17:26:56.464 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=252, Suspiciousness=0.47140452079103173]
17:26:56.464 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,464 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:56.465 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.467 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.484 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:56.485 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,492 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,493 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,544 DEBUG spoon.support.StandardEnvironment - built in 52 ms
2015-02-28 17:26:56,544 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:56,544 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:56.545 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,545 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:56.549 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)])) ##### Before:
{
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("B",B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    x[i] = A - B;
    x[(N - i)] = A + B;
    F1 += C;
}
17:26:56.549 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)])) ##### After:
{
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("B",B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    
    x[i] = A - B;
    x[(N - i)] = A + B;
    F1 += C;
}
17:26:56.550 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.552 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.570 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastCosineTransformer.java:229: error: variable C might not have been initialized
            F1 += C;
                  ^
17:26:56.570 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=253, Suspiciousness=0.47140452079103173]
17:26:56.570 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,571 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:56.571 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.573 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.590 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:56.591 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,599 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,599 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,649 DEBUG spoon.support.StandardEnvironment - built in 50 ms
2015-02-28 17:26:56,649 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:56,649 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:56.650 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,650 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:56.654 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[i] = A - B ##### Before:
{
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("B",B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("C",C);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x[i] = A - B;
    x[(N - i)] = A + B;
    F1 += C;
}
17:26:56.654 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[i] = A - B ##### After:
{
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("B",B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("C",C);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x[i] = A - B;
    
    x[(N - i)] = A + B;
    F1 += C;
}
17:26:56.655 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.656 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.680 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:56.683 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:56.687 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:56.688 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:56.689 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:56.690 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:56.690 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:56.690 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastCosineTransformer:253
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:56.690 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:56.690 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:56.690 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:253 otherwise the patch would be "true" or "false"
17:26:56.691 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=253, Suspiciousness=0.47140452079103173]
17:26:56.691 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=254, Suspiciousness=0.47140452079103173]
17:26:56.691 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,691 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:56.692 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.694 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.711 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:56.711 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,719 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,719 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,769 DEBUG spoon.support.StandardEnvironment - built in 50 ms
2015-02-28 17:26:56,769 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:56,769 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:56.770 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,770 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:56.774 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[(N - i)] = A + B ##### Before:
{
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    x[i] = A - B;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("B",B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("C",C);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    x[(N - i)] = A + B;
    F1 += C;
}
17:26:56.774 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### x[(N - i)] = A + B ##### After:
{
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    x[i] = A - B;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("B",B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("C",C);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        x[(N - i)] = A + B;
    
    F1 += C;
}
17:26:56.775 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.776 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.799 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:56.802 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:56.807 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:56.807 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:56.835 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:56.836 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:56.836 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:56.837 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastCosineTransformer:254
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:56.838 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:56.838 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:56.838 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:254 otherwise the patch would be "true" or "false"
17:26:56.838 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=254, Suspiciousness=0.47140452079103173]
17:26:56.838 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=255, Suspiciousness=0.47140452079103173]
17:26:56.838 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,839 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:56.840 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.841 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.858 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:56.858 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,865 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,865 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,908 DEBUG spoon.support.StandardEnvironment - built in 43 ms
2015-02-28 17:26:56,908 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:56,908 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:56.909 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,909 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:56.912 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### F1 += C ##### Before:
{
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    x[i] = A - B;
    x[(N - i)] = A + B;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("B",B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("C",C);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    F1 += C;
}
17:26:56.913 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### F1 += C ##### After:
{
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    x[i] = A - B;
    x[(N - i)] = A + B;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("A",A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("B",B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("C",C);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        F1 += C;
    
}
17:26:56.913 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.915 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.936 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:56.939 [Thread-31] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:56.944 [Thread-31] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:56.944 [Thread-31] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:56.945 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:56.945 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:56.945 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:56.946 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastCosineTransformer:255
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:56.946 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:56.946 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:56.946 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:255 otherwise the patch would be "true" or "false"
17:26:56.946 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=255, Suspiciousness=0.47140452079103173]
17:26:56.946 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=249, Suspiciousness=0.47140452079103173]
17:26:56.946 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:56,946 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:56.947 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:56.949 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:56.964 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:56.965 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,972 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:56,972 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:57,014 DEBUG spoon.support.StandardEnvironment - built in 42 ms
2015-02-28 17:26:57,014 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:57,014 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:57.015 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:57,015 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:57.018 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 1 ; i < (N >> 1) ; i++) {
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    x[i] = A - B;
    x[(N - i)] = A + B;
    F1 += C;
} ##### Before:
{
    double A;
    double B;
    double C;
    double F1;
    double[] x;
    double[] F = new double[f.length];
    int N = (f.length) - 1;
    if (!(org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(N))) {
        throw new java.lang.IllegalArgumentException(("Number of samples not power of 2 plus one: " + (f.length)));
    } 
    if (N == 1) {
        F[0] = 0.5 * ((f[0]) + (f[1]));
        F[1] = 0.5 * ((f[0]) - (f[1]));
        return F;
    } 
    x = new double[N];
    x[0] = 0.5 * ((f[0]) + (f[N]));
    x[(N >> 1)] = f[(N >> 1)];
    F1 = 0.5 * ((f[0]) - (f[N]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = 0.5 * ((f[i]) + (f[(N - i)]));
        B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
        x[i] = A - B;
        x[(N - i)] = A + B;
        F1 += C;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = y[0].getReal();
    F[1] = F1;
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = y[i].getReal();
        F[((2 * i) + 1)] = (F[((2 * i) - 1)]) - (y[i].getImaginary());
    }
    F[N] = y[(N >> 1)].getReal();
    return F;
}
17:26:57.019 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 1 ; i < (N >> 1) ; i++) {
    A = 0.5 * ((f[i]) + (f[(N - i)]));
    B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
    x[i] = A - B;
    x[(N - i)] = A + B;
    F1 += C;
} ##### After:
{
    double A;
    double B;
    double C;
    double F1;
    double[] x;
    double[] F = new double[f.length];
    int N = (f.length) - 1;
    if (!(org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(N))) {
        throw new java.lang.IllegalArgumentException(("Number of samples not power of 2 plus one: " + (f.length)));
    } 
    if (N == 1) {
        F[0] = 0.5 * ((f[0]) + (f[1]));
        F[1] = 0.5 * ((f[0]) - (f[1]));
        return F;
    } 
    x = new double[N];
    x[0] = 0.5 * ((f[0]) + (f[N]));
    x[(N >> 1)] = f[(N >> 1)];
    F1 = 0.5 * ((f[0]) - (f[N]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F1",F1);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("N",N);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID",org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 1 ; i < (N >> 1) ; i++) {
            A = 0.5 * ((f[i]) + (f[(N - i)]));
            B = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
            C = (java.lang.Math.cos(((i * (java.lang.Math.PI)) / N))) * ((f[i]) - (f[(N - i)]));
            x[i] = A - B;
            x[(N - i)] = A + B;
            F1 += C;
        }
    
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = y[0].getReal();
    F[1] = F1;
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = y[i].getReal();
        F[((2 * i) + 1)] = (F[((2 * i) - 1)]) - (y[i].getImaginary());
    }
    F[N] = y[(N >> 1)].getReal();
    return F;
}
17:26:57.019 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:57.021 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.042 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.045 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:57.049 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:57.050 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:57.051 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:57.051 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:57.051 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:57.051 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastCosineTransformer:249
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:57.051 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:57.052 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:57.052 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:249 otherwise the patch would be "true" or "false"
17:26:57.052 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=249, Suspiciousness=0.47140452079103173]
17:26:57.052 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=257, Suspiciousness=0.47140452079103173]
17:26:57.052 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:57,052 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.053 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:57.054 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.070 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.070 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:257.
17:26:57.070 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=257, Suspiciousness=0.47140452079103173]
17:26:57.070 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=49, Suspiciousness=0.3849001794597505]
17:26:57.070 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:57,070 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.071 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:57.072 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.087 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.087 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastSineTransformer:49.
17:26:57.087 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=49, Suspiciousness=0.3849001794597505]
17:26:57.087 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=50, Suspiciousness=0.3849001794597505]
17:26:57.087 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:57,087 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.088 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:57.089 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.103 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.103 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastSineTransformer:50.
17:26:57.104 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=50, Suspiciousness=0.3849001794597505]
17:26:57.104 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=225, Suspiciousness=0.3849001794597505]
17:26:57.104 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:57,104 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.105 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:57.106 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.120 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.120 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastSineTransformer:225.
17:26:57.121 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=225, Suspiciousness=0.3849001794597505]
17:26:57.121 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=227, Suspiciousness=0.3849001794597505]
17:26:57.121 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:57,121 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.122 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:57.123 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.137 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.138 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:57,145 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:57,145 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:57,185 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 17:26:57,186 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:57,186 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:57.186 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:57,186 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:57.188 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(f) ##### Before:
{
    double A;
    double B;
    double[] x;
    double[] F = new double[f.length];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(f);
    if ((f[0]) != 0.0) {
        throw new java.lang.IllegalArgumentException(("The first element is not zero: " + (f[0])));
    } 
    int N = f.length;
    if (N == 1) {
        F[0] = 0.0;
        return F;
    } 
    x = new double[N];
    x[0] = 0.0;
    x[(N >> 1)] = 2.0 * (f[(N >> 1)]);
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
        B = 0.5 * ((f[i]) - (f[(N - i)]));
        x[i] = A + B;
        x[(N - i)] = A - B;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = 0.0;
    F[1] = 0.5 * (y[0].getReal());
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = -(y[i].getImaginary());
        F[((2 * i) + 1)] = (y[i].getReal()) + (F[((2 * i) - 1)]);
    }
    return F;
}
17:26:57.189 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(f) ##### After:
{
    double A;
    double B;
    double[] x;
    double[] F = new double[f.length];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("F",F);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(f);
    
    if ((f[0]) != 0.0) {
        throw new java.lang.IllegalArgumentException(("The first element is not zero: " + (f[0])));
    } 
    int N = f.length;
    if (N == 1) {
        F[0] = 0.0;
        return F;
    } 
    x = new double[N];
    x[0] = 0.0;
    x[(N >> 1)] = 2.0 * (f[(N >> 1)]);
    for (int i = 1 ; i < (N >> 1) ; i++) {
        A = (java.lang.Math.sin(((i * (java.lang.Math.PI)) / N))) * ((f[i]) + (f[(N - i)]));
        B = 0.5 * ((f[i]) - (f[(N - i)]));
        x[i] = A + B;
        x[(N - i)] = A - B;
    }
    org.apache.commons.math.transform.FastFourierTransformer transformer = new org.apache.commons.math.transform.FastFourierTransformer();
    org.apache.commons.math.complex.Complex[] y = transformer.transform(x);
    F[0] = 0.0;
    F[1] = 0.5 * (y[0].getReal());
    for (int i = 1 ; i < (N >> 1) ; i++) {
        F[(2 * i)] = -(y[i].getImaginary());
        F[((2 * i) + 1)] = (y[i].getReal()) + (F[((2 * i) - 1)]);
    }
    return F;
}
17:26:57.189 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:57.191 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.209 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.213 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:57.217 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:57.217 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:57.219 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:57.219 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:57.219 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:57.219 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastSineTransformer:227
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:57.219 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:57.219 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:57.220 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastSineTransformer:227 otherwise the patch would be "true" or "false"
17:26:57.220 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=227, Suspiciousness=0.3849001794597505]
17:26:57.220 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=530, Suspiciousness=0.3849001794597505]
17:26:57.220 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:57,220 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.222 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:57.226 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.254 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.255 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:57,262 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:57,262 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:57,319 DEBUG spoon.support.StandardEnvironment - built in 57 ms
2015-02-28 17:26:57,319 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:57,320 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:57.320 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:57,320 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:57.322 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (!(org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(d.length))) {
    throw new java.lang.IllegalArgumentException("Number of samples not power of 2, consider padding for fix.");
} 
17:26:57.323 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:57.327 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.361 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.364 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:57.368 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:57.368 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:57.370 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:57.370 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:57.370 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:57.370 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastFourierTransformer:530
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:57.371 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:57.371 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:57.371 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:530 otherwise the patch would be "true" or "false"
17:26:57.371 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=530, Suspiciousness=0.3849001794597505]
17:26:57.371 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=49, Suspiciousness=0.3849001794597505]
17:26:57.371 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:57,371 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.372 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:57.373 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.388 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.388 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:49.
17:26:57.388 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=49, Suspiciousness=0.3849001794597505]
17:26:57.389 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=50, Suspiciousness=0.3849001794597505]
17:26:57.389 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:57,389 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.389 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:57.391 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.407 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.407 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:50.
17:26:57.407 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=50, Suspiciousness=0.3849001794597505]
17:26:57.407 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=231, Suspiciousness=0.3849001794597505]
17:26:57.407 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:57,407 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.408 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:57.410 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.425 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.425 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:231.
17:26:57.425 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=231, Suspiciousness=0.3849001794597505]
17:26:57.425 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=233, Suspiciousness=0.3849001794597505]
17:26:57.425 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:57,425 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.426 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:57.428 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.442 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.442 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:233.
17:26:57.443 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=233, Suspiciousness=0.3849001794597505]
17:26:57.443 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=234, Suspiciousness=0.3849001794597505]
17:26:57.443 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:57,443 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.444 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:57.445 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.460 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.460 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:57,467 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:57,468 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastCosineTransformer.java]
2015-02-28 17:26:57,510 DEBUG spoon.support.StandardEnvironment - built in 43 ms
2015-02-28 17:26:57,510 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:57,510 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:57.511 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:57,511 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:57.513 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (!(org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(N))) {
    throw new java.lang.IllegalArgumentException(("Number of samples not power of 2 plus one: " + (f.length)));
} 
17:26:57.514 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:57.515 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.535 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.539 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:57.543 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:57.543 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:57.545 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:57.545 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:57.545 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:57.545 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastCosineTransformer:234
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:57.545 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:57.545 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:57.545 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:234 otherwise the patch would be "true" or "false"
17:26:57.545 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=234, Suspiciousness=0.3849001794597505]
17:26:57.545 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=66, Suspiciousness=0.3333333333333333]
17:26:57.546 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:57,546 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.546 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:57.548 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.561 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.562 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastSineTransformer:66.
17:26:57.562 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=66, Suspiciousness=0.3333333333333333]
17:26:57.562 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=470, Suspiciousness=0.3333333333333333]
17:26:57.562 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:57,562 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.563 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:57.567 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.594 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.594 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:57,601 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:57,601 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:57,659 DEBUG spoon.support.StandardEnvironment - built in 58 ms
2015-02-28 17:26:57,659 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:57,659 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:57.660 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:57,660 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:57.661 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (n <= 0) {
    throw new java.lang.IllegalArgumentException("Number of samples not positive.");
} 
17:26:57.662 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:57.666 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.699 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.701 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:57.706 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:57.706 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:57.707 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:57.708 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:57.708 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:57.708 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastFourierTransformer:470
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:57.708 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:57.708 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:57.708 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:470 otherwise the patch would be "true" or "false"
17:26:57.708 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=470, Suspiciousness=0.3333333333333333]
17:26:57.709 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=473, Suspiciousness=0.3333333333333333]
17:26:57.709 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:57,709 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.710 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:57.714 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.740 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.740 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:57,747 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:57,748 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:57,803 DEBUG spoon.support.StandardEnvironment - built in 55 ms
2015-02-28 17:26:57,803 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:57,803 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:57.804 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:57,804 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:57.806 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(min, max) ##### Before:
{
    if (n <= 0) {
        throw new java.lang.IllegalArgumentException("Number of samples not positive.");
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("n",n);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID",org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(min, max);
    double[] s = new double[n];
    double h = (max - min) / n;
    for (int i = 0 ; i < n ; i++) {
        s[i] = f.value((min + (i * h)));
    }
    return s;
}
17:26:57.806 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(min, max) ##### After:
{
    if (n <= 0) {
        throw new java.lang.IllegalArgumentException("Number of samples not positive.");
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("n",n);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID",org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(min, max);
    
    double[] s = new double[n];
    double h = (max - min) / n;
    for (int i = 0 ; i < n ; i++) {
        s[i] = f.value((min + (i * h)));
    }
    return s;
}
17:26:57.807 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:57.811 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.842 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.845 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:57.849 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:57.849 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:57.851 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:57.851 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:57.851 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:57.851 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastFourierTransformer:473
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:57.851 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:57.851 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:57.851 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:473 otherwise the patch would be "true" or "false"
17:26:57.851 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=473, Suspiciousness=0.3333333333333333]
17:26:57.851 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=475, Suspiciousness=0.3333333333333333]
17:26:57.852 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:57,852 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.853 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:57.857 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.885 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.885 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:475.
17:26:57.885 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=475, Suspiciousness=0.3333333333333333]
17:26:57.885 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=476, Suspiciousness=0.3333333333333333]
17:26:57.885 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:57,885 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.887 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:57.891 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.916 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.916 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:476.
17:26:57.916 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=476, Suspiciousness=0.3333333333333333]
17:26:57.916 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=477, Suspiciousness=0.3333333333333333]
17:26:57.917 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:57,917 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:57.918 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:57.922 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:57.947 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:57.947 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:57,954 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:57,955 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:58,010 DEBUG spoon.support.StandardEnvironment - built in 56 ms
2015-02-28 17:26:58,010 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:58,010 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:58.011 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:58,011 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:58.013 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < n ; i++) {
    s[i] = f.value((min + (i * h)));
} ##### Before:
{
    if (n <= 0) {
        throw new java.lang.IllegalArgumentException("Number of samples not positive.");
    } 
    org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(min, max);
    double[] s = new double[n];
    double h = (max - min) / n;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("n",n);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID",org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("s",s);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("h",h);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < n ; i++) {
        s[i] = f.value((min + (i * h)));
    }
    return s;
}
17:26:58.013 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < n ; i++) {
    s[i] = f.value((min + (i * h)));
} ##### After:
{
    if (n <= 0) {
        throw new java.lang.IllegalArgumentException("Number of samples not positive.");
    } 
    org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(min, max);
    double[] s = new double[n];
    double h = (max - min) / n;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("n",n);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID",org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("s",s);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("h",h);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < n ; i++) {
            s[i] = f.value((min + (i * h)));
        }
    
    return s;
}
17:26:58.014 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:58.018 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.047 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.050 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.054 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:58.054 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:58.055 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.055 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:58.056 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:58.056 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastFourierTransformer:477
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:58.056 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:58.056 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:58.056 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:477 otherwise the patch would be "true" or "false"
17:26:58.056 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=477, Suspiciousness=0.3333333333333333]
17:26:58.056 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=478, Suspiciousness=0.3333333333333333]
17:26:58.056 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:58,056 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.058 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:58.061 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.085 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.086 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:58,093 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:58,093 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:58,148 DEBUG spoon.support.StandardEnvironment - built in 55 ms
2015-02-28 17:26:58,149 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:58,149 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:58.149 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:58,149 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:58.151 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### s[i] = f.value((min + (i * h))) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("n",n);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID",org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("s",s);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("h",h);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    s[i] = f.value((min + (i * h)));
}
17:26:58.151 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### s[i] = f.value((min + (i * h))) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("n",n);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID",org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("s",s);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("h",h);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        s[i] = f.value((min + (i * h)));
    
}
17:26:58.152 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:58.156 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.185 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.187 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.191 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:58.191 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:58.193 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.193 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:58.193 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:58.194 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastFourierTransformer:478
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:58.194 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:58.194 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:58.194 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:478 otherwise the patch would be "true" or "false"
17:26:58.194 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=478, Suspiciousness=0.3333333333333333]
17:26:58.194 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=477, Suspiciousness=0.3333333333333333]
17:26:58.194 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:58,194 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.196 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:58.199 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.223 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.224 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:58,231 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:58,231 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:58,287 DEBUG spoon.support.StandardEnvironment - built in 56 ms
2015-02-28 17:26:58,287 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:58,287 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:58.288 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:58,288 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:58.290 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < n ; i++) {
    s[i] = f.value((min + (i * h)));
} ##### Before:
{
    if (n <= 0) {
        throw new java.lang.IllegalArgumentException("Number of samples not positive.");
    } 
    org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(min, max);
    double[] s = new double[n];
    double h = (max - min) / n;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("n",n);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID",org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("s",s);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("h",h);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < n ; i++) {
        s[i] = f.value((min + (i * h)));
    }
    return s;
}
17:26:58.290 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < n ; i++) {
    s[i] = f.value((min + (i * h)));
} ##### After:
{
    if (n <= 0) {
        throw new java.lang.IllegalArgumentException("Number of samples not positive.");
    } 
    org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(min, max);
    double[] s = new double[n];
    double h = (max - min) / n;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("n",n);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID",org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("s",s);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("h",h);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < n ; i++) {
            s[i] = f.value((min + (i * h)));
        }
    
    return s;
}
17:26:58.291 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:58.295 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.324 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.328 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.332 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:58.333 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:58.334 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.334 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:58.334 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:58.334 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastFourierTransformer:477
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:58.334 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:58.334 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:58.335 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:477 otherwise the patch would be "true" or "false"
17:26:58.335 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=477, Suspiciousness=0.3333333333333333]
17:26:58.335 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=480, Suspiciousness=0.3333333333333333]
17:26:58.335 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:58,335 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.336 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:58.340 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.364 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.364 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:480.
17:26:58.364 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=480, Suspiciousness=0.3333333333333333]
17:26:58.364 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=559, Suspiciousness=0.3333333333333333]
17:26:58.365 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:58,365 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.366 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:58.369 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.393 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.393 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:58,400 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:58,401 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastFourierTransformer.java]
2015-02-28 17:26:58,456 DEBUG spoon.support.StandardEnvironment - built in 55 ms
2015-02-28 17:26:58,456 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:58,456 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:58.457 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:58,457 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:58.458 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (lower >= upper) {
    throw new java.lang.IllegalArgumentException((((("Endpoints do not specify an interval: [" + lower) + ", ") + upper) + "]"));
} 
17:26:58.459 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:58.462 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.493 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.496 [Thread-51] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.500 [Thread-51] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:58.500 [Thread-51] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:58.501 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.502 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:58.502 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:58.502 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastFourierTransformer:559
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:58.502 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:58.502 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:58.502 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:559 otherwise the patch would be "true" or "false"
17:26:58.502 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=559, Suspiciousness=0.3333333333333333]
17:26:58.502 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=564, Suspiciousness=0.3333333333333333]
17:26:58.502 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastFourierTransformer]
2015-02-28 17:26:58,502 DEBUG spoon.support.StandardEnvironment - processing 'FastFourierTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.504 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastFourierTransformer]
17:26:58.507 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.532 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.532 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastFourierTransformer:564.
17:26:58.532 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastFourierTransformer, LineNumber=564, Suspiciousness=0.3333333333333333]
17:26:58.532 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=67, Suspiciousness=0.3333333333333333]
17:26:58.532 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:58,532 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.533 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:58.534 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.547 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.547 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:67.
17:26:58.547 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=67, Suspiciousness=0.3333333333333333]
17:26:58.548 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=58, Suspiciousness=0.23570226039551587]
17:26:58.548 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 17:26:58,548 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.548 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
17:26:58.549 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.566 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.566 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:58.
17:26:58.566 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=58, Suspiciousness=0.23570226039551587]
17:26:58.566 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=59, Suspiciousness=0.23570226039551587]
17:26:58.566 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.EstimatedParameter]
2015-02-28 17:26:58,566 DEBUG spoon.support.StandardEnvironment - processing 'EstimatedParameter' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.566 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.EstimatedParameter]
17:26:58.567 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.574 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.574 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.EstimatedParameter:59.
17:26:58.574 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=59, Suspiciousness=0.23570226039551587]
17:26:58.574 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=60, Suspiciousness=0.23570226039551587]
17:26:58.574 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.EstimatedParameter]
2015-02-28 17:26:58,574 DEBUG spoon.support.StandardEnvironment - processing 'EstimatedParameter' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.575 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.EstimatedParameter]
17:26:58.575 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.582 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.582 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/EstimatedParameter.java]
2015-02-28 17:26:58,589 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/EstimatedParameter.java]
2015-02-28 17:26:58,589 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/EstimatedParameter.java]
2015-02-28 17:26:58,625 DEBUG spoon.support.StandardEnvironment - built in 36 ms
2015-02-28 17:26:58,625 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:58,625 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:58.626 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.EstimatedParameter]
2015-02-28 17:26:58,626 DEBUG spoon.support.StandardEnvironment - processing 'EstimatedParameter' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:58.626 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.name = name ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    this.name = name;
    estimate = firstEstimate;
    this.bound = bound;
}
17:26:58.627 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.name = name ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        this.name = name;
    
    estimate = firstEstimate;
    this.bound = bound;
}
17:26:58.627 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.EstimatedParameter]
17:26:58.627 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.639 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.642 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.646 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:58.646 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:58.647 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.647 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:58.648 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:58.648 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.EstimatedParameter:60
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:58.648 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:58.648 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:58.648 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.EstimatedParameter:60 otherwise the patch would be "true" or "false"
17:26:58.648 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=60, Suspiciousness=0.23570226039551587]
17:26:58.648 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=61, Suspiciousness=0.23570226039551587]
17:26:58.648 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.EstimatedParameter]
2015-02-28 17:26:58,648 DEBUG spoon.support.StandardEnvironment - processing 'EstimatedParameter' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.649 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.EstimatedParameter]
17:26:58.649 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.656 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.656 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/EstimatedParameter.java]
2015-02-28 17:26:58,663 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/EstimatedParameter.java]
2015-02-28 17:26:58,663 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/EstimatedParameter.java]
2015-02-28 17:26:58,703 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 17:26:58,704 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:58,704 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:58.704 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.EstimatedParameter]
2015-02-28 17:26:58,705 DEBUG spoon.support.StandardEnvironment - processing 'EstimatedParameter' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:58.705 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### estimate = firstEstimate ##### Before:
{
    this.name = name;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    estimate = firstEstimate;
    this.bound = bound;
}
17:26:58.705 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### estimate = firstEstimate ##### After:
{
    this.name = name;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        estimate = firstEstimate;
    
    this.bound = bound;
}
17:26:58.705 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.EstimatedParameter]
17:26:58.706 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.718 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.722 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.726 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:58.727 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:58.728 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.728 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:58.728 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
17:26:58.729 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.EstimatedParameter:61
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:58.729 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:58.729 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
17:26:58.729 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.EstimatedParameter:61 otherwise the patch would be "true" or "false"
17:26:58.729 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=61, Suspiciousness=0.23570226039551587]
17:26:58.729 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=62, Suspiciousness=0.23570226039551587]
17:26:58.729 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.EstimatedParameter]
2015-02-28 17:26:58,729 DEBUG spoon.support.StandardEnvironment - processing 'EstimatedParameter' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.729 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.EstimatedParameter]
17:26:58.730 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.738 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.738 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/EstimatedParameter.java]
2015-02-28 17:26:58,746 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/EstimatedParameter.java]
2015-02-28 17:26:58,746 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/EstimatedParameter.java]
2015-02-28 17:26:58,788 DEBUG spoon.support.StandardEnvironment - built in 42 ms
2015-02-28 17:26:58,788 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:58,788 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:58.789 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.EstimatedParameter]
2015-02-28 17:26:58,789 DEBUG spoon.support.StandardEnvironment - processing 'EstimatedParameter' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:58.789 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.bound = bound ##### Before:
{
    this.name = name;
    estimate = firstEstimate;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    this.bound = bound;
}
17:26:58.789 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.bound = bound ##### After:
{
    this.name = name;
    estimate = firstEstimate;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        this.bound = bound;
    
}
17:26:58.789 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.EstimatedParameter]
17:26:58.790 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.802 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.806 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.811 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:58.811 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[expected:<0.4583333333333333> but was:<5.999999999999996>]
junit.framework.AssertionFailedError: expected:<0.4583333333333333> but was:<5.999999999999996>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.Assert.assertEquals(Assert.java:129)
    at junit.framework.TestCase.assertEquals(TestCase.java:288)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:478)
17:26:58.812 [Thread-58] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.812 [Thread-58] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:58.812 [Thread-58] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:58.813 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.EstimatedParameter:62
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:58.813 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): expected:<0.4583333333333333> but was:<5.999999999999996>]
17:26:58.813 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:58.813 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.EstimatedParameter:62 otherwise the patch would be "true" or "false"
17:26:58.813 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=62, Suspiciousness=0.23570226039551587]
17:26:58.813 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=63, Suspiciousness=0.23570226039551587]
17:26:58.813 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.EstimatedParameter]
2015-02-28 17:26:58,813 DEBUG spoon.support.StandardEnvironment - processing 'EstimatedParameter' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.813 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.EstimatedParameter]
17:26:58.814 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.821 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.821 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.EstimatedParameter:63.
17:26:58.821 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=63, Suspiciousness=0.23570226039551587]
17:26:58.822 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=87, Suspiciousness=0.23570226039551587]
17:26:58.822 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:58,822 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.822 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:58.824 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.838 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.838 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastSineTransformer:87.
17:26:58.838 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=87, Suspiciousness=0.23570226039551587]
17:26:58.838 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=88, Suspiciousness=0.23570226039551587]
17:26:58.838 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:58,838 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.839 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:58.840 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.855 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.855 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:58,863 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:58,863 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/transform/FastSineTransformer.java]
2015-02-28 17:26:58,911 DEBUG spoon.support.StandardEnvironment - built in 48 ms
2015-02-28 17:26:58,912 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:58,912 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:58.912 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:58,912 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:58.914 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### data[0] = 0.0 ##### Before:
{
    double[] data = org.apache.commons.math.transform.FastFourierTransformer.sample(f, min, max, n);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("data",data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("n",n);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    data[0] = 0.0;
    return fst(data);
}
17:26:58.915 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### data[0] = 0.0 ##### After:
{
    double[] data = org.apache.commons.math.transform.FastFourierTransformer.sample(f, min, max, n);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("f",f);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("min",min);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("data",data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("n",n);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.transform.FastSineTransformer.serialVersionUID",org.apache.commons.math.transform.FastSineTransformer.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        data[0] = 0.0;
    
    return fst(data);
}
17:26:58.915 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:58.916 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.935 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.938 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.942 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:58.943 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:58.944 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:58.944 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:58.945 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:58.945 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.transform.FastSineTransformer:88
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:58.945 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:58.945 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:58.945 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.transform.FastSineTransformer:88 otherwise the patch would be "true" or "false"
17:26:58.945 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=88, Suspiciousness=0.23570226039551587]
17:26:58.945 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=89, Suspiciousness=0.23570226039551587]
17:26:58.945 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastSineTransformer]
2015-02-28 17:26:58,945 DEBUG spoon.support.StandardEnvironment - processing 'FastSineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.946 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastSineTransformer]
17:26:58.947 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.961 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.961 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastSineTransformer:89.
17:26:58.961 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastSineTransformer, LineNumber=89, Suspiciousness=0.23570226039551587]
17:26:58.961 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=89, Suspiciousness=0.23570226039551587]
17:26:58.962 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:58,962 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.962 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:58.964 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.978 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.978 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:89.
17:26:58.978 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=89, Suspiciousness=0.23570226039551587]
17:26:58.978 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=90, Suspiciousness=0.23570226039551587]
17:26:58.979 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.transform.FastCosineTransformer]
2015-02-28 17:26:58,979 DEBUG spoon.support.StandardEnvironment - processing 'FastCosineTransformer' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.979 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.transform.FastCosineTransformer]
17:26:58.981 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:58.995 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:58.995 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.transform.FastCosineTransformer:90.
17:26:58.995 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.transform.FastCosineTransformer, LineNumber=90, Suspiciousness=0.23570226039551587]
17:26:58.995 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.analysis.SinFunction, LineNumber=31, Suspiciousness=0.23210354127426377]
17:26:58.996 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=162, Suspiciousness=0.19245008972987526]
17:26:58.996 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:58,996 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:58.997 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:58.999 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.017 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.017 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,025 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,025 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,100 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-02-28 17:26:59,100 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:59,100 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:59.101 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,101 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:59.103 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### updateJacobian() ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    updateJacobian();
    final int rows = problem.getMeasurements().length;
    final int cols = problem.getAllParameters().length;
    final int max = cols * rows;
    double[][] jTj = new double[cols][cols];
    for (int i = 0 ; i < cols ; ++i) {
        for (int j = i ; j < cols ; ++j) {
            double sum = 0;
            for (int k = 0 ; k < max ; k += cols) {
                sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
            }
            jTj[i][j] = sum;
            jTj[j][i] = sum;
        }
    }
    try {
        return new org.apache.commons.math.linear.RealMatrixImpl(jTj).inverse().getData();
    } catch (org.apache.commons.math.linear.InvalidMatrixException ime) {
        throw new org.apache.commons.math.estimation.EstimationException("unable to compute covariances: singular problem" , new java.lang.Object[0]);
    }
}
17:26:59.104 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### updateJacobian() ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        updateJacobian();
    
    final int rows = problem.getMeasurements().length;
    final int cols = problem.getAllParameters().length;
    final int max = cols * rows;
    double[][] jTj = new double[cols][cols];
    for (int i = 0 ; i < cols ; ++i) {
        for (int j = i ; j < cols ; ++j) {
            double sum = 0;
            for (int k = 0 ; k < max ; k += cols) {
                sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
            }
            jTj[i][j] = sum;
            jTj[j][i] = sum;
        }
    }
    try {
        return new org.apache.commons.math.linear.RealMatrixImpl(jTj).inverse().getData();
    } catch (org.apache.commons.math.linear.InvalidMatrixException ime) {
        throw new org.apache.commons.math.estimation.EstimationException("unable to compute covariances: singular problem" , new java.lang.Object[0]);
    }
}
17:26:59.104 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.106 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.129 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.132 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.140 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:59.140 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:158)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:59.141 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.142 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:59.142 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:158)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:59.142 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:162
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:59.142 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:59.142 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:59.143 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:162 otherwise the patch would be "true" or "false"
17:26:59.143 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=162, Suspiciousness=0.19245008972987526]
17:26:59.143 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=165, Suspiciousness=0.19245008972987526]
17:26:59.143 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,143 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:59.144 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.145 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.162 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.162 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:165.
17:26:59.162 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=165, Suspiciousness=0.19245008972987526]
17:26:59.162 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=166, Suspiciousness=0.19245008972987526]
17:26:59.162 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,162 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:59.163 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.165 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.182 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.182 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:166.
17:26:59.182 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=166, Suspiciousness=0.19245008972987526]
17:26:59.182 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=167, Suspiciousness=0.19245008972987526]
17:26:59.182 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,182 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:59.183 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.185 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.202 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.203 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:167.
17:26:59.203 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=167, Suspiciousness=0.19245008972987526]
17:26:59.203 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=168, Suspiciousness=0.19245008972987526]
17:26:59.203 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,203 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:59.204 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.205 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.223 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.223 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:168.
17:26:59.223 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=168, Suspiciousness=0.19245008972987526]
17:26:59.223 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=169, Suspiciousness=0.19245008972987526]
17:26:59.223 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,223 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:59.224 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.226 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.242 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.243 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,250 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,250 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,292 DEBUG spoon.support.StandardEnvironment - built in 42 ms
2015-02-28 17:26:59,293 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:59,293 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:59.293 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,293 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:59.296 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < cols ; ++i) {
    for (int j = i ; j < cols ; ++j) {
        double sum = 0;
        for (int k = 0 ; k < max ; k += cols) {
            sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
        }
        jTj[i][j] = sum;
        jTj[j][i] = sum;
    }
} ##### Before:
{
    updateJacobian();
    final int rows = problem.getMeasurements().length;
    final int cols = problem.getAllParameters().length;
    final int max = cols * rows;
    double[][] jTj = new double[cols][cols];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("jTj",jTj);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("cols",cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rows",rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < cols ; ++i) {
        for (int j = i ; j < cols ; ++j) {
            double sum = 0;
            for (int k = 0 ; k < max ; k += cols) {
                sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
            }
            jTj[i][j] = sum;
            jTj[j][i] = sum;
        }
    }
    try {
        return new org.apache.commons.math.linear.RealMatrixImpl(jTj).inverse().getData();
    } catch (org.apache.commons.math.linear.InvalidMatrixException ime) {
        throw new org.apache.commons.math.estimation.EstimationException("unable to compute covariances: singular problem" , new java.lang.Object[0]);
    }
}
17:26:59.297 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < cols ; ++i) {
    for (int j = i ; j < cols ; ++j) {
        double sum = 0;
        for (int k = 0 ; k < max ; k += cols) {
            sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
        }
        jTj[i][j] = sum;
        jTj[j][i] = sum;
    }
} ##### After:
{
    updateJacobian();
    final int rows = problem.getMeasurements().length;
    final int cols = problem.getAllParameters().length;
    final int max = cols * rows;
    double[][] jTj = new double[cols][cols];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("jTj",jTj);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("cols",cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rows",rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < cols ; ++i) {
            for (int j = i ; j < cols ; ++j) {
                double sum = 0;
                for (int k = 0 ; k < max ; k += cols) {
                    sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
                }
                jTj[i][j] = sum;
                jTj[j][i] = sum;
            }
        }
    
    try {
        return new org.apache.commons.math.linear.RealMatrixImpl(jTj).inverse().getData();
    } catch (org.apache.commons.math.linear.InvalidMatrixException ime) {
        throw new org.apache.commons.math.estimation.EstimationException("unable to compute covariances: singular problem" , new java.lang.Object[0]);
    }
}
17:26:59.297 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.298 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.321 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.324 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.328 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:59.328 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:161)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:59.329 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.332 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:59.332 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to compute covariances: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to compute covariances: singular problem
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:171)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:59.332 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:169
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:59.332 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:59.332 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to compute covariances: singular problem]
17:26:59.332 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:169 otherwise the patch would be "true" or "false"
17:26:59.332 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=169, Suspiciousness=0.19245008972987526]
17:26:59.333 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=170, Suspiciousness=0.19245008972987526]
17:26:59.333 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,333 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:59.334 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.335 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.351 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.351 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,358 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,359 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,401 DEBUG spoon.support.StandardEnvironment - built in 43 ms
2015-02-28 17:26:59,401 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:59,402 DEBUG spoon.support.StandardEnvironment - built in 1 ms
17:26:59.403 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,403 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:59.406 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = i ; j < cols ; ++j) {
    double sum = 0;
    for (int k = 0 ; k < max ; k += cols) {
        sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
    }
    jTj[i][j] = sum;
    jTj[j][i] = sum;
} ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("jTj",jTj);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("cols",cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rows",rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int j = i ; j < cols ; ++j) {
        double sum = 0;
        for (int k = 0 ; k < max ; k += cols) {
            sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
        }
        jTj[i][j] = sum;
        jTj[j][i] = sum;
    }
}
17:26:59.406 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = i ; j < cols ; ++j) {
    double sum = 0;
    for (int k = 0 ; k < max ; k += cols) {
        sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
    }
    jTj[i][j] = sum;
    jTj[j][i] = sum;
} ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("jTj",jTj);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("cols",cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rows",rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int j = i ; j < cols ; ++j) {
            double sum = 0;
            for (int k = 0 ; k < max ; k += cols) {
                sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
            }
            jTj[i][j] = sum;
            jTj[j][i] = sum;
        }
    
}
17:26:59.406 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.408 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.430 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.433 [Thread-65] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.440 [Thread-65] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:59.440 [Thread-65] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to compute covariances: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to compute covariances: singular problem
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:171)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:59.442 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.442 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:59.442 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:161)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:59.442 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:170
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:59.442 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to compute covariances: singular problem]
17:26:59.443 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:59.443 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:170 otherwise the patch would be "true" or "false"
17:26:59.443 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=170, Suspiciousness=0.19245008972987526]
17:26:59.443 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=171, Suspiciousness=0.19245008972987526]
17:26:59.443 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,443 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:59.444 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.445 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.461 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.461 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:171.
17:26:59.461 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=171, Suspiciousness=0.19245008972987526]
17:26:59.461 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=172, Suspiciousness=0.19245008972987526]
17:26:59.461 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,461 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:59.462 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.463 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.479 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.479 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,486 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,486 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,529 DEBUG spoon.support.StandardEnvironment - built in 43 ms
2015-02-28 17:26:59,529 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:59,529 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:59.530 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,530 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:59.532 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int k = 0 ; k < max ; k += cols) {
    sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
} ##### Before:
{
    double sum = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("jTj",jTj);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("cols",cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rows",rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int k = 0 ; k < max ; k += cols) {
        sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
    }
    jTj[i][j] = sum;
    jTj[j][i] = sum;
}
17:26:59.532 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int k = 0 ; k < max ; k += cols) {
    sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
} ##### After:
{
    double sum = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("jTj",jTj);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("cols",cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rows",rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int k = 0 ; k < max ; k += cols) {
            sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
        }
    
    jTj[i][j] = sum;
    jTj[j][i] = sum;
}
17:26:59.533 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.534 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.556 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.560 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.564 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:59.564 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:162)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:59.565 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.569 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:59.569 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to compute covariances: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to compute covariances: singular problem
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:172)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:59.569 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:172
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:59.569 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:59.569 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to compute covariances: singular problem]
17:26:59.569 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:172 otherwise the patch would be "true" or "false"
17:26:59.569 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=172, Suspiciousness=0.19245008972987526]
17:26:59.569 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=173, Suspiciousness=0.19245008972987526]
17:26:59.569 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,569 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:59.570 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.572 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.587 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.587 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,594 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,594 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,637 DEBUG spoon.support.StandardEnvironment - built in 43 ms
2015-02-28 17:26:59,637 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:59,637 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:59.637 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,638 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:59.640 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sum += (jacobian[(k + i)]) * (jacobian[(k + j)]) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("jTj",jTj);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("cols",cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rows",rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
}
17:26:59.640 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sum += (jacobian[(k + i)]) * (jacobian[(k + j)]) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("jTj",jTj);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("cols",cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rows",rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
    
}
17:26:59.641 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.642 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.664 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.666 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.675 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:59.675 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to compute covariances: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to compute covariances: singular problem
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:172)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:59.676 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.677 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:59.677 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:162)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:59.677 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:173
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:59.677 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to compute covariances: singular problem]
17:26:59.677 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:59.677 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:173 otherwise the patch would be "true" or "false"
17:26:59.677 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=173, Suspiciousness=0.19245008972987526]
17:26:59.677 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=172, Suspiciousness=0.19245008972987526]
17:26:59.677 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,677 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:59.678 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.680 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.695 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.695 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,702 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,702 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 17:26:59,744 DEBUG spoon.support.StandardEnvironment - built in 42 ms
2015-02-28 17:26:59,745 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:59,745 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:59.745 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 17:26:59,745 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:59.748 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int k = 0 ; k < max ; k += cols) {
    sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
} ##### Before:
{
    double sum = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("jTj",jTj);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("cols",cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rows",rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int k = 0 ; k < max ; k += cols) {
        sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
    }
    jTj[i][j] = sum;
    jTj[j][i] = sum;
}
17:26:59.748 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int k = 0 ; k < max ; k += cols) {
    sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
} ##### After:
{
    double sum = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("jTj",jTj);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("cols",cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rows",rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int k = 0 ; k < max ; k += cols) {
            sum += (jacobian[(k + i)]) * (jacobian[(k + j)]);
        }
    
    jTj[i][j] = sum;
    jTj[j][i] = sum;
}
17:26:59.749 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
17:26:59.750 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.771 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.774 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.778 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:59.779 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:162)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:59.779 [Thread-72] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.783 [Thread-72] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:59.783 [Thread-72] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to compute covariances: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to compute covariances: singular problem
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:172)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:59.783 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:172
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:59.783 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:59.783 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to compute covariances: singular problem]
17:26:59.783 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:172 otherwise the patch would be "true" or "false"
17:26:59.783 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=172, Suspiciousness=0.19245008972987526]
17:26:59.783 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.analysis.SinFunction, LineNumber=37, Suspiciousness=0.13608276348795434]
17:26:59.783 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=172, Suspiciousness=0.10540925533894598]
17:26:59.784 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 17:26:59,784 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:59.784 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
17:26:59.785 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.797 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.797 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:172.
17:26:59.797 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=172, Suspiciousness=0.10540925533894598]
17:26:59.797 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=156, Suspiciousness=0.09622504486493763]
17:26:59.797 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 17:26:59,797 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:59.798 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
17:26:59.798 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.809 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.809 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:26:59,816 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:26:59,817 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:26:59,856 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 17:26:59,856 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:59,856 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:59.857 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 17:26:59,857 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:59.859 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < (parameters.length) ; ++i) {
    parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
} ##### Before:
{
    org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dX",dX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < (parameters.length) ; ++i) {
        parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
    }
}
17:26:59.859 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < (parameters.length) ; ++i) {
    parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
} ##### After:
{
    org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dX",dX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < (parameters.length) ; ++i) {
            parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
        }
    
}
17:26:59.860 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
17:26:59.860 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.877 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.880 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.885 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:59.885 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
17:26:59.886 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.886 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:59.887 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:59.887 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:156
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:59.887 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
17:26:59.887 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:59.887 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:156 otherwise the patch would be "true" or "false"
17:26:59.887 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=156, Suspiciousness=0.09622504486493763]
17:26:59.887 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=157, Suspiciousness=0.09622504486493763]
17:26:59.887 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 17:26:59,887 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:59.888 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
17:26:59.888 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.899 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.900 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:26:59,906 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:26:59,907 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:26:59,946 DEBUG spoon.support.StandardEnvironment - built in 39 ms
2015-02-28 17:26:59,946 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:26:59,946 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:26:59.947 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 17:26:59,947 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:26:59.949 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0)))) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dX",dX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
}
17:26:59.949 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0)))) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dX",dX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
    
}
17:26:59.949 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
17:26:59.950 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.967 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.969 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.974 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:26:59.974 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:26:59.975 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:26:59.976 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:26:59.976 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
17:26:59.976 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:157
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:26:59.976 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:26:59.976 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
17:26:59.976 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:157 otherwise the patch would be "true" or "false"
17:26:59.976 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=157, Suspiciousness=0.09622504486493763]
17:26:59.976 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=156, Suspiciousness=0.09622504486493763]
17:26:59.976 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 17:26:59,976 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:26:59.977 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
17:26:59.978 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:26:59.989 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:26:59.989 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:26:59,996 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:26:59,996 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:27:00,036 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 17:27:00,036 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:27:00,036 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:27:00.037 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 17:27:00,037 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:27:00.039 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < (parameters.length) ; ++i) {
    parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
} ##### Before:
{
    org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dX",dX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < (parameters.length) ; ++i) {
        parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
    }
}
17:27:00.039 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < (parameters.length) ; ++i) {
    parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
} ##### After:
{
    org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("dX",dX);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < (parameters.length) ; ++i) {
            parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
        }
    
}
17:27:00.039 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
17:27:00.040 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:27:00.057 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:27:00.059 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:27:00.064 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:27:00.064 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
17:27:00.065 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:27:00.065 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:27:00.065 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:27:00.065 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:156
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:27:00.065 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
17:27:00.065 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:27:00.066 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:156 otherwise the patch would be "true" or "false"
17:27:00.066 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=156, Suspiciousness=0.09622504486493763]
17:27:00.066 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=162, Suspiciousness=0.09622504486493763]
17:27:00.066 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 17:27:00,066 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:27:00.066 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
17:27:00.067 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:27:00.078 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:27:00.078 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:162.
17:27:00.078 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=162, Suspiciousness=0.09622504486493763]
17:27:00.078 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=165, Suspiciousness=0.09622504486493763]
17:27:00.078 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 17:27:00,078 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:27:00.079 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
17:27:00.080 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:27:00.090 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:27:00.090 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:27:00,097 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:27:00,098 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:27:00,138 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 17:27:00,139 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:27:00,139 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:27:00.139 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 17:27:00,139 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:27:00.142 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### previous = cost ##### Before:
{
    incrementJacobianEvaluationsCounter();
    org.apache.commons.math.linear.RealMatrix b = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , 1);
    org.apache.commons.math.linear.RealMatrix a = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , parameters.length);
    for (int i = 0 ; i < (measurements.length) ; ++i) {
        if (!(measurements[i].isIgnored())) {
            double weight = measurements[i].getWeight();
            double residual = measurements[i].getResidual();
            for (int j = 0 ; j < (parameters.length) ; ++j) {
                grad[j] = measurements[i].getPartial(parameters[j]);
                bDecrementData[j][0] = (weight * residual) * (grad[j]);
            }
            for (int k = 0 ; k < (parameters.length) ; ++k) {
                double[] wggRow = wggData[k];
                double gk = grad[k];
                for (int l = 0 ; l < (parameters.length) ; ++l) {
                    wggRow[l] = (weight * gk) * (grad[l]);
                }
            }
            a = a.add(wGradGradT);
            b = b.add(bDecrement);
        } 
    }
    try {
        org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
        for (int i = 0 ; i < (parameters.length) ; ++i) {
            parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
        }
    } catch (org.apache.commons.math.linear.InvalidMatrixException e) {
        throw new org.apache.commons.math.estimation.EstimationException("unable to solve: singular problem" , new java.lang.Object[0]);
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    previous = cost;
    updateResidualsAndCost();
}
17:27:00.142 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### previous = cost ##### After:
{
    incrementJacobianEvaluationsCounter();
    org.apache.commons.math.linear.RealMatrix b = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , 1);
    org.apache.commons.math.linear.RealMatrix a = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , parameters.length);
    for (int i = 0 ; i < (measurements.length) ; ++i) {
        if (!(measurements[i].isIgnored())) {
            double weight = measurements[i].getWeight();
            double residual = measurements[i].getResidual();
            for (int j = 0 ; j < (parameters.length) ; ++j) {
                grad[j] = measurements[i].getPartial(parameters[j]);
                bDecrementData[j][0] = (weight * residual) * (grad[j]);
            }
            for (int k = 0 ; k < (parameters.length) ; ++k) {
                double[] wggRow = wggData[k];
                double gk = grad[k];
                for (int l = 0 ; l < (parameters.length) ; ++l) {
                    wggRow[l] = (weight * gk) * (grad[l]);
                }
            }
            a = a.add(wGradGradT);
            b = b.add(bDecrement);
        } 
    }
    try {
        org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
        for (int i = 0 ; i < (parameters.length) ; ++i) {
            parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
        }
    } catch (org.apache.commons.math.linear.InvalidMatrixException e) {
        throw new org.apache.commons.math.estimation.EstimationException("unable to solve: singular problem" , new java.lang.Object[0]);
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        previous = cost;
    
    updateResidualsAndCost();
}
17:27:00.142 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
17:27:00.143 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:27:00.159 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:27:00.163 [Thread-79] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:27:00.168 [Thread-79] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
17:27:00.168 [Thread-79] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:27:00.169 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
17:27:00.169 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
17:27:00.170 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
17:27:00.170 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:165
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
17:27:00.170 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:27:00.170 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
17:27:00.170 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:165 otherwise the patch would be "true" or "false"
17:27:00.170 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=165, Suspiciousness=0.09622504486493763]
17:27:00.170 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=166, Suspiciousness=0.09622504486493763]
17:27:00.170 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 17:27:00,170 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
17:27:00.171 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
17:27:00.171 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:27:00.182 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:27:00.182 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:27:00,189 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:27:00,189 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 17:27:00,228 DEBUG spoon.support.StandardEnvironment - built in 39 ms
2015-02-28 17:27:00,228 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 17:27:00,228 DEBUG spoon.support.StandardEnvironment - built in 0 ms
17:27:00.229 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 17:27:00,229 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
17:27:00.231 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### updateResidualsAndCost() ##### Before:
{
    incrementJacobianEvaluationsCounter();
    org.apache.commons.math.linear.RealMatrix b = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , 1);
    org.apache.commons.math.linear.RealMatrix a = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , parameters.length);
    for (int i = 0 ; i < (measurements.length) ; ++i) {
        if (!(measurements[i].isIgnored())) {
            double weight = measurements[i].getWeight();
            double residual = measurements[i].getResidual();
            for (int j = 0 ; j < (parameters.length) ; ++j) {
                grad[j] = measurements[i].getPartial(parameters[j]);
                bDecrementData[j][0] = (weight * residual) * (grad[j]);
            }
            for (int k = 0 ; k < (parameters.length) ; ++k) {
                double[] wggRow = wggData[k];
                double gk = grad[k];
                for (int l = 0 ; l < (parameters.length) ; ++l) {
                    wggRow[l] = (weight * gk) * (grad[l]);
                }
            }
            a = a.add(wGradGradT);
            b = b.add(bDecrement);
        } 
    }
    try {
        org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
        for (int i = 0 ; i < (parameters.length) ; ++i) {
            parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
        }
    } catch (org.apache.commons.math.linear.InvalidMatrixException e) {
        throw new org.apache.commons.math.estimation.EstimationException("unable to solve: singular problem" , new java.lang.Object[0]);
    }
    previous = cost;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    updateResidualsAndCost();
}
17:27:00.232 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### updateResidualsAndCost() ##### After:
{
    incrementJacobianEvaluationsCounter();
    org.apache.commons.math.linear.RealMatrix b = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , 1);
    org.apache.commons.math.linear.RealMatrix a = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , parameters.length);
    for (int i = 0 ; i < (measurements.length) ; ++i) {
        if (!(measurements[i].isIgnored())) {
            double weight = measurements[i].getWeight();
            double residual = measurements[i].getResidual();
            for (int j = 0 ; j < (parameters.length) ; ++j) {
                grad[j] = measurements[i].getPartial(parameters[j]);
                bDecrementData[j][0] = (weight * residual) * (grad[j]);
            }
            for (int k = 0 ; k < (parameters.length) ; ++k) {
                double[] wggRow = wggData[k];
                double gk = grad[k];
                for (int l = 0 ; l < (parameters.length) ; ++l) {
                    wggRow[l] = (weight * gk) * (grad[l]);
                }
            }
            a = a.add(wGradGradT);
            b = b.add(bDecrement);
        } 
    }
    try {
        org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
        for (int i = 0 ; i < (parameters.length) ; ++i) {
            parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
        }
    } catch (org.apache.commons.math.linear.InvalidMatrixException e) {
        throw new org.apache.commons.math.estimation.EstimationException("unable to solve: singular problem" , new java.lang.Object[0]);
    }
    previous = cost;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        updateResidualsAndCost();
    
}
17:27:00.232 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
17:27:00.233 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
17:27:00.248 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
17:27:00.251 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:00.249 [main] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 3600 seconds. Infinite loop?
18:27:00.250 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=168, Suspiciousness=0.09622504486493763]
18:27:00.251 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:00,251 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.252 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:00.252 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.263 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.263 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:168.
18:27:00.263 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=168, Suspiciousness=0.09622504486493763]
18:27:00.264 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=80, Suspiciousness=0.09622504486493763]
18:27:00.264 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.WeightedMeasurement]
2015-02-28 18:27:00,264 DEBUG spoon.support.StandardEnvironment - processing 'WeightedMeasurement' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.264 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.WeightedMeasurement]
18:27:00.267 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.273 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.273 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.WeightedMeasurement:80.
18:27:00.273 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=80, Suspiciousness=0.09622504486493763]
18:27:00.273 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=81, Suspiciousness=0.09622504486493763]
18:27:00.273 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.WeightedMeasurement]
2015-02-28 18:27:00,273 DEBUG spoon.support.StandardEnvironment - processing 'WeightedMeasurement' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.274 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.WeightedMeasurement]
18:27:00.274 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.280 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.280 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/WeightedMeasurement.java]
2015-02-28 18:27:00,287 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/WeightedMeasurement.java]
2015-02-28 18:27:00,287 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/WeightedMeasurement.java]
2015-02-28 18:27:00,323 DEBUG spoon.support.StandardEnvironment - built in 36 ms
2015-02-28 18:27:00,323 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:00,323 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:00.324 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.WeightedMeasurement]
2015-02-28 18:27:00,324 DEBUG spoon.support.StandardEnvironment - processing 'WeightedMeasurement' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:00.324 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.weight = weight ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    this.weight = weight;
    this.measuredValue = measuredValue;
    this.ignored = ignored;
}
18:27:00.325 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.weight = weight ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        this.weight = weight;
    
    this.measuredValue = measuredValue;
    this.ignored = ignored;
}
18:27:00.325 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.WeightedMeasurement]
18:27:00.325 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.334 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
WeightedMeasurement.java:70: error: variable weight might not have been initialized
    }
    ^
18:27:00.334 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=82, Suspiciousness=0.09622504486493763]
18:27:00.334 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.WeightedMeasurement]
2015-02-28 18:27:00,335 DEBUG spoon.support.StandardEnvironment - processing 'WeightedMeasurement' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.335 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.WeightedMeasurement]
18:27:00.335 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.341 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.342 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/WeightedMeasurement.java]
2015-02-28 18:27:00,348 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/WeightedMeasurement.java]
2015-02-28 18:27:00,349 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/WeightedMeasurement.java]
2015-02-28 18:27:00,388 DEBUG spoon.support.StandardEnvironment - built in 39 ms
2015-02-28 18:27:00,389 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:00,389 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:00.389 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.WeightedMeasurement]
2015-02-28 18:27:00,389 DEBUG spoon.support.StandardEnvironment - processing 'WeightedMeasurement' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:00.390 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.measuredValue = measuredValue ##### Before:
{
    this.weight = weight;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    this.measuredValue = measuredValue;
    this.ignored = ignored;
}
18:27:00.390 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.measuredValue = measuredValue ##### After:
{
    this.weight = weight;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        this.measuredValue = measuredValue;
    
    this.ignored = ignored;
}
18:27:00.390 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.WeightedMeasurement]
18:27:00.391 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.400 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
WeightedMeasurement.java:70: error: variable measuredValue might not have been initialized
    }
    ^
18:27:00.400 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=83, Suspiciousness=0.09622504486493763]
18:27:00.400 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.WeightedMeasurement]
2015-02-28 18:27:00,400 DEBUG spoon.support.StandardEnvironment - processing 'WeightedMeasurement' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.401 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.WeightedMeasurement]
18:27:00.401 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.408 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.408 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/WeightedMeasurement.java]
2015-02-28 18:27:00,415 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/WeightedMeasurement.java]
2015-02-28 18:27:00,415 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/WeightedMeasurement.java]
2015-02-28 18:27:00,451 DEBUG spoon.support.StandardEnvironment - built in 36 ms
2015-02-28 18:27:00,451 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:00,451 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:00.452 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.WeightedMeasurement]
2015-02-28 18:27:00,452 DEBUG spoon.support.StandardEnvironment - processing 'WeightedMeasurement' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:00.452 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.ignored = ignored ##### Before:
{
    this.weight = weight;
    this.measuredValue = measuredValue;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    this.ignored = ignored;
}
18:27:00.453 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.ignored = ignored ##### After:
{
    this.weight = weight;
    this.measuredValue = measuredValue;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        this.ignored = ignored;
    
}
18:27:00.453 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.WeightedMeasurement]
18:27:00.453 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.467 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.471 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:00.474 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:00.475 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:00.475 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:00.476 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3600224 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:00.476 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:00.476 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:00.476 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:00.476 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.WeightedMeasurement:83
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:00.476 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:00.476 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:00.476 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.WeightedMeasurement:83 otherwise the patch would be "true" or "false"
18:27:00.477 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=83, Suspiciousness=0.09622504486493763]
18:27:00.477 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=84, Suspiciousness=0.09622504486493763]
18:27:00.477 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.WeightedMeasurement]
2015-02-28 18:27:00,477 DEBUG spoon.support.StandardEnvironment - processing 'WeightedMeasurement' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.477 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.WeightedMeasurement]
18:27:00.477 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.484 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.484 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.WeightedMeasurement:84.
18:27:00.484 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=84, Suspiciousness=0.09622504486493763]
18:27:00.484 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=146, Suspiciousness=0.09245003270420485]
18:27:00.484 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.WeightedMeasurement]
2015-02-28 18:27:00,484 DEBUG spoon.support.StandardEnvironment - processing 'WeightedMeasurement' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.484 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.WeightedMeasurement]
18:27:00.485 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.490 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.491 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/WeightedMeasurement.java]
2015-02-28 18:27:00,497 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/WeightedMeasurement.java]
2015-02-28 18:27:00,498 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/WeightedMeasurement.java]
2015-02-28 18:27:00,533 DEBUG spoon.support.StandardEnvironment - built in 36 ms
2015-02-28 18:27:00,533 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:00,533 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:00.534 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.WeightedMeasurement]
2015-02-28 18:27:00,534 DEBUG spoon.support.StandardEnvironment - processing 'WeightedMeasurement' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:00.534 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.ignored = ignored ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ignored",ignored);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.WeightedMeasurement.this.measuredValue",org.apache.commons.math.estimation.WeightedMeasurement.this.measuredValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.WeightedMeasurement.this.weight",org.apache.commons.math.estimation.WeightedMeasurement.this.weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.WeightedMeasurement.this.ignored",org.apache.commons.math.estimation.WeightedMeasurement.this.ignored);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    this.ignored = ignored;
}
18:27:00.535 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.ignored = ignored ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("ignored",ignored);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.WeightedMeasurement.this.measuredValue",org.apache.commons.math.estimation.WeightedMeasurement.this.measuredValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.WeightedMeasurement.this.weight",org.apache.commons.math.estimation.WeightedMeasurement.this.weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.WeightedMeasurement.this.ignored",org.apache.commons.math.estimation.WeightedMeasurement.this.ignored);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        this.ignored = ignored;
    
}
18:27:00.535 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.WeightedMeasurement]
18:27:00.535 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.546 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.549 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:00.553 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:00.553 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:00.554 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:00.555 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:00.555 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:00.555 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.WeightedMeasurement:146
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:00.556 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:00.556 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:00.556 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.WeightedMeasurement:146 otherwise the patch would be "true" or "false"
18:27:00.556 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=146, Suspiciousness=0.09245003270420485]
18:27:00.556 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=147, Suspiciousness=0.09245003270420485]
18:27:00.556 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.WeightedMeasurement]
2015-02-28 18:27:00,556 DEBUG spoon.support.StandardEnvironment - processing 'WeightedMeasurement' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.556 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.WeightedMeasurement]
18:27:00.557 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.563 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.563 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.WeightedMeasurement:147.
18:27:00.563 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=147, Suspiciousness=0.09245003270420485]
18:27:00.563 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=48, Suspiciousness=0.09245003270420485]
18:27:00.563 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,563 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.564 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.564 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.573 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.573 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:48.
18:27:00.573 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=48, Suspiciousness=0.09245003270420485]
18:27:00.573 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=49, Suspiciousness=0.09245003270420485]
18:27:00.573 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,573 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.574 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.574 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.582 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.582 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,589 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,590 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,626 DEBUG spoon.support.StandardEnvironment - built in 37 ms
2015-02-28 18:27:00,626 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:00,626 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:00.627 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,627 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:00.627 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### parameters = new java.util.ArrayList() ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    parameters = new java.util.ArrayList();
    measurements = new java.util.ArrayList();
}
18:27:00.627 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### parameters = new java.util.ArrayList() ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        parameters = new java.util.ArrayList();
    
    measurements = new java.util.ArrayList();
}
18:27:00.628 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.628 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.639 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
SimpleEstimationProblem.java:36: error: variable parameters might not have been initialized
    }
    ^
Note: SimpleEstimationProblem.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
18:27:00.639 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=50, Suspiciousness=0.09245003270420485]
18:27:00.639 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,639 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.640 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.640 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.648 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.649 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,655 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,656 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,692 DEBUG spoon.support.StandardEnvironment - built in 36 ms
2015-02-28 18:27:00,692 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:00,692 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:00.693 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,693 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:00.694 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### measurements = new java.util.ArrayList() ##### Before:
{
    parameters = new java.util.ArrayList();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    measurements = new java.util.ArrayList();
}
18:27:00.694 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### measurements = new java.util.ArrayList() ##### After:
{
    parameters = new java.util.ArrayList();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        measurements = new java.util.ArrayList();
    
}
18:27:00.694 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.694 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.705 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
SimpleEstimationProblem.java:36: error: variable measurements might not have been initialized
    }
    ^
Note: SimpleEstimationProblem.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
18:27:00.705 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=51, Suspiciousness=0.09245003270420485]
18:27:00.706 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,706 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.706 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.706 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.723 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.723 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:51.
18:27:00.723 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=51, Suspiciousness=0.09245003270420485]
18:27:00.723 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=68, Suspiciousness=0.09245003270420485]
18:27:00.723 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,723 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.723 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.724 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.732 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.732 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:68.
18:27:00.732 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=68, Suspiciousness=0.09245003270420485]
18:27:00.732 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=69, Suspiciousness=0.09245003270420485]
18:27:00.732 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,733 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.733 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.733 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.742 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.742 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,749 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,749 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,786 DEBUG spoon.support.StandardEnvironment - built in 37 ms
2015-02-28 18:27:00,786 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:00,786 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:00.787 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,787 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:00.788 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (java.util.Iterator iterator = parameters.iterator() ; iterator.hasNext() ; ) {
    org.apache.commons.math.estimation.EstimatedParameter p = ((org.apache.commons.math.estimation.EstimatedParameter)(iterator.next()));
    if (!(p.isBound())) {
        unbound.add(p);
    } 
} ##### Before:
{
    java.util.List unbound = new java.util.ArrayList(parameters.size());
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters",org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("unbound",unbound);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements",org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (java.util.Iterator iterator = parameters.iterator() ; iterator.hasNext() ; ) {
        org.apache.commons.math.estimation.EstimatedParameter p = ((org.apache.commons.math.estimation.EstimatedParameter)(iterator.next()));
        if (!(p.isBound())) {
            unbound.add(p);
        } 
    }
    return ((org.apache.commons.math.estimation.EstimatedParameter[])(unbound.toArray(new org.apache.commons.math.estimation.EstimatedParameter[unbound.size()])));
}
18:27:00.788 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (java.util.Iterator iterator = parameters.iterator() ; iterator.hasNext() ; ) {
    org.apache.commons.math.estimation.EstimatedParameter p = ((org.apache.commons.math.estimation.EstimatedParameter)(iterator.next()));
    if (!(p.isBound())) {
        unbound.add(p);
    } 
} ##### After:
{
    java.util.List unbound = new java.util.ArrayList(parameters.size());
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters",org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("unbound",unbound);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements",org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (java.util.Iterator iterator = parameters.iterator() ; iterator.hasNext() ; ) {
            org.apache.commons.math.estimation.EstimatedParameter p = ((org.apache.commons.math.estimation.EstimatedParameter)(iterator.next()));
            if (!(p.isBound())) {
                unbound.add(p);
            } 
        }
    
    return ((org.apache.commons.math.estimation.EstimatedParameter[])(unbound.toArray(new org.apache.commons.math.estimation.EstimatedParameter[unbound.size()])));
}
18:27:00.788 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.788 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.801 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.804 [Thread-86] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:00.808 [Thread-86] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:00.808 [Thread-86] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[row and column dimensions must be postive]
java.lang.IllegalArgumentException: row and column dimensions must be postive
    at org.apache.commons.math.linear.RealMatrixImpl.<init>(RealMatrixImpl.java:90)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:77)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:00.809 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:00.810 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:00.810 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:00.810 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:69
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:00.810 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): row and column dimensions must be postive]
18:27:00.810 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:00.810 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:69 otherwise the patch would be "true" or "false"
18:27:00.810 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=69, Suspiciousness=0.09245003270420485]
18:27:00.810 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=70, Suspiciousness=0.09245003270420485]
18:27:00.810 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,810 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.811 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.811 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.819 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.820 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:70.
18:27:00.820 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=70, Suspiciousness=0.09245003270420485]
18:27:00.820 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=71, Suspiciousness=0.09245003270420485]
18:27:00.820 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,820 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.820 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.821 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.829 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.829 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,836 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,837 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,874 DEBUG spoon.support.StandardEnvironment - built in 38 ms
2015-02-28 18:27:00,874 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:00,874 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:00.875 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,875 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:00.876 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (!(p.isBound())) {
    unbound.add(p);
} 
18:27:00.876 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.876 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.890 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.892 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:00.896 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:00.896 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[expected:<0.4583333333333333> but was:<7.500000000000027>]
junit.framework.AssertionFailedError: expected:<0.4583333333333333> but was:<7.500000000000027>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:120)
    at junit.framework.Assert.assertEquals(Assert.java:129)
    at junit.framework.TestCase.assertEquals(TestCase.java:288)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:478)
18:27:00.898 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:00.898 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:00.898 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[row and column dimensions must be postive]
java.lang.IllegalArgumentException: row and column dimensions must be postive
    at org.apache.commons.math.linear.RealMatrixImpl.<init>(RealMatrixImpl.java:90)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:77)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:00.899 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:71
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:00.899 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): expected:<0.4583333333333333> but was:<7.500000000000027>]
18:27:00.899 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): row and column dimensions must be postive]
18:27:00.899 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:71 otherwise the patch would be "true" or "false"
18:27:00.899 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=71, Suspiciousness=0.09245003270420485]
18:27:00.899 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=72, Suspiciousness=0.09245003270420485]
18:27:00.899 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,899 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.899 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.900 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.909 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.909 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,916 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,916 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:00,953 DEBUG spoon.support.StandardEnvironment - built in 37 ms
2015-02-28 18:27:00,953 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:00,953 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:00.954 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,954 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:00.955 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### unbound.add(p) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters",org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("unbound",unbound);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements",org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    unbound.add(p);
}
18:27:00.955 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### unbound.add(p) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters",org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("unbound",unbound);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements",org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        unbound.add(p);
    
}
18:27:00.955 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.956 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.969 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.971 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:00.975 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:00.975 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[row and column dimensions must be postive]
java.lang.IllegalArgumentException: row and column dimensions must be postive
    at org.apache.commons.math.linear.RealMatrixImpl.<init>(RealMatrixImpl.java:90)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:77)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:00.977 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:00.977 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:00.977 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:00.978 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:72
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:00.978 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): row and column dimensions must be postive]
18:27:00.978 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:00.978 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:72 otherwise the patch would be "true" or "false"
18:27:00.978 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=72, Suspiciousness=0.09245003270420485]
18:27:00.978 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=74, Suspiciousness=0.09245003270420485]
18:27:00.978 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,978 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.978 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.979 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.987 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.987 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:74.
18:27:00.987 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=74, Suspiciousness=0.09245003270420485]
18:27:00.987 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=77, Suspiciousness=0.09245003270420485]
18:27:00.987 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,988 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.988 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.988 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:00.996 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:00.997 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:77.
18:27:00.997 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=77, Suspiciousness=0.09245003270420485]
18:27:00.997 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=86, Suspiciousness=0.09245003270420485]
18:27:00.997 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:00,997 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:00.997 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:00.998 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.006 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.006 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:86.
18:27:01.006 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=86, Suspiciousness=0.09245003270420485]
18:27:01.006 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=93, Suspiciousness=0.09245003270420485]
18:27:01.006 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:01,006 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.006 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:01.007 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.015 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.015 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:01,022 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:01,022 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:01,071 DEBUG spoon.support.StandardEnvironment - built in 49 ms
2015-02-28 18:27:01,071 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:01,071 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:01.072 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:01,072 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:01.074 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### parameters.add(p) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters",org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements",org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    parameters.add(p);
}
18:27:01.074 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### parameters.add(p) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters",org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("p",p);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements",org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        parameters.add(p);
    
}
18:27:01.074 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:01.074 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.087 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.091 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.094 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:01.095 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.096 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.096 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:01.096 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[row and column dimensions must be postive]
java.lang.IllegalArgumentException: row and column dimensions must be postive
    at org.apache.commons.math.linear.RealMatrixImpl.<init>(RealMatrixImpl.java:90)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:77)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:01.096 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:93
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:01.096 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:01.096 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): row and column dimensions must be postive]
18:27:01.096 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:93 otherwise the patch would be "true" or "false"
18:27:01.096 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=93, Suspiciousness=0.09245003270420485]
18:27:01.096 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=94, Suspiciousness=0.09245003270420485]
18:27:01.096 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:01,096 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.097 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:01.097 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.106 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.106 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:94.
18:27:01.106 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=94, Suspiciousness=0.09245003270420485]
18:27:01.106 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=101, Suspiciousness=0.09245003270420485]
18:27:01.106 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:01,106 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.106 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:01.107 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.115 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.115 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:01,122 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:01,122 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java]
2015-02-28 18:27:01,159 DEBUG spoon.support.StandardEnvironment - built in 37 ms
2015-02-28 18:27:01,159 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:01,160 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:01.160 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:01,160 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:01.162 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### measurements.add(m) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters",org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("m",m);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements",org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    measurements.add(m);
}
18:27:01.162 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### measurements.add(m) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters",org.apache.commons.math.estimation.SimpleEstimationProblem.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("m",m);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements",org.apache.commons.math.estimation.SimpleEstimationProblem.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        measurements.add(m);
    
}
18:27:01.162 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:01.162 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.175 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.178 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.182 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:01.183 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.184 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.185 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:01.185 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.185 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:101
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:01.185 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:01.185 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:01.185 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:101 otherwise the patch would be "true" or "false"
18:27:01.185 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=101, Suspiciousness=0.09245003270420485]
18:27:01.185 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=102, Suspiciousness=0.09245003270420485]
18:27:01.186 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.SimpleEstimationProblem]
2015-02-28 18:27:01,186 DEBUG spoon.support.StandardEnvironment - processing 'SimpleEstimationProblem' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.186 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.SimpleEstimationProblem]
18:27:01.186 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.196 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.196 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.SimpleEstimationProblem:102.
18:27:01.196 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.SimpleEstimationProblem, LineNumber=102, Suspiciousness=0.09245003270420485]
18:27:01.196 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=57, Suspiciousness=0.0890870806374748]
18:27:01.196 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:01,196 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.197 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:01.198 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.212 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.212 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:57.
18:27:01.212 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=57, Suspiciousness=0.0890870806374748]
18:27:01.212 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=73, Suspiciousness=0.08606629658238704]
18:27:01.212 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,212 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.213 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.213 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.223 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.224 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:73.
18:27:01.224 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=73, Suspiciousness=0.08606629658238704]
18:27:01.224 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=74, Suspiciousness=0.08606629658238704]
18:27:01.224 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,224 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.224 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.225 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.235 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.235 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,242 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,242 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,282 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:01,282 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:01,282 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:01.283 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,283 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:01.284 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### setMaxCostEval(maxCostEval) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    setMaxCostEval(maxCostEval);
    this.steadyStateThreshold = steadyStateThreshold;
    this.convergence = convergence;
}
18:27:01.284 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### setMaxCostEval(maxCostEval) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        setMaxCostEval(maxCostEval);
    
    this.steadyStateThreshold = steadyStateThreshold;
    this.convergence = convergence;
}
18:27:01.284 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.285 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.299 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.302 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.305 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:01.306 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.307 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.309 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:01.309 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[maximal number of evaluations exceeded (0)]
org.apache.commons.math.estimation.EstimationException: maximal number of evaluations exceeded (0)
    at org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(AbstractEstimator.java:74)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:122)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:01.309 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:74
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:01.309 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:01.309 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): maximal number of evaluations exceeded (0)]
18:27:01.309 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:74 otherwise the patch would be "true" or "false"
18:27:01.309 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=74, Suspiciousness=0.08606629658238704]
18:27:01.310 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=75, Suspiciousness=0.08606629658238704]
18:27:01.310 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,310 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.310 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.311 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.322 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.322 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,329 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,329 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,368 DEBUG spoon.support.StandardEnvironment - built in 39 ms
2015-02-28 18:27:01,368 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:01,368 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:01.369 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,369 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:01.370 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.steadyStateThreshold = steadyStateThreshold ##### Before:
{
    setMaxCostEval(maxCostEval);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    this.steadyStateThreshold = steadyStateThreshold;
    this.convergence = convergence;
}
18:27:01.370 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.steadyStateThreshold = steadyStateThreshold ##### After:
{
    setMaxCostEval(maxCostEval);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        this.steadyStateThreshold = steadyStateThreshold;
    
    this.convergence = convergence;
}
18:27:01.370 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.371 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.385 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.387 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.391 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:01.391 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.392 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.393 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:01.393 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.393 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:75
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:01.393 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:01.393 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:01.393 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:75 otherwise the patch would be "true" or "false"
18:27:01.393 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=75, Suspiciousness=0.08606629658238704]
18:27:01.393 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=76, Suspiciousness=0.08606629658238704]
18:27:01.393 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,394 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.394 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.395 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.405 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.405 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,412 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,412 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,462 DEBUG spoon.support.StandardEnvironment - built in 50 ms
2015-02-28 18:27:01,462 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:01,462 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:01.463 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,463 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:01.463 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.convergence = convergence ##### Before:
{
    setMaxCostEval(maxCostEval);
    this.steadyStateThreshold = steadyStateThreshold;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    this.convergence = convergence;
}
18:27:01.464 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.convergence = convergence ##### After:
{
    setMaxCostEval(maxCostEval);
    this.steadyStateThreshold = steadyStateThreshold;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        this.convergence = convergence;
    
}
18:27:01.464 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.464 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.479 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.482 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.486 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:01.486 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.487 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.487 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:01.487 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.488 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:76
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:01.488 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:01.488 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:01.488 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:76 otherwise the patch would be "true" or "false"
18:27:01.488 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=76, Suspiciousness=0.08606629658238704]
18:27:01.488 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=77, Suspiciousness=0.08606629658238704]
18:27:01.488 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,488 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.488 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.489 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.500 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.500 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:77.
18:27:01.500 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=77, Suspiciousness=0.08606629658238704]
18:27:01.500 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=105, Suspiciousness=0.08606629658238704]
18:27:01.500 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,500 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.501 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.502 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.512 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.512 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,519 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,520 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,559 DEBUG spoon.support.StandardEnvironment - built in 39 ms
2015-02-28 18:27:01,559 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:01,559 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:01.560 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,560 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:01.562 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### initializeEstimate(problem) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    initializeEstimate(problem);
    double[] grad = new double[parameters.length];
    org.apache.commons.math.linear.RealMatrixImpl bDecrement = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , 1);
    double[][] bDecrementData = bDecrement.getDataRef();
    org.apache.commons.math.linear.RealMatrixImpl wGradGradT = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , parameters.length);
    double[][] wggData = wGradGradT.getDataRef();
    double previous = java.lang.Double.POSITIVE_INFINITY;
    do {
        incrementJacobianEvaluationsCounter();
        org.apache.commons.math.linear.RealMatrix b = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , 1);
        org.apache.commons.math.linear.RealMatrix a = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , parameters.length);
        for (int i = 0 ; i < (measurements.length) ; ++i) {
            if (!(measurements[i].isIgnored())) {
                double weight = measurements[i].getWeight();
                double residual = measurements[i].getResidual();
                for (int j = 0 ; j < (parameters.length) ; ++j) {
                    grad[j] = measurements[i].getPartial(parameters[j]);
                    bDecrementData[j][0] = (weight * residual) * (grad[j]);
                }
                for (int k = 0 ; k < (parameters.length) ; ++k) {
                    double[] wggRow = wggData[k];
                    double gk = grad[k];
                    for (int l = 0 ; l < (parameters.length) ; ++l) {
                        wggRow[l] = (weight * gk) * (grad[l]);
                    }
                }
                a = a.add(wGradGradT);
                b = b.add(bDecrement);
            } 
        }
        try {
            org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
            for (int i = 0 ; i < (parameters.length) ; ++i) {
                parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
            }
        } catch (org.apache.commons.math.linear.InvalidMatrixException e) {
            throw new org.apache.commons.math.estimation.EstimationException("unable to solve: singular problem" , new java.lang.Object[0]);
        }
        previous = cost;
        updateResidualsAndCost();
    } while (((getCostEvaluations()) < 2) || (((java.lang.Math.abs((previous - (cost)))) > ((cost) * (steadyStateThreshold))) && ((java.lang.Math.abs(cost)) > (convergence))) );
}
18:27:01.562 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### initializeEstimate(problem) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        initializeEstimate(problem);
    
    double[] grad = new double[parameters.length];
    org.apache.commons.math.linear.RealMatrixImpl bDecrement = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , 1);
    double[][] bDecrementData = bDecrement.getDataRef();
    org.apache.commons.math.linear.RealMatrixImpl wGradGradT = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , parameters.length);
    double[][] wggData = wGradGradT.getDataRef();
    double previous = java.lang.Double.POSITIVE_INFINITY;
    do {
        incrementJacobianEvaluationsCounter();
        org.apache.commons.math.linear.RealMatrix b = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , 1);
        org.apache.commons.math.linear.RealMatrix a = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , parameters.length);
        for (int i = 0 ; i < (measurements.length) ; ++i) {
            if (!(measurements[i].isIgnored())) {
                double weight = measurements[i].getWeight();
                double residual = measurements[i].getResidual();
                for (int j = 0 ; j < (parameters.length) ; ++j) {
                    grad[j] = measurements[i].getPartial(parameters[j]);
                    bDecrementData[j][0] = (weight * residual) * (grad[j]);
                }
                for (int k = 0 ; k < (parameters.length) ; ++k) {
                    double[] wggRow = wggData[k];
                    double gk = grad[k];
                    for (int l = 0 ; l < (parameters.length) ; ++l) {
                        wggRow[l] = (weight * gk) * (grad[l]);
                    }
                }
                a = a.add(wGradGradT);
                b = b.add(bDecrement);
            } 
        }
        try {
            org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
            for (int i = 0 ; i < (parameters.length) ; ++i) {
                parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
            }
        } catch (org.apache.commons.math.linear.InvalidMatrixException e) {
            throw new org.apache.commons.math.estimation.EstimationException("unable to solve: singular problem" , new java.lang.Object[0]);
        }
        previous = cost;
        updateResidualsAndCost();
    } while (((getCostEvaluations()) < 2) || (((java.lang.Math.abs((previous - (cost)))) > ((cost) * (steadyStateThreshold))) && ((java.lang.Math.abs(cost)) > (convergence))) );
}
18:27:01.563 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.563 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.578 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.581 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.584 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:01.584 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:88)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.586 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.588 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:01.588 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.589 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:105
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:01.589 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:01.589 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:01.589 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:105 otherwise the patch would be "true" or "false"
18:27:01.589 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=105, Suspiciousness=0.08606629658238704]
18:27:01.589 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=108, Suspiciousness=0.08606629658238704]
18:27:01.589 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,589 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.590 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.590 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.600 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.601 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:108.
18:27:01.601 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=108, Suspiciousness=0.08606629658238704]
18:27:01.601 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=109, Suspiciousness=0.08606629658238704]
18:27:01.601 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,601 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.601 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.602 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.612 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.612 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:109.
18:27:01.612 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=109, Suspiciousness=0.08606629658238704]
18:27:01.612 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=110, Suspiciousness=0.08606629658238704]
18:27:01.612 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,612 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.613 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.613 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.623 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.624 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:110.
18:27:01.624 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=110, Suspiciousness=0.08606629658238704]
18:27:01.624 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=111, Suspiciousness=0.08606629658238704]
18:27:01.624 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,624 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.624 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.625 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.635 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.635 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:111.
18:27:01.635 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=111, Suspiciousness=0.08606629658238704]
18:27:01.635 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=112, Suspiciousness=0.08606629658238704]
18:27:01.635 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,636 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.636 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.637 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.646 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.647 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:112.
18:27:01.647 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=112, Suspiciousness=0.08606629658238704]
18:27:01.647 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=115, Suspiciousness=0.08606629658238704]
18:27:01.647 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,647 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.647 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.648 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.658 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.658 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:115.
18:27:01.658 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=115, Suspiciousness=0.08606629658238704]
18:27:01.658 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=119, Suspiciousness=0.08606629658238704]
18:27:01.658 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,658 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.659 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.659 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.669 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.669 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,676 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,676 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,716 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:01,716 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:01,716 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:01.717 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,717 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:01.719 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### incrementJacobianEvaluationsCounter() ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    incrementJacobianEvaluationsCounter();
    org.apache.commons.math.linear.RealMatrix b = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , 1);
    org.apache.commons.math.linear.RealMatrix a = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , parameters.length);
    for (int i = 0 ; i < (measurements.length) ; ++i) {
        if (!(measurements[i].isIgnored())) {
            double weight = measurements[i].getWeight();
            double residual = measurements[i].getResidual();
            for (int j = 0 ; j < (parameters.length) ; ++j) {
                grad[j] = measurements[i].getPartial(parameters[j]);
                bDecrementData[j][0] = (weight * residual) * (grad[j]);
            }
            for (int k = 0 ; k < (parameters.length) ; ++k) {
                double[] wggRow = wggData[k];
                double gk = grad[k];
                for (int l = 0 ; l < (parameters.length) ; ++l) {
                    wggRow[l] = (weight * gk) * (grad[l]);
                }
            }
            a = a.add(wGradGradT);
            b = b.add(bDecrement);
        } 
    }
    try {
        org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
        for (int i = 0 ; i < (parameters.length) ; ++i) {
            parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
        }
    } catch (org.apache.commons.math.linear.InvalidMatrixException e) {
        throw new org.apache.commons.math.estimation.EstimationException("unable to solve: singular problem" , new java.lang.Object[0]);
    }
    previous = cost;
    updateResidualsAndCost();
}
18:27:01.719 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### incrementJacobianEvaluationsCounter() ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        incrementJacobianEvaluationsCounter();
    
    org.apache.commons.math.linear.RealMatrix b = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , 1);
    org.apache.commons.math.linear.RealMatrix a = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , parameters.length);
    for (int i = 0 ; i < (measurements.length) ; ++i) {
        if (!(measurements[i].isIgnored())) {
            double weight = measurements[i].getWeight();
            double residual = measurements[i].getResidual();
            for (int j = 0 ; j < (parameters.length) ; ++j) {
                grad[j] = measurements[i].getPartial(parameters[j]);
                bDecrementData[j][0] = (weight * residual) * (grad[j]);
            }
            for (int k = 0 ; k < (parameters.length) ; ++k) {
                double[] wggRow = wggData[k];
                double gk = grad[k];
                for (int l = 0 ; l < (parameters.length) ; ++l) {
                    wggRow[l] = (weight * gk) * (grad[l]);
                }
            }
            a = a.add(wGradGradT);
            b = b.add(bDecrement);
        } 
    }
    try {
        org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
        for (int i = 0 ; i < (parameters.length) ; ++i) {
            parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
        }
    } catch (org.apache.commons.math.linear.InvalidMatrixException e) {
        throw new org.apache.commons.math.estimation.EstimationException("unable to solve: singular problem" , new java.lang.Object[0]);
    }
    previous = cost;
    updateResidualsAndCost();
}
18:27:01.720 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.720 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.735 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.738 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.742 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:01.743 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.744 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.744 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:01.744 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.745 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:119
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:01.745 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:01.745 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:01.745 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:119 otherwise the patch would be "true" or "false"
18:27:01.745 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=119, Suspiciousness=0.08606629658238704]
18:27:01.745 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=120, Suspiciousness=0.08606629658238704]
18:27:01.745 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,745 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.746 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.746 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.757 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.757 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:120.
18:27:01.757 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=120, Suspiciousness=0.08606629658238704]
18:27:01.757 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=121, Suspiciousness=0.08606629658238704]
18:27:01.757 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,757 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.758 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.758 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.768 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.769 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:121.
18:27:01.769 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=121, Suspiciousness=0.08606629658238704]
18:27:01.769 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=122, Suspiciousness=0.08606629658238704]
18:27:01.769 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,769 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.770 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.770 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.780 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.780 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,787 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,788 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,827 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:01,827 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:01,827 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:01.828 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,828 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:01.830 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < (measurements.length) ; ++i) {
    if (!(measurements[i].isIgnored())) {
        double weight = measurements[i].getWeight();
        double residual = measurements[i].getResidual();
        for (int j = 0 ; j < (parameters.length) ; ++j) {
            grad[j] = measurements[i].getPartial(parameters[j]);
            bDecrementData[j][0] = (weight * residual) * (grad[j]);
        }
        for (int k = 0 ; k < (parameters.length) ; ++k) {
            double[] wggRow = wggData[k];
            double gk = grad[k];
            for (int l = 0 ; l < (parameters.length) ; ++l) {
                wggRow[l] = (weight * gk) * (grad[l]);
            }
        }
        a = a.add(wGradGradT);
        b = b.add(bDecrement);
    } 
} ##### Before:
{
    incrementJacobianEvaluationsCounter();
    org.apache.commons.math.linear.RealMatrix b = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , 1);
    org.apache.commons.math.linear.RealMatrix a = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , parameters.length);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < (measurements.length) ; ++i) {
        if (!(measurements[i].isIgnored())) {
            double weight = measurements[i].getWeight();
            double residual = measurements[i].getResidual();
            for (int j = 0 ; j < (parameters.length) ; ++j) {
                grad[j] = measurements[i].getPartial(parameters[j]);
                bDecrementData[j][0] = (weight * residual) * (grad[j]);
            }
            for (int k = 0 ; k < (parameters.length) ; ++k) {
                double[] wggRow = wggData[k];
                double gk = grad[k];
                for (int l = 0 ; l < (parameters.length) ; ++l) {
                    wggRow[l] = (weight * gk) * (grad[l]);
                }
            }
            a = a.add(wGradGradT);
            b = b.add(bDecrement);
        } 
    }
    try {
        org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
        for (int i = 0 ; i < (parameters.length) ; ++i) {
            parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
        }
    } catch (org.apache.commons.math.linear.InvalidMatrixException e) {
        throw new org.apache.commons.math.estimation.EstimationException("unable to solve: singular problem" , new java.lang.Object[0]);
    }
    previous = cost;
    updateResidualsAndCost();
}
18:27:01.831 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < (measurements.length) ; ++i) {
    if (!(measurements[i].isIgnored())) {
        double weight = measurements[i].getWeight();
        double residual = measurements[i].getResidual();
        for (int j = 0 ; j < (parameters.length) ; ++j) {
            grad[j] = measurements[i].getPartial(parameters[j]);
            bDecrementData[j][0] = (weight * residual) * (grad[j]);
        }
        for (int k = 0 ; k < (parameters.length) ; ++k) {
            double[] wggRow = wggData[k];
            double gk = grad[k];
            for (int l = 0 ; l < (parameters.length) ; ++l) {
                wggRow[l] = (weight * gk) * (grad[l]);
            }
        }
        a = a.add(wGradGradT);
        b = b.add(bDecrement);
    } 
} ##### After:
{
    incrementJacobianEvaluationsCounter();
    org.apache.commons.math.linear.RealMatrix b = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , 1);
    org.apache.commons.math.linear.RealMatrix a = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , parameters.length);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < (measurements.length) ; ++i) {
            if (!(measurements[i].isIgnored())) {
                double weight = measurements[i].getWeight();
                double residual = measurements[i].getResidual();
                for (int j = 0 ; j < (parameters.length) ; ++j) {
                    grad[j] = measurements[i].getPartial(parameters[j]);
                    bDecrementData[j][0] = (weight * residual) * (grad[j]);
                }
                for (int k = 0 ; k < (parameters.length) ; ++k) {
                    double[] wggRow = wggData[k];
                    double gk = grad[k];
                    for (int l = 0 ; l < (parameters.length) ; ++l) {
                        wggRow[l] = (weight * gk) * (grad[l]);
                    }
                }
                a = a.add(wGradGradT);
                b = b.add(bDecrement);
            } 
        }
    
    try {
        org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
        for (int i = 0 ; i < (parameters.length) ; ++i) {
            parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
        }
    } catch (org.apache.commons.math.linear.InvalidMatrixException e) {
        throw new org.apache.commons.math.estimation.EstimationException("unable to solve: singular problem" , new java.lang.Object[0]);
    }
    previous = cost;
    updateResidualsAndCost();
}
18:27:01.831 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.831 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.847 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.849 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.854 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:01.854 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:131)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.855 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.856 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:01.856 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.856 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:122
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:01.856 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:01.856 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:01.856 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:122 otherwise the patch would be "true" or "false"
18:27:01.856 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=122, Suspiciousness=0.08606629658238704]
18:27:01.856 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=123, Suspiciousness=0.08606629658238704]
18:27:01.856 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,856 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.857 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.858 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.868 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.869 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,876 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,876 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,925 DEBUG spoon.support.StandardEnvironment - built in 49 ms
2015-02-28 18:27:01,925 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:01,925 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:01.926 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,926 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:01.928 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (!(measurements[i].isIgnored())) {
    double weight = measurements[i].getWeight();
    double residual = measurements[i].getResidual();
    for (int j = 0 ; j < (parameters.length) ; ++j) {
        grad[j] = measurements[i].getPartial(parameters[j]);
        bDecrementData[j][0] = (weight * residual) * (grad[j]);
    }
    for (int k = 0 ; k < (parameters.length) ; ++k) {
        double[] wggRow = wggData[k];
        double gk = grad[k];
        for (int l = 0 ; l < (parameters.length) ; ++l) {
            wggRow[l] = (weight * gk) * (grad[l]);
        }
    }
    a = a.add(wGradGradT);
    b = b.add(bDecrement);
} 
18:27:01.928 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.929 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.944 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.948 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.952 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:01.952 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.953 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:01.955 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:01.955 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:129)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:01.955 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:123
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:01.955 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:01.955 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:01.955 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:123 otherwise the patch would be "true" or "false"
18:27:01.955 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=123, Suspiciousness=0.08606629658238704]
18:27:01.955 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=125, Suspiciousness=0.08606629658238704]
18:27:01.956 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,956 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.956 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.957 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.969 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.969 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:125.
18:27:01.969 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=125, Suspiciousness=0.08606629658238704]
18:27:01.969 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=126, Suspiciousness=0.08606629658238704]
18:27:01.969 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,969 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.969 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.970 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.980 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.981 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:126.
18:27:01.981 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=126, Suspiciousness=0.08606629658238704]
18:27:01.981 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=129, Suspiciousness=0.08606629658238704]
18:27:01.981 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:01,981 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:01.982 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:01.982 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:01.992 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:01.992 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,999 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:01,999 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,040 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:02,040 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:02,040 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:02.040 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,041 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:02.043 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < (parameters.length) ; ++j) {
    grad[j] = measurements[i].getPartial(parameters[j]);
    bDecrementData[j][0] = (weight * residual) * (grad[j]);
} ##### Before:
{
    double weight = measurements[i].getWeight();
    double residual = measurements[i].getResidual();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int j = 0 ; j < (parameters.length) ; ++j) {
        grad[j] = measurements[i].getPartial(parameters[j]);
        bDecrementData[j][0] = (weight * residual) * (grad[j]);
    }
    for (int k = 0 ; k < (parameters.length) ; ++k) {
        double[] wggRow = wggData[k];
        double gk = grad[k];
        for (int l = 0 ; l < (parameters.length) ; ++l) {
            wggRow[l] = (weight * gk) * (grad[l]);
        }
    }
    a = a.add(wGradGradT);
    b = b.add(bDecrement);
}
18:27:02.043 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < (parameters.length) ; ++j) {
    grad[j] = measurements[i].getPartial(parameters[j]);
    bDecrementData[j][0] = (weight * residual) * (grad[j]);
} ##### After:
{
    double weight = measurements[i].getWeight();
    double residual = measurements[i].getResidual();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int j = 0 ; j < (parameters.length) ; ++j) {
            grad[j] = measurements[i].getPartial(parameters[j]);
            bDecrementData[j][0] = (weight * residual) * (grad[j]);
        }
    
    for (int k = 0 ; k < (parameters.length) ; ++k) {
        double[] wggRow = wggData[k];
        double gk = grad[k];
        for (int l = 0 ; l < (parameters.length) ; ++l) {
            wggRow[l] = (weight * gk) * (grad[l]);
        }
    }
    a = a.add(wGradGradT);
    b = b.add(bDecrement);
}
18:27:02.043 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.044 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.059 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.063 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.068 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:02.068 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:133)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.069 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.070 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:02.070 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.070 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:129
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:02.070 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:02.070 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:02.070 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:129 otherwise the patch would be "true" or "false"
18:27:02.070 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=129, Suspiciousness=0.08606629658238704]
18:27:02.070 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=130, Suspiciousness=0.08606629658238704]
18:27:02.070 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,070 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:02.071 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.071 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.082 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.082 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,089 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,089 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,130 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:02,130 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:02,130 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:02.131 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,131 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:02.133 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### grad[j] = measurements[i].getPartial(parameters[j]) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    grad[j] = measurements[i].getPartial(parameters[j]);
    bDecrementData[j][0] = (weight * residual) * (grad[j]);
}
18:27:02.133 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### grad[j] = measurements[i].getPartial(parameters[j]) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        grad[j] = measurements[i].getPartial(parameters[j]);
    
    bDecrementData[j][0] = (weight * residual) * (grad[j]);
}
18:27:02.133 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.134 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.149 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.152 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.155 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:02.156 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.157 [Thread-113] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.159 [Thread-113] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:02.159 [Thread-113] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:133)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.159 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:130
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:02.159 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:02.160 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:02.160 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:130 otherwise the patch would be "true" or "false"
18:27:02.160 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=130, Suspiciousness=0.08606629658238704]
18:27:02.160 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=131, Suspiciousness=0.08606629658238704]
18:27:02.160 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,160 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:02.161 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.161 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.172 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.172 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,179 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,179 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,219 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:02,220 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:02,220 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:02.220 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,220 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:02.222 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### bDecrementData[j][0] = (weight * residual) * (grad[j]) ##### Before:
{
    grad[j] = measurements[i].getPartial(parameters[j]);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    bDecrementData[j][0] = (weight * residual) * (grad[j]);
}
18:27:02.223 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### bDecrementData[j][0] = (weight * residual) * (grad[j]) ##### After:
{
    grad[j] = measurements[i].getPartial(parameters[j]);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        bDecrementData[j][0] = (weight * residual) * (grad[j]);
    
}
18:27:02.223 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.223 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.239 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.241 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.245 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:02.245 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:02.247 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.248 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:02.248 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.248 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:131
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:02.248 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:02.248 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:02.248 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:131 otherwise the patch would be "true" or "false"
18:27:02.248 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=131, Suspiciousness=0.08606629658238704]
18:27:02.248 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=129, Suspiciousness=0.08606629658238704]
18:27:02.248 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,248 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:02.249 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.250 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.260 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.261 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,268 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,268 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,308 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:02,308 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:02,308 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:02.309 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,309 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:02.311 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < (parameters.length) ; ++j) {
    grad[j] = measurements[i].getPartial(parameters[j]);
    bDecrementData[j][0] = (weight * residual) * (grad[j]);
} ##### Before:
{
    double weight = measurements[i].getWeight();
    double residual = measurements[i].getResidual();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int j = 0 ; j < (parameters.length) ; ++j) {
        grad[j] = measurements[i].getPartial(parameters[j]);
        bDecrementData[j][0] = (weight * residual) * (grad[j]);
    }
    for (int k = 0 ; k < (parameters.length) ; ++k) {
        double[] wggRow = wggData[k];
        double gk = grad[k];
        for (int l = 0 ; l < (parameters.length) ; ++l) {
            wggRow[l] = (weight * gk) * (grad[l]);
        }
    }
    a = a.add(wGradGradT);
    b = b.add(bDecrement);
}
18:27:02.311 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < (parameters.length) ; ++j) {
    grad[j] = measurements[i].getPartial(parameters[j]);
    bDecrementData[j][0] = (weight * residual) * (grad[j]);
} ##### After:
{
    double weight = measurements[i].getWeight();
    double residual = measurements[i].getResidual();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int j = 0 ; j < (parameters.length) ; ++j) {
            grad[j] = measurements[i].getPartial(parameters[j]);
            bDecrementData[j][0] = (weight * residual) * (grad[j]);
        }
    
    for (int k = 0 ; k < (parameters.length) ; ++k) {
        double[] wggRow = wggData[k];
        double gk = grad[k];
        for (int l = 0 ; l < (parameters.length) ; ++l) {
            wggRow[l] = (weight * gk) * (grad[l]);
        }
    }
    a = a.add(wGradGradT);
    b = b.add(bDecrement);
}
18:27:02.311 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.312 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.327 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.330 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.334 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:02.334 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.335 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.337 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:02.337 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:133)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.338 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:129
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:02.338 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:02.338 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:02.338 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:129 otherwise the patch would be "true" or "false"
18:27:02.338 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=129, Suspiciousness=0.08606629658238704]
18:27:02.338 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=135, Suspiciousness=0.08606629658238704]
18:27:02.338 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,338 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:02.339 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.339 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.349 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.350 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,357 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,357 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,397 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:02,397 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:02,397 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:02.398 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,398 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:02.400 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int k = 0 ; k < (parameters.length) ; ++k) {
    double[] wggRow = wggData[k];
    double gk = grad[k];
    for (int l = 0 ; l < (parameters.length) ; ++l) {
        wggRow[l] = (weight * gk) * (grad[l]);
    }
} ##### Before:
{
    double weight = measurements[i].getWeight();
    double residual = measurements[i].getResidual();
    for (int j = 0 ; j < (parameters.length) ; ++j) {
        grad[j] = measurements[i].getPartial(parameters[j]);
        bDecrementData[j][0] = (weight * residual) * (grad[j]);
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int k = 0 ; k < (parameters.length) ; ++k) {
        double[] wggRow = wggData[k];
        double gk = grad[k];
        for (int l = 0 ; l < (parameters.length) ; ++l) {
            wggRow[l] = (weight * gk) * (grad[l]);
        }
    }
    a = a.add(wGradGradT);
    b = b.add(bDecrement);
}
18:27:02.400 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int k = 0 ; k < (parameters.length) ; ++k) {
    double[] wggRow = wggData[k];
    double gk = grad[k];
    for (int l = 0 ; l < (parameters.length) ; ++l) {
        wggRow[l] = (weight * gk) * (grad[l]);
    }
} ##### After:
{
    double weight = measurements[i].getWeight();
    double residual = measurements[i].getResidual();
    for (int j = 0 ; j < (parameters.length) ; ++j) {
        grad[j] = measurements[i].getPartial(parameters[j]);
        bDecrementData[j][0] = (weight * residual) * (grad[j]);
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int k = 0 ; k < (parameters.length) ; ++k) {
            double[] wggRow = wggData[k];
            double gk = grad[k];
            for (int l = 0 ; l < (parameters.length) ; ++l) {
                wggRow[l] = (weight * gk) * (grad[l]);
            }
        }
    
    a = a.add(wGradGradT);
    b = b.add(bDecrement);
}
18:27:02.400 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.401 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.416 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.419 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.424 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:02.424 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:133)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.425 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.425 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:02.425 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.426 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:135
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:02.426 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:02.426 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:02.426 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:135 otherwise the patch would be "true" or "false"
18:27:02.426 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=135, Suspiciousness=0.08606629658238704]
18:27:02.426 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=136, Suspiciousness=0.08606629658238704]
18:27:02.426 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,426 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:02.427 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.427 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.438 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.438 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:136.
18:27:02.438 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=136, Suspiciousness=0.08606629658238704]
18:27:02.438 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=137, Suspiciousness=0.08606629658238704]
18:27:02.438 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,438 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:02.439 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.439 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.460 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.460 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:137.
18:27:02.460 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=137, Suspiciousness=0.08606629658238704]
18:27:02.460 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=138, Suspiciousness=0.08606629658238704]
18:27:02.461 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,461 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:02.461 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.462 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.472 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.472 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,479 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,479 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,520 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:02,520 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:02,520 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:02.521 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,521 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:02.523 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int l = 0 ; l < (parameters.length) ; ++l) {
    wggRow[l] = (weight * gk) * (grad[l]);
} ##### Before:
{
    double[] wggRow = wggData[k];
    double gk = grad[k];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggRow",wggRow);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("gk",gk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int l = 0 ; l < (parameters.length) ; ++l) {
        wggRow[l] = (weight * gk) * (grad[l]);
    }
}
18:27:02.523 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int l = 0 ; l < (parameters.length) ; ++l) {
    wggRow[l] = (weight * gk) * (grad[l]);
} ##### After:
{
    double[] wggRow = wggData[k];
    double gk = grad[k];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggRow",wggRow);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("gk",gk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int l = 0 ; l < (parameters.length) ; ++l) {
            wggRow[l] = (weight * gk) * (grad[l]);
        }
    
}
18:27:02.523 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.524 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.540 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.543 [Thread-120] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.547 [Thread-120] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:02.547 [Thread-120] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.548 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.550 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:02.550 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:135)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.550 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:138
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:02.550 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:02.550 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:02.550 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:138 otherwise the patch would be "true" or "false"
18:27:02.550 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=138, Suspiciousness=0.08606629658238704]
18:27:02.550 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=139, Suspiciousness=0.08606629658238704]
18:27:02.551 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,551 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:02.551 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.552 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.562 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.562 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,569 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,569 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,609 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:02,609 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:02,609 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:02.610 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,610 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:02.612 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### wggRow[l] = (weight * gk) * (grad[l]) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggRow",wggRow);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("gk",gk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    wggRow[l] = (weight * gk) * (grad[l]);
}
18:27:02.612 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### wggRow[l] = (weight * gk) * (grad[l]) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggRow",wggRow);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("gk",gk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        wggRow[l] = (weight * gk) * (grad[l]);
    
}
18:27:02.612 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.613 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.628 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.631 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.636 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:02.636 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:135)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.637 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.639 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:02.639 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.639 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:139
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:02.639 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:02.639 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:02.639 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:139 otherwise the patch would be "true" or "false"
18:27:02.639 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=139, Suspiciousness=0.08606629658238704]
18:27:02.639 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=138, Suspiciousness=0.08606629658238704]
18:27:02.639 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,639 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:02.640 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.641 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.651 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.651 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,658 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,658 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,699 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:02,699 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:02,699 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:02.700 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,700 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:02.702 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int l = 0 ; l < (parameters.length) ; ++l) {
    wggRow[l] = (weight * gk) * (grad[l]);
} ##### Before:
{
    double[] wggRow = wggData[k];
    double gk = grad[k];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggRow",wggRow);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("gk",gk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int l = 0 ; l < (parameters.length) ; ++l) {
        wggRow[l] = (weight * gk) * (grad[l]);
    }
}
18:27:02.702 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int l = 0 ; l < (parameters.length) ; ++l) {
    wggRow[l] = (weight * gk) * (grad[l]);
} ##### After:
{
    double[] wggRow = wggData[k];
    double gk = grad[k];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggRow",wggRow);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("gk",gk);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int l = 0 ; l < (parameters.length) ; ++l) {
            wggRow[l] = (weight * gk) * (grad[l]);
        }
    
}
18:27:02.702 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.703 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.719 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.722 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.726 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:02.726 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.727 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.728 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:02.728 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:135)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.729 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:138
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:02.729 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:02.729 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:02.729 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:138 otherwise the patch would be "true" or "false"
18:27:02.729 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=138, Suspiciousness=0.08606629658238704]
18:27:02.729 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=135, Suspiciousness=0.08606629658238704]
18:27:02.729 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,729 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:02.730 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.730 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.741 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.741 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,748 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,748 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,787 DEBUG spoon.support.StandardEnvironment - built in 39 ms
2015-02-28 18:27:02,788 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:02,788 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:02.788 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,788 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:02.791 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int k = 0 ; k < (parameters.length) ; ++k) {
    double[] wggRow = wggData[k];
    double gk = grad[k];
    for (int l = 0 ; l < (parameters.length) ; ++l) {
        wggRow[l] = (weight * gk) * (grad[l]);
    }
} ##### Before:
{
    double weight = measurements[i].getWeight();
    double residual = measurements[i].getResidual();
    for (int j = 0 ; j < (parameters.length) ; ++j) {
        grad[j] = measurements[i].getPartial(parameters[j]);
        bDecrementData[j][0] = (weight * residual) * (grad[j]);
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int k = 0 ; k < (parameters.length) ; ++k) {
        double[] wggRow = wggData[k];
        double gk = grad[k];
        for (int l = 0 ; l < (parameters.length) ; ++l) {
            wggRow[l] = (weight * gk) * (grad[l]);
        }
    }
    a = a.add(wGradGradT);
    b = b.add(bDecrement);
}
18:27:02.791 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int k = 0 ; k < (parameters.length) ; ++k) {
    double[] wggRow = wggData[k];
    double gk = grad[k];
    for (int l = 0 ; l < (parameters.length) ; ++l) {
        wggRow[l] = (weight * gk) * (grad[l]);
    }
} ##### After:
{
    double weight = measurements[i].getWeight();
    double residual = measurements[i].getResidual();
    for (int j = 0 ; j < (parameters.length) ; ++j) {
        grad[j] = measurements[i].getPartial(parameters[j]);
        bDecrementData[j][0] = (weight * residual) * (grad[j]);
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int k = 0 ; k < (parameters.length) ; ++k) {
            double[] wggRow = wggData[k];
            double gk = grad[k];
            for (int l = 0 ; l < (parameters.length) ; ++l) {
                wggRow[l] = (weight * gk) * (grad[l]);
            }
        }
    
    a = a.add(wGradGradT);
    b = b.add(bDecrement);
}
18:27:02.791 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.792 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.807 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.809 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.814 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:02.814 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:133)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.815 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.815 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:02.815 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.816 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:135
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:02.816 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:02.816 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:02.816 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:135 otherwise the patch would be "true" or "false"
18:27:02.816 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=135, Suspiciousness=0.08606629658238704]
18:27:02.816 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=144, Suspiciousness=0.08606629658238704]
18:27:02.816 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,816 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:02.816 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.817 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.827 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.827 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,834 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,834 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,873 DEBUG spoon.support.StandardEnvironment - built in 39 ms
2015-02-28 18:27:02,873 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:02,873 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:02.874 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,874 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:02.877 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = a.add(wGradGradT) ##### Before:
{
    double weight = measurements[i].getWeight();
    double residual = measurements[i].getResidual();
    for (int j = 0 ; j < (parameters.length) ; ++j) {
        grad[j] = measurements[i].getPartial(parameters[j]);
        bDecrementData[j][0] = (weight * residual) * (grad[j]);
    }
    for (int k = 0 ; k < (parameters.length) ; ++k) {
        double[] wggRow = wggData[k];
        double gk = grad[k];
        for (int l = 0 ; l < (parameters.length) ; ++l) {
            wggRow[l] = (weight * gk) * (grad[l]);
        }
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    a = a.add(wGradGradT);
    b = b.add(bDecrement);
}
18:27:02.877 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = a.add(wGradGradT) ##### After:
{
    double weight = measurements[i].getWeight();
    double residual = measurements[i].getResidual();
    for (int j = 0 ; j < (parameters.length) ; ++j) {
        grad[j] = measurements[i].getPartial(parameters[j]);
        bDecrementData[j][0] = (weight * residual) * (grad[j]);
    }
    for (int k = 0 ; k < (parameters.length) ; ++k) {
        double[] wggRow = wggData[k];
        double gk = grad[k];
        for (int l = 0 ; l < (parameters.length) ; ++l) {
            wggRow[l] = (weight * gk) * (grad[l]);
        }
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        a = a.add(wGradGradT);
    
    b = b.add(bDecrement);
}
18:27:02.877 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.878 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.893 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.895 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.899 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:02.899 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.900 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.901 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:02.901 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:133)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.902 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:144
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:02.902 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:02.902 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:02.902 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:144 otherwise the patch would be "true" or "false"
18:27:02.902 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=144, Suspiciousness=0.08606629658238704]
18:27:02.902 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=145, Suspiciousness=0.08606629658238704]
18:27:02.902 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,902 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:02.903 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.903 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.913 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.913 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,920 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,921 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:02,959 DEBUG spoon.support.StandardEnvironment - built in 39 ms
2015-02-28 18:27:02,960 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:02,960 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:02.960 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,960 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:02.962 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b.add(bDecrement) ##### Before:
{
    double weight = measurements[i].getWeight();
    double residual = measurements[i].getResidual();
    for (int j = 0 ; j < (parameters.length) ; ++j) {
        grad[j] = measurements[i].getPartial(parameters[j]);
        bDecrementData[j][0] = (weight * residual) * (grad[j]);
    }
    for (int k = 0 ; k < (parameters.length) ; ++k) {
        double[] wggRow = wggData[k];
        double gk = grad[k];
        for (int l = 0 ; l < (parameters.length) ; ++l) {
            wggRow[l] = (weight * gk) * (grad[l]);
        }
    }
    a = a.add(wGradGradT);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    b = b.add(bDecrement);
}
18:27:02.963 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b.add(bDecrement) ##### After:
{
    double weight = measurements[i].getWeight();
    double residual = measurements[i].getResidual();
    for (int j = 0 ; j < (parameters.length) ; ++j) {
        grad[j] = measurements[i].getPartial(parameters[j]);
        bDecrementData[j][0] = (weight * residual) * (grad[j]);
    }
    for (int k = 0 ; k < (parameters.length) ; ++k) {
        double[] wggRow = wggData[k];
        double gk = grad[k];
        for (int l = 0 ; l < (parameters.length) ; ++l) {
            wggRow[l] = (weight * gk) * (grad[l]);
        }
    }
    a = a.add(wGradGradT);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("weight",weight);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        b = b.add(bDecrement);
    
}
18:27:02.963 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.963 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.978 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.981 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.984 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:02.984 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:02.985 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:02.986 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:02.986 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:02.986 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:145
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:02.986 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:02.986 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:02.986 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:145 otherwise the patch would be "true" or "false"
18:27:02.986 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=145, Suspiciousness=0.08606629658238704]
18:27:02.986 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=122, Suspiciousness=0.08606629658238704]
18:27:02.986 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:02,986 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:02.987 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:02.988 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:02.998 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:02.998 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:03,005 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:03,005 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java]
2015-02-28 18:27:03,058 DEBUG spoon.support.StandardEnvironment - built in 53 ms
2015-02-28 18:27:03,058 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:03,058 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:03.058 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:03,058 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:03.061 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < (measurements.length) ; ++i) {
    if (!(measurements[i].isIgnored())) {
        double weight = measurements[i].getWeight();
        double residual = measurements[i].getResidual();
        for (int j = 0 ; j < (parameters.length) ; ++j) {
            grad[j] = measurements[i].getPartial(parameters[j]);
            bDecrementData[j][0] = (weight * residual) * (grad[j]);
        }
        for (int k = 0 ; k < (parameters.length) ; ++k) {
            double[] wggRow = wggData[k];
            double gk = grad[k];
            for (int l = 0 ; l < (parameters.length) ; ++l) {
                wggRow[l] = (weight * gk) * (grad[l]);
            }
        }
        a = a.add(wGradGradT);
        b = b.add(bDecrement);
    } 
} ##### Before:
{
    incrementJacobianEvaluationsCounter();
    org.apache.commons.math.linear.RealMatrix b = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , 1);
    org.apache.commons.math.linear.RealMatrix a = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , parameters.length);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < (measurements.length) ; ++i) {
        if (!(measurements[i].isIgnored())) {
            double weight = measurements[i].getWeight();
            double residual = measurements[i].getResidual();
            for (int j = 0 ; j < (parameters.length) ; ++j) {
                grad[j] = measurements[i].getPartial(parameters[j]);
                bDecrementData[j][0] = (weight * residual) * (grad[j]);
            }
            for (int k = 0 ; k < (parameters.length) ; ++k) {
                double[] wggRow = wggData[k];
                double gk = grad[k];
                for (int l = 0 ; l < (parameters.length) ; ++l) {
                    wggRow[l] = (weight * gk) * (grad[l]);
                }
            }
            a = a.add(wGradGradT);
            b = b.add(bDecrement);
        } 
    }
    try {
        org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
        for (int i = 0 ; i < (parameters.length) ; ++i) {
            parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
        }
    } catch (org.apache.commons.math.linear.InvalidMatrixException e) {
        throw new org.apache.commons.math.estimation.EstimationException("unable to solve: singular problem" , new java.lang.Object[0]);
    }
    previous = cost;
    updateResidualsAndCost();
}
18:27:03.061 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < (measurements.length) ; ++i) {
    if (!(measurements[i].isIgnored())) {
        double weight = measurements[i].getWeight();
        double residual = measurements[i].getResidual();
        for (int j = 0 ; j < (parameters.length) ; ++j) {
            grad[j] = measurements[i].getPartial(parameters[j]);
            bDecrementData[j][0] = (weight * residual) * (grad[j]);
        }
        for (int k = 0 ; k < (parameters.length) ; ++k) {
            double[] wggRow = wggData[k];
            double gk = grad[k];
            for (int l = 0 ; l < (parameters.length) ; ++l) {
                wggRow[l] = (weight * gk) * (grad[l]);
            }
        }
        a = a.add(wGradGradT);
        b = b.add(bDecrement);
    } 
} ##### After:
{
    incrementJacobianEvaluationsCounter();
    org.apache.commons.math.linear.RealMatrix b = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , 1);
    org.apache.commons.math.linear.RealMatrix a = new org.apache.commons.math.linear.RealMatrixImpl(parameters.length , parameters.length);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID",org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence",org.apache.commons.math.estimation.GaussNewtonEstimator.this.convergence);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrementData",bDecrementData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold",org.apache.commons.math.estimation.GaussNewtonEstimator.this.steadyStateThreshold);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bDecrement",bDecrement);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("grad",grad);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("previous",previous);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wGradGradT",wGradGradT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wggData",wggData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < (measurements.length) ; ++i) {
            if (!(measurements[i].isIgnored())) {
                double weight = measurements[i].getWeight();
                double residual = measurements[i].getResidual();
                for (int j = 0 ; j < (parameters.length) ; ++j) {
                    grad[j] = measurements[i].getPartial(parameters[j]);
                    bDecrementData[j][0] = (weight * residual) * (grad[j]);
                }
                for (int k = 0 ; k < (parameters.length) ; ++k) {
                    double[] wggRow = wggData[k];
                    double gk = grad[k];
                    for (int l = 0 ; l < (parameters.length) ; ++l) {
                        wggRow[l] = (weight * gk) * (grad[l]);
                    }
                }
                a = a.add(wGradGradT);
                b = b.add(bDecrement);
            } 
        }
    
    try {
        org.apache.commons.math.linear.RealMatrix dX = a.solve(b);
        for (int i = 0 ; i < (parameters.length) ; ++i) {
            parameters[i].setEstimate(((parameters[i].getEstimate()) + (dX.getEntry(i, 0))));
        }
    } catch (org.apache.commons.math.linear.InvalidMatrixException e) {
        throw new org.apache.commons.math.estimation.EstimationException("unable to solve: singular problem" , new java.lang.Object[0]);
    }
    previous = cost;
    updateResidualsAndCost();
}
18:27:03.061 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:03.062 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:03.077 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:03.080 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:03.083 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:03.084 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:03.085 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:03.087 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:03.087 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:131)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:03.088 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:122
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:03.088 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:03.088 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:03.088 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:122 otherwise the patch would be "true" or "false"
18:27:03.088 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=122, Suspiciousness=0.08606629658238704]
18:27:03.088 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=153, Suspiciousness=0.08606629658238704]
18:27:03.088 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.GaussNewtonEstimator]
2015-02-28 18:27:03,088 DEBUG spoon.support.StandardEnvironment - processing 'GaussNewtonEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:03.088 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.GaussNewtonEstimator]
18:27:03.089 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:03.099 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:03.099 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.GaussNewtonEstimator:153.
18:27:03.099 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.GaussNewtonEstimator, LineNumber=153, Suspiciousness=0.08606629658238704]
18:27:03.099 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=107, Suspiciousness=0.08606629658238704]
18:27:03.099 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.EstimatedParameter]
2015-02-28 18:27:03,099 DEBUG spoon.support.StandardEnvironment - processing 'EstimatedParameter' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:03.100 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.EstimatedParameter]
18:27:03.100 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:03.106 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:03.106 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.EstimatedParameter:107.
18:27:03.106 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=107, Suspiciousness=0.08606629658238704]
18:27:03.106 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=735, Suspiciousness=0.08333333333333333]
18:27:03.107 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:03,107 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:03.109 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:03.114 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:03.154 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:03.155 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,162 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,162 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,230 DEBUG spoon.support.StandardEnvironment - built in 68 ms
2015-02-28 18:27:03,230 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:03,230 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:03.231 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:03,231 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:03.234 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < nColB ; j++) {
    bp[i][j] -= (bp[col][j]) * (lu[i][col]);
} ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int j = 0 ; j < nColB ; j++) {
        bp[i][j] -= (bp[col][j]) * (lu[i][col]);
    }
}
18:27:03.235 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < nColB ; j++) {
    bp[i][j] -= (bp[col][j]) * (lu[i][col]);
} ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    
}
18:27:03.235 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:03.241 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:03.287 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:03.289 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:03.293 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:03.293 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:03.294 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:03.294 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:03.294 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:03.295 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:735
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:03.295 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:03.295 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:03.295 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:735 otherwise the patch would be "true" or "false"
18:27:03.295 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=735, Suspiciousness=0.08333333333333333]
18:27:03.295 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=736, Suspiciousness=0.08333333333333333]
18:27:03.295 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:03,295 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:03.298 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:03.304 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:03.344 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:03.344 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,351 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,352 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,420 DEBUG spoon.support.StandardEnvironment - built in 69 ms
2015-02-28 18:27:03,420 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:03,420 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:03.420 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:03,421 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:03.424 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### bp[i][j] -= (bp[col][j]) * (lu[i][col]) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    bp[i][j] -= (bp[col][j]) * (lu[i][col]);
}
18:27:03.424 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### bp[i][j] -= (bp[col][j]) * (lu[i][col]) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        bp[i][j] -= (bp[col][j]) * (lu[i][col]);
    
}
18:27:03.425 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:03.430 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:03.475 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:03.477 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:03.481 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:03.481 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:03.482 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:03.482 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:03.482 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:03.483 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:736
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:03.483 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:03.483 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:03.483 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:736 otherwise the patch would be "true" or "false"
18:27:03.483 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=736, Suspiciousness=0.08333333333333333]
18:27:03.483 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=735, Suspiciousness=0.08333333333333333]
18:27:03.483 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:03,483 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:03.485 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:03.491 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:03.531 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:03.531 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,538 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,538 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,607 DEBUG spoon.support.StandardEnvironment - built in 69 ms
2015-02-28 18:27:03,607 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:03,607 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:03.608 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:03,608 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:03.611 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < nColB ; j++) {
    bp[i][j] -= (bp[col][j]) * (lu[i][col]);
} ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int j = 0 ; j < nColB ; j++) {
        bp[i][j] -= (bp[col][j]) * (lu[i][col]);
    }
}
18:27:03.611 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < nColB ; j++) {
    bp[i][j] -= (bp[col][j]) * (lu[i][col]);
} ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    
}
18:27:03.612 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:03.617 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:03.662 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:03.665 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:03.668 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:03.668 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:03.669 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:03.670 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:03.670 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:03.670 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:735
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:03.670 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:03.670 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:03.670 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:735 otherwise the patch would be "true" or "false"
18:27:03.670 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=735, Suspiciousness=0.08333333333333333]
18:27:03.670 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=734, Suspiciousness=0.08333333333333333]
18:27:03.670 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:03,670 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:03.673 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:03.678 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:03.718 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:03.718 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,725 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,726 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,795 DEBUG spoon.support.StandardEnvironment - built in 70 ms
2015-02-28 18:27:03,795 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:03,795 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:03.796 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:03,796 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:03.799 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = col + 1 ; i < nCol ; i++) {
    for (int j = 0 ; j < nColB ; j++) {
        bp[i][j] -= (bp[col][j]) * (lu[i][col]);
    }
} ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = col + 1 ; i < nCol ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
}
18:27:03.799 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = col + 1 ; i < nCol ; i++) {
    for (int j = 0 ; j < nColB ; j++) {
        bp[i][j] -= (bp[col][j]) * (lu[i][col]);
    }
} ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = col + 1 ; i < nCol ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    
}
18:27:03.800 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:03.805 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:03.847 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:03.859 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:03.863 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:03.863 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:03.864 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:03.865 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:03.865 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:03.865 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:734
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:03.865 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:03.865 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:03.865 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:734 otherwise the patch would be "true" or "false"
18:27:03.865 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=734, Suspiciousness=0.08333333333333333]
18:27:03.865 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=747, Suspiciousness=0.08333333333333333]
18:27:03.865 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:03,865 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:03.868 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:03.873 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:03.910 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:03.910 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,917 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,917 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:03,986 DEBUG spoon.support.StandardEnvironment - built in 69 ms
2015-02-28 18:27:03,986 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:03,986 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:03.987 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:03,987 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:03.990 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < nColB ; j++) {
    bp[i][j] -= (bp[col][j]) * (lu[i][col]);
} ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int j = 0 ; j < nColB ; j++) {
        bp[i][j] -= (bp[col][j]) * (lu[i][col]);
    }
}
18:27:03.991 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < nColB ; j++) {
    bp[i][j] -= (bp[col][j]) * (lu[i][col]);
} ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    
}
18:27:03.991 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:03.997 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:04.037 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:04.040 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:04.043 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:04.043 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:04.044 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:04.044 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:04.045 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:04.045 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:747
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:04.045 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:04.045 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:04.045 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:747 otherwise the patch would be "true" or "false"
18:27:04.045 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=747, Suspiciousness=0.08333333333333333]
18:27:04.045 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=748, Suspiciousness=0.08333333333333333]
18:27:04.045 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:04,045 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:04.047 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:04.053 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:04.088 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:04.088 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,095 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,095 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,163 DEBUG spoon.support.StandardEnvironment - built in 68 ms
2015-02-28 18:27:04,164 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:04,164 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:04.164 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:04,164 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:04.168 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### bp[i][j] -= (bp[col][j]) * (lu[i][col]) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    bp[i][j] -= (bp[col][j]) * (lu[i][col]);
}
18:27:04.168 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### bp[i][j] -= (bp[col][j]) * (lu[i][col]) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        bp[i][j] -= (bp[col][j]) * (lu[i][col]);
    
}
18:27:04.168 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:04.174 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:04.213 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:04.215 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:04.219 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:04.219 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:04.220 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:04.220 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:04.220 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:04.220 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:748
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:04.220 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:04.220 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:04.220 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:748 otherwise the patch would be "true" or "false"
18:27:04.220 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=748, Suspiciousness=0.08333333333333333]
18:27:04.220 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=747, Suspiciousness=0.08333333333333333]
18:27:04.221 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:04,221 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:04.223 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:04.228 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:04.263 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:04.263 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,270 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,270 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,338 DEBUG spoon.support.StandardEnvironment - built in 68 ms
2015-02-28 18:27:04,339 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:04,339 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:04.339 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:04,339 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:04.343 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < nColB ; j++) {
    bp[i][j] -= (bp[col][j]) * (lu[i][col]);
} ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int j = 0 ; j < nColB ; j++) {
        bp[i][j] -= (bp[col][j]) * (lu[i][col]);
    }
}
18:27:04.343 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < nColB ; j++) {
    bp[i][j] -= (bp[col][j]) * (lu[i][col]);
} ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    
}
18:27:04.343 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:04.349 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:04.386 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:04.389 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:04.392 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:04.392 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:04.393 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:04.394 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:04.394 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:04.394 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:747
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:04.394 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:04.394 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:04.394 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:747 otherwise the patch would be "true" or "false"
18:27:04.394 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=747, Suspiciousness=0.08333333333333333]
18:27:04.394 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=746, Suspiciousness=0.08333333333333333]
18:27:04.394 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:04,394 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:04.397 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:04.402 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:04.435 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:04.435 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,442 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,442 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,511 DEBUG spoon.support.StandardEnvironment - built in 69 ms
2015-02-28 18:27:04,511 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:04,511 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:04.512 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:04,512 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:04.515 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < col ; i++) {
    for (int j = 0 ; j < nColB ; j++) {
        bp[i][j] -= (bp[col][j]) * (lu[i][col]);
    }
} ##### Before:
{
    for (int j = 0 ; j < nColB ; j++) {
        bp[col][j] /= lu[col][col];
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < col ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
}
18:27:04.516 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < col ; i++) {
    for (int j = 0 ; j < nColB ; j++) {
        bp[i][j] -= (bp[col][j]) * (lu[i][col]);
    }
} ##### After:
{
    for (int j = 0 ; j < nColB ; j++) {
        bp[col][j] /= lu[col][col];
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < col ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    
}
18:27:04.516 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:04.521 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:04.559 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:04.561 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:04.565 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:04.565 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:04.566 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:04.566 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:04.566 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:04.566 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:746
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:04.567 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:04.567 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:04.567 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:746 otherwise the patch would be "true" or "false"
18:27:04.567 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=746, Suspiciousness=0.08333333333333333]
18:27:04.567 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=155, Suspiciousness=0.08333333333333333]
18:27:04.567 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.WeightedMeasurement]
2015-02-28 18:27:04,567 DEBUG spoon.support.StandardEnvironment - processing 'WeightedMeasurement' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:04.567 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.WeightedMeasurement]
18:27:04.568 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:04.574 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:04.574 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.WeightedMeasurement:155.
18:27:04.574 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=155, Suspiciousness=0.08333333333333333]
18:27:04.574 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=151, Suspiciousness=0.08084520834544433]
18:27:04.574 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:04,574 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:04.576 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:04.581 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:04.613 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:04.613 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:151.
18:27:04.613 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=151, Suspiciousness=0.08084520834544433]
18:27:04.613 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=152, Suspiciousness=0.08084520834544433]
18:27:04.614 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:04,614 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:04.616 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:04.621 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:04.653 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:04.653 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:152.
18:27:04.653 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=152, Suspiciousness=0.08084520834544433]
18:27:04.653 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=153, Suspiciousness=0.08084520834544433]
18:27:04.653 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:04,653 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:04.656 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:04.661 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:04.692 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:04.692 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:153.
18:27:04.692 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=153, Suspiciousness=0.08084520834544433]
18:27:04.692 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=154, Suspiciousness=0.08084520834544433]
18:27:04.693 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:04,693 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:04.695 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:04.700 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:04.731 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:04.732 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,738 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,739 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,816 DEBUG spoon.support.StandardEnvironment - built in 77 ms
2015-02-28 18:27:04,816 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:04,816 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:04.817 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:04,817 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:04.820 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < rowCount ; row++) {
    for (int col = 0 ; col < columnCount ; col++) {
        outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
    }
} ##### Before:
{
    if (((getColumnDimension()) != (m.getColumnDimension())) || ((getRowDimension()) != (m.getRowDimension()))) {
        throw new java.lang.IllegalArgumentException("matrix dimension mismatch");
    } 
    int rowCount = getRowDimension();
    int columnCount = getColumnDimension();
    double[][] outData = new double[rowCount][columnCount];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("columnCount",columnCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rowCount",rowCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("m",m);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("outData",outData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int row = 0 ; row < rowCount ; row++) {
        for (int col = 0 ; col < columnCount ; col++) {
            outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
        }
    }
    return new org.apache.commons.math.linear.RealMatrixImpl(outData);
}
18:27:04.820 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < rowCount ; row++) {
    for (int col = 0 ; col < columnCount ; col++) {
        outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
    }
} ##### After:
{
    if (((getColumnDimension()) != (m.getColumnDimension())) || ((getRowDimension()) != (m.getRowDimension()))) {
        throw new java.lang.IllegalArgumentException("matrix dimension mismatch");
    } 
    int rowCount = getRowDimension();
    int columnCount = getColumnDimension();
    double[][] outData = new double[rowCount][columnCount];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("columnCount",columnCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rowCount",rowCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("m",m);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("outData",outData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int row = 0 ; row < rowCount ; row++) {
            for (int col = 0 ; col < columnCount ; col++) {
                outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
            }
        }
    
    return new org.apache.commons.math.linear.RealMatrixImpl(outData);
}
18:27:04.821 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:04.826 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:04.862 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:04.866 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:04.871 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:04.871 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:04.872 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:04.873 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:04.873 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:04.873 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:154
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:04.873 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:04.873 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:04.873 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:154 otherwise the patch would be "true" or "false"
18:27:04.873 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=154, Suspiciousness=0.08084520834544433]
18:27:04.873 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=155, Suspiciousness=0.08084520834544433]
18:27:04.874 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:04,874 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:04.876 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:04.881 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:04.913 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:04.913 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,920 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,920 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:04,987 DEBUG spoon.support.StandardEnvironment - built in 67 ms
2015-02-28 18:27:04,987 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:04,987 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:04.988 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:04,988 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:04.991 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < columnCount ; col++) {
    outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
} ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("columnCount",columnCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rowCount",rowCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("m",m);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("outData",outData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int col = 0 ; col < columnCount ; col++) {
        outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
    }
}
18:27:04.991 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < columnCount ; col++) {
    outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
} ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("columnCount",columnCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rowCount",rowCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("m",m);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("outData",outData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int col = 0 ; col < columnCount ; col++) {
            outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
        }
    
}
18:27:04.992 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:04.997 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.033 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.035 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:05.039 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:05.040 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:05.040 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:05.042 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:05.042 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:05.042 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:155
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:05.042 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:05.042 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:05.043 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:155 otherwise the patch would be "true" or "false"
18:27:05.043 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=155, Suspiciousness=0.08084520834544433]
18:27:05.043 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=156, Suspiciousness=0.08084520834544433]
18:27:05.043 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:05,043 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:05.045 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:05.050 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.080 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.081 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:05,088 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:05,088 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:05,155 DEBUG spoon.support.StandardEnvironment - built in 67 ms
2015-02-28 18:27:05,155 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:05,155 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:05.156 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:05,156 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:05.158 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### outData[row][col] = (data[row][col]) + (m.getEntry(row, col)) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("columnCount",columnCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rowCount",rowCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("m",m);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("outData",outData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
}
18:27:05.159 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### outData[row][col] = (data[row][col]) + (m.getEntry(row, col)) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("columnCount",columnCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rowCount",rowCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("m",m);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("outData",outData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
    
}
18:27:05.160 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:05.165 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.200 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.203 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:05.208 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:05.208 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:05.209 [Thread-155] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:05.210 [Thread-155] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:05.210 [Thread-155] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:05.211 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:156
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:05.211 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:05.211 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:05.211 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:156 otherwise the patch would be "true" or "false"
18:27:05.211 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=156, Suspiciousness=0.08084520834544433]
18:27:05.211 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=155, Suspiciousness=0.08084520834544433]
18:27:05.211 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:05,211 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:05.213 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:05.218 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.249 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.249 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:05,256 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:05,256 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:05,358 DEBUG spoon.support.StandardEnvironment - built in 102 ms
2015-02-28 18:27:05,359 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:05,359 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:05.359 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:05,359 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:05.362 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < columnCount ; col++) {
    outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
} ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("columnCount",columnCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rowCount",rowCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("m",m);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("outData",outData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int col = 0 ; col < columnCount ; col++) {
        outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
    }
}
18:27:05.362 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < columnCount ; col++) {
    outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
} ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("columnCount",columnCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rowCount",rowCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("m",m);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("outData",outData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int col = 0 ; col < columnCount ; col++) {
            outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
        }
    
}
18:27:05.364 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:05.369 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.403 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.406 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:05.410 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:05.410 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:05.411 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:05.413 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:05.414 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:05.414 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:155
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:05.414 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:05.414 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:05.414 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:155 otherwise the patch would be "true" or "false"
18:27:05.414 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=155, Suspiciousness=0.08084520834544433]
18:27:05.414 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=154, Suspiciousness=0.08084520834544433]
18:27:05.414 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:05,414 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:05.417 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:05.421 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.451 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.451 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:05,458 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:05,458 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:05,525 DEBUG spoon.support.StandardEnvironment - built in 67 ms
2015-02-28 18:27:05,525 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:05,525 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:05.526 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:05,526 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:05.529 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < rowCount ; row++) {
    for (int col = 0 ; col < columnCount ; col++) {
        outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
    }
} ##### Before:
{
    if (((getColumnDimension()) != (m.getColumnDimension())) || ((getRowDimension()) != (m.getRowDimension()))) {
        throw new java.lang.IllegalArgumentException("matrix dimension mismatch");
    } 
    int rowCount = getRowDimension();
    int columnCount = getColumnDimension();
    double[][] outData = new double[rowCount][columnCount];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("columnCount",columnCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rowCount",rowCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("m",m);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("outData",outData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int row = 0 ; row < rowCount ; row++) {
        for (int col = 0 ; col < columnCount ; col++) {
            outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
        }
    }
    return new org.apache.commons.math.linear.RealMatrixImpl(outData);
}
18:27:05.529 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < rowCount ; row++) {
    for (int col = 0 ; col < columnCount ; col++) {
        outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
    }
} ##### After:
{
    if (((getColumnDimension()) != (m.getColumnDimension())) || ((getRowDimension()) != (m.getRowDimension()))) {
        throw new java.lang.IllegalArgumentException("matrix dimension mismatch");
    } 
    int rowCount = getRowDimension();
    int columnCount = getColumnDimension();
    double[][] outData = new double[rowCount][columnCount];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("columnCount",columnCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rowCount",rowCount);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("m",m);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("outData",outData);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int row = 0 ; row < rowCount ; row++) {
            for (int col = 0 ; col < columnCount ; col++) {
                outData[row][col] = (data[row][col]) + (m.getEntry(row, col));
            }
        }
    
    return new org.apache.commons.math.linear.RealMatrixImpl(outData);
}
18:27:05.530 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:05.535 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.569 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.571 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:05.576 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:05.576 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:05.577 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:05.577 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:05.577 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:05.578 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:154
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:05.578 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:05.578 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:05.578 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:154 otherwise the patch would be "true" or "false"
18:27:05.578 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=154, Suspiciousness=0.08084520834544433]
18:27:05.578 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=159, Suspiciousness=0.08084520834544433]
18:27:05.578 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:05,578 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:05.580 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:05.585 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.614 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.614 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:159.
18:27:05.614 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=159, Suspiciousness=0.08084520834544433]
18:27:05.614 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=720, Suspiciousness=0.08084520834544433]
18:27:05.615 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:05,615 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:05.617 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:05.621 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.650 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.651 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:720.
18:27:05.651 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=720, Suspiciousness=0.08084520834544433]
18:27:05.651 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=721, Suspiciousness=0.08084520834544433]
18:27:05.651 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:05,651 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:05.653 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:05.658 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.687 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.687 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:721.
18:27:05.687 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=721, Suspiciousness=0.08084520834544433]
18:27:05.687 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=722, Suspiciousness=0.08084520834544433]
18:27:05.687 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:05,687 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:05.689 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:05.694 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.724 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.724 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:722.
18:27:05.724 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=722, Suspiciousness=0.08084520834544433]
18:27:05.724 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=725, Suspiciousness=0.08084520834544433]
18:27:05.724 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:05,724 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:05.726 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:05.731 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.760 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.760 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:725.
18:27:05.760 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=725, Suspiciousness=0.08084520834544433]
18:27:05.760 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=726, Suspiciousness=0.08084520834544433]
18:27:05.760 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:05,760 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:05.762 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:05.767 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.796 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.796 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:05,803 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:05,803 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:05,882 DEBUG spoon.support.StandardEnvironment - built in 79 ms
2015-02-28 18:27:05,882 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:05,882 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:05.883 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:05,883 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:05.886 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < nRowB ; row++) {
    for (int col = 0 ; col < nColB ; col++) {
        bp[row][col] = b.getEntry(permutation[row], col);
    }
} ##### Before:
{
    if ((b.getRowDimension()) != (getRowDimension())) {
        throw new java.lang.IllegalArgumentException("Incorrect row dimension");
    } 
    if (!(isSquare())) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("coefficient matrix is not square");
    } 
    if (isSingular()) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("Matrix is singular.");
    } 
    int nCol = getColumnDimension();
    int nColB = b.getColumnDimension();
    int nRowB = b.getRowDimension();
    double[][] bp = new double[nRowB][nColB];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int row = 0 ; row < nRowB ; row++) {
        for (int col = 0 ; col < nColB ; col++) {
            bp[row][col] = b.getEntry(permutation[row], col);
        }
    }
    for (int col = 0 ; col < nCol ; col++) {
        for (int i = col + 1 ; i < nCol ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    for (int col = nCol - 1 ; col >= 0 ; col--) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[col][j] /= lu[col][col];
        }
        for (int i = 0 ; i < col ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    org.apache.commons.math.linear.RealMatrixImpl outMat = new org.apache.commons.math.linear.RealMatrixImpl(bp);
    return outMat;
}
18:27:05.886 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < nRowB ; row++) {
    for (int col = 0 ; col < nColB ; col++) {
        bp[row][col] = b.getEntry(permutation[row], col);
    }
} ##### After:
{
    if ((b.getRowDimension()) != (getRowDimension())) {
        throw new java.lang.IllegalArgumentException("Incorrect row dimension");
    } 
    if (!(isSquare())) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("coefficient matrix is not square");
    } 
    if (isSingular()) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("Matrix is singular.");
    } 
    int nCol = getColumnDimension();
    int nColB = b.getColumnDimension();
    int nRowB = b.getRowDimension();
    double[][] bp = new double[nRowB][nColB];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int row = 0 ; row < nRowB ; row++) {
            for (int col = 0 ; col < nColB ; col++) {
                bp[row][col] = b.getEntry(permutation[row], col);
            }
        }
    
    for (int col = 0 ; col < nCol ; col++) {
        for (int i = col + 1 ; i < nCol ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    for (int col = nCol - 1 ; col >= 0 ; col--) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[col][j] /= lu[col][col];
        }
        for (int i = 0 ; i < col ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    org.apache.commons.math.linear.RealMatrixImpl outMat = new org.apache.commons.math.linear.RealMatrixImpl(bp);
    return outMat;
}
18:27:05.887 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:05.892 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.927 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.930 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:05.935 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:05.935 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:05.936 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:05.936 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:05.936 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:05.936 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:726
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:05.936 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:05.936 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:05.936 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:726 otherwise the patch would be "true" or "false"
18:27:05.936 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=726, Suspiciousness=0.08084520834544433]
18:27:05.937 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=727, Suspiciousness=0.08084520834544433]
18:27:05.937 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:05,937 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:05.939 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:05.944 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:05.973 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:05.973 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:05,980 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:05,980 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,047 DEBUG spoon.support.StandardEnvironment - built in 67 ms
2015-02-28 18:27:06,047 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:06,047 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:06.048 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:06,048 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:06.051 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < nColB ; col++) {
    bp[row][col] = b.getEntry(permutation[row], col);
} ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int col = 0 ; col < nColB ; col++) {
        bp[row][col] = b.getEntry(permutation[row], col);
    }
}
18:27:06.051 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < nColB ; col++) {
    bp[row][col] = b.getEntry(permutation[row], col);
} ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int col = 0 ; col < nColB ; col++) {
            bp[row][col] = b.getEntry(permutation[row], col);
        }
    
}
18:27:06.051 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:06.056 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:06.088 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:06.090 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:06.094 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:06.094 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:06.095 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:06.095 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:06.095 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:06.096 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:727
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:06.096 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:06.096 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:06.096 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:727 otherwise the patch would be "true" or "false"
18:27:06.096 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=727, Suspiciousness=0.08084520834544433]
18:27:06.096 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=728, Suspiciousness=0.08084520834544433]
18:27:06.096 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:06,096 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:06.098 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:06.103 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:06.130 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:06.130 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,137 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,138 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,205 DEBUG spoon.support.StandardEnvironment - built in 67 ms
2015-02-28 18:27:06,205 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:06,205 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:06.206 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:06,206 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:06.209 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### bp[row][col] = b.getEntry(permutation[row], col) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    bp[row][col] = b.getEntry(permutation[row], col);
}
18:27:06.209 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### bp[row][col] = b.getEntry(permutation[row], col) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        bp[row][col] = b.getEntry(permutation[row], col);
    
}
18:27:06.210 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:06.215 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:06.246 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:06.249 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:06.252 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:06.252 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:06.253 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:06.254 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:06.254 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:06.254 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:728
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:06.254 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:06.254 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:06.254 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:728 otherwise the patch would be "true" or "false"
18:27:06.254 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=728, Suspiciousness=0.08084520834544433]
18:27:06.254 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=727, Suspiciousness=0.08084520834544433]
18:27:06.254 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:06,254 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:06.257 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:06.261 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:06.288 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:06.288 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,296 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,296 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,363 DEBUG spoon.support.StandardEnvironment - built in 67 ms
2015-02-28 18:27:06,363 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:06,363 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:06.364 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:06,364 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:06.367 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < nColB ; col++) {
    bp[row][col] = b.getEntry(permutation[row], col);
} ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int col = 0 ; col < nColB ; col++) {
        bp[row][col] = b.getEntry(permutation[row], col);
    }
}
18:27:06.367 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < nColB ; col++) {
    bp[row][col] = b.getEntry(permutation[row], col);
} ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int col = 0 ; col < nColB ; col++) {
            bp[row][col] = b.getEntry(permutation[row], col);
        }
    
}
18:27:06.368 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:06.373 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:06.403 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:06.405 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:06.409 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:06.409 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:06.411 [Thread-167] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:06.411 [Thread-167] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:06.412 [Thread-167] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:06.412 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:727
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:06.412 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:06.412 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:06.412 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:727 otherwise the patch would be "true" or "false"
18:27:06.412 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=727, Suspiciousness=0.08084520834544433]
18:27:06.412 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=726, Suspiciousness=0.08084520834544433]
18:27:06.412 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:06,412 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:06.415 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:06.419 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:06.445 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:06.445 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,452 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,452 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,519 DEBUG spoon.support.StandardEnvironment - built in 67 ms
2015-02-28 18:27:06,519 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:06,519 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:06.520 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:06,520 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:06.523 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < nRowB ; row++) {
    for (int col = 0 ; col < nColB ; col++) {
        bp[row][col] = b.getEntry(permutation[row], col);
    }
} ##### Before:
{
    if ((b.getRowDimension()) != (getRowDimension())) {
        throw new java.lang.IllegalArgumentException("Incorrect row dimension");
    } 
    if (!(isSquare())) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("coefficient matrix is not square");
    } 
    if (isSingular()) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("Matrix is singular.");
    } 
    int nCol = getColumnDimension();
    int nColB = b.getColumnDimension();
    int nRowB = b.getRowDimension();
    double[][] bp = new double[nRowB][nColB];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int row = 0 ; row < nRowB ; row++) {
        for (int col = 0 ; col < nColB ; col++) {
            bp[row][col] = b.getEntry(permutation[row], col);
        }
    }
    for (int col = 0 ; col < nCol ; col++) {
        for (int i = col + 1 ; i < nCol ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    for (int col = nCol - 1 ; col >= 0 ; col--) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[col][j] /= lu[col][col];
        }
        for (int i = 0 ; i < col ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    org.apache.commons.math.linear.RealMatrixImpl outMat = new org.apache.commons.math.linear.RealMatrixImpl(bp);
    return outMat;
}
18:27:06.523 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < nRowB ; row++) {
    for (int col = 0 ; col < nColB ; col++) {
        bp[row][col] = b.getEntry(permutation[row], col);
    }
} ##### After:
{
    if ((b.getRowDimension()) != (getRowDimension())) {
        throw new java.lang.IllegalArgumentException("Incorrect row dimension");
    } 
    if (!(isSquare())) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("coefficient matrix is not square");
    } 
    if (isSingular()) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("Matrix is singular.");
    } 
    int nCol = getColumnDimension();
    int nColB = b.getColumnDimension();
    int nRowB = b.getRowDimension();
    double[][] bp = new double[nRowB][nColB];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int row = 0 ; row < nRowB ; row++) {
            for (int col = 0 ; col < nColB ; col++) {
                bp[row][col] = b.getEntry(permutation[row], col);
            }
        }
    
    for (int col = 0 ; col < nCol ; col++) {
        for (int i = col + 1 ; i < nCol ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    for (int col = nCol - 1 ; col >= 0 ; col--) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[col][j] /= lu[col][col];
        }
        for (int i = 0 ; i < col ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    org.apache.commons.math.linear.RealMatrixImpl outMat = new org.apache.commons.math.linear.RealMatrixImpl(bp);
    return outMat;
}
18:27:06.524 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:06.529 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:06.558 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:06.561 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:06.565 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:06.565 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:06.566 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:06.567 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:06.567 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:06.567 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:726
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:06.567 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:06.567 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:06.568 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:726 otherwise the patch would be "true" or "false"
18:27:06.568 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=726, Suspiciousness=0.08084520834544433]
18:27:06.568 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=733, Suspiciousness=0.08084520834544433]
18:27:06.568 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:06,568 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:06.570 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:06.575 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:06.600 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:06.601 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,608 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,608 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,675 DEBUG spoon.support.StandardEnvironment - built in 67 ms
2015-02-28 18:27:06,675 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:06,675 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:06.675 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:06,676 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:06.679 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < nCol ; col++) {
    for (int i = col + 1 ; i < nCol ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
} ##### Before:
{
    if ((b.getRowDimension()) != (getRowDimension())) {
        throw new java.lang.IllegalArgumentException("Incorrect row dimension");
    } 
    if (!(isSquare())) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("coefficient matrix is not square");
    } 
    if (isSingular()) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("Matrix is singular.");
    } 
    int nCol = getColumnDimension();
    int nColB = b.getColumnDimension();
    int nRowB = b.getRowDimension();
    double[][] bp = new double[nRowB][nColB];
    for (int row = 0 ; row < nRowB ; row++) {
        for (int col = 0 ; col < nColB ; col++) {
            bp[row][col] = b.getEntry(permutation[row], col);
        }
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int col = 0 ; col < nCol ; col++) {
        for (int i = col + 1 ; i < nCol ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    for (int col = nCol - 1 ; col >= 0 ; col--) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[col][j] /= lu[col][col];
        }
        for (int i = 0 ; i < col ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    org.apache.commons.math.linear.RealMatrixImpl outMat = new org.apache.commons.math.linear.RealMatrixImpl(bp);
    return outMat;
}
18:27:06.679 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < nCol ; col++) {
    for (int i = col + 1 ; i < nCol ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
} ##### After:
{
    if ((b.getRowDimension()) != (getRowDimension())) {
        throw new java.lang.IllegalArgumentException("Incorrect row dimension");
    } 
    if (!(isSquare())) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("coefficient matrix is not square");
    } 
    if (isSingular()) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("Matrix is singular.");
    } 
    int nCol = getColumnDimension();
    int nColB = b.getColumnDimension();
    int nRowB = b.getRowDimension();
    double[][] bp = new double[nRowB][nColB];
    for (int row = 0 ; row < nRowB ; row++) {
        for (int col = 0 ; col < nColB ; col++) {
            bp[row][col] = b.getEntry(permutation[row], col);
        }
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int col = 0 ; col < nCol ; col++) {
            for (int i = col + 1 ; i < nCol ; i++) {
                for (int j = 0 ; j < nColB ; j++) {
                    bp[i][j] -= (bp[col][j]) * (lu[i][col]);
                }
            }
        }
    
    for (int col = nCol - 1 ; col >= 0 ; col--) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[col][j] /= lu[col][col];
        }
        for (int i = 0 ; i < col ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    org.apache.commons.math.linear.RealMatrixImpl outMat = new org.apache.commons.math.linear.RealMatrixImpl(bp);
    return outMat;
}
18:27:06.680 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:06.685 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:06.715 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:06.718 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:06.722 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:06.722 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:06.723 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:06.723 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:06.723 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:06.724 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:733
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:06.724 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:06.724 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:06.724 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:733 otherwise the patch would be "true" or "false"
18:27:06.724 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=733, Suspiciousness=0.08084520834544433]
18:27:06.724 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=734, Suspiciousness=0.08084520834544433]
18:27:06.724 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:06,724 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:06.727 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:06.731 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:06.756 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:06.757 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,764 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:06,764 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,174 DEBUG spoon.support.StandardEnvironment - built in 410 ms
2015-02-28 18:27:07,174 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:07,174 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:07.175 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:07,175 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:07.178 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = col + 1 ; i < nCol ; i++) {
    for (int j = 0 ; j < nColB ; j++) {
        bp[i][j] -= (bp[col][j]) * (lu[i][col]);
    }
} ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = col + 1 ; i < nCol ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
}
18:27:07.179 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = col + 1 ; i < nCol ; i++) {
    for (int j = 0 ; j < nColB ; j++) {
        bp[i][j] -= (bp[col][j]) * (lu[i][col]);
    }
} ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = col + 1 ; i < nCol ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    
}
18:27:07.179 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:07.184 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:07.213 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:07.216 [Thread-172] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:07.220 [Thread-172] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:07.221 [Thread-172] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:07.222 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:07.222 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:07.222 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:07.222 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:734
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:07.222 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:07.222 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:07.222 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:734 otherwise the patch would be "true" or "false"
18:27:07.223 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=734, Suspiciousness=0.08084520834544433]
18:27:07.223 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=733, Suspiciousness=0.08084520834544433]
18:27:07.223 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:07,223 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:07.225 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:07.230 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:07.255 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:07.255 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,262 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,262 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,330 DEBUG spoon.support.StandardEnvironment - built in 68 ms
2015-02-28 18:27:07,330 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:07,330 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:07.331 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:07,331 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:07.334 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < nCol ; col++) {
    for (int i = col + 1 ; i < nCol ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
} ##### Before:
{
    if ((b.getRowDimension()) != (getRowDimension())) {
        throw new java.lang.IllegalArgumentException("Incorrect row dimension");
    } 
    if (!(isSquare())) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("coefficient matrix is not square");
    } 
    if (isSingular()) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("Matrix is singular.");
    } 
    int nCol = getColumnDimension();
    int nColB = b.getColumnDimension();
    int nRowB = b.getRowDimension();
    double[][] bp = new double[nRowB][nColB];
    for (int row = 0 ; row < nRowB ; row++) {
        for (int col = 0 ; col < nColB ; col++) {
            bp[row][col] = b.getEntry(permutation[row], col);
        }
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int col = 0 ; col < nCol ; col++) {
        for (int i = col + 1 ; i < nCol ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    for (int col = nCol - 1 ; col >= 0 ; col--) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[col][j] /= lu[col][col];
        }
        for (int i = 0 ; i < col ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    org.apache.commons.math.linear.RealMatrixImpl outMat = new org.apache.commons.math.linear.RealMatrixImpl(bp);
    return outMat;
}
18:27:07.335 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < nCol ; col++) {
    for (int i = col + 1 ; i < nCol ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
} ##### After:
{
    if ((b.getRowDimension()) != (getRowDimension())) {
        throw new java.lang.IllegalArgumentException("Incorrect row dimension");
    } 
    if (!(isSquare())) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("coefficient matrix is not square");
    } 
    if (isSingular()) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("Matrix is singular.");
    } 
    int nCol = getColumnDimension();
    int nColB = b.getColumnDimension();
    int nRowB = b.getRowDimension();
    double[][] bp = new double[nRowB][nColB];
    for (int row = 0 ; row < nRowB ; row++) {
        for (int col = 0 ; col < nColB ; col++) {
            bp[row][col] = b.getEntry(permutation[row], col);
        }
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int col = 0 ; col < nCol ; col++) {
            for (int i = col + 1 ; i < nCol ; i++) {
                for (int j = 0 ; j < nColB ; j++) {
                    bp[i][j] -= (bp[col][j]) * (lu[i][col]);
                }
            }
        }
    
    for (int col = nCol - 1 ; col >= 0 ; col--) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[col][j] /= lu[col][col];
        }
        for (int i = 0 ; i < col ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    org.apache.commons.math.linear.RealMatrixImpl outMat = new org.apache.commons.math.linear.RealMatrixImpl(bp);
    return outMat;
}
18:27:07.335 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:07.340 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:07.369 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:07.371 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:07.375 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:07.375 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:07.376 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:07.376 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:07.376 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:07.377 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:733
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:07.377 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:07.377 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:07.377 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:733 otherwise the patch would be "true" or "false"
18:27:07.377 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=733, Suspiciousness=0.08084520834544433]
18:27:07.377 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=742, Suspiciousness=0.08084520834544433]
18:27:07.377 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:07,377 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:07.380 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:07.384 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:07.408 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:07.408 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,415 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,416 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,482 DEBUG spoon.support.StandardEnvironment - built in 67 ms
2015-02-28 18:27:07,482 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:07,482 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:07.483 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:07,483 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:07.486 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = nCol - 1 ; col >= 0 ; col--) {
    for (int j = 0 ; j < nColB ; j++) {
        bp[col][j] /= lu[col][col];
    }
    for (int i = 0 ; i < col ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
} ##### Before:
{
    if ((b.getRowDimension()) != (getRowDimension())) {
        throw new java.lang.IllegalArgumentException("Incorrect row dimension");
    } 
    if (!(isSquare())) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("coefficient matrix is not square");
    } 
    if (isSingular()) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("Matrix is singular.");
    } 
    int nCol = getColumnDimension();
    int nColB = b.getColumnDimension();
    int nRowB = b.getRowDimension();
    double[][] bp = new double[nRowB][nColB];
    for (int row = 0 ; row < nRowB ; row++) {
        for (int col = 0 ; col < nColB ; col++) {
            bp[row][col] = b.getEntry(permutation[row], col);
        }
    }
    for (int col = 0 ; col < nCol ; col++) {
        for (int i = col + 1 ; i < nCol ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int col = nCol - 1 ; col >= 0 ; col--) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[col][j] /= lu[col][col];
        }
        for (int i = 0 ; i < col ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    org.apache.commons.math.linear.RealMatrixImpl outMat = new org.apache.commons.math.linear.RealMatrixImpl(bp);
    return outMat;
}
18:27:07.487 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = nCol - 1 ; col >= 0 ; col--) {
    for (int j = 0 ; j < nColB ; j++) {
        bp[col][j] /= lu[col][col];
    }
    for (int i = 0 ; i < col ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
} ##### After:
{
    if ((b.getRowDimension()) != (getRowDimension())) {
        throw new java.lang.IllegalArgumentException("Incorrect row dimension");
    } 
    if (!(isSquare())) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("coefficient matrix is not square");
    } 
    if (isSingular()) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("Matrix is singular.");
    } 
    int nCol = getColumnDimension();
    int nColB = b.getColumnDimension();
    int nRowB = b.getRowDimension();
    double[][] bp = new double[nRowB][nColB];
    for (int row = 0 ; row < nRowB ; row++) {
        for (int col = 0 ; col < nColB ; col++) {
            bp[row][col] = b.getEntry(permutation[row], col);
        }
    }
    for (int col = 0 ; col < nCol ; col++) {
        for (int i = col + 1 ; i < nCol ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int col = nCol - 1 ; col >= 0 ; col--) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[col][j] /= lu[col][col];
            }
            for (int i = 0 ; i < col ; i++) {
                for (int j = 0 ; j < nColB ; j++) {
                    bp[i][j] -= (bp[col][j]) * (lu[i][col]);
                }
            }
        }
    
    org.apache.commons.math.linear.RealMatrixImpl outMat = new org.apache.commons.math.linear.RealMatrixImpl(bp);
    return outMat;
}
18:27:07.487 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:07.492 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:07.520 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:07.522 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:07.526 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:07.526 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:07.527 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:07.538 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:07.538 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[maximal number of evaluations exceeded (100)]
org.apache.commons.math.estimation.EstimationException: maximal number of evaluations exceeded (100)
    at org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(AbstractEstimator.java:74)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:114)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:07.538 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:742
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:07.538 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:07.538 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): maximal number of evaluations exceeded (100)]
18:27:07.538 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:742 otherwise the patch would be "true" or "false"
18:27:07.538 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=742, Suspiciousness=0.08084520834544433]
18:27:07.538 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=743, Suspiciousness=0.08084520834544433]
18:27:07.538 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:07,538 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:07.541 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:07.545 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:07.569 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:07.569 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,576 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,576 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,643 DEBUG spoon.support.StandardEnvironment - built in 67 ms
2015-02-28 18:27:07,643 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:07,643 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:07.644 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:07,644 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:07.647 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < nColB ; j++) {
    bp[col][j] /= lu[col][col];
} ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int j = 0 ; j < nColB ; j++) {
        bp[col][j] /= lu[col][col];
    }
    for (int i = 0 ; i < col ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
}
18:27:07.648 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < nColB ; j++) {
    bp[col][j] /= lu[col][col];
} ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int j = 0 ; j < nColB ; j++) {
            bp[col][j] /= lu[col][col];
        }
    
    for (int i = 0 ; i < col ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
}
18:27:07.648 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:07.653 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:07.681 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:07.683 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:07.701 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:07.702 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[maximal number of evaluations exceeded (100)]
org.apache.commons.math.estimation.EstimationException: maximal number of evaluations exceeded (100)
    at org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(AbstractEstimator.java:74)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:114)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:07.703 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:07.704 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:07.704 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:07.704 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:743
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:07.704 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): maximal number of evaluations exceeded (100)]
18:27:07.704 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:07.704 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:743 otherwise the patch would be "true" or "false"
18:27:07.704 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=743, Suspiciousness=0.08084520834544433]
18:27:07.704 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=744, Suspiciousness=0.08084520834544433]
18:27:07.704 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:07,705 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:07.707 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:07.711 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:07.734 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:07.734 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,741 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,742 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,807 DEBUG spoon.support.StandardEnvironment - built in 66 ms
2015-02-28 18:27:07,808 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:07,808 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:07.808 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:07,809 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:07.811 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### bp[col][j] /= lu[col][col] ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    bp[col][j] /= lu[col][col];
}
18:27:07.812 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### bp[col][j] /= lu[col][col] ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        bp[col][j] /= lu[col][col];
    
}
18:27:07.812 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:07.817 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:07.844 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:07.846 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:07.850 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:07.850 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:07.851 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:07.865 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:07.865 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[maximal number of evaluations exceeded (100)]
org.apache.commons.math.estimation.EstimationException: maximal number of evaluations exceeded (100)
    at org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(AbstractEstimator.java:74)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:114)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:07.865 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:744
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:07.865 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:07.866 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): maximal number of evaluations exceeded (100)]
18:27:07.866 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:744 otherwise the patch would be "true" or "false"
18:27:07.866 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=744, Suspiciousness=0.08084520834544433]
18:27:07.866 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=743, Suspiciousness=0.08084520834544433]
18:27:07.866 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:07,866 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:07.868 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:07.872 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:07.895 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:07.895 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,902 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,902 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:07,968 DEBUG spoon.support.StandardEnvironment - built in 66 ms
2015-02-28 18:27:07,968 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:07,968 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:07.969 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:07,969 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:07.972 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < nColB ; j++) {
    bp[col][j] /= lu[col][col];
} ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int j = 0 ; j < nColB ; j++) {
        bp[col][j] /= lu[col][col];
    }
    for (int i = 0 ; i < col ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
}
18:27:07.972 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < nColB ; j++) {
    bp[col][j] /= lu[col][col];
} ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int j = 0 ; j < nColB ; j++) {
            bp[col][j] /= lu[col][col];
        }
    
    for (int i = 0 ; i < col ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
}
18:27:07.973 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:07.977 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.004 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.007 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:08.023 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:08.023 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[maximal number of evaluations exceeded (100)]
org.apache.commons.math.estimation.EstimationException: maximal number of evaluations exceeded (100)
    at org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(AbstractEstimator.java:74)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:114)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:08.025 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:08.025 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:08.026 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:08.026 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:743
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:08.026 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): maximal number of evaluations exceeded (100)]
18:27:08.026 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:08.026 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:743 otherwise the patch would be "true" or "false"
18:27:08.026 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=743, Suspiciousness=0.08084520834544433]
18:27:08.026 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=746, Suspiciousness=0.08084520834544433]
18:27:08.026 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,026 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:08.029 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.033 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.056 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.056 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,063 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,063 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,129 DEBUG spoon.support.StandardEnvironment - built in 66 ms
2015-02-28 18:27:08,130 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:08,130 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:08.130 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,130 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:08.133 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < col ; i++) {
    for (int j = 0 ; j < nColB ; j++) {
        bp[i][j] -= (bp[col][j]) * (lu[i][col]);
    }
} ##### Before:
{
    for (int j = 0 ; j < nColB ; j++) {
        bp[col][j] /= lu[col][col];
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < col ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
}
18:27:08.134 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < col ; i++) {
    for (int j = 0 ; j < nColB ; j++) {
        bp[i][j] -= (bp[col][j]) * (lu[i][col]);
    }
} ##### After:
{
    for (int j = 0 ; j < nColB ; j++) {
        bp[col][j] /= lu[col][col];
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < col ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    
}
18:27:08.134 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.139 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.165 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.168 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:08.171 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:08.172 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:08.172 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:08.173 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:08.173 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:08.173 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:746
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:08.173 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:08.173 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:08.173 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:746 otherwise the patch would be "true" or "false"
18:27:08.173 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=746, Suspiciousness=0.08084520834544433]
18:27:08.173 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=742, Suspiciousness=0.08084520834544433]
18:27:08.174 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,174 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:08.176 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.180 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.203 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.203 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,210 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,210 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,285 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-02-28 18:27:08,285 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:08,285 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:08.286 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,286 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:08.289 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = nCol - 1 ; col >= 0 ; col--) {
    for (int j = 0 ; j < nColB ; j++) {
        bp[col][j] /= lu[col][col];
    }
    for (int i = 0 ; i < col ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
} ##### Before:
{
    if ((b.getRowDimension()) != (getRowDimension())) {
        throw new java.lang.IllegalArgumentException("Incorrect row dimension");
    } 
    if (!(isSquare())) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("coefficient matrix is not square");
    } 
    if (isSingular()) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("Matrix is singular.");
    } 
    int nCol = getColumnDimension();
    int nColB = b.getColumnDimension();
    int nRowB = b.getRowDimension();
    double[][] bp = new double[nRowB][nColB];
    for (int row = 0 ; row < nRowB ; row++) {
        for (int col = 0 ; col < nColB ; col++) {
            bp[row][col] = b.getEntry(permutation[row], col);
        }
    }
    for (int col = 0 ; col < nCol ; col++) {
        for (int i = col + 1 ; i < nCol ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int col = nCol - 1 ; col >= 0 ; col--) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[col][j] /= lu[col][col];
        }
        for (int i = 0 ; i < col ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    org.apache.commons.math.linear.RealMatrixImpl outMat = new org.apache.commons.math.linear.RealMatrixImpl(bp);
    return outMat;
}
18:27:08.289 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = nCol - 1 ; col >= 0 ; col--) {
    for (int j = 0 ; j < nColB ; j++) {
        bp[col][j] /= lu[col][col];
    }
    for (int i = 0 ; i < col ; i++) {
        for (int j = 0 ; j < nColB ; j++) {
            bp[i][j] -= (bp[col][j]) * (lu[i][col]);
        }
    }
} ##### After:
{
    if ((b.getRowDimension()) != (getRowDimension())) {
        throw new java.lang.IllegalArgumentException("Incorrect row dimension");
    } 
    if (!(isSquare())) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("coefficient matrix is not square");
    } 
    if (isSingular()) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("Matrix is singular.");
    } 
    int nCol = getColumnDimension();
    int nColB = b.getColumnDimension();
    int nRowB = b.getRowDimension();
    double[][] bp = new double[nRowB][nColB];
    for (int row = 0 ; row < nRowB ; row++) {
        for (int col = 0 ; col < nColB ; col++) {
            bp[row][col] = b.getEntry(permutation[row], col);
        }
    }
    for (int col = 0 ; col < nCol ; col++) {
        for (int i = col + 1 ; i < nCol ; i++) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[i][j] -= (bp[col][j]) * (lu[i][col]);
            }
        }
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nColB",nColB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bp",bp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCol",nCol);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRowB",nRowB);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int col = nCol - 1 ; col >= 0 ; col--) {
            for (int j = 0 ; j < nColB ; j++) {
                bp[col][j] /= lu[col][col];
            }
            for (int i = 0 ; i < col ; i++) {
                for (int j = 0 ; j < nColB ; j++) {
                    bp[i][j] -= (bp[col][j]) * (lu[i][col]);
                }
            }
        }
    
    org.apache.commons.math.linear.RealMatrixImpl outMat = new org.apache.commons.math.linear.RealMatrixImpl(bp);
    return outMat;
}
18:27:08.290 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.294 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.322 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.325 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:08.338 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:08.339 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[maximal number of evaluations exceeded (100)]
org.apache.commons.math.estimation.EstimationException: maximal number of evaluations exceeded (100)
    at org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(AbstractEstimator.java:74)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:114)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:08.340 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:08.340 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:08.340 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:08.340 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:742
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:08.340 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): maximal number of evaluations exceeded (100)]
18:27:08.340 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:08.340 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:742 otherwise the patch would be "true" or "false"
18:27:08.340 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=742, Suspiciousness=0.08084520834544433]
18:27:08.340 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=753, Suspiciousness=0.08084520834544433]
18:27:08.341 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,341 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:08.343 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.347 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.369 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.369 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:753.
18:27:08.369 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=753, Suspiciousness=0.08084520834544433]
18:27:08.369 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=754, Suspiciousness=0.08084520834544433]
18:27:08.369 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,369 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:08.371 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.376 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.398 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.398 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:754.
18:27:08.398 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=754, Suspiciousness=0.08084520834544433]
18:27:08.398 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=147, Suspiciousness=0.07856742013183861]
18:27:08.398 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,398 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:08.400 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.404 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.425 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.426 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,433 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,433 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,498 DEBUG spoon.support.StandardEnvironment - built in 65 ms
2015-02-28 18:27:08,499 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:08,499 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:08.499 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,500 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:08.502 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (((getColumnDimension()) != (m.getColumnDimension())) || ((getRowDimension()) != (m.getRowDimension()))) {
    throw new java.lang.IllegalArgumentException("matrix dimension mismatch");
} 
18:27:08.503 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.507 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.532 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.534 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:08.537 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:08.538 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[matrix dimension mismatch]
java.lang.IllegalArgumentException: matrix dimension mismatch
    at org.apache.commons.math.linear.RealMatrixImpl.add(RealMatrixImpl.java:148)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:101)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:08.538 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:08.539 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:08.539 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:08.539 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:147
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:08.539 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): matrix dimension mismatch]
18:27:08.539 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:08.539 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:147 otherwise the patch would be "true" or "false"
18:27:08.539 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=147, Suspiciousness=0.07856742013183861]
18:27:08.539 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=591, Suspiciousness=0.07647191129018725]
18:27:08.540 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,540 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:08.542 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.546 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.566 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.567 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:591.
18:27:08.567 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=591, Suspiciousness=0.07647191129018725]
18:27:08.567 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=847, Suspiciousness=0.07453559924999299]
18:27:08.567 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,567 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:08.569 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.573 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.594 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.594 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:847.
18:27:08.594 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=847, Suspiciousness=0.07453559924999299]
18:27:08.594 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=710, Suspiciousness=0.07273929674533079]
18:27:08.594 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,594 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:08.596 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.600 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.621 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.621 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,628 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,628 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,694 DEBUG spoon.support.StandardEnvironment - built in 66 ms
2015-02-28 18:27:08,694 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:08,694 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:08.695 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,695 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:08.697 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((b.getRowDimension()) != (getRowDimension())) {
    throw new java.lang.IllegalArgumentException("Incorrect row dimension");
} 
18:27:08.698 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.702 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.726 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.729 [Thread-190] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:08.732 [Thread-190] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:08.732 [Thread-190] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:08.733 [Thread-191] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:08.733 [Thread-191] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:08.733 [Thread-191] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[Incorrect row dimension]
java.lang.IllegalArgumentException: Incorrect row dimension
    at org.apache.commons.math.linear.RealMatrixImpl.solve(RealMatrixImpl.java:693)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:106)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:08.734 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:710
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:08.734 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:08.734 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): Incorrect row dimension]
18:27:08.734 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:710 otherwise the patch would be "true" or "false"
18:27:08.734 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=710, Suspiciousness=0.07273929674533079]
18:27:08.734 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=713, Suspiciousness=0.07273929674533079]
18:27:08.734 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,734 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:08.736 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.740 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.760 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.760 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,767 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,768 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,832 DEBUG spoon.support.StandardEnvironment - built in 65 ms
2015-02-28 18:27:08,832 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:08,833 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:08.833 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,833 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:08.836 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (!(isSquare())) {
    throw new org.apache.commons.math.linear.InvalidMatrixException("coefficient matrix is not square");
} 
18:27:08.837 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.841 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.864 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.867 [Thread-192] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:08.871 [Thread-192] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:08.872 [Thread-192] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:08.873 [Thread-193] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:08.874 [Thread-193] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:08.874 [Thread-193] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:08.874 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:713
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:08.874 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:08.874 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:08.874 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:713 otherwise the patch would be "true" or "false"
18:27:08.874 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=713, Suspiciousness=0.07273929674533079]
18:27:08.874 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=716, Suspiciousness=0.07273929674533079]
18:27:08.875 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,875 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:08.877 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.880 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:08.900 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:08.900 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,907 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,908 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:08,972 DEBUG spoon.support.StandardEnvironment - built in 64 ms
2015-02-28 18:27:08,973 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:08,973 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:08.973 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:08,973 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:08.976 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (isSingular()) {
    throw new org.apache.commons.math.linear.InvalidMatrixException("Matrix is singular.");
} 
18:27:08.977 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:08.980 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.004 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.006 [Thread-194] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.010 [Thread-194] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:09.010 [Thread-194] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:09.011 [Thread-195] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.012 [Thread-195] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:09.012 [Thread-195] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:09.013 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:716
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:09.013 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:09.013 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:09.013 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:716 otherwise the patch would be "true" or "false"
18:27:09.013 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=716, Suspiciousness=0.07273929674533079]
18:27:09.013 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=588, Suspiciousness=0.06950480468569159]
18:27:09.013 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,013 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:09.015 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.019 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.039 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.039 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,046 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,046 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,111 DEBUG spoon.support.StandardEnvironment - built in 65 ms
2015-02-28 18:27:09,111 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:09,111 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:09.112 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,112 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:09.113 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((lu) == null) {
    try {
        luDecompose();
        return false;
    } catch (org.apache.commons.math.linear.InvalidMatrixException ex) {
        return true;
    }
} else {
    return false;
}
18:27:09.114 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.118 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.142 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.144 [Thread-196] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.148 [Thread-196] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:09.148 [Thread-196] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:09.149 [Thread-197] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.149 [Thread-197] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:09.150 [Thread-197] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.linear.RealMatrixImpl.solve(RealMatrixImpl.java:708)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:106)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:09.150 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:588
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:09.150 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:09.150 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:09.150 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:588 otherwise the patch would be "true" or "false"
18:27:09.150 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=588, Suspiciousness=0.06950480468569159]
18:27:09.150 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=590, Suspiciousness=0.06950480468569159]
18:27:09.150 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,150 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:09.152 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.156 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.176 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.176 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,183 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,183 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,247 DEBUG spoon.support.StandardEnvironment - built in 64 ms
2015-02-28 18:27:09,247 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:09,248 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:09.248 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,248 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:09.249 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### luDecompose() ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    luDecompose();
    return false;
}
18:27:09.249 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### luDecompose() ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        luDecompose();
    
    return false;
}
18:27:09.251 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.255 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.278 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.282 [Thread-198] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.285 [Thread-198] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:09.285 [Thread-198] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.linear.RealMatrixImpl.solve(RealMatrixImpl.java:708)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:106)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:09.286 [Thread-199] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.287 [Thread-199] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:09.287 [Thread-199] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:09.287 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:590
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:09.287 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:09.287 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:09.287 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:590 otherwise the patch would be "true" or "false"
18:27:09.287 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=590, Suspiciousness=0.06950480468569159]
18:27:09.287 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=798, Suspiciousness=0.06950480468569159]
18:27:09.288 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,288 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:09.290 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.293 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.314 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.314 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,321 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,321 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,386 DEBUG spoon.support.StandardEnvironment - built in 64 ms
2015-02-28 18:27:09,386 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:09,386 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:09.386 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,386 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:09.389 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sum = lu[row][col] ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    sum = lu[row][col];
    for (int i = 0 ; i < row ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
}
18:27:09.389 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sum = lu[row][col] ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        sum = lu[row][col];
    
    for (int i = 0 ; i < row ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
}
18:27:09.389 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.393 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.416 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.419 [Thread-200] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.423 [Thread-200] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:09.423 [Thread-200] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:09.424 [Thread-201] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.426 [Thread-201] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:09.426 [Thread-201] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:09.426 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:798
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:09.426 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:09.426 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:09.426 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:798 otherwise the patch would be "true" or "false"
18:27:09.426 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=798, Suspiciousness=0.06950480468569159]
18:27:09.426 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=799, Suspiciousness=0.06950480468569159]
18:27:09.426 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,426 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:09.428 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.432 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.464 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.465 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,472 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,472 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,537 DEBUG spoon.support.StandardEnvironment - built in 65 ms
2015-02-28 18:27:09,537 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:09,537 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:09.538 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,538 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:09.540 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < row ; i++) {
    sum -= (lu[row][i]) * (lu[i][col]);
} ##### Before:
{
    sum = lu[row][col];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < row ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
}
18:27:09.540 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < row ; i++) {
    sum -= (lu[row][i]) * (lu[i][col]);
} ##### After:
{
    sum = lu[row][col];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
    
    lu[row][col] = sum;
}
18:27:09.541 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.545 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.568 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.571 [Thread-202] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.575 [Thread-202] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:09.575 [Thread-202] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:09.576 [Thread-203] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.577 [Thread-203] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:09.577 [Thread-203] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:09.577 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:799
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:09.577 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:09.577 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:09.577 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:799 otherwise the patch would be "true" or "false"
18:27:09.577 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=799, Suspiciousness=0.06950480468569159]
18:27:09.577 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=802, Suspiciousness=0.06950480468569159]
18:27:09.577 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,577 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:09.580 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.583 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.603 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.603 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,610 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,610 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,675 DEBUG spoon.support.StandardEnvironment - built in 65 ms
2015-02-28 18:27:09,675 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:09,675 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:09.676 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,676 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:09.678 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lu[row][col] = sum ##### Before:
{
    sum = lu[row][col];
    for (int i = 0 ; i < row ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lu[row][col] = sum;
}
18:27:09.679 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lu[row][col] = sum ##### After:
{
    sum = lu[row][col];
    for (int i = 0 ; i < row ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lu[row][col] = sum;
    
}
18:27:09.679 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.683 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.706 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.709 [Thread-204] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.713 [Thread-204] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:09.713 [Thread-204] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:09.714 [Thread-205] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.714 [Thread-205] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:09.714 [Thread-205] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:09.715 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:802
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:09.715 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:09.715 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:09.715 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:802 otherwise the patch would be "true" or "false"
18:27:09.715 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=802, Suspiciousness=0.06950480468569159]
18:27:09.715 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=797, Suspiciousness=0.06950480468569159]
18:27:09.715 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,715 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:09.717 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.721 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.740 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.740 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,747 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,747 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,811 DEBUG spoon.support.StandardEnvironment - built in 64 ms
2015-02-28 18:27:09,812 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:09,812 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:09.812 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,812 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:09.815 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < col ; row++) {
    sum = lu[row][col];
    for (int i = 0 ; i < row ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
} ##### Before:
{
    double sum = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int row = 0 ; row < col ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
    }
    int max = col;
    double largest = 0.0;
    for (int row = col ; row < nRows ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
        if ((java.lang.Math.abs(sum)) > largest) {
            largest = java.lang.Math.abs(sum);
            max = row;
        } 
    }
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    for (int row = col + 1 ; row < nRows ; row++) {
        lu[row][col] /= lu[col][col];
    }
}
18:27:09.815 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < col ; row++) {
    sum = lu[row][col];
    for (int i = 0 ; i < row ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
} ##### After:
{
    double sum = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int row = 0 ; row < col ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < row ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
        }
    
    int max = col;
    double largest = 0.0;
    for (int row = col ; row < nRows ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
        if ((java.lang.Math.abs(sum)) > largest) {
            largest = java.lang.Math.abs(sum);
            max = row;
        } 
    }
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    for (int row = col + 1 ; row < nRows ; row++) {
        lu[row][col] /= lu[col][col];
    }
}
18:27:09.815 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.819 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.842 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.845 [Thread-206] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.849 [Thread-206] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:09.849 [Thread-206] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:09.850 [Thread-207] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.850 [Thread-207] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:09.851 [Thread-207] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:09.851 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:797
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:09.851 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:09.851 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:09.851 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:797 otherwise the patch would be "true" or "false"
18:27:09.851 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=797, Suspiciousness=0.06950480468569159]
18:27:09.851 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=811, Suspiciousness=0.06950480468569159]
18:27:09.851 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,851 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:09.853 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.857 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.876 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.876 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,883 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,884 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:09,947 DEBUG spoon.support.StandardEnvironment - built in 63 ms
2015-02-28 18:27:09,948 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:09,948 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:09.948 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,948 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:09.951 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sum -= (lu[row][i]) * (lu[i][col]) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    sum -= (lu[row][i]) * (lu[i][col]);
}
18:27:09.951 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sum -= (lu[row][i]) * (lu[i][col]) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        sum -= (lu[row][i]) * (lu[i][col]);
    
}
18:27:09.951 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.955 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:09.978 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:09.980 [Thread-208] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.984 [Thread-208] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:09.984 [Thread-208] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:09.985 [Thread-209] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:09.986 [Thread-209] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:09.986 [Thread-209] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:09.986 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:811
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:09.986 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:09.986 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:09.986 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:811 otherwise the patch would be "true" or "false"
18:27:09.986 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=811, Suspiciousness=0.06950480468569159]
18:27:09.986 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=810, Suspiciousness=0.06950480468569159]
18:27:09.987 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:09,987 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:09.989 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:09.992 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.011 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.011 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,018 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,019 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,082 DEBUG spoon.support.StandardEnvironment - built in 63 ms
2015-02-28 18:27:10,082 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:10,082 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:10.083 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,083 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:10.085 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < col ; i++) {
    sum -= (lu[row][i]) * (lu[i][col]);
} ##### Before:
{
    sum = lu[row][col];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < col ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
    if ((java.lang.Math.abs(sum)) > largest) {
        largest = java.lang.Math.abs(sum);
        max = row;
    } 
}
18:27:10.086 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < col ; i++) {
    sum -= (lu[row][i]) * (lu[i][col]);
} ##### After:
{
    sum = lu[row][col];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
    
    lu[row][col] = sum;
    if ((java.lang.Math.abs(sum)) > largest) {
        largest = java.lang.Math.abs(sum);
        max = row;
    } 
}
18:27:10.086 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:10.090 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.112 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.116 [Thread-210] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:10.121 [Thread-210] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:10.121 [Thread-210] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:10.122 [Thread-211] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:10.123 [Thread-211] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:10.123 [Thread-211] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:10.123 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:810
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:10.123 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:10.123 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:10.123 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:810 otherwise the patch would be "true" or "false"
18:27:10.123 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=810, Suspiciousness=0.06950480468569159]
18:27:10.124 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=844, Suspiciousness=0.06950480468569159]
18:27:10.124 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,124 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:10.126 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:10.130 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.148 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.148 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,155 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,156 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,219 DEBUG spoon.support.StandardEnvironment - built in 63 ms
2015-02-28 18:27:10,220 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:10,220 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:10.220 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,220 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:10.223 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lu[row][col] /= lu[col][col] ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lu[row][col] /= lu[col][col];
}
18:27:10.223 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lu[row][col] /= lu[col][col] ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lu[row][col] /= lu[col][col];
    
}
18:27:10.223 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:10.227 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.249 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.252 [Thread-212] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:10.256 [Thread-212] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:10.256 [Thread-212] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:10.276 [Thread-213] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:10.286 [Thread-213] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:10.286 [Thread-213] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[maximal number of evaluations exceeded (100)]
org.apache.commons.math.estimation.EstimationException: maximal number of evaluations exceeded (100)
    at org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(AbstractEstimator.java:74)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:114)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:10.286 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:844
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:10.286 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:10.286 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): maximal number of evaluations exceeded (100)]
18:27:10.287 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:844 otherwise the patch would be "true" or "false"
18:27:10.287 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=844, Suspiciousness=0.06950480468569159]
18:27:10.287 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=843, Suspiciousness=0.06950480468569159]
18:27:10.287 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,287 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:10.289 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:10.293 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.311 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.312 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,319 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,319 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,382 DEBUG spoon.support.StandardEnvironment - built in 63 ms
2015-02-28 18:27:10,382 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:10,382 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:10.383 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,383 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:10.385 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = col + 1 ; row < nRows ; row++) {
    lu[row][col] /= lu[col][col];
} ##### Before:
{
    double sum = 0;
    for (int row = 0 ; row < col ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
    }
    int max = col;
    double largest = 0.0;
    for (int row = col ; row < nRows ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
        if ((java.lang.Math.abs(sum)) > largest) {
            largest = java.lang.Math.abs(sum);
            max = row;
        } 
    }
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int row = col + 1 ; row < nRows ; row++) {
        lu[row][col] /= lu[col][col];
    }
}
18:27:10.386 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = col + 1 ; row < nRows ; row++) {
    lu[row][col] /= lu[col][col];
} ##### After:
{
    double sum = 0;
    for (int row = 0 ; row < col ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
    }
    int max = col;
    double largest = 0.0;
    for (int row = col ; row < nRows ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
        if ((java.lang.Math.abs(sum)) > largest) {
            largest = java.lang.Math.abs(sum);
            max = row;
        } 
    }
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int row = col + 1 ; row < nRows ; row++) {
            lu[row][col] /= lu[col][col];
        }
    
}
18:27:10.386 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:10.390 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.412 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.415 [Thread-214] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:10.430 [Thread-214] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:10.430 [Thread-214] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[maximal number of evaluations exceeded (100)]
org.apache.commons.math.estimation.EstimationException: maximal number of evaluations exceeded (100)
    at org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(AbstractEstimator.java:74)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:114)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:10.431 [Thread-215] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:10.432 [Thread-215] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:10.432 [Thread-215] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:10.432 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:843
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:10.432 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): maximal number of evaluations exceeded (100)]
18:27:10.432 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:10.432 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:843 otherwise the patch would be "true" or "false"
18:27:10.432 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=843, Suspiciousness=0.06950480468569159]
18:27:10.433 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=777, Suspiciousness=0.06804138174397717]
18:27:10.433 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,433 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:10.435 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:10.438 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.457 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.457 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:777.
18:27:10.457 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=777, Suspiciousness=0.06804138174397717]
18:27:10.457 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=778, Suspiciousness=0.06804138174397717]
18:27:10.457 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,457 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:10.459 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:10.463 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.481 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.481 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:778.
18:27:10.481 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=778, Suspiciousness=0.06804138174397717]
18:27:10.481 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=779, Suspiciousness=0.06804138174397717]
18:27:10.482 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,482 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:10.484 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:10.487 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.506 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.506 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,513 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,513 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,576 DEBUG spoon.support.StandardEnvironment - built in 63 ms
2015-02-28 18:27:10,576 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:10,576 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:10.577 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,577 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:10.579 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (nRows != nCols) {
    throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
} 
18:27:10.580 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:10.583 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.606 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.608 [Thread-216] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:10.613 [Thread-216] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:10.613 [Thread-216] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:10.614 [Thread-217] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:10.615 [Thread-217] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:10.615 [Thread-217] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:10.615 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:779
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:10.615 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:10.615 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:10.615 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:779 otherwise the patch would be "true" or "false"
18:27:10.615 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=779, Suspiciousness=0.06804138174397717]
18:27:10.615 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=782, Suspiciousness=0.06804138174397717]
18:27:10.615 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,616 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:10.617 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:10.621 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.640 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.640 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,647 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,647 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,711 DEBUG spoon.support.StandardEnvironment - built in 64 ms
2015-02-28 18:27:10,712 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:10,712 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:10.712 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,712 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:10.715 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lu = getData() ##### Before:
{
    int nRows = getRowDimension();
    int nCols = getColumnDimension();
    if (nRows != nCols) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lu = getData();
    permutation = new int[nRows];
    for (int row = 0 ; row < nRows ; row++) {
        permutation[row] = row;
    }
    parity = 1;
    for (int col = 0 ; col < nCols ; col++) {
        double sum = 0;
        for (int row = 0 ; row < col ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < row ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
        }
        int max = col;
        double largest = 0.0;
        for (int row = col ; row < nRows ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < col ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
            if ((java.lang.Math.abs(sum)) > largest) {
                largest = java.lang.Math.abs(sum);
                max = row;
            } 
        }
        if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
            lu = null;
            throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
        } 
        if (max != col) {
            double tmp = 0;
            for (int i = 0 ; i < nCols ; i++) {
                tmp = lu[max][i];
                lu[max][i] = lu[col][i];
                lu[col][i] = tmp;
            }
            int temp = permutation[max];
            permutation[max] = permutation[col];
            permutation[col] = temp;
            parity = -(parity);
        } 
        for (int row = col + 1 ; row < nRows ; row++) {
            lu[row][col] /= lu[col][col];
        }
    }
}
18:27:10.715 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lu = getData() ##### After:
{
    int nRows = getRowDimension();
    int nCols = getColumnDimension();
    if (nRows != nCols) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lu = getData();
    
    permutation = new int[nRows];
    for (int row = 0 ; row < nRows ; row++) {
        permutation[row] = row;
    }
    parity = 1;
    for (int col = 0 ; col < nCols ; col++) {
        double sum = 0;
        for (int row = 0 ; row < col ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < row ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
        }
        int max = col;
        double largest = 0.0;
        for (int row = col ; row < nRows ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < col ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
            if ((java.lang.Math.abs(sum)) > largest) {
                largest = java.lang.Math.abs(sum);
                max = row;
            } 
        }
        if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
            lu = null;
            throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
        } 
        if (max != col) {
            double tmp = 0;
            for (int i = 0 ; i < nCols ; i++) {
                tmp = lu[max][i];
                lu[max][i] = lu[col][i];
                lu[col][i] = tmp;
            }
            int temp = permutation[max];
            permutation[max] = permutation[col];
            permutation[col] = temp;
            parity = -(parity);
        } 
        for (int row = col + 1 ; row < nRows ; row++) {
            lu[row][col] /= lu[col][col];
        }
    }
}
18:27:10.715 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:10.719 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.756 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.760 [Thread-218] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:10.763 [Thread-218] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:10.764 [Thread-218] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.linear.RealMatrixImpl.luDecompose(RealMatrixImpl.java:776)
    at org.apache.commons.math.linear.RealMatrixImpl.isSingular(RealMatrixImpl.java:559)
    at org.apache.commons.math.linear.RealMatrixImpl.solve(RealMatrixImpl.java:685)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:106)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:10.765 [Thread-219] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:10.765 [Thread-219] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:10.765 [Thread-219] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:10.765 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:782
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:10.765 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:10.765 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:10.765 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:782 otherwise the patch would be "true" or "false"
18:27:10.765 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=782, Suspiciousness=0.06804138174397717]
18:27:10.765 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=785, Suspiciousness=0.06804138174397717]
18:27:10.766 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,766 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:10.768 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:10.771 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.790 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.790 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,797 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,797 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,861 DEBUG spoon.support.StandardEnvironment - built in 64 ms
2015-02-28 18:27:10,861 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:10,861 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:10.862 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,862 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:10.864 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### permutation = new int[nRows] ##### Before:
{
    int nRows = getRowDimension();
    int nCols = getColumnDimension();
    if (nRows != nCols) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
    } 
    lu = getData();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    permutation = new int[nRows];
    for (int row = 0 ; row < nRows ; row++) {
        permutation[row] = row;
    }
    parity = 1;
    for (int col = 0 ; col < nCols ; col++) {
        double sum = 0;
        for (int row = 0 ; row < col ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < row ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
        }
        int max = col;
        double largest = 0.0;
        for (int row = col ; row < nRows ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < col ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
            if ((java.lang.Math.abs(sum)) > largest) {
                largest = java.lang.Math.abs(sum);
                max = row;
            } 
        }
        if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
            lu = null;
            throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
        } 
        if (max != col) {
            double tmp = 0;
            for (int i = 0 ; i < nCols ; i++) {
                tmp = lu[max][i];
                lu[max][i] = lu[col][i];
                lu[col][i] = tmp;
            }
            int temp = permutation[max];
            permutation[max] = permutation[col];
            permutation[col] = temp;
            parity = -(parity);
        } 
        for (int row = col + 1 ; row < nRows ; row++) {
            lu[row][col] /= lu[col][col];
        }
    }
}
18:27:10.864 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### permutation = new int[nRows] ##### After:
{
    int nRows = getRowDimension();
    int nCols = getColumnDimension();
    if (nRows != nCols) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
    } 
    lu = getData();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        permutation = new int[nRows];
    
    for (int row = 0 ; row < nRows ; row++) {
        permutation[row] = row;
    }
    parity = 1;
    for (int col = 0 ; col < nCols ; col++) {
        double sum = 0;
        for (int row = 0 ; row < col ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < row ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
        }
        int max = col;
        double largest = 0.0;
        for (int row = col ; row < nRows ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < col ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
            if ((java.lang.Math.abs(sum)) > largest) {
                largest = java.lang.Math.abs(sum);
                max = row;
            } 
        }
        if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
            lu = null;
            throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
        } 
        if (max != col) {
            double tmp = 0;
            for (int i = 0 ; i < nCols ; i++) {
                tmp = lu[max][i];
                lu[max][i] = lu[col][i];
                lu[col][i] = tmp;
            }
            int temp = permutation[max];
            permutation[max] = permutation[col];
            permutation[col] = temp;
            parity = -(parity);
        } 
        for (int row = col + 1 ; row < nRows ; row++) {
            lu[row][col] /= lu[col][col];
        }
    }
}
18:27:10.865 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:10.869 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.891 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.894 [Thread-220] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:10.898 [Thread-220] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:10.898 [Thread-220] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:10.899 [Thread-221] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:10.900 [Thread-221] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:10.900 [Thread-221] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.linear.RealMatrixImpl.luDecompose(RealMatrixImpl.java:761)
    at org.apache.commons.math.linear.RealMatrixImpl.isSingular(RealMatrixImpl.java:559)
    at org.apache.commons.math.linear.RealMatrixImpl.solve(RealMatrixImpl.java:685)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:106)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:10.900 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:785
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:10.900 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:10.900 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:10.900 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:785 otherwise the patch would be "true" or "false"
18:27:10.900 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=785, Suspiciousness=0.06804138174397717]
18:27:10.900 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=786, Suspiciousness=0.06804138174397717]
18:27:10.900 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,900 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:10.902 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:10.906 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:10.925 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:10.925 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,932 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,932 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:10,995 DEBUG spoon.support.StandardEnvironment - built in 63 ms
2015-02-28 18:27:10,996 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:10,996 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:10.996 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:10,996 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:10.999 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < nRows ; row++) {
    permutation[row] = row;
} ##### Before:
{
    int nRows = getRowDimension();
    int nCols = getColumnDimension();
    if (nRows != nCols) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
    } 
    lu = getData();
    permutation = new int[nRows];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int row = 0 ; row < nRows ; row++) {
        permutation[row] = row;
    }
    parity = 1;
    for (int col = 0 ; col < nCols ; col++) {
        double sum = 0;
        for (int row = 0 ; row < col ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < row ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
        }
        int max = col;
        double largest = 0.0;
        for (int row = col ; row < nRows ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < col ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
            if ((java.lang.Math.abs(sum)) > largest) {
                largest = java.lang.Math.abs(sum);
                max = row;
            } 
        }
        if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
            lu = null;
            throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
        } 
        if (max != col) {
            double tmp = 0;
            for (int i = 0 ; i < nCols ; i++) {
                tmp = lu[max][i];
                lu[max][i] = lu[col][i];
                lu[col][i] = tmp;
            }
            int temp = permutation[max];
            permutation[max] = permutation[col];
            permutation[col] = temp;
            parity = -(parity);
        } 
        for (int row = col + 1 ; row < nRows ; row++) {
            lu[row][col] /= lu[col][col];
        }
    }
}
18:27:10.999 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < nRows ; row++) {
    permutation[row] = row;
} ##### After:
{
    int nRows = getRowDimension();
    int nCols = getColumnDimension();
    if (nRows != nCols) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
    } 
    lu = getData();
    permutation = new int[nRows];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int row = 0 ; row < nRows ; row++) {
            permutation[row] = row;
        }
    
    parity = 1;
    for (int col = 0 ; col < nCols ; col++) {
        double sum = 0;
        for (int row = 0 ; row < col ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < row ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
        }
        int max = col;
        double largest = 0.0;
        for (int row = col ; row < nRows ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < col ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
            if ((java.lang.Math.abs(sum)) > largest) {
                largest = java.lang.Math.abs(sum);
                max = row;
            } 
        }
        if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
            lu = null;
            throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
        } 
        if (max != col) {
            double tmp = 0;
            for (int i = 0 ; i < nCols ; i++) {
                tmp = lu[max][i];
                lu[max][i] = lu[col][i];
                lu[col][i] = tmp;
            }
            int temp = permutation[max];
            permutation[max] = permutation[col];
            permutation[col] = temp;
            parity = -(parity);
        } 
        for (int row = col + 1 ; row < nRows ; row++) {
            lu[row][col] /= lu[col][col];
        }
    }
}
18:27:11.000 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.003 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.026 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.029 [Thread-222] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:11.033 [Thread-222] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:11.033 [Thread-222] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:11.034 [Thread-223] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:11.034 [Thread-223] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:11.034 [Thread-223] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:11.035 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:786
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:11.035 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:11.035 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:11.035 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:786 otherwise the patch would be "true" or "false"
18:27:11.035 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=786, Suspiciousness=0.06804138174397717]
18:27:11.035 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=787, Suspiciousness=0.06804138174397717]
18:27:11.035 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,035 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:11.037 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.041 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.059 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.059 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,066 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,067 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,129 DEBUG spoon.support.StandardEnvironment - built in 63 ms
2015-02-28 18:27:11,130 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:11,130 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:11.130 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,130 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:11.133 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### permutation[row] = row ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    permutation[row] = row;
}
18:27:11.133 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### permutation[row] = row ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        permutation[row] = row;
    
}
18:27:11.133 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.137 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.159 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.162 [Thread-224] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:11.166 [Thread-224] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:11.166 [Thread-224] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:11.167 [Thread-225] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:11.168 [Thread-225] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:11.168 [Thread-225] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:11.168 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:787
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:11.168 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:11.168 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:11.168 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:787 otherwise the patch would be "true" or "false"
18:27:11.168 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=787, Suspiciousness=0.06804138174397717]
18:27:11.168 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=786, Suspiciousness=0.06804138174397717]
18:27:11.168 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,168 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:11.170 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.174 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.192 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.193 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,200 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,200 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,263 DEBUG spoon.support.StandardEnvironment - built in 63 ms
2015-02-28 18:27:11,263 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:11,263 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:11.264 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,264 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:11.266 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < nRows ; row++) {
    permutation[row] = row;
} ##### Before:
{
    int nRows = getRowDimension();
    int nCols = getColumnDimension();
    if (nRows != nCols) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
    } 
    lu = getData();
    permutation = new int[nRows];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int row = 0 ; row < nRows ; row++) {
        permutation[row] = row;
    }
    parity = 1;
    for (int col = 0 ; col < nCols ; col++) {
        double sum = 0;
        for (int row = 0 ; row < col ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < row ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
        }
        int max = col;
        double largest = 0.0;
        for (int row = col ; row < nRows ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < col ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
            if ((java.lang.Math.abs(sum)) > largest) {
                largest = java.lang.Math.abs(sum);
                max = row;
            } 
        }
        if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
            lu = null;
            throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
        } 
        if (max != col) {
            double tmp = 0;
            for (int i = 0 ; i < nCols ; i++) {
                tmp = lu[max][i];
                lu[max][i] = lu[col][i];
                lu[col][i] = tmp;
            }
            int temp = permutation[max];
            permutation[max] = permutation[col];
            permutation[col] = temp;
            parity = -(parity);
        } 
        for (int row = col + 1 ; row < nRows ; row++) {
            lu[row][col] /= lu[col][col];
        }
    }
}
18:27:11.266 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < nRows ; row++) {
    permutation[row] = row;
} ##### After:
{
    int nRows = getRowDimension();
    int nCols = getColumnDimension();
    if (nRows != nCols) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
    } 
    lu = getData();
    permutation = new int[nRows];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int row = 0 ; row < nRows ; row++) {
            permutation[row] = row;
        }
    
    parity = 1;
    for (int col = 0 ; col < nCols ; col++) {
        double sum = 0;
        for (int row = 0 ; row < col ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < row ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
        }
        int max = col;
        double largest = 0.0;
        for (int row = col ; row < nRows ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < col ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
            if ((java.lang.Math.abs(sum)) > largest) {
                largest = java.lang.Math.abs(sum);
                max = row;
            } 
        }
        if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
            lu = null;
            throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
        } 
        if (max != col) {
            double tmp = 0;
            for (int i = 0 ; i < nCols ; i++) {
                tmp = lu[max][i];
                lu[max][i] = lu[col][i];
                lu[col][i] = tmp;
            }
            int temp = permutation[max];
            permutation[max] = permutation[col];
            permutation[col] = temp;
            parity = -(parity);
        } 
        for (int row = col + 1 ; row < nRows ; row++) {
            lu[row][col] /= lu[col][col];
        }
    }
}
18:27:11.267 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.270 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.293 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.296 [Thread-226] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:11.300 [Thread-226] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:11.300 [Thread-226] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:11.301 [Thread-227] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:11.301 [Thread-227] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:11.301 [Thread-227] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:11.301 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:786
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:11.301 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:11.302 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:11.302 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:786 otherwise the patch would be "true" or "false"
18:27:11.302 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=786, Suspiciousness=0.06804138174397717]
18:27:11.302 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=789, Suspiciousness=0.06804138174397717]
18:27:11.302 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,302 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:11.304 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.307 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.326 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.326 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,333 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,333 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,396 DEBUG spoon.support.StandardEnvironment - built in 63 ms
2015-02-28 18:27:11,396 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:11,396 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:11.397 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,397 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:11.399 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### parity = 1 ##### Before:
{
    int nRows = getRowDimension();
    int nCols = getColumnDimension();
    if (nRows != nCols) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
    } 
    lu = getData();
    permutation = new int[nRows];
    for (int row = 0 ; row < nRows ; row++) {
        permutation[row] = row;
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    parity = 1;
    for (int col = 0 ; col < nCols ; col++) {
        double sum = 0;
        for (int row = 0 ; row < col ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < row ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
        }
        int max = col;
        double largest = 0.0;
        for (int row = col ; row < nRows ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < col ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
            if ((java.lang.Math.abs(sum)) > largest) {
                largest = java.lang.Math.abs(sum);
                max = row;
            } 
        }
        if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
            lu = null;
            throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
        } 
        if (max != col) {
            double tmp = 0;
            for (int i = 0 ; i < nCols ; i++) {
                tmp = lu[max][i];
                lu[max][i] = lu[col][i];
                lu[col][i] = tmp;
            }
            int temp = permutation[max];
            permutation[max] = permutation[col];
            permutation[col] = temp;
            parity = -(parity);
        } 
        for (int row = col + 1 ; row < nRows ; row++) {
            lu[row][col] /= lu[col][col];
        }
    }
}
18:27:11.399 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### parity = 1 ##### After:
{
    int nRows = getRowDimension();
    int nCols = getColumnDimension();
    if (nRows != nCols) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
    } 
    lu = getData();
    permutation = new int[nRows];
    for (int row = 0 ; row < nRows ; row++) {
        permutation[row] = row;
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        parity = 1;
    
    for (int col = 0 ; col < nCols ; col++) {
        double sum = 0;
        for (int row = 0 ; row < col ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < row ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
        }
        int max = col;
        double largest = 0.0;
        for (int row = col ; row < nRows ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < col ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
            if ((java.lang.Math.abs(sum)) > largest) {
                largest = java.lang.Math.abs(sum);
                max = row;
            } 
        }
        if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
            lu = null;
            throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
        } 
        if (max != col) {
            double tmp = 0;
            for (int i = 0 ; i < nCols ; i++) {
                tmp = lu[max][i];
                lu[max][i] = lu[col][i];
                lu[col][i] = tmp;
            }
            int temp = permutation[max];
            permutation[max] = permutation[col];
            permutation[col] = temp;
            parity = -(parity);
        } 
        for (int row = col + 1 ; row < nRows ; row++) {
            lu[row][col] /= lu[col][col];
        }
    }
}
18:27:11.400 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.403 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.425 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.428 [Thread-228] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:11.432 [Thread-228] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:11.432 [Thread-228] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:11.433 [Thread-229] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:11.434 [Thread-229] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:11.434 [Thread-229] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:11.434 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:789
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:11.434 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:11.434 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:11.434 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:789 otherwise the patch would be "true" or "false"
18:27:11.434 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=789, Suspiciousness=0.06804138174397717]
18:27:11.434 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=792, Suspiciousness=0.06804138174397717]
18:27:11.434 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,434 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:11.437 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.441 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.459 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.459 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,466 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,466 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,529 DEBUG spoon.support.StandardEnvironment - built in 63 ms
2015-02-28 18:27:11,529 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:11,529 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:11.530 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,530 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:11.532 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < nCols ; col++) {
    double sum = 0;
    for (int row = 0 ; row < col ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
    }
    int max = col;
    double largest = 0.0;
    for (int row = col ; row < nRows ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
        if ((java.lang.Math.abs(sum)) > largest) {
            largest = java.lang.Math.abs(sum);
            max = row;
        } 
    }
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    for (int row = col + 1 ; row < nRows ; row++) {
        lu[row][col] /= lu[col][col];
    }
} ##### Before:
{
    int nRows = getRowDimension();
    int nCols = getColumnDimension();
    if (nRows != nCols) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
    } 
    lu = getData();
    permutation = new int[nRows];
    for (int row = 0 ; row < nRows ; row++) {
        permutation[row] = row;
    }
    parity = 1;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int col = 0 ; col < nCols ; col++) {
        double sum = 0;
        for (int row = 0 ; row < col ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < row ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
        }
        int max = col;
        double largest = 0.0;
        for (int row = col ; row < nRows ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < col ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
            if ((java.lang.Math.abs(sum)) > largest) {
                largest = java.lang.Math.abs(sum);
                max = row;
            } 
        }
        if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
            lu = null;
            throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
        } 
        if (max != col) {
            double tmp = 0;
            for (int i = 0 ; i < nCols ; i++) {
                tmp = lu[max][i];
                lu[max][i] = lu[col][i];
                lu[col][i] = tmp;
            }
            int temp = permutation[max];
            permutation[max] = permutation[col];
            permutation[col] = temp;
            parity = -(parity);
        } 
        for (int row = col + 1 ; row < nRows ; row++) {
            lu[row][col] /= lu[col][col];
        }
    }
}
18:27:11.533 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < nCols ; col++) {
    double sum = 0;
    for (int row = 0 ; row < col ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
    }
    int max = col;
    double largest = 0.0;
    for (int row = col ; row < nRows ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
        if ((java.lang.Math.abs(sum)) > largest) {
            largest = java.lang.Math.abs(sum);
            max = row;
        } 
    }
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    for (int row = col + 1 ; row < nRows ; row++) {
        lu[row][col] /= lu[col][col];
    }
} ##### After:
{
    int nRows = getRowDimension();
    int nCols = getColumnDimension();
    if (nRows != nCols) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
    } 
    lu = getData();
    permutation = new int[nRows];
    for (int row = 0 ; row < nRows ; row++) {
        permutation[row] = row;
    }
    parity = 1;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int col = 0 ; col < nCols ; col++) {
            double sum = 0;
            for (int row = 0 ; row < col ; row++) {
                sum = lu[row][col];
                for (int i = 0 ; i < row ; i++) {
                    sum -= (lu[row][i]) * (lu[i][col]);
                }
                lu[row][col] = sum;
            }
            int max = col;
            double largest = 0.0;
            for (int row = col ; row < nRows ; row++) {
                sum = lu[row][col];
                for (int i = 0 ; i < col ; i++) {
                    sum -= (lu[row][i]) * (lu[i][col]);
                }
                lu[row][col] = sum;
                if ((java.lang.Math.abs(sum)) > largest) {
                    largest = java.lang.Math.abs(sum);
                    max = row;
                } 
            }
            if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
                lu = null;
                throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
            } 
            if (max != col) {
                double tmp = 0;
                for (int i = 0 ; i < nCols ; i++) {
                    tmp = lu[max][i];
                    lu[max][i] = lu[col][i];
                    lu[col][i] = tmp;
                }
                int temp = permutation[max];
                permutation[max] = permutation[col];
                permutation[col] = temp;
                parity = -(parity);
            } 
            for (int row = col + 1 ; row < nRows ; row++) {
                lu[row][col] /= lu[col][col];
            }
        }
    
}
18:27:11.533 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.537 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.559 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.561 [Thread-230] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:11.565 [Thread-230] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:11.566 [Thread-230] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:11.567 [Thread-231] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:11.567 [Thread-231] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:11.567 [Thread-231] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:11.567 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:792
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:11.567 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:11.567 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:11.567 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:792 otherwise the patch would be "true" or "false"
18:27:11.567 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=792, Suspiciousness=0.06804138174397717]
18:27:11.567 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=794, Suspiciousness=0.06804138174397717]
18:27:11.568 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,568 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:11.570 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.573 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.592 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.592 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:794.
18:27:11.592 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=794, Suspiciousness=0.06804138174397717]
18:27:11.592 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=797, Suspiciousness=0.06804138174397717]
18:27:11.592 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,592 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:11.594 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.598 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.617 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.617 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,624 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,624 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,688 DEBUG spoon.support.StandardEnvironment - built in 64 ms
2015-02-28 18:27:11,688 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:11,688 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:11.689 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,689 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:11.691 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < col ; row++) {
    sum = lu[row][col];
    for (int i = 0 ; i < row ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
} ##### Before:
{
    double sum = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int row = 0 ; row < col ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
    }
    int max = col;
    double largest = 0.0;
    for (int row = col ; row < nRows ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
        if ((java.lang.Math.abs(sum)) > largest) {
            largest = java.lang.Math.abs(sum);
            max = row;
        } 
    }
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    for (int row = col + 1 ; row < nRows ; row++) {
        lu[row][col] /= lu[col][col];
    }
}
18:27:11.691 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = 0 ; row < col ; row++) {
    sum = lu[row][col];
    for (int i = 0 ; i < row ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
} ##### After:
{
    double sum = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int row = 0 ; row < col ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < row ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
        }
    
    int max = col;
    double largest = 0.0;
    for (int row = col ; row < nRows ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
        if ((java.lang.Math.abs(sum)) > largest) {
            largest = java.lang.Math.abs(sum);
            max = row;
        } 
    }
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    for (int row = col + 1 ; row < nRows ; row++) {
        lu[row][col] /= lu[col][col];
    }
}
18:27:11.692 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.695 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.717 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.720 [Thread-232] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:11.724 [Thread-232] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:11.724 [Thread-232] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:11.725 [Thread-233] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:11.726 [Thread-233] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:11.726 [Thread-233] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:11.726 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:797
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:11.726 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:11.726 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:11.726 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:797 otherwise the patch would be "true" or "false"
18:27:11.726 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=797, Suspiciousness=0.06804138174397717]
18:27:11.726 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=806, Suspiciousness=0.06804138174397717]
18:27:11.726 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,726 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:11.728 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.732 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.750 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.750 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:806.
18:27:11.750 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=806, Suspiciousness=0.06804138174397717]
18:27:11.750 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=807, Suspiciousness=0.06804138174397717]
18:27:11.750 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,751 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:11.752 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.756 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.774 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.774 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:807.
18:27:11.774 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=807, Suspiciousness=0.06804138174397717]
18:27:11.774 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=808, Suspiciousness=0.06804138174397717]
18:27:11.774 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,774 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:11.777 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.780 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.798 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.798 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,805 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,805 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,869 DEBUG spoon.support.StandardEnvironment - built in 64 ms
2015-02-28 18:27:11,870 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:11,870 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:11.870 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,871 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:11.873 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = col ; row < nRows ; row++) {
    sum = lu[row][col];
    for (int i = 0 ; i < col ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
    if ((java.lang.Math.abs(sum)) > largest) {
        largest = java.lang.Math.abs(sum);
        max = row;
    } 
} ##### Before:
{
    double sum = 0;
    for (int row = 0 ; row < col ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
    }
    int max = col;
    double largest = 0.0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int row = col ; row < nRows ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
        if ((java.lang.Math.abs(sum)) > largest) {
            largest = java.lang.Math.abs(sum);
            max = row;
        } 
    }
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    for (int row = col + 1 ; row < nRows ; row++) {
        lu[row][col] /= lu[col][col];
    }
}
18:27:11.873 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = col ; row < nRows ; row++) {
    sum = lu[row][col];
    for (int i = 0 ; i < col ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
    if ((java.lang.Math.abs(sum)) > largest) {
        largest = java.lang.Math.abs(sum);
        max = row;
    } 
} ##### After:
{
    double sum = 0;
    for (int row = 0 ; row < col ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
    }
    int max = col;
    double largest = 0.0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int row = col ; row < nRows ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < col ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
            if ((java.lang.Math.abs(sum)) > largest) {
                largest = java.lang.Math.abs(sum);
                max = row;
            } 
        }
    
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    for (int row = col + 1 ; row < nRows ; row++) {
        lu[row][col] /= lu[col][col];
    }
}
18:27:11.874 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.877 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.899 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.902 [Thread-234] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:11.906 [Thread-234] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:11.907 [Thread-234] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:11.907 [Thread-235] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:11.908 [Thread-235] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:11.908 [Thread-235] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:11.908 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:808
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:11.908 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:11.908 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:11.908 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:808 otherwise the patch would be "true" or "false"
18:27:11.908 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=808, Suspiciousness=0.06804138174397717]
18:27:11.908 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=809, Suspiciousness=0.06804138174397717]
18:27:11.908 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:11,908 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:11.910 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:11.914 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:11.932 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:11.932 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,939 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:11,940 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,015 DEBUG spoon.support.StandardEnvironment - built in 75 ms
2015-02-28 18:27:12,016 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:12,016 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:12.016 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,016 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:12.019 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sum = lu[row][col] ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    sum = lu[row][col];
    for (int i = 0 ; i < col ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
    if ((java.lang.Math.abs(sum)) > largest) {
        largest = java.lang.Math.abs(sum);
        max = row;
    } 
}
18:27:12.019 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### sum = lu[row][col] ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        sum = lu[row][col];
    
    for (int i = 0 ; i < col ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
    if ((java.lang.Math.abs(sum)) > largest) {
        largest = java.lang.Math.abs(sum);
        max = row;
    } 
}
18:27:12.019 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.023 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.045 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.048 [Thread-236] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.052 [Thread-236] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:12.052 [Thread-236] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:12.054 [Thread-237] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.056 [Thread-237] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:12.056 [Thread-237] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:12.056 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:809
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:12.056 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:12.056 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:12.056 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:809 otherwise the patch would be "true" or "false"
18:27:12.056 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=809, Suspiciousness=0.06804138174397717]
18:27:12.056 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=810, Suspiciousness=0.06804138174397717]
18:27:12.056 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,056 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:12.059 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.062 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.080 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.080 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,087 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,087 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,150 DEBUG spoon.support.StandardEnvironment - built in 63 ms
2015-02-28 18:27:12,150 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:12,150 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:12.151 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,151 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:12.153 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < col ; i++) {
    sum -= (lu[row][i]) * (lu[i][col]);
} ##### Before:
{
    sum = lu[row][col];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < col ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
    if ((java.lang.Math.abs(sum)) > largest) {
        largest = java.lang.Math.abs(sum);
        max = row;
    } 
}
18:27:12.153 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < col ; i++) {
    sum -= (lu[row][i]) * (lu[i][col]);
} ##### After:
{
    sum = lu[row][col];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
    
    lu[row][col] = sum;
    if ((java.lang.Math.abs(sum)) > largest) {
        largest = java.lang.Math.abs(sum);
        max = row;
    } 
}
18:27:12.154 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.157 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.179 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.182 [Thread-238] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.186 [Thread-238] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:12.187 [Thread-238] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:12.188 [Thread-239] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.189 [Thread-239] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:12.189 [Thread-239] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:12.189 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:810
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:12.189 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:12.189 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:12.189 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:810 otherwise the patch would be "true" or "false"
18:27:12.189 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=810, Suspiciousness=0.06804138174397717]
18:27:12.189 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=813, Suspiciousness=0.06804138174397717]
18:27:12.189 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,189 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:12.191 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.195 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.213 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.213 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,220 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,220 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,282 DEBUG spoon.support.StandardEnvironment - built in 62 ms
2015-02-28 18:27:12,282 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:12,282 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:12.283 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,283 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:12.285 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lu[row][col] = sum ##### Before:
{
    sum = lu[row][col];
    for (int i = 0 ; i < col ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lu[row][col] = sum;
    if ((java.lang.Math.abs(sum)) > largest) {
        largest = java.lang.Math.abs(sum);
        max = row;
    } 
}
18:27:12.286 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lu[row][col] = sum ##### After:
{
    sum = lu[row][col];
    for (int i = 0 ; i < col ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lu[row][col] = sum;
    
    if ((java.lang.Math.abs(sum)) > largest) {
        largest = java.lang.Math.abs(sum);
        max = row;
    } 
}
18:27:12.286 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.289 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.311 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.314 [Thread-240] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.317 [Thread-240] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:12.318 [Thread-240] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:12.319 [Thread-241] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.320 [Thread-241] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:12.320 [Thread-241] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:12.320 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:813
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:12.320 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:12.320 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:12.320 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:813 otherwise the patch would be "true" or "false"
18:27:12.320 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=813, Suspiciousness=0.06804138174397717]
18:27:12.320 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=816, Suspiciousness=0.06804138174397717]
18:27:12.321 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,321 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:12.323 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.326 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.344 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.344 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,351 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,352 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,413 DEBUG spoon.support.StandardEnvironment - built in 62 ms
2015-02-28 18:27:12,413 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:12,413 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:12.414 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,414 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:12.416 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((java.lang.Math.abs(sum)) > largest) {
    largest = java.lang.Math.abs(sum);
    max = row;
} 
18:27:12.417 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.420 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.442 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.444 [Thread-242] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.448 [Thread-242] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:12.448 [Thread-242] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:12.449 [Thread-243] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.449 [Thread-243] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:12.449 [Thread-243] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:12.450 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:816
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:12.450 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:12.450 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:12.450 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:816 otherwise the patch would be "true" or "false"
18:27:12.450 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=816, Suspiciousness=0.06804138174397717]
18:27:12.450 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=817, Suspiciousness=0.06804138174397717]
18:27:12.450 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,450 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:12.452 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.455 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.473 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.474 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,481 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,481 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,543 DEBUG spoon.support.StandardEnvironment - built in 62 ms
2015-02-28 18:27:12,543 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:12,543 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:12.544 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,544 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:12.546 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### largest = java.lang.Math.abs(sum) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    largest = java.lang.Math.abs(sum);
    max = row;
}
18:27:12.546 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### largest = java.lang.Math.abs(sum) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        largest = java.lang.Math.abs(sum);
    
    max = row;
}
18:27:12.546 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.550 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.572 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.574 [Thread-244] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.578 [Thread-244] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:12.578 [Thread-244] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:12.579 [Thread-245] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.579 [Thread-245] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:12.579 [Thread-245] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:12.579 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:817
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:12.579 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:12.580 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:12.580 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:817 otherwise the patch would be "true" or "false"
18:27:12.580 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=817, Suspiciousness=0.06804138174397717]
18:27:12.580 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=818, Suspiciousness=0.06804138174397717]
18:27:12.580 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,580 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:12.582 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.585 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.603 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.603 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,610 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,611 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,672 DEBUG spoon.support.StandardEnvironment - built in 61 ms
2015-02-28 18:27:12,672 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:12,672 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:12.673 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,673 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:12.675 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### max = row ##### Before:
{
    largest = java.lang.Math.abs(sum);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    max = row;
}
18:27:12.676 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### max = row ##### After:
{
    largest = java.lang.Math.abs(sum);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        max = row;
    
}
18:27:12.676 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.680 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.702 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.704 [Thread-246] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.708 [Thread-246] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:12.708 [Thread-246] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:12.709 [Thread-247] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.709 [Thread-247] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:12.709 [Thread-247] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:12.709 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:818
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:12.709 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:12.709 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:12.709 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:818 otherwise the patch would be "true" or "false"
18:27:12.709 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=818, Suspiciousness=0.06804138174397717]
18:27:12.710 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=808, Suspiciousness=0.06804138174397717]
18:27:12.710 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,710 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:12.712 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.715 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.733 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.734 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,741 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,741 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,802 DEBUG spoon.support.StandardEnvironment - built in 61 ms
2015-02-28 18:27:12,802 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:12,802 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:12.803 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,803 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:12.805 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = col ; row < nRows ; row++) {
    sum = lu[row][col];
    for (int i = 0 ; i < col ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
    if ((java.lang.Math.abs(sum)) > largest) {
        largest = java.lang.Math.abs(sum);
        max = row;
    } 
} ##### Before:
{
    double sum = 0;
    for (int row = 0 ; row < col ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
    }
    int max = col;
    double largest = 0.0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int row = col ; row < nRows ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
        if ((java.lang.Math.abs(sum)) > largest) {
            largest = java.lang.Math.abs(sum);
            max = row;
        } 
    }
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    for (int row = col + 1 ; row < nRows ; row++) {
        lu[row][col] /= lu[col][col];
    }
}
18:27:12.805 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = col ; row < nRows ; row++) {
    sum = lu[row][col];
    for (int i = 0 ; i < col ; i++) {
        sum -= (lu[row][i]) * (lu[i][col]);
    }
    lu[row][col] = sum;
    if ((java.lang.Math.abs(sum)) > largest) {
        largest = java.lang.Math.abs(sum);
        max = row;
    } 
} ##### After:
{
    double sum = 0;
    for (int row = 0 ; row < col ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
    }
    int max = col;
    double largest = 0.0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int row = col ; row < nRows ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < col ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
            if ((java.lang.Math.abs(sum)) > largest) {
                largest = java.lang.Math.abs(sum);
                max = row;
            } 
        }
    
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    for (int row = col + 1 ; row < nRows ; row++) {
        lu[row][col] /= lu[col][col];
    }
}
18:27:12.806 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.809 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.831 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.834 [Thread-248] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.837 [Thread-248] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:12.837 [Thread-248] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:12.839 [Thread-249] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.840 [Thread-249] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:12.840 [Thread-249] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:12.840 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:808
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:12.841 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:12.841 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:12.841 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:808 otherwise the patch would be "true" or "false"
18:27:12.841 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=808, Suspiciousness=0.06804138174397717]
18:27:12.841 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=823, Suspiciousness=0.06804138174397717]
18:27:12.841 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,841 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:12.843 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.846 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.864 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.865 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,872 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,872 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:12,932 DEBUG spoon.support.StandardEnvironment - built in 60 ms
2015-02-28 18:27:12,933 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:12,933 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:12.933 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,933 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:12.936 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
    lu = null;
    throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
} 
18:27:12.936 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.939 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.961 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.964 [Thread-250] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.967 [Thread-250] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:12.968 [Thread-250] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:12.969 [Thread-251] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:12.971 [Thread-251] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:12.971 [Thread-251] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:12.971 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:823
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:12.971 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:12.971 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:12.971 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:823 otherwise the patch would be "true" or "false"
18:27:12.972 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=823, Suspiciousness=0.06804138174397717]
18:27:12.972 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=829, Suspiciousness=0.06804138174397717]
18:27:12.972 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:12,972 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:12.974 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:12.977 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:12.995 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:12.995 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:13,002 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:13,002 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:13,063 DEBUG spoon.support.StandardEnvironment - built in 61 ms
2015-02-28 18:27:13,063 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:13,064 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:13.064 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:13,064 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:13.067 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (max != col) {
    double tmp = 0;
    for (int i = 0 ; i < nCols ; i++) {
        tmp = lu[max][i];
        lu[max][i] = lu[col][i];
        lu[col][i] = tmp;
    }
    int temp = permutation[max];
    permutation[max] = permutation[col];
    permutation[col] = temp;
    parity = -(parity);
} 
18:27:13.067 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:13.071 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.092 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.095 [Thread-252] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.099 [Thread-252] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:13.099 [Thread-252] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.100 [Thread-253] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.101 [Thread-253] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:13.101 [Thread-253] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.101 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:829
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:13.101 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.101 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.101 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:829 otherwise the patch would be "true" or "false"
18:27:13.101 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=829, Suspiciousness=0.06804138174397717]
18:27:13.101 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=843, Suspiciousness=0.06804138174397717]
18:27:13.101 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:13,101 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:13.104 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:13.107 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.125 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.125 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:13,132 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:13,132 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:13,210 DEBUG spoon.support.StandardEnvironment - built in 78 ms
2015-02-28 18:27:13,210 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:13,210 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:13.211 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:13,211 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:13.213 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = col + 1 ; row < nRows ; row++) {
    lu[row][col] /= lu[col][col];
} ##### Before:
{
    double sum = 0;
    for (int row = 0 ; row < col ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
    }
    int max = col;
    double largest = 0.0;
    for (int row = col ; row < nRows ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
        if ((java.lang.Math.abs(sum)) > largest) {
            largest = java.lang.Math.abs(sum);
            max = row;
        } 
    }
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int row = col + 1 ; row < nRows ; row++) {
        lu[row][col] /= lu[col][col];
    }
}
18:27:13.214 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int row = col + 1 ; row < nRows ; row++) {
    lu[row][col] /= lu[col][col];
} ##### After:
{
    double sum = 0;
    for (int row = 0 ; row < col ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
    }
    int max = col;
    double largest = 0.0;
    for (int row = col ; row < nRows ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
        if ((java.lang.Math.abs(sum)) > largest) {
            largest = java.lang.Math.abs(sum);
            max = row;
        } 
    }
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("max",max);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("sum",sum);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("largest",largest);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int row = col + 1 ; row < nRows ; row++) {
            lu[row][col] /= lu[col][col];
        }
    
}
18:27:13.214 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:13.217 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.239 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.243 [Thread-254] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.257 [Thread-254] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:13.257 [Thread-254] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[maximal number of evaluations exceeded (100)]
org.apache.commons.math.estimation.EstimationException: maximal number of evaluations exceeded (100)
    at org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(AbstractEstimator.java:74)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:114)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:13.258 [Thread-255] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.258 [Thread-255] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:13.258 [Thread-255] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.258 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:843
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:13.259 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): maximal number of evaluations exceeded (100)]
18:27:13.259 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.259 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:843 otherwise the patch would be "true" or "false"
18:27:13.259 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=843, Suspiciousness=0.06804138174397717]
18:27:13.259 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=792, Suspiciousness=0.06804138174397717]
18:27:13.259 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:13,259 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:13.262 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:13.265 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.283 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.283 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:13,290 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:13,290 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:13,351 DEBUG spoon.support.StandardEnvironment - built in 61 ms
2015-02-28 18:27:13,351 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:13,351 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:13.352 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:13,352 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:13.354 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < nCols ; col++) {
    double sum = 0;
    for (int row = 0 ; row < col ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
    }
    int max = col;
    double largest = 0.0;
    for (int row = col ; row < nRows ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
        if ((java.lang.Math.abs(sum)) > largest) {
            largest = java.lang.Math.abs(sum);
            max = row;
        } 
    }
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    for (int row = col + 1 ; row < nRows ; row++) {
        lu[row][col] /= lu[col][col];
    }
} ##### Before:
{
    int nRows = getRowDimension();
    int nCols = getColumnDimension();
    if (nRows != nCols) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
    } 
    lu = getData();
    permutation = new int[nRows];
    for (int row = 0 ; row < nRows ; row++) {
        permutation[row] = row;
    }
    parity = 1;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int col = 0 ; col < nCols ; col++) {
        double sum = 0;
        for (int row = 0 ; row < col ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < row ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
        }
        int max = col;
        double largest = 0.0;
        for (int row = col ; row < nRows ; row++) {
            sum = lu[row][col];
            for (int i = 0 ; i < col ; i++) {
                sum -= (lu[row][i]) * (lu[i][col]);
            }
            lu[row][col] = sum;
            if ((java.lang.Math.abs(sum)) > largest) {
                largest = java.lang.Math.abs(sum);
                max = row;
            } 
        }
        if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
            lu = null;
            throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
        } 
        if (max != col) {
            double tmp = 0;
            for (int i = 0 ; i < nCols ; i++) {
                tmp = lu[max][i];
                lu[max][i] = lu[col][i];
                lu[col][i] = tmp;
            }
            int temp = permutation[max];
            permutation[max] = permutation[col];
            permutation[col] = temp;
            parity = -(parity);
        } 
        for (int row = col + 1 ; row < nRows ; row++) {
            lu[row][col] /= lu[col][col];
        }
    }
}
18:27:13.355 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int col = 0 ; col < nCols ; col++) {
    double sum = 0;
    for (int row = 0 ; row < col ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < row ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
    }
    int max = col;
    double largest = 0.0;
    for (int row = col ; row < nRows ; row++) {
        sum = lu[row][col];
        for (int i = 0 ; i < col ; i++) {
            sum -= (lu[row][i]) * (lu[i][col]);
        }
        lu[row][col] = sum;
        if ((java.lang.Math.abs(sum)) > largest) {
            largest = java.lang.Math.abs(sum);
            max = row;
        } 
    }
    if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
        lu = null;
        throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
    } 
    if (max != col) {
        double tmp = 0;
        for (int i = 0 ; i < nCols ; i++) {
            tmp = lu[max][i];
            lu[max][i] = lu[col][i];
            lu[col][i] = tmp;
        }
        int temp = permutation[max];
        permutation[max] = permutation[col];
        permutation[col] = temp;
        parity = -(parity);
    } 
    for (int row = col + 1 ; row < nRows ; row++) {
        lu[row][col] /= lu[col][col];
    }
} ##### After:
{
    int nRows = getRowDimension();
    int nCols = getColumnDimension();
    if (nRows != nCols) {
        throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");
    } 
    lu = getData();
    permutation = new int[nRows];
    for (int row = 0 ; row < nRows ; row++) {
        permutation[row] = row;
    }
    parity = 1;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int col = 0 ; col < nCols ; col++) {
            double sum = 0;
            for (int row = 0 ; row < col ; row++) {
                sum = lu[row][col];
                for (int i = 0 ; i < row ; i++) {
                    sum -= (lu[row][i]) * (lu[i][col]);
                }
                lu[row][col] = sum;
            }
            int max = col;
            double largest = 0.0;
            for (int row = col ; row < nRows ; row++) {
                sum = lu[row][col];
                for (int i = 0 ; i < col ; i++) {
                    sum -= (lu[row][i]) * (lu[i][col]);
                }
                lu[row][col] = sum;
                if ((java.lang.Math.abs(sum)) > largest) {
                    largest = java.lang.Math.abs(sum);
                    max = row;
                } 
            }
            if ((java.lang.Math.abs(lu[max][col])) < (org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL)) {
                lu = null;
                throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");
            } 
            if (max != col) {
                double tmp = 0;
                for (int i = 0 ; i < nCols ; i++) {
                    tmp = lu[max][i];
                    lu[max][i] = lu[col][i];
                    lu[col][i] = tmp;
                }
                int temp = permutation[max];
                permutation[max] = permutation[col];
                permutation[col] = temp;
                parity = -(parity);
            } 
            for (int row = col + 1 ; row < nRows ; row++) {
                lu[row][col] /= lu[col][col];
            }
        }
    
}
18:27:13.355 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:13.359 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.380 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.383 [Thread-256] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.387 [Thread-256] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:13.387 [Thread-256] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.388 [Thread-257] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.390 [Thread-257] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:13.390 [Thread-257] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:13.390 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:792
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:13.390 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.390 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:13.390 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:792 otherwise the patch would be "true" or "false"
18:27:13.390 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=792, Suspiciousness=0.06804138174397717]
18:27:13.390 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=581, Suspiciousness=0.06666666666666667]
18:27:13.390 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:13,390 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:13.392 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:13.396 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.414 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.414 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:581.
18:27:13.414 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=581, Suspiciousness=0.06666666666666667]
18:27:13.414 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=73, Suspiciousness=0.05716619504750295]
18:27:13.414 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,414 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:13.415 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.416 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.426 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.426 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,433 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,433 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,474 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:13,475 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:13,475 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:13.475 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,475 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:13.477 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### incrementJacobianEvaluationsCounter() ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    incrementJacobianEvaluationsCounter();
    java.util.Arrays.fill(jacobian, 0);
    for (int i = 0, index = 0 ; i < (rows) ; i++) {
        org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
        double factor = -(java.lang.Math.sqrt(wm.getWeight()));
        for (int j = 0 ; j < (cols) ; ++j) {
            jacobian[index++] = factor * (wm.getPartial(parameters[j]));
        }
    }
}
18:27:13.477 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### incrementJacobianEvaluationsCounter() ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        incrementJacobianEvaluationsCounter();
    
    java.util.Arrays.fill(jacobian, 0);
    for (int i = 0, index = 0 ; i < (rows) ; i++) {
        org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
        double factor = -(java.lang.Math.sqrt(wm.getWeight()));
        for (int j = 0 ; j < (cols) ; ++j) {
            jacobian[index++] = factor * (wm.getPartial(parameters[j]));
        }
    }
}
18:27:13.477 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.478 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.492 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.495 [Thread-258] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.499 [Thread-258] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:13.499 [Thread-258] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.500 [Thread-259] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.500 [Thread-259] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:13.500 [Thread-259] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.501 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:73
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:13.501 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.501 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.501 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:73 otherwise the patch would be "true" or "false"
18:27:13.501 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=73, Suspiciousness=0.05716619504750295]
18:27:13.501 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=74, Suspiciousness=0.05716619504750295]
18:27:13.501 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,501 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:13.502 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.502 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.512 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.512 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,519 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,520 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,560 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:13,561 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:13,561 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:13.561 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,561 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:13.563 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### java.util.Arrays.fill(jacobian, 0) ##### Before:
{
    incrementJacobianEvaluationsCounter();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    java.util.Arrays.fill(jacobian, 0);
    for (int i = 0, index = 0 ; i < (rows) ; i++) {
        org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
        double factor = -(java.lang.Math.sqrt(wm.getWeight()));
        for (int j = 0 ; j < (cols) ; ++j) {
            jacobian[index++] = factor * (wm.getPartial(parameters[j]));
        }
    }
}
18:27:13.563 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### java.util.Arrays.fill(jacobian, 0) ##### After:
{
    incrementJacobianEvaluationsCounter();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        java.util.Arrays.fill(jacobian, 0);
    
    for (int i = 0, index = 0 ; i < (rows) ; i++) {
        org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
        double factor = -(java.lang.Math.sqrt(wm.getWeight()));
        for (int j = 0 ; j < (cols) ; ++j) {
            jacobian[index++] = factor * (wm.getPartial(parameters[j]));
        }
    }
}
18:27:13.563 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.564 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.578 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.580 [Thread-260] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.584 [Thread-260] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:13.584 [Thread-260] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.586 [Thread-261] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.586 [Thread-261] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:13.586 [Thread-261] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.586 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:74
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:13.586 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.586 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.587 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:74 otherwise the patch would be "true" or "false"
18:27:13.587 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=74, Suspiciousness=0.05716619504750295]
18:27:13.587 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=75, Suspiciousness=0.05716619504750295]
18:27:13.587 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,587 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:13.588 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.589 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.598 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.598 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,605 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,605 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,646 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:13,646 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:13,646 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:13.647 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,647 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:13.648 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0, index = 0 ; i < (rows) ; i++) {
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double factor = -(java.lang.Math.sqrt(wm.getWeight()));
    for (int j = 0 ; j < (cols) ; ++j) {
        jacobian[index++] = factor * (wm.getPartial(parameters[j]));
    }
} ##### Before:
{
    incrementJacobianEvaluationsCounter();
    java.util.Arrays.fill(jacobian, 0);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0, index = 0 ; i < (rows) ; i++) {
        org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
        double factor = -(java.lang.Math.sqrt(wm.getWeight()));
        for (int j = 0 ; j < (cols) ; ++j) {
            jacobian[index++] = factor * (wm.getPartial(parameters[j]));
        }
    }
}
18:27:13.649 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0, index = 0 ; i < (rows) ; i++) {
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double factor = -(java.lang.Math.sqrt(wm.getWeight()));
    for (int j = 0 ; j < (cols) ; ++j) {
        jacobian[index++] = factor * (wm.getPartial(parameters[j]));
    }
} ##### After:
{
    incrementJacobianEvaluationsCounter();
    java.util.Arrays.fill(jacobian, 0);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0, index = 0 ; i < (rows) ; i++) {
            org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
            double factor = -(java.lang.Math.sqrt(wm.getWeight()));
            for (int j = 0 ; j < (cols) ; ++j) {
                jacobian[index++] = factor * (wm.getPartial(parameters[j]));
            }
        }
    
}
18:27:13.649 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.650 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.663 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.666 [Thread-262] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.669 [Thread-262] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:13.669 [Thread-262] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.671 [Thread-263] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.671 [Thread-263] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:13.671 [Thread-263] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.672 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:75
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:13.672 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.672 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.672 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:75 otherwise the patch would be "true" or "false"
18:27:13.672 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=75, Suspiciousness=0.05716619504750295]
18:27:13.672 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=76, Suspiciousness=0.05716619504750295]
18:27:13.672 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,672 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:13.673 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.674 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.683 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.684 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:76.
18:27:13.684 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=76, Suspiciousness=0.05716619504750295]
18:27:13.684 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=77, Suspiciousness=0.05716619504750295]
18:27:13.684 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,684 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:13.684 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.685 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.695 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.695 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:77.
18:27:13.695 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=77, Suspiciousness=0.05716619504750295]
18:27:13.695 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=78, Suspiciousness=0.05716619504750295]
18:27:13.695 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,695 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:13.696 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.697 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.706 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.707 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,713 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,714 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,754 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:13,755 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:13,755 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:13.755 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,755 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:13.757 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < (cols) ; ++j) {
    jacobian[index++] = factor * (wm.getPartial(parameters[j]));
} ##### Before:
{
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double factor = -(java.lang.Math.sqrt(wm.getWeight()));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor",factor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int j = 0 ; j < (cols) ; ++j) {
        jacobian[index++] = factor * (wm.getPartial(parameters[j]));
    }
}
18:27:13.757 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < (cols) ; ++j) {
    jacobian[index++] = factor * (wm.getPartial(parameters[j]));
} ##### After:
{
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double factor = -(java.lang.Math.sqrt(wm.getWeight()));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor",factor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int j = 0 ; j < (cols) ; ++j) {
            jacobian[index++] = factor * (wm.getPartial(parameters[j]));
        }
    
}
18:27:13.757 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.758 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.772 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.775 [Thread-264] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.779 [Thread-264] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:13.779 [Thread-264] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:159)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.780 [Thread-265] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.781 [Thread-265] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:13.781 [Thread-265] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:159)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.781 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:78
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:13.781 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.781 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.781 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:78 otherwise the patch would be "true" or "false"
18:27:13.781 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=78, Suspiciousness=0.05716619504750295]
18:27:13.781 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=79, Suspiciousness=0.05716619504750295]
18:27:13.781 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,781 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:13.782 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.783 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.793 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.793 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,800 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,800 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,841 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:13,841 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:13,841 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:13.842 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,842 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:13.843 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### jacobian[index++] = factor * (wm.getPartial(parameters[j])) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor",factor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    jacobian[index++] = factor * (wm.getPartial(parameters[j]));
}
18:27:13.843 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### jacobian[index++] = factor * (wm.getPartial(parameters[j])) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor",factor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        jacobian[index++] = factor * (wm.getPartial(parameters[j]));
    
}
18:27:13.843 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.844 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.858 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.860 [Thread-266] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.864 [Thread-266] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:13.864 [Thread-266] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:159)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.865 [Thread-267] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.865 [Thread-267] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:13.866 [Thread-267] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:159)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.866 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:79
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:13.866 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.866 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.866 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:79 otherwise the patch would be "true" or "false"
18:27:13.866 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=79, Suspiciousness=0.05716619504750295]
18:27:13.866 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=78, Suspiciousness=0.05716619504750295]
18:27:13.866 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,866 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:13.867 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.868 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.878 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.878 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,885 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,885 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,926 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:13,926 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:13,926 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:13.927 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,927 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:13.929 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < (cols) ; ++j) {
    jacobian[index++] = factor * (wm.getPartial(parameters[j]));
} ##### Before:
{
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double factor = -(java.lang.Math.sqrt(wm.getWeight()));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor",factor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int j = 0 ; j < (cols) ; ++j) {
        jacobian[index++] = factor * (wm.getPartial(parameters[j]));
    }
}
18:27:13.929 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int j = 0 ; j < (cols) ; ++j) {
    jacobian[index++] = factor * (wm.getPartial(parameters[j]));
} ##### After:
{
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double factor = -(java.lang.Math.sqrt(wm.getWeight()));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor",factor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int j = 0 ; j < (cols) ; ++j) {
            jacobian[index++] = factor * (wm.getPartial(parameters[j]));
        }
    
}
18:27:13.929 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.930 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.944 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.947 [Thread-268] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.951 [Thread-268] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:13.951 [Thread-268] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:159)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.952 [Thread-269] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:13.952 [Thread-269] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:13.952 [Thread-269] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:159)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:13.952 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:78
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:13.953 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.953 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:13.953 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:78 otherwise the patch would be "true" or "false"
18:27:13.953 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=78, Suspiciousness=0.05716619504750295]
18:27:13.953 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=75, Suspiciousness=0.05716619504750295]
18:27:13.953 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:13,953 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:13.954 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:13.955 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:13.964 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:13.965 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,972 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:13,972 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:14,013 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:14,013 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:14,013 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:14.013 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:14,014 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:14.015 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0, index = 0 ; i < (rows) ; i++) {
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double factor = -(java.lang.Math.sqrt(wm.getWeight()));
    for (int j = 0 ; j < (cols) ; ++j) {
        jacobian[index++] = factor * (wm.getPartial(parameters[j]));
    }
} ##### Before:
{
    incrementJacobianEvaluationsCounter();
    java.util.Arrays.fill(jacobian, 0);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0, index = 0 ; i < (rows) ; i++) {
        org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
        double factor = -(java.lang.Math.sqrt(wm.getWeight()));
        for (int j = 0 ; j < (cols) ; ++j) {
            jacobian[index++] = factor * (wm.getPartial(parameters[j]));
        }
    }
}
18:27:14.015 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0, index = 0 ; i < (rows) ; i++) {
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double factor = -(java.lang.Math.sqrt(wm.getWeight()));
    for (int j = 0 ; j < (cols) ; ++j) {
        jacobian[index++] = factor * (wm.getPartial(parameters[j]));
    }
} ##### After:
{
    incrementJacobianEvaluationsCounter();
    java.util.Arrays.fill(jacobian, 0);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0, index = 0 ; i < (rows) ; i++) {
            org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
            double factor = -(java.lang.Math.sqrt(wm.getWeight()));
            for (int j = 0 ; j < (cols) ; ++j) {
                jacobian[index++] = factor * (wm.getPartial(parameters[j]));
            }
        }
    
}
18:27:14.015 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:14.016 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.030 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.032 [Thread-270] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:14.036 [Thread-270] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:14.036 [Thread-270] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:14.037 [Thread-271] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:14.038 [Thread-271] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:14.038 [Thread-271] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:14.038 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:75
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:14.038 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:14.038 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:14.038 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:75 otherwise the patch would be "true" or "false"
18:27:14.038 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=75, Suspiciousness=0.05716619504750295]
18:27:14.038 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=82, Suspiciousness=0.05716619504750295]
18:27:14.039 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:14,039 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.039 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:14.040 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.050 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.050 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:82.
18:27:14.050 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=82, Suspiciousness=0.05716619504750295]
18:27:14.050 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=267, Suspiciousness=0.05716619504750295]
18:27:14.050 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,050 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.052 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.055 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.073 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.073 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:267.
18:27:14.073 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=267, Suspiciousness=0.05716619504750295]
18:27:14.073 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1000, Suspiciousness=0.0563436169819011]
18:27:14.074 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,074 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.076 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.079 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.097 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.097 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1000.
18:27:14.097 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1000, Suspiciousness=0.0563436169819011]
18:27:14.098 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1001, Suspiciousness=0.0563436169819011]
18:27:14.098 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,098 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.100 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.103 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.121 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.121 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1001.
18:27:14.121 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1001, Suspiciousness=0.0563436169819011]
18:27:14.121 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1003, Suspiciousness=0.0563436169819011]
18:27:14.121 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,121 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.123 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.127 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.145 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.145 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,152 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,153 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,214 DEBUG spoon.support.StandardEnvironment - built in 62 ms
2015-02-28 18:27:14,214 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:14,214 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:14.215 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,215 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:14.216 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < nRows ; i++) {
    java.lang.System.arraycopy(data[i], 0, out[i], 0, data[i].length);
} ##### Before:
{
    int nRows = getRowDimension();
    double[][] out = new double[nRows][getColumnDimension()];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("out",out);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < nRows ; i++) {
        java.lang.System.arraycopy(data[i], 0, out[i], 0, data[i].length);
    }
    return out;
}
18:27:14.217 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < nRows ; i++) {
    java.lang.System.arraycopy(data[i], 0, out[i], 0, data[i].length);
} ##### After:
{
    int nRows = getRowDimension();
    double[][] out = new double[nRows][getColumnDimension()];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("out",out);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < nRows ; i++) {
            java.lang.System.arraycopy(data[i], 0, out[i], 0, data[i].length);
        }
    
    return out;
}
18:27:14.218 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.221 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.242 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.246 [Thread-272] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:14.249 [Thread-272] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:14.250 [Thread-272] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:14.251 [Thread-273] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:14.252 [Thread-273] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:14.252 [Thread-273] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:14.253 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1003
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:14.253 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:14.253 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:14.253 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1003 otherwise the patch would be "true" or "false"
18:27:14.253 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1003, Suspiciousness=0.0563436169819011]
18:27:14.253 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1004, Suspiciousness=0.0563436169819011]
18:27:14.253 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,253 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.255 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.258 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.276 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.276 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,283 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,283 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,345 DEBUG spoon.support.StandardEnvironment - built in 62 ms
2015-02-28 18:27:14,345 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:14,345 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:14.346 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,346 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:14.347 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### java.lang.System.arraycopy(data[i], 0, out[i], 0, data[i].length) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("out",out);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    java.lang.System.arraycopy(data[i], 0, out[i], 0, data[i].length);
}
18:27:14.348 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### java.lang.System.arraycopy(data[i], 0, out[i], 0, data[i].length) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("out",out);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        java.lang.System.arraycopy(data[i], 0, out[i], 0, data[i].length);
    
}
18:27:14.348 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.352 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.373 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.376 [Thread-274] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:14.381 [Thread-274] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:14.381 [Thread-274] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:14.382 [Thread-275] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:14.383 [Thread-275] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:14.383 [Thread-275] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:14.383 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1004
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:14.383 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:14.383 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:14.383 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1004 otherwise the patch would be "true" or "false"
18:27:14.383 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1004, Suspiciousness=0.0563436169819011]
18:27:14.383 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1003, Suspiciousness=0.0563436169819011]
18:27:14.384 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,384 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.386 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.389 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.408 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.408 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,416 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,416 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,490 DEBUG spoon.support.StandardEnvironment - built in 74 ms
2015-02-28 18:27:14,491 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:14,491 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:14.491 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,491 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:14.493 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < nRows ; i++) {
    java.lang.System.arraycopy(data[i], 0, out[i], 0, data[i].length);
} ##### Before:
{
    int nRows = getRowDimension();
    double[][] out = new double[nRows][getColumnDimension()];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("out",out);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < nRows ; i++) {
        java.lang.System.arraycopy(data[i], 0, out[i], 0, data[i].length);
    }
    return out;
}
18:27:14.493 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < nRows ; i++) {
    java.lang.System.arraycopy(data[i], 0, out[i], 0, data[i].length);
} ##### After:
{
    int nRows = getRowDimension();
    double[][] out = new double[nRows][getColumnDimension()];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("out",out);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < nRows ; i++) {
            java.lang.System.arraycopy(data[i], 0, out[i], 0, data[i].length);
        }
    
    return out;
}
18:27:14.495 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.499 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.522 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.543 [Thread-276] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:14.546 [Thread-276] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:14.547 [Thread-276] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:14.548 [Thread-277] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:14.550 [Thread-277] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:14.550 [Thread-277] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[unable to solve: singular problem]
org.apache.commons.math.estimation.EstimationException: unable to solve: singular problem
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:111)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:14.551 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1003
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:14.551 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:14.551 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): unable to solve: singular problem]
18:27:14.551 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1003 otherwise the patch would be "true" or "false"
18:27:14.551 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1003, Suspiciousness=0.0563436169819011]
18:27:14.551 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1006, Suspiciousness=0.0563436169819011]
18:27:14.551 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,551 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.553 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.557 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.574 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.574 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1006.
18:27:14.574 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1006, Suspiciousness=0.0563436169819011]
18:27:14.574 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=93, Suspiciousness=0.05407380704358752]
18:27:14.574 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,574 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.576 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.580 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.597 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.597 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,604 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,604 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,665 DEBUG spoon.support.StandardEnvironment - built in 61 ms
2015-02-28 18:27:14,665 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:14,665 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:14.666 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,666 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:14.666 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### data = new double[rowDimension][columnDimension] ##### Before:
{
    if ((rowDimension <= 0) || (columnDimension <= 0)) {
        throw new java.lang.IllegalArgumentException("row and column dimensions must be postive");
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    data = new double[rowDimension][columnDimension];
    lu = null;
}
18:27:14.667 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### data = new double[rowDimension][columnDimension] ##### After:
{
    if ((rowDimension <= 0) || (columnDimension <= 0)) {
        throw new java.lang.IllegalArgumentException("row and column dimensions must be postive");
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        data = new double[rowDimension][columnDimension];
    
    lu = null;
}
18:27:14.668 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.671 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.692 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.694 [Thread-278] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:14.698 [Thread-278] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:14.698 [Thread-278] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:92)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:14.699 [Thread-279] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:14.699 [Thread-279] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:14.700 [Thread-279] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:14.700 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:93
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:14.700 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:14.700 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:14.700 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:93 otherwise the patch would be "true" or "false"
18:27:14.700 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=93, Suspiciousness=0.05407380704358752]
18:27:14.700 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=94, Suspiciousness=0.05407380704358752]
18:27:14.700 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,700 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.702 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.705 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.722 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.723 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,730 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,730 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,791 DEBUG spoon.support.StandardEnvironment - built in 61 ms
2015-02-28 18:27:14,791 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:14,791 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:14.792 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,792 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:14.792 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lu = null ##### Before:
{
    if ((rowDimension <= 0) || (columnDimension <= 0)) {
        throw new java.lang.IllegalArgumentException("row and column dimensions must be postive");
    } 
    data = new double[rowDimension][columnDimension];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lu = null;
}
18:27:14.792 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lu = null ##### After:
{
    if ((rowDimension <= 0) || (columnDimension <= 0)) {
        throw new java.lang.IllegalArgumentException("row and column dimensions must be postive");
    } 
    data = new double[rowDimension][columnDimension];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lu = null;
    
}
18:27:14.794 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.797 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.817 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.820 [Thread-280] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:14.823 [Thread-280] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:14.823 [Thread-280] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:14.824 [Thread-281] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:14.825 [Thread-281] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:14.825 [Thread-281] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:14.825 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:94
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:14.825 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:14.825 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:14.825 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:94 otherwise the patch would be "true" or "false"
18:27:14.825 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=94, Suspiciousness=0.05407380704358752]
18:27:14.825 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=95, Suspiciousness=0.05407380704358752]
18:27:14.825 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,825 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.827 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.831 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.848 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.848 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:95.
18:27:14.848 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=95, Suspiciousness=0.05407380704358752]
18:27:14.848 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=88, Suspiciousness=0.05337605126836238]
18:27:14.849 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,849 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.851 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.854 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.871 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.871 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:88.
18:27:14.871 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=88, Suspiciousness=0.05337605126836238]
18:27:14.871 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=58, Suspiciousness=0.05337605126836238]
18:27:14.871 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,871 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.873 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.876 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.893 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.893 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:58.
18:27:14.894 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=58, Suspiciousness=0.05337605126836238]
18:27:14.894 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=63, Suspiciousness=0.05337605126836238]
18:27:14.894 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,894 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.896 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.899 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.916 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.916 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:63.
18:27:14.916 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=63, Suspiciousness=0.05337605126836238]
18:27:14.916 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=66, Suspiciousness=0.05337605126836238]
18:27:14.916 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,916 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.918 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.921 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.939 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.939 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:66.
18:27:14.939 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=66, Suspiciousness=0.05337605126836238]
18:27:14.939 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=69, Suspiciousness=0.05337605126836238]
18:27:14.939 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,939 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.941 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.946 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.963 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.963 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:69.
18:27:14.963 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=69, Suspiciousness=0.05337605126836238]
18:27:14.963 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=89, Suspiciousness=0.05337605126836238]
18:27:14.963 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:14,963 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:14.965 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:14.968 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:14.985 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:14.986 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,993 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:14,993 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:15,054 DEBUG spoon.support.StandardEnvironment - built in 61 ms
2015-02-28 18:27:15,054 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:15,054 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:15.055 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:15,055 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:15.055 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((rowDimension <= 0) || (columnDimension <= 0)) {
    throw new java.lang.IllegalArgumentException("row and column dimensions must be postive");
} 
18:27:15.057 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:15.060 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.081 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.083 [Thread-282] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.087 [Thread-282] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:15.087 [Thread-282] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.088 [Thread-283] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.088 [Thread-283] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:15.088 [Thread-283] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[row and column dimensions must be postive]
java.lang.IllegalArgumentException: row and column dimensions must be postive
    at org.apache.commons.math.linear.RealMatrixImpl.<init>(RealMatrixImpl.java:90)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:77)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:15.088 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:89
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:15.088 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.088 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): row and column dimensions must be postive]
18:27:15.088 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:89 otherwise the patch would be "true" or "false"
18:27:15.088 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=89, Suspiciousness=0.05337605126836238]
18:27:15.088 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=278, Suspiciousness=0.05337605126836238]
18:27:15.089 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:15,089 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.091 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:15.094 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.111 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.111 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:278.
18:27:15.111 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=278, Suspiciousness=0.05337605126836238]
18:27:15.111 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=127, Suspiciousness=0.052057920629535355]
18:27:15.111 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,111 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.112 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.113 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.122 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.122 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:127.
18:27:15.122 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=127, Suspiciousness=0.052057920629535355]
18:27:15.122 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=128, Suspiciousness=0.052057920629535355]
18:27:15.123 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,123 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.123 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.124 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.133 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.133 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:128.
18:27:15.133 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=128, Suspiciousness=0.052057920629535355]
18:27:15.134 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=129, Suspiciousness=0.052057920629535355]
18:27:15.134 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,134 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.134 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.135 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.145 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.145 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,152 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,152 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,193 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:15,193 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:15,193 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:15.194 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,194 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:15.196 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < (wm.length) ; ++i) {
    double residual = wm[i].getResidual();
    criterion += ((wm[i].getWeight()) * residual) * residual;
} ##### Before:
{
    org.apache.commons.math.estimation.WeightedMeasurement[] wm = problem.getMeasurements();
    double criterion = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("criterion",criterion);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < (wm.length) ; ++i) {
        double residual = wm[i].getResidual();
        criterion += ((wm[i].getWeight()) * residual) * residual;
    }
    return java.lang.Math.sqrt((criterion / (wm.length)));
}
18:27:15.196 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < (wm.length) ; ++i) {
    double residual = wm[i].getResidual();
    criterion += ((wm[i].getWeight()) * residual) * residual;
} ##### After:
{
    org.apache.commons.math.estimation.WeightedMeasurement[] wm = problem.getMeasurements();
    double criterion = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("criterion",criterion);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < (wm.length) ; ++i) {
            double residual = wm[i].getResidual();
            criterion += ((wm[i].getWeight()) * residual) * residual;
        }
    
    return java.lang.Math.sqrt((criterion / (wm.length)));
}
18:27:15.196 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.197 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.211 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.213 [Thread-284] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.217 [Thread-284] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:15.217 [Thread-284] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:160)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.218 [Thread-285] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.218 [Thread-285] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:15.218 [Thread-285] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:160)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.218 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:129
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:15.218 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.218 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.218 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:129 otherwise the patch would be "true" or "false"
18:27:15.218 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=129, Suspiciousness=0.052057920629535355]
18:27:15.218 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=130, Suspiciousness=0.052057920629535355]
18:27:15.218 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,219 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.219 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.220 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.229 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.229 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:130.
18:27:15.230 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=130, Suspiciousness=0.052057920629535355]
18:27:15.230 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=131, Suspiciousness=0.052057920629535355]
18:27:15.230 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,230 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.230 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.231 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.240 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.241 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,247 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,248 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,288 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:15,288 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:15,299 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:15.300 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,300 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:15.302 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### criterion += ((wm[i].getWeight()) * residual) * residual ##### Before:
{
    double residual = wm[i].getResidual();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("criterion",criterion);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    criterion += ((wm[i].getWeight()) * residual) * residual;
}
18:27:15.302 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### criterion += ((wm[i].getWeight()) * residual) * residual ##### After:
{
    double residual = wm[i].getResidual();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("criterion",criterion);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        criterion += ((wm[i].getWeight()) * residual) * residual;
    
}
18:27:15.303 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.303 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.317 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.319 [Thread-286] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.323 [Thread-286] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:15.323 [Thread-286] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:161)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.324 [Thread-287] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.325 [Thread-287] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:15.325 [Thread-287] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:161)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.325 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:131
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:15.325 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.325 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.325 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:131 otherwise the patch would be "true" or "false"
18:27:15.325 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=131, Suspiciousness=0.052057920629535355]
18:27:15.325 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=129, Suspiciousness=0.052057920629535355]
18:27:15.326 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,326 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.326 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.327 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.337 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.337 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,344 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,344 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,384 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:15,385 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:15,385 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:15.385 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,385 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:15.387 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < (wm.length) ; ++i) {
    double residual = wm[i].getResidual();
    criterion += ((wm[i].getWeight()) * residual) * residual;
} ##### Before:
{
    org.apache.commons.math.estimation.WeightedMeasurement[] wm = problem.getMeasurements();
    double criterion = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("criterion",criterion);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < (wm.length) ; ++i) {
        double residual = wm[i].getResidual();
        criterion += ((wm[i].getWeight()) * residual) * residual;
    }
    return java.lang.Math.sqrt((criterion / (wm.length)));
}
18:27:15.388 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < (wm.length) ; ++i) {
    double residual = wm[i].getResidual();
    criterion += ((wm[i].getWeight()) * residual) * residual;
} ##### After:
{
    org.apache.commons.math.estimation.WeightedMeasurement[] wm = problem.getMeasurements();
    double criterion = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("criterion",criterion);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < (wm.length) ; ++i) {
            double residual = wm[i].getResidual();
            criterion += ((wm[i].getWeight()) * residual) * residual;
        }
    
    return java.lang.Math.sqrt((criterion / (wm.length)));
}
18:27:15.388 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.389 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.402 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.405 [Thread-288] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.409 [Thread-288] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:15.409 [Thread-288] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:160)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.410 [Thread-289] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.411 [Thread-289] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:15.411 [Thread-289] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:160)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.411 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:129
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:15.411 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.411 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.411 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:129 otherwise the patch would be "true" or "false"
18:27:15.411 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=129, Suspiciousness=0.052057920629535355]
18:27:15.411 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=133, Suspiciousness=0.052057920629535355]
18:27:15.412 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,412 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.412 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.413 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.422 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.423 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:133.
18:27:15.423 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=133, Suspiciousness=0.052057920629535355]
18:27:15.423 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=99, Suspiciousness=0.049690399499995326]
18:27:15.423 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,423 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.423 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.424 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.433 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.434 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,441 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,441 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,481 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:15,481 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:15,481 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:15.482 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,482 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:15.483 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((++(costEvaluations)) > (maxCostEval)) {
    throw new org.apache.commons.math.estimation.EstimationException("maximal number of evaluations exceeded ({0})" , new java.lang.Object[]{ new java.lang.Integer(maxCostEval) });
} 
18:27:15.483 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.484 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.497 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.500 [Thread-290] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.504 [Thread-290] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:15.504 [Thread-290] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.505 [Thread-291] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.507 [Thread-291] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:15.507 [Thread-291] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[maximal number of evaluations exceeded (100)]
org.apache.commons.math.estimation.EstimationException: maximal number of evaluations exceeded (100)
    at org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(AbstractEstimator.java:92)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:114)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:15.507 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:99
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:15.507 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.507 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): maximal number of evaluations exceeded (100)]
18:27:15.507 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:99 otherwise the patch would be "true" or "false"
18:27:15.507 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=99, Suspiciousness=0.049690399499995326]
18:27:15.507 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=104, Suspiciousness=0.049690399499995326]
18:27:15.507 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,507 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.508 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.509 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.519 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.519 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,526 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,526 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,566 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:15,566 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:15,567 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:15.567 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,567 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:15.569 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### cost = 0 ##### Before:
{
    if ((++(costEvaluations)) > (maxCostEval)) {
        throw new org.apache.commons.math.estimation.EstimationException("maximal number of evaluations exceeded ({0})" , new java.lang.Object[]{ new java.lang.Integer(maxCostEval) });
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    cost = 0;
    for (int i = 0, index = 0 ; i < (rows) ; i++ , index += cols) {
        org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
        double residual = wm.getResidual();
        residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
        cost += ((wm.getWeight()) * residual) * residual;
    }
    cost = java.lang.Math.sqrt(cost);
}
18:27:15.569 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### cost = 0 ##### After:
{
    if ((++(costEvaluations)) > (maxCostEval)) {
        throw new org.apache.commons.math.estimation.EstimationException("maximal number of evaluations exceeded ({0})" , new java.lang.Object[]{ new java.lang.Integer(maxCostEval) });
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        cost = 0;
    
    for (int i = 0, index = 0 ; i < (rows) ; i++ , index += cols) {
        org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
        double residual = wm.getResidual();
        residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
        cost += ((wm.getWeight()) * residual) * residual;
    }
    cost = java.lang.Math.sqrt(cost);
}
18:27:15.569 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.570 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.583 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.586 [Thread-292] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.589 [Thread-292] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:15.590 [Thread-292] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.590 [Thread-293] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.591 [Thread-293] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:15.591 [Thread-293] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.591 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:104
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:15.591 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.591 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.591 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:104 otherwise the patch would be "true" or "false"
18:27:15.591 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=104, Suspiciousness=0.049690399499995326]
18:27:15.591 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=105, Suspiciousness=0.049690399499995326]
18:27:15.591 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,591 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.592 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.593 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.603 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.603 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,610 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,610 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,650 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:15,650 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:15,650 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:15.651 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,651 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:15.652 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0, index = 0 ; i < (rows) ; i++ , index += cols) {
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double residual = wm.getResidual();
    residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
    cost += ((wm.getWeight()) * residual) * residual;
} ##### Before:
{
    if ((++(costEvaluations)) > (maxCostEval)) {
        throw new org.apache.commons.math.estimation.EstimationException("maximal number of evaluations exceeded ({0})" , new java.lang.Object[]{ new java.lang.Integer(maxCostEval) });
    } 
    cost = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0, index = 0 ; i < (rows) ; i++ , index += cols) {
        org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
        double residual = wm.getResidual();
        residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
        cost += ((wm.getWeight()) * residual) * residual;
    }
    cost = java.lang.Math.sqrt(cost);
}
18:27:15.653 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0, index = 0 ; i < (rows) ; i++ , index += cols) {
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double residual = wm.getResidual();
    residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
    cost += ((wm.getWeight()) * residual) * residual;
} ##### After:
{
    if ((++(costEvaluations)) > (maxCostEval)) {
        throw new org.apache.commons.math.estimation.EstimationException("maximal number of evaluations exceeded ({0})" , new java.lang.Object[]{ new java.lang.Integer(maxCostEval) });
    } 
    cost = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0, index = 0 ; i < (rows) ; i++ , index += cols) {
            org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
            double residual = wm.getResidual();
            residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
            cost += ((wm.getWeight()) * residual) * residual;
        }
    
    cost = java.lang.Math.sqrt(cost);
}
18:27:15.653 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.654 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.667 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.669 [Thread-294] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.672 [Thread-294] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:15.673 [Thread-294] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.674 [Thread-295] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.674 [Thread-295] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:15.675 [Thread-295] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.675 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:105
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:15.675 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.675 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.675 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:105 otherwise the patch would be "true" or "false"
18:27:15.675 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=105, Suspiciousness=0.049690399499995326]
18:27:15.675 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=106, Suspiciousness=0.049690399499995326]
18:27:15.675 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,675 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.676 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.677 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.687 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.687 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:106.
18:27:15.687 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=106, Suspiciousness=0.049690399499995326]
18:27:15.687 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=107, Suspiciousness=0.049690399499995326]
18:27:15.687 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,688 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.688 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.689 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.699 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.699 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:107.
18:27:15.699 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=107, Suspiciousness=0.049690399499995326]
18:27:15.699 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=108, Suspiciousness=0.049690399499995326]
18:27:15.699 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,699 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.700 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.701 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.710 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.711 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,717 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,718 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,758 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:15,758 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:15,758 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:15.759 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,759 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:15.760 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual ##### Before:
{
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double residual = wm.getResidual();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
    cost += ((wm.getWeight()) * residual) * residual;
}
18:27:15.760 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual ##### After:
{
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double residual = wm.getResidual();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
    
    cost += ((wm.getWeight()) * residual) * residual;
}
18:27:15.761 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.761 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.776 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.778 [Thread-296] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.782 [Thread-296] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:15.782 [Thread-296] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:159)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.783 [Thread-297] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.784 [Thread-297] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:15.784 [Thread-297] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:159)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.784 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:108
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:15.784 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.784 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.784 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:108 otherwise the patch would be "true" or "false"
18:27:15.785 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=108, Suspiciousness=0.049690399499995326]
18:27:15.785 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=109, Suspiciousness=0.049690399499995326]
18:27:15.785 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,785 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.785 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.786 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.796 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.796 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,803 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,803 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,843 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:15,843 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:15,843 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:15.844 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,844 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:15.845 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### cost += ((wm.getWeight()) * residual) * residual ##### Before:
{
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double residual = wm.getResidual();
    residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    cost += ((wm.getWeight()) * residual) * residual;
}
18:27:15.846 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### cost += ((wm.getWeight()) * residual) * residual ##### After:
{
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double residual = wm.getResidual();
    residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("wm",wm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("residual",residual);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        cost += ((wm.getWeight()) * residual) * residual;
    
}
18:27:15.846 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.847 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.860 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.883 [Thread-298] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.887 [Thread-298] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:15.887 [Thread-298] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:159)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.888 [Thread-299] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.889 [Thread-299] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:15.889 [Thread-299] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:159)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.889 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:109
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:15.889 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.889 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.889 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:109 otherwise the patch would be "true" or "false"
18:27:15.889 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=109, Suspiciousness=0.049690399499995326]
18:27:15.889 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=105, Suspiciousness=0.049690399499995326]
18:27:15.889 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,889 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.890 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.891 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.901 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.902 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,909 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,909 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,950 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:15,950 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:15,950 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:15.951 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,951 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:15.952 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0, index = 0 ; i < (rows) ; i++ , index += cols) {
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double residual = wm.getResidual();
    residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
    cost += ((wm.getWeight()) * residual) * residual;
} ##### Before:
{
    if ((++(costEvaluations)) > (maxCostEval)) {
        throw new org.apache.commons.math.estimation.EstimationException("maximal number of evaluations exceeded ({0})" , new java.lang.Object[]{ new java.lang.Integer(maxCostEval) });
    } 
    cost = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0, index = 0 ; i < (rows) ; i++ , index += cols) {
        org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
        double residual = wm.getResidual();
        residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
        cost += ((wm.getWeight()) * residual) * residual;
    }
    cost = java.lang.Math.sqrt(cost);
}
18:27:15.952 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0, index = 0 ; i < (rows) ; i++ , index += cols) {
    org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
    double residual = wm.getResidual();
    residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
    cost += ((wm.getWeight()) * residual) * residual;
} ##### After:
{
    if ((++(costEvaluations)) > (maxCostEval)) {
        throw new org.apache.commons.math.estimation.EstimationException("maximal number of evaluations exceeded ({0})" , new java.lang.Object[]{ new java.lang.Integer(maxCostEval) });
    } 
    cost = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0, index = 0 ; i < (rows) ; i++ , index += cols) {
            org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
            double residual = wm.getResidual();
            residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
            cost += ((wm.getWeight()) * residual) * residual;
        }
    
    cost = java.lang.Math.sqrt(cost);
}
18:27:15.952 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.953 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.967 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.970 [Thread-300] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.974 [Thread-300] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:15.974 [Thread-300] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.975 [Thread-301] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:15.975 [Thread-301] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:15.975 [Thread-301] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:15.975 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:105
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:15.975 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.976 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:15.976 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:105 otherwise the patch would be "true" or "false"
18:27:15.976 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=105, Suspiciousness=0.049690399499995326]
18:27:15.976 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=111, Suspiciousness=0.049690399499995326]
18:27:15.976 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:15,976 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:15.976 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:15.977 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:15.987 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:15.987 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,994 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:15,994 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,034 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:16,034 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:16,034 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:16.035 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,035 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:16.036 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### cost = java.lang.Math.sqrt(cost) ##### Before:
{
    if ((++(costEvaluations)) > (maxCostEval)) {
        throw new org.apache.commons.math.estimation.EstimationException("maximal number of evaluations exceeded ({0})" , new java.lang.Object[]{ new java.lang.Integer(maxCostEval) });
    } 
    cost = 0;
    for (int i = 0, index = 0 ; i < (rows) ; i++ , index += cols) {
        org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
        double residual = wm.getResidual();
        residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
        cost += ((wm.getWeight()) * residual) * residual;
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    cost = java.lang.Math.sqrt(cost);
}
18:27:16.037 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### cost = java.lang.Math.sqrt(cost) ##### After:
{
    if ((++(costEvaluations)) > (maxCostEval)) {
        throw new org.apache.commons.math.estimation.EstimationException("maximal number of evaluations exceeded ({0})" , new java.lang.Object[]{ new java.lang.Integer(maxCostEval) });
    } 
    cost = 0;
    for (int i = 0, index = 0 ; i < (rows) ; i++ , index += cols) {
        org.apache.commons.math.estimation.WeightedMeasurement wm = measurements[i];
        double residual = wm.getResidual();
        residuals[i] = (java.lang.Math.sqrt(wm.getWeight())) * residual;
        cost += ((wm.getWeight()) * residual) * residual;
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        cost = java.lang.Math.sqrt(cost);
    
}
18:27:16.037 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.038 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.051 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.054 [Thread-302] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.058 [Thread-302] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:16.058 [Thread-302] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.059 [Thread-303] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.059 [Thread-303] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:16.060 [Thread-303] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.060 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:111
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:16.060 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.060 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.060 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:111 otherwise the patch would be "true" or "false"
18:27:16.060 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=111, Suspiciousness=0.049690399499995326]
18:27:16.060 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=113, Suspiciousness=0.049690399499995326]
18:27:16.060 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,060 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.061 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.061 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.071 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.071 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:113.
18:27:16.071 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=113, Suspiciousness=0.049690399499995326]
18:27:16.071 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=79, Suspiciousness=0.04914731871829905]
18:27:16.071 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.EstimatedParameter]
2015-02-28 18:27:16,071 DEBUG spoon.support.StandardEnvironment - processing 'EstimatedParameter' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.071 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.EstimatedParameter]
18:27:16.072 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.077 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.077 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/EstimatedParameter.java]
2015-02-28 18:27:16,084 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/EstimatedParameter.java]
2015-02-28 18:27:16,084 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/EstimatedParameter.java]
2015-02-28 18:27:16,118 DEBUG spoon.support.StandardEnvironment - built in 34 ms
2015-02-28 18:27:16,118 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:16,118 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:16.119 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.EstimatedParameter]
2015-02-28 18:27:16,119 DEBUG spoon.support.StandardEnvironment - processing 'EstimatedParameter' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:16.120 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.estimate = estimate ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.EstimatedParameter.this.bound",org.apache.commons.math.estimation.EstimatedParameter.this.bound);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.EstimatedParameter.this.estimate",org.apache.commons.math.estimation.EstimatedParameter.this.estimate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("estimate",estimate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.EstimatedParameter.this.name",org.apache.commons.math.estimation.EstimatedParameter.this.name);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.EstimatedParameter.serialVersionUID",org.apache.commons.math.estimation.EstimatedParameter.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    this.estimate = estimate;
}
18:27:16.120 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.estimate = estimate ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.EstimatedParameter.this.bound",org.apache.commons.math.estimation.EstimatedParameter.this.bound);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.EstimatedParameter.this.estimate",org.apache.commons.math.estimation.EstimatedParameter.this.estimate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("estimate",estimate);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.EstimatedParameter.this.name",org.apache.commons.math.estimation.EstimatedParameter.this.name);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.EstimatedParameter.serialVersionUID",org.apache.commons.math.estimation.EstimatedParameter.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        this.estimate = estimate;
    
}
18:27:16.120 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.EstimatedParameter]
18:27:16.120 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.129 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.132 [Thread-304] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.135 [Thread-304] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:16.135 [Thread-304] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.136 [Thread-305] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.137 [Thread-305] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:16.137 [Thread-305] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:471)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
18:27:16.137 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.EstimatedParameter:79
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:16.137 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.137 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:16.137 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.EstimatedParameter:79 otherwise the patch would be "true" or "false"
18:27:16.137 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=79, Suspiciousness=0.04914731871829905]
18:27:16.137 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=80, Suspiciousness=0.04914731871829905]
18:27:16.137 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.EstimatedParameter]
2015-02-28 18:27:16,137 DEBUG spoon.support.StandardEnvironment - processing 'EstimatedParameter' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.138 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.EstimatedParameter]
18:27:16.138 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.143 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.143 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.EstimatedParameter:80.
18:27:16.143 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=80, Suspiciousness=0.04914731871829905]
18:27:16.143 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=38, Suspiciousness=0.048112522432468816]
18:27:16.143 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,143 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.144 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.145 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.154 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.154 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:38.
18:27:16.154 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=38, Suspiciousness=0.048112522432468816]
18:27:16.154 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=39, Suspiciousness=0.048112522432468816]
18:27:16.154 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,154 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.155 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.155 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.165 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.165 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:39.
18:27:16.165 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=39, Suspiciousness=0.048112522432468816]
18:27:16.165 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=48, Suspiciousness=0.048112522432468816]
18:27:16.165 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,165 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.166 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.166 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.176 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.176 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,183 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,183 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,223 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:16,223 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:16,223 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:16.224 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,224 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:16.225 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.maxCostEval = maxCostEval ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("maxCostEval",maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    this.maxCostEval = maxCostEval;
}
18:27:16.226 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.maxCostEval = maxCostEval ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("maxCostEval",maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        this.maxCostEval = maxCostEval;
    
}
18:27:16.226 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.227 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.240 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.243 [Thread-306] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.247 [Thread-306] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:16.247 [Thread-306] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[maximal number of evaluations exceeded (0)]
org.apache.commons.math.estimation.EstimationException: maximal number of evaluations exceeded (0)
    at org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(AbstractEstimator.java:93)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:114)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:16.249 [Thread-307] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.249 [Thread-307] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:16.249 [Thread-307] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:158)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.250 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:48
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:16.250 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): maximal number of evaluations exceeded (0)]
18:27:16.250 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.250 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:48 otherwise the patch would be "true" or "false"
18:27:16.250 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=48, Suspiciousness=0.048112522432468816]
18:27:16.250 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=49, Suspiciousness=0.048112522432468816]
18:27:16.250 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,250 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.251 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.251 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.261 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.261 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:49.
18:27:16.261 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=49, Suspiciousness=0.048112522432468816]
18:27:16.261 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=88, Suspiciousness=0.048112522432468816]
18:27:16.261 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,261 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.262 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.263 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.272 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.272 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,279 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,279 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,319 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:16,320 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:16,320 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:16.320 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,320 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:16.322 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ++(jacobianEvaluations) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    ++(jacobianEvaluations);
}
18:27:16.322 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### ++(jacobianEvaluations) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        ++(jacobianEvaluations);
    
}
18:27:16.322 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.323 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.336 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.339 [Thread-308] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.342 [Thread-308] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:16.342 [Thread-308] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.343 [Thread-309] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.343 [Thread-309] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:16.344 [Thread-309] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:157)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.344 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:88
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:16.344 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.344 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.344 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:88 otherwise the patch would be "true" or "false"
18:27:16.344 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=88, Suspiciousness=0.048112522432468816]
18:27:16.344 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=89, Suspiciousness=0.048112522432468816]
18:27:16.344 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,344 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.345 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.345 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.355 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.355 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:89.
18:27:16.355 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=89, Suspiciousness=0.048112522432468816]
18:27:16.355 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=226, Suspiciousness=0.048112522432468816]
18:27:16.355 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,355 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.356 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.356 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.366 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.366 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,373 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,373 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,413 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:16,413 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:16,413 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:16.414 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,414 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:16.416 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### costEvaluations = 0 ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    costEvaluations = 0;
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:16.416 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### costEvaluations = 0 ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        costEvaluations = 0;
    
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:16.416 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.417 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.430 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.433 [Thread-310] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.437 [Thread-310] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:16.437 [Thread-310] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.438 [Thread-311] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.439 [Thread-311] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:16.439 [Thread-311] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.439 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:226
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:16.439 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.439 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.439 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:226 otherwise the patch would be "true" or "false"
18:27:16.439 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=226, Suspiciousness=0.048112522432468816]
18:27:16.439 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=227, Suspiciousness=0.048112522432468816]
18:27:16.439 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,439 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.440 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.441 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.450 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.450 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,457 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,458 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,498 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:16,498 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:16,498 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:16.499 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,499 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:16.501 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### jacobianEvaluations = 0 ##### Before:
{
    costEvaluations = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:16.501 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### jacobianEvaluations = 0 ##### After:
{
    costEvaluations = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        jacobianEvaluations = 0;
    
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:16.501 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.502 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.516 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.518 [Thread-312] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.522 [Thread-312] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:16.522 [Thread-312] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.523 [Thread-313] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.523 [Thread-313] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:16.523 [Thread-313] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.524 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:227
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:16.524 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.524 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.524 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:227 otherwise the patch would be "true" or "false"
18:27:16.524 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=227, Suspiciousness=0.048112522432468816]
18:27:16.524 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=230, Suspiciousness=0.048112522432468816]
18:27:16.524 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,524 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.525 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.525 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.535 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.535 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,542 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,542 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,582 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:16,582 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:16,582 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:16.583 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,583 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:16.585 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### measurements = problem.getMeasurements() ##### Before:
{
    costEvaluations = 0;
    jacobianEvaluations = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:16.585 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### measurements = problem.getMeasurements() ##### After:
{
    costEvaluations = 0;
    jacobianEvaluations = 0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        measurements = problem.getMeasurements();
    
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:16.585 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.586 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.599 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.601 [Thread-314] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.604 [Thread-314] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:16.604 [Thread-314] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate(AbstractEstimator.java:207)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:75)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:16.605 [Thread-315] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.606 [Thread-315] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:16.606 [Thread-315] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.606 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:230
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:16.606 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:16.606 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.606 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:230 otherwise the patch would be "true" or "false"
18:27:16.606 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=230, Suspiciousness=0.048112522432468816]
18:27:16.606 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=231, Suspiciousness=0.048112522432468816]
18:27:16.607 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,607 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.607 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.608 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.617 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.617 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,624 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,625 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,665 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:16,665 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:16,665 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:16.665 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,666 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:16.667 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### parameters = problem.getUnboundParameters() ##### Before:
{
    costEvaluations = 0;
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:16.668 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### parameters = problem.getUnboundParameters() ##### After:
{
    costEvaluations = 0;
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        parameters = problem.getUnboundParameters();
    
    rows = measurements.length;
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:16.668 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.669 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.682 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.684 [Thread-316] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.688 [Thread-316] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:16.688 [Thread-316] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.689 [Thread-317] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.689 [Thread-317] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:16.689 [Thread-317] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate(AbstractEstimator.java:208)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:75)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:16.689 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:231
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:16.689 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.689 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:16.689 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:231 otherwise the patch would be "true" or "false"
18:27:16.689 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=231, Suspiciousness=0.048112522432468816]
18:27:16.689 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=234, Suspiciousness=0.048112522432468816]
18:27:16.689 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,689 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.690 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.691 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.700 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.700 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,707 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,708 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,748 DEBUG spoon.support.StandardEnvironment - built in 41 ms
2015-02-28 18:27:16,748 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:16,748 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:16.748 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,749 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:16.751 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### rows = measurements.length ##### Before:
{
    costEvaluations = 0;
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    rows = measurements.length;
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:16.751 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### rows = measurements.length ##### After:
{
    costEvaluations = 0;
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        rows = measurements.length;
    
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:16.751 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.752 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.765 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.768 [Thread-318] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.771 [Thread-318] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:16.771 [Thread-318] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[0]
java.lang.ArrayIndexOutOfBoundsException: 0
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.772 [Thread-319] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.772 [Thread-319] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:16.772 [Thread-319] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.773 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:234
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:16.773 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 0]
18:27:16.773 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.773 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:234 otherwise the patch would be "true" or "false"
18:27:16.773 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=234, Suspiciousness=0.048112522432468816]
18:27:16.773 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=235, Suspiciousness=0.048112522432468816]
18:27:16.773 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,773 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.774 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.775 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.784 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.784 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,791 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,791 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,831 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:16,831 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:16,831 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:16.832 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,832 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:16.834 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### cols = parameters.length ##### Before:
{
    costEvaluations = 0;
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:16.834 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### cols = parameters.length ##### After:
{
    costEvaluations = 0;
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        cols = parameters.length;
    
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:16.835 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.835 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.848 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.851 [Thread-320] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.855 [Thread-320] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:16.855 [Thread-320] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.856 [Thread-321] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.856 [Thread-321] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:16.857 [Thread-321] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[0]
java.lang.ArrayIndexOutOfBoundsException: 0
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.857 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:235
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:16.857 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.857 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 0]
18:27:16.857 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:235 otherwise the patch would be "true" or "false"
18:27:16.857 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=235, Suspiciousness=0.048112522432468816]
18:27:16.857 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=236, Suspiciousness=0.048112522432468816]
18:27:16.857 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,857 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.858 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.859 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.868 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.869 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,875 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,876 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,916 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:16,916 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:16,916 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:16.916 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,916 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:16.918 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### jacobian = new double[(rows) * (cols)] ##### Before:
{
    costEvaluations = 0;
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    cols = parameters.length;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:16.919 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### jacobian = new double[(rows) * (cols)] ##### After:
{
    costEvaluations = 0;
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    cols = parameters.length;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        jacobian = new double[(rows) * (cols)];
    
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:16.919 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.920 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.933 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.936 [Thread-322] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.940 [Thread-322] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:16.940 [Thread-322] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
java.lang.NullPointerException
    at java.util.Arrays.fill(Arrays.java:2097)
    at org.apache.commons.math.estimation.AbstractEstimator.updateJacobian(AbstractEstimator.java:50)
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:130)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
18:27:16.941 [Thread-323] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:16.942 [Thread-323] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:16.942 [Thread-323] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:16.942 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:236
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:16.942 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:16.942 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:16.942 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:236 otherwise the patch would be "true" or "false"
18:27:16.942 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=236, Suspiciousness=0.048112522432468816]
18:27:16.942 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=237, Suspiciousness=0.048112522432468816]
18:27:16.942 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:16,942 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:16.943 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:16.944 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:16.953 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:16.953 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,960 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:16,960 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:17,000 DEBUG spoon.support.StandardEnvironment - built in 40 ms
2015-02-28 18:27:17,001 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:17,001 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:17.001 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:17,001 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:17.003 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### residuals = new double[rows] ##### Before:
{
    costEvaluations = 0;
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    residuals = new double[rows];
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:17.004 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### residuals = new double[rows] ##### After:
{
    costEvaluations = 0;
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        residuals = new double[rows];
    
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:17.004 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:17.005 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:17.017 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:17.020 [Thread-324] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:17.024 [Thread-324] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:17.024 [Thread-324] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:17.025 [Thread-325] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:17.025 [Thread-325] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:17.025 [Thread-325] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(AbstractEstimator.java:80)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:114)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
18:27:17.025 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:237
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:17.025 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:17.025 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:17.025 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:237 otherwise the patch would be "true" or "false"
18:27:17.025 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=237, Suspiciousness=0.048112522432468816]
18:27:17.025 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=239, Suspiciousness=0.048112522432468816]
18:27:17.026 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:17,026 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:17.026 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:17.027 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:17.036 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:17.036 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:17,043 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:17,043 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/estimation/AbstractEstimator.java]
2015-02-28 18:27:17,085 DEBUG spoon.support.StandardEnvironment - built in 42 ms
2015-02-28 18:27:17,086 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:17,086 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:17.086 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:17,086 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:17.089 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### cost = java.lang.Double.POSITIVE_INFINITY ##### Before:
{
    costEvaluations = 0;
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    cost = java.lang.Double.POSITIVE_INFINITY;
}
18:27:17.089 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### cost = java.lang.Double.POSITIVE_INFINITY ##### After:
{
    costEvaluations = 0;
    jacobianEvaluations = 0;
    measurements = problem.getMeasurements();
    parameters = problem.getUnboundParameters();
    rows = measurements.length;
    cols = parameters.length;
    jacobian = new double[(rows) * (cols)];
    residuals = new double[rows];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.costEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.rows",org.apache.commons.math.estimation.AbstractEstimator.this.rows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cost",org.apache.commons.math.estimation.AbstractEstimator.this.cost);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.parameters",org.apache.commons.math.estimation.AbstractEstimator.this.parameters);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobian",org.apache.commons.math.estimation.AbstractEstimator.this.jacobian);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval",org.apache.commons.math.estimation.AbstractEstimator.this.maxCostEval);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.measurements",org.apache.commons.math.estimation.AbstractEstimator.this.measurements);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("problem",problem);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.cols",org.apache.commons.math.estimation.AbstractEstimator.this.cols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations",org.apache.commons.math.estimation.AbstractEstimator.this.jacobianEvaluations);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.estimation.AbstractEstimator.this.residuals",org.apache.commons.math.estimation.AbstractEstimator.this.residuals);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        cost = java.lang.Double.POSITIVE_INFINITY;
    
}
18:27:17.089 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:17.090 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:17.105 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:17.108 [Thread-326] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:17.112 [Thread-326] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:17.112 [Thread-326] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:17.113 [Thread-327] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:17.113 [Thread-327] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:17.113 [Thread-327] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:17.114 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.estimation.AbstractEstimator:239
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:17.114 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:17.114 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:17.114 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:239 otherwise the patch would be "true" or "false"
18:27:17.114 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=239, Suspiciousness=0.048112522432468816]
18:27:17.114 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=241, Suspiciousness=0.048112522432468816]
18:27:17.114 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.AbstractEstimator]
2015-02-28 18:27:17,114 DEBUG spoon.support.StandardEnvironment - processing 'AbstractEstimator' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:17.115 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.AbstractEstimator]
18:27:17.116 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:17.127 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:17.127 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.AbstractEstimator:241.
18:27:17.127 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.AbstractEstimator, LineNumber=241, Suspiciousness=0.048112522432468816]
18:27:17.127 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=92, Suspiciousness=0.047619047619047616]
18:27:17.127 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.WeightedMeasurement]
2015-02-28 18:27:17,127 DEBUG spoon.support.StandardEnvironment - processing 'WeightedMeasurement' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:17.127 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.WeightedMeasurement]
18:27:17.128 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:17.133 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:17.133 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.WeightedMeasurement:92.
18:27:17.134 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=92, Suspiciousness=0.047619047619047616]
18:27:17.134 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=111, Suspiciousness=0.047619047619047616]
18:27:17.134 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.WeightedMeasurement]
2015-02-28 18:27:17,134 DEBUG spoon.support.StandardEnvironment - processing 'WeightedMeasurement' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:17.134 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.WeightedMeasurement]
18:27:17.134 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:17.140 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:17.140 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.WeightedMeasurement:111.
18:27:17.140 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.WeightedMeasurement, LineNumber=111, Suspiciousness=0.047619047619047616]
18:27:17.140 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=523, Suspiciousness=0.046225016352102424]
18:27:17.140 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:17,140 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:17.142 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:17.146 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:17.165 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:17.165 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:17,173 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:17,173 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:17,652 DEBUG spoon.support.StandardEnvironment - built in 479 ms
2015-02-28 18:27:17,652 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:17,652 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:17.653 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:17,653 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:17.654 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (!(isValidCoordinate(row, column))) {
    throw new org.apache.commons.math.linear.MatrixIndexException("matrix entry does not exist");
} 
18:27:17.655 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:17.658 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:17.679 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:17.682 [Thread-328] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:17.686 [Thread-328] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:17.686 [Thread-328] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[matrix entry does not exist]
org.apache.commons.math.linear.MatrixIndexException: matrix entry does not exist
    at org.apache.commons.math.linear.RealMatrixImpl.getEntry(RealMatrixImpl.java:508)
    at org.apache.commons.math.linear.RealMatrixImpl.add(RealMatrixImpl.java:142)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:101)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
18:27:17.687 [Thread-329] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:17.689 [Thread-329] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:17.689 [Thread-329] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:17.689 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:523
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:17.689 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): matrix entry does not exist]
18:27:17.689 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:17.689 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:523 otherwise the patch would be "true" or "false"
18:27:17.689 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=523, Suspiciousness=0.046225016352102424]
18:27:17.689 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=526, Suspiciousness=0.046225016352102424]
18:27:17.689 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:17,689 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:17.691 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:17.695 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:17.711 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:17.711 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:526.
18:27:17.711 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=526, Suspiciousness=0.046225016352102424]
18:27:17.711 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=405, Suspiciousness=0.04578685464956301]
18:27:17.712 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:17,712 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:17.714 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:17.717 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:17.733 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:17.733 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:17,740 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:17,741 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:17,800 DEBUG spoon.support.StandardEnvironment - built in 59 ms
2015-02-28 18:27:17,800 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:17,800 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:17.801 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:17,801 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:17.804 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((subMatrix[r].length) != nCols) {
    throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
} 
18:27:17.804 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:17.807 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:17.827 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:17.830 [Thread-330] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:17.834 [Thread-330] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:17.834 [Thread-330] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:17.835 [Thread-331] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:17.836 [Thread-331] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:17.836 [Thread-331] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[All input rows must have the same length.]
java.lang.IllegalArgumentException: All input rows must have the same length.
    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:396)
    at org.apache.commons.math.linear.RealMatrixImpl.copyIn(RealMatrixImpl.java:976)
    at org.apache.commons.math.linear.RealMatrixImpl.<init>(RealMatrixImpl.java:96)
    at org.apache.commons.math.linear.RealMatrixImpl.add(RealMatrixImpl.java:145)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:101)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
18:27:17.836 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:405
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:17.836 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:17.836 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): All input rows must have the same length.]
18:27:17.836 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:405 otherwise the patch would be "true" or "false"
18:27:17.836 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=405, Suspiciousness=0.04578685464956301]
18:27:17.836 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=404, Suspiciousness=0.04578685464956301]
18:27:17.836 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:17,836 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:17.838 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:17.842 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:17.858 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:17.858 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:17,865 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:17,865 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:17,924 DEBUG spoon.support.StandardEnvironment - built in 59 ms
2015-02-28 18:27:17,924 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:17,924 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:17.925 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:17,925 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:17.928 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int r = 1 ; r < nRows ; r++) {
    if ((subMatrix[r].length) != nCols) {
        throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
    } 
} ##### Before:
{
    if ((row < 0) || (column < 0)) {
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    } 
    int nRows = subMatrix.length;
    if (nRows == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one row.");
    } 
    int nCols = subMatrix[0].length;
    if (nCols == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one column.");
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int r = 1 ; r < nRows ; r++) {
        if ((subMatrix[r].length) != nCols) {
            throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
        } 
    }
    if ((data) == null) {
        if ((row > 0) || (column > 0))
            throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
        
        data = new double[nRows][nCols];
        java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
    } 
    if (((nRows + row) > (getRowDimension())) || ((nCols + column) > (getColumnDimension())))
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    
    for (int i = 0 ; i < nRows ; i++) {
        java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
    }
    lu = null;
}
18:27:17.928 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int r = 1 ; r < nRows ; r++) {
    if ((subMatrix[r].length) != nCols) {
        throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
    } 
} ##### After:
{
    if ((row < 0) || (column < 0)) {
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    } 
    int nRows = subMatrix.length;
    if (nRows == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one row.");
    } 
    int nCols = subMatrix[0].length;
    if (nCols == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one column.");
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int r = 1 ; r < nRows ; r++) {
            if ((subMatrix[r].length) != nCols) {
                throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
            } 
        }
    
    if ((data) == null) {
        if ((row > 0) || (column > 0))
            throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
        
        data = new double[nRows][nCols];
        java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
    } 
    if (((nRows + row) > (getRowDimension())) || ((nCols + column) > (getColumnDimension())))
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    
    for (int i = 0 ; i < nRows ; i++) {
        java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
    }
    lu = null;
}
18:27:17.928 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:17.931 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:17.951 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:17.955 [Thread-332] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:17.959 [Thread-332] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:17.959 [Thread-332] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:17.960 [Thread-333] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:17.961 [Thread-333] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:17.961 [Thread-333] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:17.961 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:404
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:17.961 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:17.961 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:17.961 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:404 otherwise the patch would be "true" or "false"
18:27:17.961 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=404, Suspiciousness=0.04578685464956301]
18:27:17.961 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1031, Suspiciousness=0.04578685464956301]
18:27:17.962 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:17,962 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:17.964 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:17.967 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:17.983 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:17.983 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1031.
18:27:17.983 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1031, Suspiciousness=0.04578685464956301]
18:27:17.983 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1032, Suspiciousness=0.04578685464956301]
18:27:17.983 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:17,983 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:17.985 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:17.988 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.004 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.005 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1032.
18:27:18.005 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1032, Suspiciousness=0.04578685464956301]
18:27:18.005 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1034, Suspiciousness=0.04578685464956301]
18:27:18.005 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,005 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.007 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.010 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.026 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.026 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1034.
18:27:18.026 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1034, Suspiciousness=0.04578685464956301]
18:27:18.026 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=86, Suspiciousness=0.04578685464956301]
18:27:18.027 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.estimation.EstimatedParameter]
2015-02-28 18:27:18,027 DEBUG spoon.support.StandardEnvironment - processing 'EstimatedParameter' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.027 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.estimation.EstimatedParameter]
18:27:18.027 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.032 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.032 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.estimation.EstimatedParameter:86.
18:27:18.032 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.estimation.EstimatedParameter, LineNumber=86, Suspiciousness=0.04578685464956301]
18:27:18.032 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=108, Suspiciousness=0.044946657497549475]
18:27:18.032 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,032 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.034 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.038 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.054 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.054 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:108.
18:27:18.054 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=108, Suspiciousness=0.044946657497549475]
18:27:18.054 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=58, Suspiciousness=0.044946657497549475]
18:27:18.054 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,054 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.056 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.059 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.075 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.075 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:58.
18:27:18.075 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=58, Suspiciousness=0.044946657497549475]
18:27:18.075 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=63, Suspiciousness=0.044946657497549475]
18:27:18.075 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,075 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.077 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.080 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.097 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.097 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:63.
18:27:18.097 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=63, Suspiciousness=0.044946657497549475]
18:27:18.097 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=66, Suspiciousness=0.044946657497549475]
18:27:18.097 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,097 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.099 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.102 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.118 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.118 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:66.
18:27:18.118 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=66, Suspiciousness=0.044946657497549475]
18:27:18.118 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=69, Suspiciousness=0.044946657497549475]
18:27:18.119 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,119 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.120 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.124 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.140 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.140 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:69.
18:27:18.140 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=69, Suspiciousness=0.044946657497549475]
18:27:18.140 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=109, Suspiciousness=0.044946657497549475]
18:27:18.140 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,140 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.142 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.145 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.161 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.162 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,168 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,169 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,227 DEBUG spoon.support.StandardEnvironment - built in 58 ms
2015-02-28 18:27:18,227 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:18,227 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:18.228 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,228 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:18.228 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### copyIn(d) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    copyIn(d);
    lu = null;
}
18:27:18.228 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### copyIn(d) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        copyIn(d);
    
    lu = null;
}
18:27:18.229 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.233 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.252 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.255 [Thread-334] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:18.258 [Thread-334] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:18.258 [Thread-334] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(RealMatrixImpl.java:588)
    at org.apache.commons.math.linear.RealMatrixImpl.add(RealMatrixImpl.java:142)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:101)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
18:27:18.259 [Thread-335] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:18.260 [Thread-335] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:18.260 [Thread-335] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:18.260 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:109
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:18.260 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:18.260 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:18.260 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:109 otherwise the patch would be "true" or "false"
18:27:18.260 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=109, Suspiciousness=0.044946657497549475]
18:27:18.260 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=110, Suspiciousness=0.044946657497549475]
18:27:18.260 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,261 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.262 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.266 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.282 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.282 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,289 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,289 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,347 DEBUG spoon.support.StandardEnvironment - built in 58 ms
2015-02-28 18:27:18,347 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:18,347 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:18.348 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,348 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:18.349 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lu = null ##### Before:
{
    copyIn(d);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lu = null;
}
18:27:18.349 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lu = null ##### After:
{
    copyIn(d);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lu = null;
    
}
18:27:18.350 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.354 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.373 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.376 [Thread-336] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:18.379 [Thread-336] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:18.379 [Thread-336] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:18.380 [Thread-337] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:18.381 [Thread-337] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:18.381 [Thread-337] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:18.381 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:110
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:18.381 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:18.381 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:18.381 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:110 otherwise the patch would be "true" or "false"
18:27:18.381 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=110, Suspiciousness=0.044946657497549475]
18:27:18.381 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=111, Suspiciousness=0.044946657497549475]
18:27:18.381 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,381 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.383 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.386 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.402 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.403 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:111.
18:27:18.403 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=111, Suspiciousness=0.044946657497549475]
18:27:18.403 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=390, Suspiciousness=0.044946657497549475]
18:27:18.403 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,403 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.405 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.408 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.424 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.424 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,431 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,431 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,489 DEBUG spoon.support.StandardEnvironment - built in 58 ms
2015-02-28 18:27:18,489 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:18,490 DEBUG spoon.support.StandardEnvironment - built in 1 ms
18:27:18.490 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,490 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:18.493 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((row < 0) || (column < 0)) {
    throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
} 
18:27:18.493 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.496 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.516 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.520 [Thread-338] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:18.524 [Thread-338] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:18.524 [Thread-338] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:18.525 [Thread-339] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:18.525 [Thread-339] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:18.525 [Thread-339] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[invalid row or column index selection]
org.apache.commons.math.linear.MatrixIndexException: invalid row or column index selection
    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:385)
    at org.apache.commons.math.linear.RealMatrixImpl.copyIn(RealMatrixImpl.java:977)
    at org.apache.commons.math.linear.RealMatrixImpl.<init>(RealMatrixImpl.java:96)
    at org.apache.commons.math.linear.RealMatrixImpl.add(RealMatrixImpl.java:145)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:101)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
18:27:18.526 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:390
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:18.526 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:18.526 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): invalid row or column index selection]
18:27:18.526 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:390 otherwise the patch would be "true" or "false"
18:27:18.526 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=390, Suspiciousness=0.044946657497549475]
18:27:18.526 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=394, Suspiciousness=0.044946657497549475]
18:27:18.526 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,526 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.528 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.531 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.547 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.547 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:394.
18:27:18.547 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=394, Suspiciousness=0.044946657497549475]
18:27:18.547 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=395, Suspiciousness=0.044946657497549475]
18:27:18.548 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,548 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.549 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.553 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.569 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.569 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,576 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,576 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,634 DEBUG spoon.support.StandardEnvironment - built in 58 ms
2015-02-28 18:27:18,634 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:18,634 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:18.635 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,635 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:18.637 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (nRows == 0) {
    throw new java.lang.IllegalArgumentException("Matrix must have at least one row.");
} 
18:27:18.637 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.641 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.661 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.664 [Thread-340] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:18.667 [Thread-340] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:18.668 [Thread-340] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[Matrix must have at least one row.]
java.lang.IllegalArgumentException: Matrix must have at least one row.
    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:388)
    at org.apache.commons.math.linear.RealMatrixImpl.copyIn(RealMatrixImpl.java:976)
    at org.apache.commons.math.linear.RealMatrixImpl.<init>(RealMatrixImpl.java:96)
    at org.apache.commons.math.linear.RealMatrixImpl.add(RealMatrixImpl.java:145)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:101)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
18:27:18.669 [Thread-341] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:18.670 [Thread-341] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:18.670 [Thread-341] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:18.670 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:395
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:18.670 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): Matrix must have at least one row.]
18:27:18.670 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:18.670 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:395 otherwise the patch would be "true" or "false"
18:27:18.670 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=395, Suspiciousness=0.044946657497549475]
18:27:18.670 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=399, Suspiciousness=0.044946657497549475]
18:27:18.670 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,670 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.672 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.676 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.692 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.692 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:399.
18:27:18.692 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=399, Suspiciousness=0.044946657497549475]
18:27:18.692 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=400, Suspiciousness=0.044946657497549475]
18:27:18.692 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,692 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.694 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.697 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.713 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.714 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,721 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,721 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,779 DEBUG spoon.support.StandardEnvironment - built in 58 ms
2015-02-28 18:27:18,779 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:18,779 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:18.780 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,780 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:18.782 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (nCols == 0) {
    throw new java.lang.IllegalArgumentException("Matrix must have at least one column.");
} 
18:27:18.783 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.786 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.806 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.809 [Thread-342] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:18.813 [Thread-342] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:18.813 [Thread-342] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:18.815 [Thread-343] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:18.815 [Thread-343] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:18.815 [Thread-343] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[Matrix must have at least one column.]
java.lang.IllegalArgumentException: Matrix must have at least one column.
    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:393)
    at org.apache.commons.math.linear.RealMatrixImpl.copyIn(RealMatrixImpl.java:977)
    at org.apache.commons.math.linear.RealMatrixImpl.<init>(RealMatrixImpl.java:96)
    at org.apache.commons.math.linear.RealMatrixImpl.add(RealMatrixImpl.java:145)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:101)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
18:27:18.815 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:400
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:18.815 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:18.815 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): Matrix must have at least one column.]
18:27:18.815 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:400 otherwise the patch would be "true" or "false"
18:27:18.815 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=400, Suspiciousness=0.044946657497549475]
18:27:18.815 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=404, Suspiciousness=0.044946657497549475]
18:27:18.816 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,816 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.818 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.821 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.837 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.837 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,844 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,844 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,902 DEBUG spoon.support.StandardEnvironment - built in 58 ms
2015-02-28 18:27:18,902 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:18,902 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:18.903 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,903 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:18.905 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int r = 1 ; r < nRows ; r++) {
    if ((subMatrix[r].length) != nCols) {
        throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
    } 
} ##### Before:
{
    if ((row < 0) || (column < 0)) {
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    } 
    int nRows = subMatrix.length;
    if (nRows == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one row.");
    } 
    int nCols = subMatrix[0].length;
    if (nCols == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one column.");
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int r = 1 ; r < nRows ; r++) {
        if ((subMatrix[r].length) != nCols) {
            throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
        } 
    }
    if ((data) == null) {
        if ((row > 0) || (column > 0))
            throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
        
        data = new double[nRows][nCols];
        java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
    } 
    if (((nRows + row) > (getRowDimension())) || ((nCols + column) > (getColumnDimension())))
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    
    for (int i = 0 ; i < nRows ; i++) {
        java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
    }
    lu = null;
}
18:27:18.906 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int r = 1 ; r < nRows ; r++) {
    if ((subMatrix[r].length) != nCols) {
        throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
    } 
} ##### After:
{
    if ((row < 0) || (column < 0)) {
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    } 
    int nRows = subMatrix.length;
    if (nRows == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one row.");
    } 
    int nCols = subMatrix[0].length;
    if (nCols == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one column.");
    } 
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int r = 1 ; r < nRows ; r++) {
            if ((subMatrix[r].length) != nCols) {
                throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
            } 
        }
    
    if ((data) == null) {
        if ((row > 0) || (column > 0))
            throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
        
        data = new double[nRows][nCols];
        java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
    } 
    if (((nRows + row) > (getRowDimension())) || ((nCols + column) > (getColumnDimension())))
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    
    for (int i = 0 ; i < nRows ; i++) {
        java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
    }
    lu = null;
}
18:27:18.906 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.909 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.929 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.932 [Thread-344] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:18.936 [Thread-344] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:18.936 [Thread-344] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:18.937 [Thread-345] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:18.938 [Thread-345] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:18.938 [Thread-345] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:18.938 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:404
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:18.938 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:18.938 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:18.938 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:404 otherwise the patch would be "true" or "false"
18:27:18.938 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=404, Suspiciousness=0.044946657497549475]
18:27:18.938 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=410, Suspiciousness=0.044946657497549475]
18:27:18.938 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:18,938 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:18.940 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:18.944 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:18.961 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:18.961 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,968 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:18,968 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,027 DEBUG spoon.support.StandardEnvironment - built in 59 ms
2015-02-28 18:27:19,028 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:19,028 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:19.028 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,028 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:19.031 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((data) == null) {
    if ((row > 0) || (column > 0))
        throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
    
    data = new double[nRows][nCols];
    java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
} 
18:27:19.032 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.036 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.058 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.061 [Thread-346] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.064 [Thread-346] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:19.064 [Thread-346] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(RealMatrixImpl.java:592)
    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:407)
    at org.apache.commons.math.linear.RealMatrixImpl.copyIn(RealMatrixImpl.java:977)
    at org.apache.commons.math.linear.RealMatrixImpl.<init>(RealMatrixImpl.java:96)
    at org.apache.commons.math.linear.RealMatrixImpl.add(RealMatrixImpl.java:145)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:101)
18:27:19.066 [Thread-347] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.067 [Thread-347] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:19.067 [Thread-347] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:19.067 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:410
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:19.067 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:19.067 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:19.067 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:410 otherwise the patch would be "true" or "false"
18:27:19.067 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=410, Suspiciousness=0.044946657497549475]
18:27:19.067 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=411, Suspiciousness=0.044946657497549475]
18:27:19.067 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,067 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:19.070 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.073 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.089 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.089 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,096 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,097 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,191 DEBUG spoon.support.StandardEnvironment - built in 95 ms
2015-02-28 18:27:19,191 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:19,191 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:19.192 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,192 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:19.195 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((row > 0) || (column > 0))
    throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");

18:27:19.195 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.198 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.219 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.222 [Thread-348] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.225 [Thread-348] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:19.226 [Thread-348] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[matrix must be initialized to perfom this method]
org.apache.commons.math.linear.MatrixIndexException: matrix must be initialized to perfom this method
    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:404)
    at org.apache.commons.math.linear.RealMatrixImpl.copyIn(RealMatrixImpl.java:979)
    at org.apache.commons.math.linear.RealMatrixImpl.<init>(RealMatrixImpl.java:96)
    at org.apache.commons.math.linear.RealMatrixImpl.add(RealMatrixImpl.java:145)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:101)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
18:27:19.227 [Thread-349] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.228 [Thread-349] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:19.228 [Thread-349] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:19.228 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:411
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:19.228 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): matrix must be initialized to perfom this method]
18:27:19.228 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:19.228 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:411 otherwise the patch would be "true" or "false"
18:27:19.228 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=411, Suspiciousness=0.044946657497549475]
18:27:19.228 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=413, Suspiciousness=0.044946657497549475]
18:27:19.229 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,229 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:19.231 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.234 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.249 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.250 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,256 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,257 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,314 DEBUG spoon.support.StandardEnvironment - built in 57 ms
2015-02-28 18:27:19,314 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:19,314 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:19.315 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,315 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:19.318 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### data = new double[nRows][nCols] ##### Before:
{
    if ((row > 0) || (column > 0))
        throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
    
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    data = new double[nRows][nCols];
    java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
}
18:27:19.318 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### data = new double[nRows][nCols] ##### After:
{
    if ((row > 0) || (column > 0))
        throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
    
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        data = new double[nRows][nCols];
    
    java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
}
18:27:19.318 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.321 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.341 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.343 [Thread-350] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.347 [Thread-350] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:19.347 [Thread-350] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
java.lang.NullPointerException
    at java.lang.System.arraycopy(Native Method)
    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:405)
    at org.apache.commons.math.linear.RealMatrixImpl.copyIn(RealMatrixImpl.java:977)
    at org.apache.commons.math.linear.RealMatrixImpl.<init>(RealMatrixImpl.java:96)
    at org.apache.commons.math.linear.RealMatrixImpl.add(RealMatrixImpl.java:145)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:101)
18:27:19.348 [Thread-351] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.348 [Thread-351] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:19.348 [Thread-351] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:19.349 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:413
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:19.349 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:19.349 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:19.349 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:413 otherwise the patch would be "true" or "false"
18:27:19.349 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=413, Suspiciousness=0.044946657497549475]
18:27:19.349 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=414, Suspiciousness=0.044946657497549475]
18:27:19.349 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,349 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:19.351 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.354 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.370 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.370 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,377 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,377 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,434 DEBUG spoon.support.StandardEnvironment - built in 57 ms
2015-02-28 18:27:19,435 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:19,435 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:19.435 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,435 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:19.438 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length) ##### Before:
{
    if ((row > 0) || (column > 0))
        throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
    
    data = new double[nRows][nCols];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
}
18:27:19.438 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length) ##### After:
{
    if ((row > 0) || (column > 0))
        throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
    
    data = new double[nRows][nCols];
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
    
}
18:27:19.438 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.442 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.461 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.464 [Thread-352] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.467 [Thread-352] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:19.467 [Thread-352] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:19.468 [Thread-353] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.469 [Thread-353] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:19.469 [Thread-353] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:19.469 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:414
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:19.469 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:19.469 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:19.469 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:414 otherwise the patch would be "true" or "false"
18:27:19.469 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=414, Suspiciousness=0.044946657497549475]
18:27:19.469 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=416, Suspiciousness=0.044946657497549475]
18:27:19.469 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,469 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:19.471 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.475 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.490 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.490 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,497 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,497 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,555 DEBUG spoon.support.StandardEnvironment - built in 58 ms
2015-02-28 18:27:19,555 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:19,555 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:19.556 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,556 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:19.559 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (((nRows + row) > (getRowDimension())) || ((nCols + column) > (getColumnDimension())))
    throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");

18:27:19.559 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.562 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.582 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.585 [Thread-354] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.588 [Thread-354] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:19.588 [Thread-354] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:19.589 [Thread-355] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.590 [Thread-355] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:19.590 [Thread-355] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[invalid row or column index selection]
org.apache.commons.math.linear.MatrixIndexException: invalid row or column index selection
    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:408)
    at org.apache.commons.math.linear.RealMatrixImpl.copyIn(RealMatrixImpl.java:977)
    at org.apache.commons.math.linear.RealMatrixImpl.<init>(RealMatrixImpl.java:96)
    at org.apache.commons.math.linear.RealMatrixImpl.add(RealMatrixImpl.java:145)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:101)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
18:27:19.590 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:416
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:19.590 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:19.590 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): invalid row or column index selection]
18:27:19.590 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:416 otherwise the patch would be "true" or "false"
18:27:19.590 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=416, Suspiciousness=0.044946657497549475]
18:27:19.590 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=420, Suspiciousness=0.044946657497549475]
18:27:19.590 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,590 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:19.592 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.596 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.611 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.611 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,618 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,619 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,676 DEBUG spoon.support.StandardEnvironment - built in 58 ms
2015-02-28 18:27:19,676 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:19,676 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:19.677 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,677 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:19.680 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < nRows ; i++) {
    java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
} ##### Before:
{
    if ((row < 0) || (column < 0)) {
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    } 
    int nRows = subMatrix.length;
    if (nRows == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one row.");
    } 
    int nCols = subMatrix[0].length;
    if (nCols == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one column.");
    } 
    for (int r = 1 ; r < nRows ; r++) {
        if ((subMatrix[r].length) != nCols) {
            throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
        } 
    }
    if ((data) == null) {
        if ((row > 0) || (column > 0))
            throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
        
        data = new double[nRows][nCols];
        java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
    } 
    if (((nRows + row) > (getRowDimension())) || ((nCols + column) > (getColumnDimension())))
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < nRows ; i++) {
        java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
    }
    lu = null;
}
18:27:19.680 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < nRows ; i++) {
    java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
} ##### After:
{
    if ((row < 0) || (column < 0)) {
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    } 
    int nRows = subMatrix.length;
    if (nRows == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one row.");
    } 
    int nCols = subMatrix[0].length;
    if (nCols == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one column.");
    } 
    for (int r = 1 ; r < nRows ; r++) {
        if ((subMatrix[r].length) != nCols) {
            throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
        } 
    }
    if ((data) == null) {
        if ((row > 0) || (column > 0))
            throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
        
        data = new double[nRows][nCols];
        java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
    } 
    if (((nRows + row) > (getRowDimension())) || ((nCols + column) > (getColumnDimension())))
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < nRows ; i++) {
            java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
        }
    
    lu = null;
}
18:27:19.680 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.684 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.703 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.706 [Thread-356] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.710 [Thread-356] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:19.710 [Thread-356] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:19.711 [Thread-357] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.711 [Thread-357] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:19.712 [Thread-357] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:19.712 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:420
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:19.712 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:19.712 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:19.712 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:420 otherwise the patch would be "true" or "false"
18:27:19.712 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=420, Suspiciousness=0.044946657497549475]
18:27:19.712 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=421, Suspiciousness=0.044946657497549475]
18:27:19.712 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,712 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:19.714 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.717 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.733 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.733 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,740 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,740 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,798 DEBUG spoon.support.StandardEnvironment - built in 58 ms
2015-02-28 18:27:19,798 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:19,798 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:19.799 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,799 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:19.802 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
}
18:27:19.802 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
    
}
18:27:19.802 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.805 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.825 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.828 [Thread-358] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.832 [Thread-358] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:19.832 [Thread-358] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:19.833 [Thread-359] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.834 [Thread-359] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:19.834 [Thread-359] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:19.834 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:421
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:19.834 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:19.834 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:19.834 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:421 otherwise the patch would be "true" or "false"
18:27:19.834 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=421, Suspiciousness=0.044946657497549475]
18:27:19.834 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=420, Suspiciousness=0.044946657497549475]
18:27:19.834 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,834 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:19.836 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.840 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.855 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.856 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,862 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,863 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,920 DEBUG spoon.support.StandardEnvironment - built in 57 ms
2015-02-28 18:27:19,920 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:19,920 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:19.921 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,921 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:19.923 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < nRows ; i++) {
    java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
} ##### Before:
{
    if ((row < 0) || (column < 0)) {
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    } 
    int nRows = subMatrix.length;
    if (nRows == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one row.");
    } 
    int nCols = subMatrix[0].length;
    if (nCols == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one column.");
    } 
    for (int r = 1 ; r < nRows ; r++) {
        if ((subMatrix[r].length) != nCols) {
            throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
        } 
    }
    if ((data) == null) {
        if ((row > 0) || (column > 0))
            throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
        
        data = new double[nRows][nCols];
        java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
    } 
    if (((nRows + row) > (getRowDimension())) || ((nCols + column) > (getColumnDimension())))
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    for (int i = 0 ; i < nRows ; i++) {
        java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
    }
    lu = null;
}
18:27:19.924 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### for (int i = 0 ; i < nRows ; i++) {
    java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
} ##### After:
{
    if ((row < 0) || (column < 0)) {
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    } 
    int nRows = subMatrix.length;
    if (nRows == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one row.");
    } 
    int nCols = subMatrix[0].length;
    if (nCols == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one column.");
    } 
    for (int r = 1 ; r < nRows ; r++) {
        if ((subMatrix[r].length) != nCols) {
            throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
        } 
    }
    if ((data) == null) {
        if ((row > 0) || (column > 0))
            throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
        
        data = new double[nRows][nCols];
        java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
    } 
    if (((nRows + row) > (getRowDimension())) || ((nCols + column) > (getColumnDimension())))
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        for (int i = 0 ; i < nRows ; i++) {
            java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
        }
    
    lu = null;
}
18:27:19.924 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.927 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.947 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.950 [Thread-360] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.954 [Thread-360] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:19.954 [Thread-360] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:19.956 [Thread-361] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:19.956 [Thread-361] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:19.956 [Thread-361] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:19.957 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:420
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:19.957 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:19.957 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:19.957 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:420 otherwise the patch would be "true" or "false"
18:27:19.957 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=420, Suspiciousness=0.044946657497549475]
18:27:19.957 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=423, Suspiciousness=0.044946657497549475]
18:27:19.957 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:19,957 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:19.959 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:19.962 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:19.978 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:19.978 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,985 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:19,985 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:20,042 DEBUG spoon.support.StandardEnvironment - built in 57 ms
2015-02-28 18:27:20,042 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:20,042 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:20.043 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:20,043 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:20.046 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lu = null ##### Before:
{
    if ((row < 0) || (column < 0)) {
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    } 
    int nRows = subMatrix.length;
    if (nRows == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one row.");
    } 
    int nCols = subMatrix[0].length;
    if (nCols == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one column.");
    } 
    for (int r = 1 ; r < nRows ; r++) {
        if ((subMatrix[r].length) != nCols) {
            throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
        } 
    }
    if ((data) == null) {
        if ((row > 0) || (column > 0))
            throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
        
        data = new double[nRows][nCols];
        java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
    } 
    if (((nRows + row) > (getRowDimension())) || ((nCols + column) > (getColumnDimension())))
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    
    for (int i = 0 ; i < nRows ; i++) {
        java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lu = null;
}
18:27:20.046 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lu = null ##### After:
{
    if ((row < 0) || (column < 0)) {
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    } 
    int nRows = subMatrix.length;
    if (nRows == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one row.");
    } 
    int nCols = subMatrix[0].length;
    if (nCols == 0) {
        throw new java.lang.IllegalArgumentException("Matrix must have at least one column.");
    } 
    for (int r = 1 ; r < nRows ; r++) {
        if ((subMatrix[r].length) != nCols) {
            throw new java.lang.IllegalArgumentException("All input rows must have the same length.");
        } 
    }
    if ((data) == null) {
        if ((row > 0) || (column > 0))
            throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");
        
        data = new double[nRows][nCols];
        java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);
    } 
    if (((nRows + row) > (getRowDimension())) || ((nCols + column) > (getColumnDimension())))
        throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");
    
    for (int i = 0 ; i < nRows ; i++) {
        java.lang.System.arraycopy(subMatrix[i], 0, data[(row + i)], column, nCols);
    }
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("column",column);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subMatrix",subMatrix);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nRows",nRows);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("nCols",nCols);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("row",row);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lu = null;
    
}
18:27:20.046 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:20.049 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:20.069 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:20.072 [Thread-362] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:20.076 [Thread-362] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:20.076 [Thread-362] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:20.077 [Thread-363] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:20.078 [Thread-363] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:20.078 [Thread-363] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:20.078 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:423
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:20.078 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:20.078 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:20.078 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:423 otherwise the patch would be "true" or "false"
18:27:20.079 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=423, Suspiciousness=0.044946657497549475]
18:27:20.079 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=424, Suspiciousness=0.044946657497549475]
18:27:20.079 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:20,079 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:20.081 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:20.084 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:20.099 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:20.100 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:424.
18:27:20.100 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=424, Suspiciousness=0.044946657497549475]
18:27:20.100 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1020, Suspiciousness=0.044946657497549475]
18:27:20.100 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:20,100 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:20.102 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:20.105 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:20.121 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:20.121 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:20,128 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:20,128 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_100/target/classes/:/tmp/math_100/target/test-classes/:/tmp/math_100/lib/commons-discovery-0.5.jar:/tmp/math_100/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_100/src/java/org/apache/commons/math/linear/RealMatrixImpl.java]
2015-02-28 18:27:20,185 DEBUG spoon.support.StandardEnvironment - built in 57 ms
2015-02-28 18:27:20,185 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-02-28 18:27:20,185 DEBUG spoon.support.StandardEnvironment - built in 0 ms
18:27:20.186 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:20,186 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
18:27:20.188 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### setSubMatrix(in, 0, 0) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("in",in);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    setSubMatrix(in, 0, 0);
}
18:27:20.188 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### setSubMatrix(in, 0, 0) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL",org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID",org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.parity",org.apache.commons.math.linear.RealMatrixImpl.this.parity);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.lu",org.apache.commons.math.linear.RealMatrixImpl.this.lu);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.permutation",org.apache.commons.math.linear.RealMatrixImpl.this.permutation);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("in",in);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.linear.RealMatrixImpl.this.data",org.apache.commons.math.linear.RealMatrixImpl.this.data);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        setSubMatrix(in, 0, 0);
    
}
18:27:20.189 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:20.192 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:20.211 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:20.214 [Thread-364] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:20.218 [Thread-364] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
18:27:20.218 [Thread-364] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[6]
java.lang.ArrayIndexOutOfBoundsException: 6
    at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:139)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
18:27:20.219 [Thread-365] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters started...]
18:27:20.219 [Thread-365] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
18:27:20.219 [Thread-365] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(RealMatrixImpl.java:580)
    at org.apache.commons.math.linear.RealMatrixImpl.add(RealMatrixImpl.java:134)
    at org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(GaussNewtonEstimator.java:101)
    at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:470)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
18:27:20.219 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1020
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest)]
18:27:20.219 [main] DEBUG tests.output - First set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): 6]
18:27:20.220 [main] DEBUG tests.output - Second set: 
[testBoundParameters(org.apache.commons.math.estimation.GaussNewtonEstimatorTest): null]
18:27:20.220 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1020 otherwise the patch would be "true" or "false"
18:27:20.220 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1020, Suspiciousness=0.044946657497549475]
18:27:20.220 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1021, Suspiciousness=0.044946657497549475]
18:27:20.220 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:20,220 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:20.222 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:20.225 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:20.240 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:20.240 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:1021.
18:27:20.241 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=1021, Suspiciousness=0.044946657497549475]
18:27:20.241 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=604, Suspiciousness=0.041666666666666664]
18:27:20.241 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:20,241 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:20.243 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:20.246 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:20.261 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:20.261 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:604.
18:27:20.261 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=604, Suspiciousness=0.041666666666666664]
18:27:20.262 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=611, Suspiciousness=0.041666666666666664]
18:27:20.262 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.linear.RealMatrixImpl]
2015-02-28 18:27:20,262 DEBUG spoon.support.StandardEnvironment - processing 'RealMatrixImpl' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
18:27:20.264 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.linear.RealMatrixImpl]
18:27:20.267 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
18:27:20.282 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
18:27:20.282 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.linear.RealMatrixImpl:611.
18:27:20.282 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.linear.RealMatrixImpl, LineNumber=611, Suspiciousness=0.041666666666666664]
----INFORMATION----
Nb Statements Analyzed : 325
Nb Statements with Angelic Value Found : 0
Nopol Execution time : 3649159ms
