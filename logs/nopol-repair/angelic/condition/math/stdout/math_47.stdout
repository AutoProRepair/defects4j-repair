Running ant (compile) ... OK
Buildfile: /home/rsommerard/defects4j/framework/projects/Math/Math.build.xml

init:
     [echo] -------- Commons MATH 3.0-SNAPSHOT --------
    [mkdir] Created dir: /tmp/math_47/target
    [mkdir] Created dir: /tmp/math_47/target/classes
    [mkdir] Created dir: /tmp/math_47/target/test-classes
    [mkdir] Created dir: /tmp/math_47/target/classes/META-INF
     [copy] Copying 1 file to /tmp/math_47/target/classes/META-INF

compile:
    [javac] Compiling 568 source files to /tmp/math_47/target/classes
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5
    [javac] Note: Some input files use or override a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 1 warning

BUILD SUCCESSFUL
Total time: 7 seconds
Running ant (compile.tests) ... OK
Buildfile: /home/rsommerard/defects4j/framework/projects/Math/Math.build.xml

init:
     [echo] -------- Commons MATH 3.0-SNAPSHOT --------

compile:

check-availability:
     [echo] doing check-availability...

download-dependencies:
     [echo] doing download-dependencies...

download-junit:

compile.tests:
    [javac] Compiling 333 source files to /tmp/math_47/target/test-classes
    [javac] Note: /tmp/math_47/src/test/java/org/apache/commons/math/linear/UnmodifiableRealVectorAbstractTest.java uses or overrides a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] Note: /tmp/math_47/src/test/java/org/apache/commons/math/PerfTestUtils.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
     [copy] Copying 13 files to /tmp/math_47/target/test-classes

BUILD SUCCESSFUL
Total time: 6 seconds
07:31:43.904 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Building Spoon model from src/main/java]
2015-03-02 07:31:44,098 DEBUG spoon.support.StandardEnvironment - building sources: [src/main/java/org/apache/commons/math/FieldElement.java, src/main/java/org/apache/commons/math/Field.java, src/main/java/org/apache/commons/math/MathRuntimeException.java, src/main/java/org/apache/commons/math/ConvergenceException.java, src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java, src/main/java/org/apache/commons/math/MathException.java, src/main/java/org/apache/commons/math/MathConfigurationException.java, src/main/java/org/apache/commons/math/special/Gamma.java, src/main/java/org/apache/commons/math/special/Erf.java, src/main/java/org/apache/commons/math/special/Beta.java, src/main/java/org/apache/commons/math/optimization/MultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/VectorialPointValuePair.java, src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java, src/main/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java, src/main/java/org/apache/commons/math/optimization/ConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java, src/main/java/org/apache/commons/math/optimization/OptimizationException.java, src/main/java/org/apache/commons/math/optimization/VectorialConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java, src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java, src/main/java/org/apache/commons/math/optimization/GoalType.java, src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java, src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/AbstractConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/ConjugateGradientFormula.java, src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/Preconditioner.java, src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair.java, src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/BracketFinder.java, src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java, src/main/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java, src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java, src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java, src/main/java/org/apache/commons/math/optimization/linear/Relationship.java, src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java, src/main/java/org/apache/commons/math/optimization/linear/LinearConstraint.java, src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java, src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java, src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java, src/main/java/org/apache/commons/math/optimization/fitting/PolynomialFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/WeightedObservedPoint.java, src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java, src/main/java/org/apache/commons/math/random/JDKRandomGenerator.java, src/main/java/org/apache/commons/math/random/MersenneTwister.java, src/main/java/org/apache/commons/math/random/Well1024a.java, src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java, src/main/java/org/apache/commons/math/random/Well19937a.java, src/main/java/org/apache/commons/math/random/RandomGenerator.java, src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/RandomAdaptor.java, src/main/java/org/apache/commons/math/random/AbstractWell.java, src/main/java/org/apache/commons/math/random/Well19937c.java, src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java, src/main/java/org/apache/commons/math/random/RandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/RandomDataImpl.java, src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java, src/main/java/org/apache/commons/math/random/NormalizedRandomGenerator.java, src/main/java/org/apache/commons/math/random/Well44497b.java, src/main/java/org/apache/commons/math/random/UnitSphereRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/Well512a.java, src/main/java/org/apache/commons/math/random/Well44497a.java, src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java, src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java, src/main/java/org/apache/commons/math/random/RandomData.java, src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java, src/main/java/org/apache/commons/math/random/ValueServer.java, src/main/java/org/apache/commons/math/genetics/RandomKey.java, src/main/java/org/apache/commons/math/genetics/MutationPolicy.java, src/main/java/org/apache/commons/math/genetics/FixedGenerationCount.java, src/main/java/org/apache/commons/math/genetics/CrossoverPolicy.java, src/main/java/org/apache/commons/math/genetics/ListPopulation.java, src/main/java/org/apache/commons/math/genetics/OnePointCrossover.java, src/main/java/org/apache/commons/math/genetics/BinaryMutation.java, src/main/java/org/apache/commons/math/genetics/TournamentSelection.java, src/main/java/org/apache/commons/math/genetics/ChromosomePair.java, src/main/java/org/apache/commons/math/genetics/SelectionPolicy.java, src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java, src/main/java/org/apache/commons/math/genetics/Chromosome.java, src/main/java/org/apache/commons/math/genetics/Population.java, src/main/java/org/apache/commons/math/genetics/InvalidRepresentationException.java, src/main/java/org/apache/commons/math/genetics/Fitness.java, src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java, src/main/java/org/apache/commons/math/genetics/ElitisticListPopulation.java, src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java, src/main/java/org/apache/commons/math/genetics/StoppingCondition.java, src/main/java/org/apache/commons/math/genetics/AbstractListChromosome.java, src/main/java/org/apache/commons/math/genetics/PermutationChromosome.java, src/main/java/org/apache/commons/math/transform/FastSineTransformer.java, src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java, src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java, src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java, src/main/java/org/apache/commons/math/transform/RealTransformer.java, src/main/java/org/apache/commons/math/filter/DefaultProcessModel.java, src/main/java/org/apache/commons/math/filter/DefaultMeasurementModel.java, src/main/java/org/apache/commons/math/filter/KalmanFilter.java, src/main/java/org/apache/commons/math/filter/MeasurementModel.java, src/main/java/org/apache/commons/math/filter/ProcessModel.java, src/main/java/org/apache/commons/math/fraction/Fraction.java, src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java, src/main/java/org/apache/commons/math/fraction/FractionConversionException.java, src/main/java/org/apache/commons/math/fraction/AbstractFormat.java, src/main/java/org/apache/commons/math/fraction/BigFractionField.java, src/main/java/org/apache/commons/math/fraction/FractionFormat.java, src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java, src/main/java/org/apache/commons/math/fraction/FractionField.java, src/main/java/org/apache/commons/math/fraction/BigFraction.java, src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java, src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java, src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java, src/main/java/org/apache/commons/math/linear/MatrixUtils.java, src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java, src/main/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/RectangularCholeskyDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java, src/main/java/org/apache/commons/math/linear/MatrixDimensionMismatchException.java, src/main/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java, src/main/java/org/apache/commons/math/linear/EigenDecomposition.java, src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java, src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java, src/main/java/org/apache/commons/math/linear/DefaultRealMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/FieldMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java, src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java, src/main/java/org/apache/commons/math/linear/FieldMatrix.java, src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java, src/main/java/org/apache/commons/math/linear/RealVectorFormat.java, src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java, src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java, src/main/java/org/apache/commons/math/linear/DefaultRealMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/FieldVector.java, src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java, src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/SparseRealVector.java, src/main/java/org/apache/commons/math/linear/NonSymmetricMatrixException.java, src/main/java/org/apache/commons/math/linear/RealVector.java, src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/DecompositionSolver.java, src/main/java/org/apache/commons/math/linear/RectangularCholeskyDecomposition.java, src/main/java/org/apache/commons/math/linear/RealLinearOperator.java, src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java, src/main/java/org/apache/commons/math/linear/RealMatrix.java, src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java, src/main/java/org/apache/commons/math/linear/LUDecomposition.java, src/main/java/org/apache/commons/math/linear/AnyMatrix.java, src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java, src/main/java/org/apache/commons/math/linear/BiDiagonalTransformer.java, src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java, src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java, src/main/java/org/apache/commons/math/linear/FieldMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/QRDecomposition.java, src/main/java/org/apache/commons/math/linear/ArrayRealVector.java, src/main/java/org/apache/commons/math/linear/SparseFieldMatrix.java, src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java, src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/SparseRealMatrix.java, src/main/java/org/apache/commons/math/linear/SparseFieldVector.java, src/main/java/org/apache/commons/math/linear/SingularMatrixException.java, src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java, src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java, src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java, src/main/java/org/apache/commons/math/exception/NonMonotonousSequenceException.java, src/main/java/org/apache/commons/math/exception/NoDataException.java, src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java, src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java, src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java, src/main/java/org/apache/commons/math/exception/MathArithmeticException.java, src/main/java/org/apache/commons/math/exception/ZeroException.java, src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java, src/main/java/org/apache/commons/math/exception/NullArgumentException.java, src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java, src/main/java/org/apache/commons/math/exception/MathUserException.java, src/main/java/org/apache/commons/math/exception/MathThrowable.java, src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java, src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java, src/main/java/org/apache/commons/math/exception/ConvergenceException.java, src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java, src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java, src/main/java/org/apache/commons/math/exception/MathParseException.java, src/main/java/org/apache/commons/math/exception/TooManyEvaluationsException.java, src/main/java/org/apache/commons/math/exception/NoBracketingException.java, src/main/java/org/apache/commons/math/exception/NotPositiveException.java, src/main/java/org/apache/commons/math/exception/OutOfRangeException.java, src/main/java/org/apache/commons/math/exception/MathInternalError.java, src/main/java/org/apache/commons/math/exception/util/ArgUtils.java, src/main/java/org/apache/commons/math/exception/util/Localizable.java, src/main/java/org/apache/commons/math/exception/util/DummyLocalizable.java, src/main/java/org/apache/commons/math/exception/util/ExceptionContextProvider.java, src/main/java/org/apache/commons/math/exception/util/ExceptionContext.java, src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java, src/main/java/org/apache/commons/math/stat/StatUtils.java, src/main/java/org/apache/commons/math/stat/Frequency.java, src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java, src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java, src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/MultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/ModelSpecificationException.java, src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java, src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java, src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java, src/main/java/org/apache/commons/math/stat/correlation/StorelessCovariance.java, src/main/java/org/apache/commons/math/stat/correlation/Covariance.java, src/main/java/org/apache/commons/math/stat/correlation/StorelessBivariateCovariance.java, src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummary.java, src/main/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummary.java, src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValues.java, src/main/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/WeightedEvaluation.java, src/main/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Median.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java, src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java, src/main/java/org/apache/commons/math/stat/clustering/Cluster.java, src/main/java/org/apache/commons/math/stat/clustering/Clusterable.java, src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java, src/main/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTest.java, src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/TestUtils.java, src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java, src/main/java/org/apache/commons/math/stat/inference/MannWhitneyUTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/OneWayAnova.java, src/main/java/org/apache/commons/math/stat/inference/TTest.java, src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java, src/main/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java, src/main/java/org/apache/commons/math/stat/inference/MannWhitneyUTest.java, src/main/java/org/apache/commons/math/stat/ranking/TiesStrategy.java, src/main/java/org/apache/commons/math/stat/ranking/NaNStrategy.java, src/main/java/org/apache/commons/math/stat/ranking/RankingAlgorithm.java, src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java, src/main/java/org/apache/commons/math/geometry/Space.java, src/main/java/org/apache/commons/math/geometry/VectorFormat.java, src/main/java/org/apache/commons/math/geometry/Vector.java, src/main/java/org/apache/commons/math/geometry/partitioning/RegionFactory.java, src/main/java/org/apache/commons/math/geometry/partitioning/Embedding.java, src/main/java/org/apache/commons/math/geometry/partitioning/BoundarySizeVisitor.java, src/main/java/org/apache/commons/math/geometry/partitioning/Side.java, src/main/java/org/apache/commons/math/geometry/partitioning/AbstractRegion.java, src/main/java/org/apache/commons/math/geometry/partitioning/AbstractSubHyperplane.java, src/main/java/org/apache/commons/math/geometry/partitioning/BoundaryAttribute.java, src/main/java/org/apache/commons/math/geometry/partitioning/Transform.java, src/main/java/org/apache/commons/math/geometry/partitioning/Hyperplane.java, src/main/java/org/apache/commons/math/geometry/partitioning/BSPTree.java, src/main/java/org/apache/commons/math/geometry/partitioning/SubHyperplane.java, src/main/java/org/apache/commons/math/geometry/partitioning/Region.java, src/main/java/org/apache/commons/math/geometry/partitioning/Characterization.java, src/main/java/org/apache/commons/math/geometry/partitioning/BSPTreeVisitor.java, src/main/java/org/apache/commons/math/geometry/partitioning/utilities/AVLTree.java, src/main/java/org/apache/commons/math/geometry/partitioning/utilities/OrderedTuple.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/RotationOrder.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Line.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/OutlineExtractor.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/SubLine.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Euclidean3D.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3DFormat.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/SubPlane.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Segment.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Plane.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/SubOrientedPoint.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Interval.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Vector1DFormat.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Euclidean1D.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Vector1D.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/IntervalsSet.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/OrientedPoint.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Line.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Euclidean2D.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/NestedLoops.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/SubLine.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Vector2DFormat.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Vector2D.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Segment.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSet.java, src/main/java/org/apache/commons/math/util/NumberTransformer.java, src/main/java/org/apache/commons/math/util/CompositeFormat.java, src/main/java/org/apache/commons/math/util/ContinuedFraction.java, src/main/java/org/apache/commons/math/util/TransformerMap.java, src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java, src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java, src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java, src/main/java/org/apache/commons/math/util/BigRealField.java, src/main/java/org/apache/commons/math/util/DefaultTransformer.java, src/main/java/org/apache/commons/math/util/DoubleArray.java, src/main/java/org/apache/commons/math/util/Incrementor.java, src/main/java/org/apache/commons/math/util/FastMath.java, src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java, src/main/java/org/apache/commons/math/util/MathUtils.java, src/main/java/org/apache/commons/math/util/BigReal.java, src/main/java/org/apache/commons/math/util/Pair.java, src/main/java/org/apache/commons/math/dfp/DfpField.java, src/main/java/org/apache/commons/math/dfp/UnivariateDfpFunction.java, src/main/java/org/apache/commons/math/dfp/DfpMath.java, src/main/java/org/apache/commons/math/dfp/Dfp.java, src/main/java/org/apache/commons/math/dfp/BracketingNthOrderBrentSolverDFP.java, src/main/java/org/apache/commons/math/dfp/DfpDec.java, src/main/java/org/apache/commons/math/analysis/FunctionUtils.java, src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableMultivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/ParametricUnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/solvers/PolynomialSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/DifferentiableUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AllowedSolution.java, src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/RiddersSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver2.java, src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java, src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/DividedDifferenceInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/MultivariateRealInterpolator.java, src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java, src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java, src/main/java/org/apache/commons/math/analysis/function/Min.java, src/main/java/org/apache/commons/math/analysis/function/Sinc.java, src/main/java/org/apache/commons/math/analysis/function/Asinh.java, src/main/java/org/apache/commons/math/analysis/function/Tan.java, src/main/java/org/apache/commons/math/analysis/function/Logistic.java, src/main/java/org/apache/commons/math/analysis/function/Inverse.java, src/main/java/org/apache/commons/math/analysis/function/Sigmoid.java, src/main/java/org/apache/commons/math/analysis/function/Atanh.java, src/main/java/org/apache/commons/math/analysis/function/Acosh.java, src/main/java/org/apache/commons/math/analysis/function/Constant.java, src/main/java/org/apache/commons/math/analysis/function/Sqrt.java, src/main/java/org/apache/commons/math/analysis/function/Signum.java, src/main/java/org/apache/commons/math/analysis/function/Identity.java, src/main/java/org/apache/commons/math/analysis/function/Divide.java, src/main/java/org/apache/commons/math/analysis/function/HarmonicOscillator.java, src/main/java/org/apache/commons/math/analysis/function/Abs.java, src/main/java/org/apache/commons/math/analysis/function/Subtract.java, src/main/java/org/apache/commons/math/analysis/function/Multiply.java, src/main/java/org/apache/commons/math/analysis/function/Pow.java, src/main/java/org/apache/commons/math/analysis/function/Power.java, src/main/java/org/apache/commons/math/analysis/function/Gaussian.java, src/main/java/org/apache/commons/math/analysis/function/Ceil.java, src/main/java/org/apache/commons/math/analysis/function/Atan.java, src/main/java/org/apache/commons/math/analysis/function/Log10.java, src/main/java/org/apache/commons/math/analysis/function/StepFunction.java, src/main/java/org/apache/commons/math/analysis/function/Asin.java, src/main/java/org/apache/commons/math/analysis/function/Logit.java, src/main/java/org/apache/commons/math/analysis/function/Max.java, src/main/java/org/apache/commons/math/analysis/function/Acos.java, src/main/java/org/apache/commons/math/analysis/function/Rint.java, src/main/java/org/apache/commons/math/analysis/function/Cbrt.java, src/main/java/org/apache/commons/math/analysis/function/Tanh.java, src/main/java/org/apache/commons/math/analysis/function/Cos.java, src/main/java/org/apache/commons/math/analysis/function/Sin.java, src/main/java/org/apache/commons/math/analysis/function/Expm1.java, src/main/java/org/apache/commons/math/analysis/function/Log.java, src/main/java/org/apache/commons/math/analysis/function/Cosh.java, src/main/java/org/apache/commons/math/analysis/function/Minus.java, src/main/java/org/apache/commons/math/analysis/function/Ulp.java, src/main/java/org/apache/commons/math/analysis/function/Exp.java, src/main/java/org/apache/commons/math/analysis/function/Sinh.java, src/main/java/org/apache/commons/math/analysis/function/Log1p.java, src/main/java/org/apache/commons/math/analysis/function/Atan2.java, src/main/java/org/apache/commons/math/analysis/function/Floor.java, src/main/java/org/apache/commons/math/analysis/function/Add.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java, src/main/java/org/apache/commons/math/ode/FirstOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java, src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java, src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java, src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java, src/main/java/org/apache/commons/math/ode/ExtendedFirstOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java, src/main/java/org/apache/commons/math/ode/ODEIntegrator.java, src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java, src/main/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/sampling/StepNormalizerBounds.java, src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/FixedStepHandler.java, src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java, src/main/java/org/apache/commons/math/ode/sampling/StepNormalizerMode.java, src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java, src/main/java/org/apache/commons/math/ode/sampling/StepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/StepHandler.java, src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer.java, src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java, src/main/java/org/apache/commons/math/ode/events/EventHandler.java, src/main/java/org/apache/commons/math/ode/events/EventState.java, src/main/java/org/apache/commons/math/complex/ComplexField.java, src/main/java/org/apache/commons/math/complex/ComplexUtils.java, src/main/java/org/apache/commons/math/complex/Complex.java, src/main/java/org/apache/commons/math/complex/ComplexFormat.java, src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java, src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/NormalDistribution.java, src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/DiscreteDistribution.java, src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java, src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java, src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/BinomialDistribution.java, src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java, src/main/java/org/apache/commons/math/distribution/GammaDistribution.java, src/main/java/org/apache/commons/math/distribution/CauchyDistribution.java, src/main/java/org/apache/commons/math/distribution/WeibullDistribution.java, src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistribution.java, src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java, src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java, src/main/java/org/apache/commons/math/distribution/PoissonDistribution.java, src/main/java/org/apache/commons/math/distribution/TDistribution.java, src/main/java/org/apache/commons/math/distribution/PascalDistribution.java, src/main/java/org/apache/commons/math/distribution/Distribution.java, src/main/java/org/apache/commons/math/distribution/FDistribution.java, src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/BetaDistribution.java, src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java, src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java, src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/ContinuousDistribution.java, src/main/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java]
2015-03-02 07:31:44,201 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, src/main/java/org/apache/commons/math/FieldElement.java, src/main/java/org/apache/commons/math/Field.java, src/main/java/org/apache/commons/math/MathRuntimeException.java, src/main/java/org/apache/commons/math/ConvergenceException.java, src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java, src/main/java/org/apache/commons/math/MathException.java, src/main/java/org/apache/commons/math/MathConfigurationException.java, src/main/java/org/apache/commons/math/special/Gamma.java, src/main/java/org/apache/commons/math/special/Erf.java, src/main/java/org/apache/commons/math/special/Beta.java, src/main/java/org/apache/commons/math/optimization/MultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/VectorialPointValuePair.java, src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java, src/main/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java, src/main/java/org/apache/commons/math/optimization/ConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java, src/main/java/org/apache/commons/math/optimization/OptimizationException.java, src/main/java/org/apache/commons/math/optimization/VectorialConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java, src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java, src/main/java/org/apache/commons/math/optimization/GoalType.java, src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java, src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/AbstractConvergenceChecker.java, src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/ConjugateGradientFormula.java, src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/Preconditioner.java, src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java, src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair.java, src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealOptimizer.java, src/main/java/org/apache/commons/math/optimization/univariate/BracketFinder.java, src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java, src/main/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java, src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java, src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java, src/main/java/org/apache/commons/math/optimization/linear/Relationship.java, src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java, src/main/java/org/apache/commons/math/optimization/linear/LinearConstraint.java, src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java, src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java, src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java, src/main/java/org/apache/commons/math/optimization/fitting/PolynomialFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java, src/main/java/org/apache/commons/math/optimization/fitting/WeightedObservedPoint.java, src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java, src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java, src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java, src/main/java/org/apache/commons/math/random/JDKRandomGenerator.java, src/main/java/org/apache/commons/math/random/MersenneTwister.java, src/main/java/org/apache/commons/math/random/Well1024a.java, src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java, src/main/java/org/apache/commons/math/random/Well19937a.java, src/main/java/org/apache/commons/math/random/RandomGenerator.java, src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/RandomAdaptor.java, src/main/java/org/apache/commons/math/random/AbstractWell.java, src/main/java/org/apache/commons/math/random/Well19937c.java, src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java, src/main/java/org/apache/commons/math/random/RandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/RandomDataImpl.java, src/main/java/org/apache/commons/math/random/EmpiricalDistribution.java, src/main/java/org/apache/commons/math/random/NormalizedRandomGenerator.java, src/main/java/org/apache/commons/math/random/Well44497b.java, src/main/java/org/apache/commons/math/random/UnitSphereRandomVectorGenerator.java, src/main/java/org/apache/commons/math/random/Well512a.java, src/main/java/org/apache/commons/math/random/Well44497a.java, src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java, src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java, src/main/java/org/apache/commons/math/random/RandomData.java, src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java, src/main/java/org/apache/commons/math/random/ValueServer.java, src/main/java/org/apache/commons/math/genetics/RandomKey.java, src/main/java/org/apache/commons/math/genetics/MutationPolicy.java, src/main/java/org/apache/commons/math/genetics/FixedGenerationCount.java, src/main/java/org/apache/commons/math/genetics/CrossoverPolicy.java, src/main/java/org/apache/commons/math/genetics/ListPopulation.java, src/main/java/org/apache/commons/math/genetics/OnePointCrossover.java, src/main/java/org/apache/commons/math/genetics/BinaryMutation.java, src/main/java/org/apache/commons/math/genetics/TournamentSelection.java, src/main/java/org/apache/commons/math/genetics/ChromosomePair.java, src/main/java/org/apache/commons/math/genetics/SelectionPolicy.java, src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java, src/main/java/org/apache/commons/math/genetics/Chromosome.java, src/main/java/org/apache/commons/math/genetics/Population.java, src/main/java/org/apache/commons/math/genetics/InvalidRepresentationException.java, src/main/java/org/apache/commons/math/genetics/Fitness.java, src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java, src/main/java/org/apache/commons/math/genetics/ElitisticListPopulation.java, src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java, src/main/java/org/apache/commons/math/genetics/StoppingCondition.java, src/main/java/org/apache/commons/math/genetics/AbstractListChromosome.java, src/main/java/org/apache/commons/math/genetics/PermutationChromosome.java, src/main/java/org/apache/commons/math/transform/FastSineTransformer.java, src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java, src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java, src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java, src/main/java/org/apache/commons/math/transform/RealTransformer.java, src/main/java/org/apache/commons/math/filter/DefaultProcessModel.java, src/main/java/org/apache/commons/math/filter/DefaultMeasurementModel.java, src/main/java/org/apache/commons/math/filter/KalmanFilter.java, src/main/java/org/apache/commons/math/filter/MeasurementModel.java, src/main/java/org/apache/commons/math/filter/ProcessModel.java, src/main/java/org/apache/commons/math/fraction/Fraction.java, src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java, src/main/java/org/apache/commons/math/fraction/FractionConversionException.java, src/main/java/org/apache/commons/math/fraction/AbstractFormat.java, src/main/java/org/apache/commons/math/fraction/BigFractionField.java, src/main/java/org/apache/commons/math/fraction/FractionFormat.java, src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java, src/main/java/org/apache/commons/math/fraction/FractionField.java, src/main/java/org/apache/commons/math/fraction/BigFraction.java, src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java, src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java, src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java, src/main/java/org/apache/commons/math/linear/MatrixUtils.java, src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java, src/main/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/RectangularCholeskyDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java, src/main/java/org/apache/commons/math/linear/MatrixDimensionMismatchException.java, src/main/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java, src/main/java/org/apache/commons/math/linear/EigenDecomposition.java, src/main/java/org/apache/commons/math/linear/NonSquareLinearOperatorException.java, src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java, src/main/java/org/apache/commons/math/linear/DefaultRealMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/FieldMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java, src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java, src/main/java/org/apache/commons/math/linear/FieldMatrix.java, src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java, src/main/java/org/apache/commons/math/linear/RealVectorFormat.java, src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java, src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteMatrixException.java, src/main/java/org/apache/commons/math/linear/DefaultRealMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/FieldVector.java, src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java, src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/SparseRealVector.java, src/main/java/org/apache/commons/math/linear/NonSymmetricMatrixException.java, src/main/java/org/apache/commons/math/linear/RealVector.java, src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/DecompositionSolver.java, src/main/java/org/apache/commons/math/linear/RectangularCholeskyDecomposition.java, src/main/java/org/apache/commons/math/linear/RealLinearOperator.java, src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java, src/main/java/org/apache/commons/math/linear/RealMatrix.java, src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java, src/main/java/org/apache/commons/math/linear/LUDecomposition.java, src/main/java/org/apache/commons/math/linear/AnyMatrix.java, src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java, src/main/java/org/apache/commons/math/linear/BiDiagonalTransformer.java, src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java, src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java, src/main/java/org/apache/commons/math/linear/FieldMatrixChangingVisitor.java, src/main/java/org/apache/commons/math/linear/QRDecomposition.java, src/main/java/org/apache/commons/math/linear/ArrayRealVector.java, src/main/java/org/apache/commons/math/linear/SparseFieldMatrix.java, src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java, src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixPreservingVisitor.java, src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java, src/main/java/org/apache/commons/math/linear/SparseRealMatrix.java, src/main/java/org/apache/commons/math/linear/SparseFieldVector.java, src/main/java/org/apache/commons/math/linear/SingularMatrixException.java, src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java, src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java, src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java, src/main/java/org/apache/commons/math/exception/NonMonotonousSequenceException.java, src/main/java/org/apache/commons/math/exception/NoDataException.java, src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java, src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java, src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java, src/main/java/org/apache/commons/math/exception/MathArithmeticException.java, src/main/java/org/apache/commons/math/exception/ZeroException.java, src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java, src/main/java/org/apache/commons/math/exception/NullArgumentException.java, src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java, src/main/java/org/apache/commons/math/exception/MathUserException.java, src/main/java/org/apache/commons/math/exception/MathThrowable.java, src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java, src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java, src/main/java/org/apache/commons/math/exception/ConvergenceException.java, src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java, src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java, src/main/java/org/apache/commons/math/exception/MathParseException.java, src/main/java/org/apache/commons/math/exception/TooManyEvaluationsException.java, src/main/java/org/apache/commons/math/exception/NoBracketingException.java, src/main/java/org/apache/commons/math/exception/NotPositiveException.java, src/main/java/org/apache/commons/math/exception/OutOfRangeException.java, src/main/java/org/apache/commons/math/exception/MathInternalError.java, src/main/java/org/apache/commons/math/exception/util/ArgUtils.java, src/main/java/org/apache/commons/math/exception/util/Localizable.java, src/main/java/org/apache/commons/math/exception/util/DummyLocalizable.java, src/main/java/org/apache/commons/math/exception/util/ExceptionContextProvider.java, src/main/java/org/apache/commons/math/exception/util/ExceptionContext.java, src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java, src/main/java/org/apache/commons/math/stat/StatUtils.java, src/main/java/org/apache/commons/math/stat/Frequency.java, src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java, src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java, src/main/java/org/apache/commons/math/stat/regression/UpdatingMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/MultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/ModelSpecificationException.java, src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java, src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java, src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java, src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java, src/main/java/org/apache/commons/math/stat/correlation/StorelessCovariance.java, src/main/java/org/apache/commons/math/stat/correlation/Covariance.java, src/main/java/org/apache/commons/math/stat/correlation/StorelessBivariateCovariance.java, src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummary.java, src/main/java/org/apache/commons/math/stat/descriptive/UnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedMultivariateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummary.java, src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValues.java, src/main/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java, src/main/java/org/apache/commons/math/stat/descriptive/WeightedEvaluation.java, src/main/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Min.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Median.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java, src/main/java/org/apache/commons/math/stat/descriptive/rank/Max.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/Product.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java, src/main/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java, src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java, src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java, src/main/java/org/apache/commons/math/stat/clustering/Cluster.java, src/main/java/org/apache/commons/math/stat/clustering/Clusterable.java, src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java, src/main/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTest.java, src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/TestUtils.java, src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java, src/main/java/org/apache/commons/math/stat/inference/MannWhitneyUTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/OneWayAnova.java, src/main/java/org/apache/commons/math/stat/inference/TTest.java, src/main/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java, src/main/java/org/apache/commons/math/stat/inference/WilcoxonSignedRankTestImpl.java, src/main/java/org/apache/commons/math/stat/inference/ChiSquareTest.java, src/main/java/org/apache/commons/math/stat/inference/MannWhitneyUTest.java, src/main/java/org/apache/commons/math/stat/ranking/TiesStrategy.java, src/main/java/org/apache/commons/math/stat/ranking/NaNStrategy.java, src/main/java/org/apache/commons/math/stat/ranking/RankingAlgorithm.java, src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java, src/main/java/org/apache/commons/math/geometry/Space.java, src/main/java/org/apache/commons/math/geometry/VectorFormat.java, src/main/java/org/apache/commons/math/geometry/Vector.java, src/main/java/org/apache/commons/math/geometry/partitioning/RegionFactory.java, src/main/java/org/apache/commons/math/geometry/partitioning/Embedding.java, src/main/java/org/apache/commons/math/geometry/partitioning/BoundarySizeVisitor.java, src/main/java/org/apache/commons/math/geometry/partitioning/Side.java, src/main/java/org/apache/commons/math/geometry/partitioning/AbstractRegion.java, src/main/java/org/apache/commons/math/geometry/partitioning/AbstractSubHyperplane.java, src/main/java/org/apache/commons/math/geometry/partitioning/BoundaryAttribute.java, src/main/java/org/apache/commons/math/geometry/partitioning/Transform.java, src/main/java/org/apache/commons/math/geometry/partitioning/Hyperplane.java, src/main/java/org/apache/commons/math/geometry/partitioning/BSPTree.java, src/main/java/org/apache/commons/math/geometry/partitioning/SubHyperplane.java, src/main/java/org/apache/commons/math/geometry/partitioning/Region.java, src/main/java/org/apache/commons/math/geometry/partitioning/Characterization.java, src/main/java/org/apache/commons/math/geometry/partitioning/BSPTreeVisitor.java, src/main/java/org/apache/commons/math/geometry/partitioning/utilities/AVLTree.java, src/main/java/org/apache/commons/math/geometry/partitioning/utilities/OrderedTuple.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/RotationOrder.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Line.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/OutlineExtractor.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/SubLine.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Euclidean3D.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3DFormat.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/SubPlane.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Segment.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/Plane.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException.java, src/main/java/org/apache/commons/math/geometry/euclidean/threed/PolyhedronsSet.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/SubOrientedPoint.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Interval.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Vector1DFormat.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Euclidean1D.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/Vector1D.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/IntervalsSet.java, src/main/java/org/apache/commons/math/geometry/euclidean/oned/OrientedPoint.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Line.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Euclidean2D.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/NestedLoops.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/SubLine.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Vector2DFormat.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Vector2D.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/Segment.java, src/main/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSet.java, src/main/java/org/apache/commons/math/util/NumberTransformer.java, src/main/java/org/apache/commons/math/util/CompositeFormat.java, src/main/java/org/apache/commons/math/util/ContinuedFraction.java, src/main/java/org/apache/commons/math/util/TransformerMap.java, src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java, src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java, src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java, src/main/java/org/apache/commons/math/util/BigRealField.java, src/main/java/org/apache/commons/math/util/DefaultTransformer.java, src/main/java/org/apache/commons/math/util/DoubleArray.java, src/main/java/org/apache/commons/math/util/Incrementor.java, src/main/java/org/apache/commons/math/util/FastMath.java, src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java, src/main/java/org/apache/commons/math/util/MathUtils.java, src/main/java/org/apache/commons/math/util/BigReal.java, src/main/java/org/apache/commons/math/util/Pair.java, src/main/java/org/apache/commons/math/dfp/DfpField.java, src/main/java/org/apache/commons/math/dfp/UnivariateDfpFunction.java, src/main/java/org/apache/commons/math/dfp/DfpMath.java, src/main/java/org/apache/commons/math/dfp/Dfp.java, src/main/java/org/apache/commons/math/dfp/BracketingNthOrderBrentSolverDFP.java, src/main/java/org/apache/commons/math/dfp/DfpDec.java, src/main/java/org/apache/commons/math/analysis/FunctionUtils.java, src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableMultivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateMatrixFunction.java, src/main/java/org/apache/commons/math/analysis/MultivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java, src/main/java/org/apache/commons/math/analysis/ParametricUnivariateRealFunction.java, src/main/java/org/apache/commons/math/analysis/solvers/PolynomialSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/DifferentiableUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AllowedSolution.java, src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java, src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractPolynomialSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/RiddersSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver2.java, src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/AbstractDifferentiableUnivariateRealSolver.java, src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java, src/main/java/org/apache/commons/math/analysis/interpolation/BivariateRealGridInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/DividedDifferenceInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java, src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java, src/main/java/org/apache/commons/math/analysis/interpolation/MultivariateRealInterpolator.java, src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java, src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java, src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java, src/main/java/org/apache/commons/math/analysis/function/Min.java, src/main/java/org/apache/commons/math/analysis/function/Sinc.java, src/main/java/org/apache/commons/math/analysis/function/Asinh.java, src/main/java/org/apache/commons/math/analysis/function/Tan.java, src/main/java/org/apache/commons/math/analysis/function/Logistic.java, src/main/java/org/apache/commons/math/analysis/function/Inverse.java, src/main/java/org/apache/commons/math/analysis/function/Sigmoid.java, src/main/java/org/apache/commons/math/analysis/function/Atanh.java, src/main/java/org/apache/commons/math/analysis/function/Acosh.java, src/main/java/org/apache/commons/math/analysis/function/Constant.java, src/main/java/org/apache/commons/math/analysis/function/Sqrt.java, src/main/java/org/apache/commons/math/analysis/function/Signum.java, src/main/java/org/apache/commons/math/analysis/function/Identity.java, src/main/java/org/apache/commons/math/analysis/function/Divide.java, src/main/java/org/apache/commons/math/analysis/function/HarmonicOscillator.java, src/main/java/org/apache/commons/math/analysis/function/Abs.java, src/main/java/org/apache/commons/math/analysis/function/Subtract.java, src/main/java/org/apache/commons/math/analysis/function/Multiply.java, src/main/java/org/apache/commons/math/analysis/function/Pow.java, src/main/java/org/apache/commons/math/analysis/function/Power.java, src/main/java/org/apache/commons/math/analysis/function/Gaussian.java, src/main/java/org/apache/commons/math/analysis/function/Ceil.java, src/main/java/org/apache/commons/math/analysis/function/Atan.java, src/main/java/org/apache/commons/math/analysis/function/Log10.java, src/main/java/org/apache/commons/math/analysis/function/StepFunction.java, src/main/java/org/apache/commons/math/analysis/function/Asin.java, src/main/java/org/apache/commons/math/analysis/function/Logit.java, src/main/java/org/apache/commons/math/analysis/function/Max.java, src/main/java/org/apache/commons/math/analysis/function/Acos.java, src/main/java/org/apache/commons/math/analysis/function/Rint.java, src/main/java/org/apache/commons/math/analysis/function/Cbrt.java, src/main/java/org/apache/commons/math/analysis/function/Tanh.java, src/main/java/org/apache/commons/math/analysis/function/Cos.java, src/main/java/org/apache/commons/math/analysis/function/Sin.java, src/main/java/org/apache/commons/math/analysis/function/Expm1.java, src/main/java/org/apache/commons/math/analysis/function/Log.java, src/main/java/org/apache/commons/math/analysis/function/Cosh.java, src/main/java/org/apache/commons/math/analysis/function/Minus.java, src/main/java/org/apache/commons/math/analysis/function/Ulp.java, src/main/java/org/apache/commons/math/analysis/function/Exp.java, src/main/java/org/apache/commons/math/analysis/function/Sinh.java, src/main/java/org/apache/commons/math/analysis/function/Log1p.java, src/main/java/org/apache/commons/math/analysis/function/Atan2.java, src/main/java/org/apache/commons/math/analysis/function/Floor.java, src/main/java/org/apache/commons/math/analysis/function/Add.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java, src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java, src/main/java/org/apache/commons/math/ode/FirstOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java, src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java, src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java, src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java, src/main/java/org/apache/commons/math/ode/ExtendedFirstOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java, src/main/java/org/apache/commons/math/ode/ODEIntegrator.java, src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java, src/main/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java, src/main/java/org/apache/commons/math/ode/sampling/StepNormalizerBounds.java, src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/FixedStepHandler.java, src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java, src/main/java/org/apache/commons/math/ode/sampling/StepNormalizerMode.java, src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java, src/main/java/org/apache/commons/math/ode/sampling/StepInterpolator.java, src/main/java/org/apache/commons/math/ode/sampling/StepHandler.java, src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/MidpointIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/EulerIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer.java, src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/GillIntegrator.java, src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java, src/main/java/org/apache/commons/math/ode/events/EventHandler.java, src/main/java/org/apache/commons/math/ode/events/EventState.java, src/main/java/org/apache/commons/math/complex/ComplexField.java, src/main/java/org/apache/commons/math/complex/ComplexUtils.java, src/main/java/org/apache/commons/math/complex/Complex.java, src/main/java/org/apache/commons/math/complex/ComplexFormat.java, src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java, src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/NormalDistribution.java, src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/DiscreteDistribution.java, src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java, src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java, src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/BinomialDistribution.java, src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java, src/main/java/org/apache/commons/math/distribution/GammaDistribution.java, src/main/java/org/apache/commons/math/distribution/CauchyDistribution.java, src/main/java/org/apache/commons/math/distribution/WeibullDistribution.java, src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistribution.java, src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java, src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java, src/main/java/org/apache/commons/math/distribution/PoissonDistribution.java, src/main/java/org/apache/commons/math/distribution/TDistribution.java, src/main/java/org/apache/commons/math/distribution/PascalDistribution.java, src/main/java/org/apache/commons/math/distribution/Distribution.java, src/main/java/org/apache/commons/math/distribution/FDistribution.java, src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/BetaDistribution.java, src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java, src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/SaddlePointExpansion.java, src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/ContinuousDistribution.java, src/main/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java, src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java]
2015-03-02 07:31:51,246 DEBUG spoon.support.StandardEnvironment - built in 7143 ms
2015-03-02 07:31:51,247 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:31:51,247 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:31:53.422 [main] DEBUG f.i.lille.repair.TestClassesFinder - Test clasess:
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ConvergenceExceptionTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.MathConfigurationExceptionTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.MathExceptionTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.RetryRunnerTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.FunctionUtilsTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.GaussianTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.HarmonicOscillatorTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.LogisticTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.LogitTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.SigmoidTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.function.StepFunctionTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.integration.RombergIntegratorTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.integration.SimpsonIntegratorTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest
07:31:53.423 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest
07:31:53.424 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.BisectionSolverTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.BrentSolverTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.IllinoisSolverTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.LaguerreSolverTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.MullerSolver2Test
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.MullerSolverTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.NewtonSolverTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.PegasusSolverTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.RiddersSolverTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.SecantSolverTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexFieldTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexFormatTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexTest
07:31:53.425 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.ComplexUtilsTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.complex.FrenchComplexFormatTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.dfp.DfpDecTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.dfp.DfpMathTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.dfp.DfpTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.AbtractIntegerDistributionTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.BetaDistributionTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.BinomialDistributionTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.CauchyDistributionTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.ChiSquareDistributionTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.ExponentialDistributionTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.FDistributionTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.GammaDistributionTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.HypergeometricDistributionTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.NormalDistributionTest
07:31:53.426 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.PascalDistributionTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.PoissonDistributionTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.TDistributionTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.WeibullDistributionTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.distribution.ZipfDistributionTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.DimensionMismatchExceptionTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.MaxCountExceededExceptionTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NotPositiveExceptionTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NumberIsTooLargeExceptionTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.NumberIsTooSmallExceptionTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.OutOfRangeExceptionTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.TooManyEvaluationsExceptionTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.util.ArgUtilsTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.exception.util.ExceptionContextTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.filter.KalmanFilterTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.BigFractionFieldTest
07:31:53.427 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.BigFractionFormatTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.BigFractionTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.FractionFieldTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.FractionFormatTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.fraction.FractionTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.BinaryChromosomeTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.BinaryMutationTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.ChromosomeTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.ElitisticListPopulationTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.FitnessCachingTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.FixedGenerationCountTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.GeneticAlgorithmTestBinary
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.ListPopulationTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.OnePointCrossoverTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.RandomKeyMutationTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.RandomKeyTest
07:31:53.428 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.genetics.TournamentSelectionTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.LineTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.PlaneTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.RotationTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.SubLineTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.threed.Vector3DTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.twod.LineTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.euclidean.twod.SubLineTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.Array2DRowRealMatrixTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.ArrayFieldVectorTest
07:31:53.429 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.ArrayRealVectorTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.BiDiagonalTransformerTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.BlockFieldMatrixTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.BlockRealMatrixTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.CholeskyDecompositionImplTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.CholeskySolverTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.EigenDecompositionImplTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.EigenSolverTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.FieldLUDecompositionImplTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.FieldMatrixImplTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.FrenchRealVectorFormatTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.LUDecompositionImplTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.LUSolverTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.MatrixUtilsTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.QRDecompositionImplTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.QRSolverTest
07:31:53.430 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.RealVectorFormatTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.RealVectorTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SingularValueDecompositionImplTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SingularValueSolverTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SparseFieldMatrixTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SparseFieldVectorTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SparseRealMatrixTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.SparseRealVectorTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.TriDiagonalTransformerTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.ContinuousOutputModelTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.FirstOrderConverterTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.events.EventStateTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.events.OverlappingEventsTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest
07:31:53.431 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.EulerIntegratorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.GillIntegratorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest
07:31:53.432 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.sampling.StepNormalizerOutputTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.ode.sampling.StepNormalizerTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.direct.CMAESOptimizerTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.direct.PowellOptimizerTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.fitting.CurveFitterTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.fitting.GaussianFitterTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.fitting.HarmonicFitterTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.fitting.PolynomialFitterTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest
07:31:53.433 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.general.MinpackTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.linear.SimplexSolverTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.linear.SimplexTableauTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.univariate.BracketFinderTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.univariate.BrentOptimizerTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.AbstractRandomGeneratorTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.BitsStreamGeneratorTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.EmpiricalDistributionTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.GaussianRandomGeneratorTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.MersenneTwisterTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.RandomAdaptorTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.RandomDataTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.RandomGeneratorAbstractTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest
07:31:53.434 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.UniformRandomGeneratorTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.ValueServerTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well1024aTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well19937aTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well19937cTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well44497aTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well44497bTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.random.Well512aTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.special.BetaTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.special.ErfTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.special.GammaTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.CertifiedDataTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.FrequencyTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.StatUtilsTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.correlation.CovarianceTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.correlation.PearsonsCorrelationTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest
07:31:53.435 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.correlation.StorelessCovarianceTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.data.LewTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.data.LotteryTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.InteractionTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.ListUnivariateImplTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SummaryStatisticsTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.FirstMomentTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.FourthMomentTest
07:31:53.436 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.KurtosisTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.MeanTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.SkewnessTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.VarianceTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.MaxTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.MedianTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.MinTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.rank.PercentileTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.ProductTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.SumLogTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.SumSqTest
07:31:53.437 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.descriptive.summary.SumTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.ChiSquareTestTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.MannWhitneyUTestTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.OneWayAnovaTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.TTestTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.TestUtilsTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.ranking.NaturalRankingTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.stat.regression.SimpleRegressionTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastCosineTransformerTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastFourierTransformerTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastHadamardTransformerTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.transform.FastSineTransformerTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.BigRealFieldTest
07:31:53.438 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.BigRealTest
07:31:53.439 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.ContinuedFractionTest
07:31:53.439 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.DefaultTransformerTest
07:31:53.439 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.FastMathStrictComparisonTest
07:31:53.439 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.FastMathTest
07:31:53.439 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.FastMathTestPerformance
07:31:53.439 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.IncrementorTest
07:31:53.439 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.MathUtilsTest
07:31:53.439 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.MultidimensionalCounterTest
07:31:53.439 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.OpenIntToDoubleHashMapTest
07:31:53.439 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.OpenIntToFieldTest
07:31:53.439 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.PairTest
07:31:53.439 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.ResizableDoubleArrayTest
07:31:53.439 [main] DEBUG f.i.lille.repair.TestClassesFinder - org.apache.commons.math.util.TransformerMapTest
07:31:53.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - >>> Begin subprocess output
07:31:53.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.solvers.LaguerreSolverTest
07:31:53.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:53.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:31:53.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testLinearFunction, DisplayName: testLinearFunction(org.apache.commons.math.analysis.solvers.LaguerreSolverTest)
07:31:53.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testLinearFunction
07:31:54.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testQuadraticFunction, DisplayName: testQuadraticFunction(org.apache.commons.math.analysis.solvers.LaguerreSolverTest)
07:31:54.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testQuadraticFunction
07:31:54.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.solvers.LaguerreSolverTest)
07:31:54.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testParameters

07:31:54.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.solvers.LaguerreSolverTest)
07:31:54.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.LaguerreSolverTest, MethodName: testQuinticFunction
07:31:54.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:31:54.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.646 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest

07:31:54.650 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:31:54.650 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.650 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest)
07:31:54.650 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testPlane

07:31:54.768 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest)
07:31:54.768 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testPreconditions
07:31:54.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testParaboloid, DisplayName: testParaboloid(org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest)
07:31:54.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, MethodName: testParaboloid
07:31:54.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:31:54.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest
07:31:54.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:31:54.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)
07:31:54.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSerialization

07:31:54.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)
07:31:54.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testStats
07:31:54.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)
07:31:54.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testToString
07:31:54.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)
07:31:54.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testNaNContracts
07:31:54.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)
07:31:54.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testN0andN1Conditions
07:31:54.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testShuffledStatistics, DisplayName: testShuffledStatistics(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)
07:31:54.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testShuffledStatistics
07:31:54.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testDimension, DisplayName: testDimension(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)
07:31:54.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testDimension
07:31:54.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)
07:31:54.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSetterInjection
07:31:54.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSetterIllegalState, DisplayName: testSetterIllegalState(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)
07:31:54.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testSetterIllegalState
07:31:54.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest)
07:31:54.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, MethodName: testEqualsAndHashCode
07:31:54.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
07:31:54.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:31:54.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.OutOfRangeExceptionTest

07:31:54.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:31:54.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.OutOfRangeExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.OutOfRangeExceptionTest)
07:31:54.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.OutOfRangeExceptionTest, MethodName: testAccessors
07:31:54.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:31:54.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.Well44497aTest
07:31:54.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 42

07:31:54.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well44497aTest)
07:31:54.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testReferenceCode
07:31:54.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:54.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.Well44497aTest)
07:31:54.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntDirect

07:31:55.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.Well44497aTest)
07:31:55.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextFloatDirect
07:31:55.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.Well44497aTest)
07:31:55.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextBooleanDirect
07:31:55.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.Well44497aTest)
07:31:55.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLongDirect
07:31:55.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.Well44497aTest)

07:31:55.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNexBoolean2
07:31:55.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.Well44497aTest)
07:31:55.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testFloatDirect
07:31:55.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.Well44497aTest)
07:31:55.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testDoubleDirect
07:31:55.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.Well44497aTest)
07:31:55.738 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLong2
07:31:55.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.Well44497aTest)
07:31:55.739 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntIAE
07:31:55.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.Well44497aTest)
07:31:55.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntNeg
07:31:55.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.Well44497aTest)
07:31:55.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNexBytes
07:31:55.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.Well44497aTest)
07:31:55.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextInt2
07:31:55.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.Well44497aTest)
07:31:55.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPascal

07:31:55.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.Well44497aTest)
07:31:55.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSample
07:31:55.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.Well44497aTest)
07:31:55.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextIntExtremeValues
07:31:55.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.918 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.Well44497aTest)
07:31:55.918 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.919 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextUniformExclusiveEndpoints
07:31:55.919 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.919 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.Well44497aTest)
07:31:55.919 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextGaussian
07:31:55.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:55.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.Well44497aTest)
07:31:55.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:56.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextF

07:31:56.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.Well44497aTest)
07:31:56.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:56.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextT
07:31:56.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:56.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.Well44497aTest)
07:31:56.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:56.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextChiSquare
07:31:56.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:56.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.Well44497aTest)
07:31:56.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSecureLong

07:31:56.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.Well44497aTest)
07:31:56.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:56.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSecureHex

07:31:56.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.Well44497aTest)
07:31:56.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextSecureInt

07:31:56.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.Well44497aTest)
07:31:56.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPoissonConsistency

07:31:57.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.Well44497aTest)
07:31:57.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextHypergeometric
07:31:57.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.Well44497aTest)
07:31:57.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLongExtremeValues

07:31:57.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.Well44497aTest)
07:31:57.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextExponential
07:31:57.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.Well44497aTest)
07:31:57.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPoisson
07:31:57.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.Well44497aTest)
07:31:57.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextUniform
07:31:57.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.Well44497aTest)
07:31:57.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextPermutation
07:31:57.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.Well44497aTest)
07:31:57.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextBinomial
07:31:57.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.Well44497aTest)
07:31:57.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testConfig
* Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.Well44497aTest)
* Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextInversionDeviate

07:31:57.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.Well44497aTest)
07:31:57.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextHex
07:31:57.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.Well44497aTest)
07:31:57.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextInt
07:31:57.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.Well44497aTest)
07:31:57.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextCauchy
07:31:57.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.Well44497aTest)
07:31:57.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.766 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextGamma

07:31:57.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.Well44497aTest)
07:31:57.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextWeibull
07:31:57.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.Well44497aTest)
07:31:57.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextBeta
07:31:57.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.Well44497aTest)
07:31:57.812 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextLong
07:31:57.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.Well44497aTest)
07:31:57.813 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497aTest, MethodName: testNextZipf
07:31:57.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 42
07:31:57.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest
07:31:57.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:31:57.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestPositive, DisplayName: testTestPositive(org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestPositive

07:31:57.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestNegative, DisplayName: testTestNegative(org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest)
07:31:57.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, MethodName: testTestNegative
07:31:57.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:31:57.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.FDistributionTest

07:31:57.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13
07:31:57.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testSmallDegreesOfFreedom, DisplayName: testSmallDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)
07:31:57.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testSmallDegreesOfFreedom
07:31:57.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.FDistributionTest)
07:31:57.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testPreconditions

07:31:57.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilityExtremes, DisplayName: testCumulativeProbabilityExtremes(org.apache.commons.math.distribution.FDistributionTest)
07:31:57.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilityExtremes

07:31:57.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testLargeDegreesOfFreedom, DisplayName: testLargeDegreesOfFreedom(org.apache.commons.math.distribution.FDistributionTest)
07:31:57.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testLargeDegreesOfFreedom
07:31:57.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.FDistributionTest)
07:31:57.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testMomonts

07:31:57.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testDfAccessors, DisplayName: testDfAccessors(org.apache.commons.math.distribution.FDistributionTest)
07:31:57.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testDfAccessors

07:31:57.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.FDistributionTest)
07:31:57.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

07:31:57.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.FDistributionTest)
07:31:57.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testDensities
07:31:57.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)
07:31:57.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testInverseCumulativeProbabilities
07:31:57.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.FDistributionTest)
07:31:57.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.896 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testSampling
07:31:57.896 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.896 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.FDistributionTest)
07:31:57.896 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testCumulativeProbabilities
07:31:57.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.FDistributionTest)
07:31:57.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testIllegalArguments
07:31:57.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.FDistributionTest)
07:31:57.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.FDistributionTest, MethodName: testConsistency
07:31:57.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
TestResult: 0
 Run JUnit Test: org.apache.commons.math.fraction.FractionTest

07:31:57.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 23

07:31:57.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testFloatValue, DisplayName: testFloatValue(org.apache.commons.math.fraction.FractionTest)
07:31:57.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testFloatValue
07:31:57.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testAbs, DisplayName: testAbs(org.apache.commons.math.fraction.FractionTest)
07:31:57.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testAbs

07:31:57.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.fraction.FractionTest)
07:31:57.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testAdd
07:31:57.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.fraction.FractionTest)

07:31:57.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testSubtract
07:31:57.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.fraction.FractionTest)
07:31:57.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testToString

07:31:57.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testReciprocal, DisplayName: testReciprocal(org.apache.commons.math.fraction.FractionTest)
07:31:57.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testReciprocal

07:31:57.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testEpsilonLimitConstructor, DisplayName: testEpsilonLimitConstructor(org.apache.commons.math.fraction.FractionTest)
07:31:57.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testEpsilonLimitConstructor

07:31:57.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testGetReducedFraction, DisplayName: testGetReducedFraction(org.apache.commons.math.fraction.FractionTest)
07:31:57.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testGetReducedFraction

07:31:57.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testConstructorDouble, DisplayName: testConstructorDouble(org.apache.commons.math.fraction.FractionTest)
07:31:57.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testConstructorDouble

07:31:57.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testCompareTo, DisplayName: testCompareTo(org.apache.commons.math.fraction.FractionTest)
07:31:57.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testCompareTo

07:31:57.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDoubleConstructor, DisplayName: testDoubleConstructor(org.apache.commons.math.fraction.FractionTest)
07:31:57.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDoubleConstructor
07:31:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testLongValue, DisplayName: testLongValue(org.apache.commons.math.fraction.FractionTest)
07:31:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testLongValue

07:31:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDigitLimitConstructor, DisplayName: testDigitLimitConstructor(org.apache.commons.math.fraction.FractionTest)
07:31:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDigitLimitConstructor

07:31:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testIntValue, DisplayName: testIntValue(org.apache.commons.math.fraction.FractionTest)
07:31:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testIntValue
07:31:57.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.fraction.FractionTest)
07:31:57.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDivide
07:31:57.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.fraction.FractionTest)
07:31:57.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testMultiply
07:31:57.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.fraction.FractionTest)
07:31:57.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testEqualsAndHashCode

07:31:57.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testNegate, DisplayName: testNegate(org.apache.commons.math.fraction.FractionTest)
07:31:57.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testNegate

07:31:57.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.fraction.FractionTest)
07:31:57.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testSerial
07:31:57.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testGoldenRatio, DisplayName: testGoldenRatio(org.apache.commons.math.fraction.FractionTest)

07:31:57.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testGoldenRatio
07:31:57.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testIntegerOverflow, DisplayName: testIntegerOverflow(org.apache.commons.math.fraction.FractionTest)

07:31:57.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testIntegerOverflow
07:31:57.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDoubleValue, DisplayName: testDoubleValue(org.apache.commons.math.fraction.FractionTest)
07:31:57.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testDoubleValue

07:31:57.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.fraction.FractionTest)
07:31:57.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.fraction.FractionTest, MethodName: testConstructor
07:31:57.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 23
TestResult: 0
07:31:57.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.analysis.solvers.PegasusSolverTest

07:31:57.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8

07:31:57.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionRightSide, DisplayName: testSolutionRightSide(org.apache.commons.math.analysis.solvers.PegasusSolverTest)
07:31:57.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionRightSide

07:31:57.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionAboveSide, DisplayName: testSolutionAboveSide(org.apache.commons.math.analysis.solvers.PegasusSolverTest)

07:31:57.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionAboveSide
07:31:57.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionBelowSide, DisplayName: testSolutionBelowSide(org.apache.commons.math.analysis.solvers.PegasusSolverTest)
07:31:57.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionBelowSide
07:31:57.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionLeftSide, DisplayName: testSolutionLeftSide(org.apache.commons.math.analysis.solvers.PegasusSolverTest)
07:31:57.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSolutionLeftSide
07:31:57.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.PegasusSolverTest)
07:31:57.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testBadEndpoints
07:31:57.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testRootEndpoints, DisplayName: testRootEndpoints(org.apache.commons.math.analysis.solvers.PegasusSolverTest)
07:31:57.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testRootEndpoints
07:31:57.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.PegasusSolverTest)
07:31:57.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testQuinticZero
07:31:57.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.PegasusSolverTest)
07:31:57.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.PegasusSolverTest, MethodName: testSinZero

07:31:57.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:31:57.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest

07:31:57.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
07:31:57.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.959 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testSetSubVector, DisplayName: testSetSubVector(org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest)
07:31:57.959 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.959 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testSetSubVector
07:31:57.959 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.960 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest)
07:31:57.960 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testGetEntry
07:31:57.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:57.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testAllButExcluded, DisplayName: testAllButExcluded(org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest)
07:31:57.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testAllButExcluded
07:31:58.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testGetSubVector, DisplayName: testGetSubVector(org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest)
07:31:58.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testGetSubVector

07:31:58.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testSparseIterator, DisplayName: testSparseIterator(org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest)
07:31:58.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testSparseIterator
07:31:58.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testIterator, DisplayName: testIterator(org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest)
07:31:58.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testIterator
07:31:58.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testSetEntry, DisplayName: testSetEntry(org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest)
07:31:58.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest, MethodName: testSetEntry

07:31:58.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
07:31:58.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest
07:31:58.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:31:58.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testRepetition, DisplayName: testRepetition(org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest)
07:31:58.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testRepetition
07:31:58.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testNavigation, DisplayName: testNavigation(org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest)
07:31:58.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testNavigation
07:31:58.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testDelete1, DisplayName: testDelete1(org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest)
07:31:58.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testDelete1
07:31:58.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testInsert, DisplayName: testInsert(org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest)
07:31:58.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testInsert
07:31:58.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testSearch, DisplayName: testSearch(org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest)
07:31:58.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest, MethodName: testSearch
07:31:58.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:31:58.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest
07:31:58.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:31:58.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testLinearFunction, DisplayName: testLinearFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest)
07:31:58.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testLinearFunction
07:31:58.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testQuadraticFunction, DisplayName: testQuadraticFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest)
07:31:58.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testQuadraticFunction
07:31:58.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest)
07:31:58.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testParameters
07:31:58.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest)
07:31:58.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, MethodName: testQuinticFunction
07:31:58.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:31:58.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.FastMathTestPerformance
07:31:58.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 20
07:31:58.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Name     StrictMath      FastMath          Math Runs=10000000 Java 1.7.0_65 (1.7.0_65-b32) OpenJDK 64-Bit Server VM (24.65-b04)
07:31:58.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:58.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAbs, DisplayName: testAbs(org.apache.commons.math.util.FastMathTestPerformance)

07:31:58.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - abs        0    1.0      6 9.5833      2 3.5240
07:31:58.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAbs

07:31:58.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCos, DisplayName: testCos(org.apache.commons.math.util.FastMathTestPerformance)
07:31:58.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:31:59.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - cos       52    1.0     62 1.2001     41 0.7892
07:31:59.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCos

07:31:59.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testExp, DisplayName: testExp(org.apache.commons.math.util.FastMathTestPerformance)

07:32:01.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - exp       66    1.0     35 0.5353     60 0.9179
07:32:01.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testExp

07:32:01.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog, DisplayName: testLog(org.apache.commons.math.util.FastMathTestPerformance)

07:32:02.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - log       78    1.0     52 0.6670     22 0.2927
07:32:02.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog

07:32:02.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.util.FastMathTestPerformance)

07:32:08.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - pow      237    1.0    210 0.8864     85 0.3588

07:32:08.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testPow
* Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSin, DisplayName: testSin(org.apache.commons.math.util.FastMathTestPerformance)

07:32:09.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - sin       49    1.0     60 1.2224     38 0.7800

07:32:09.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSin

07:32:09.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testTan, DisplayName: testTan(org.apache.commons.math.util.FastMathTestPerformance)

07:32:12.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - tan       76    1.0    106 1.3893     53 0.6969
07:32:12.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testTan

07:32:12.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAtan2, DisplayName: testAtan2(org.apache.commons.math.util.FastMathTestPerformance)
07:32:12.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:32:15.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - atan2    115    1.0    114 0.9897    115 1.0001
07:32:15.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAtan2

07:32:15.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testExpm1, DisplayName: testExpm1(org.apache.commons.math.util.FastMathTestPerformance)
07:32:15.548 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:32:18.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - expm1     76    1.0     99 1.3087     76 1.0016
07:32:18.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testExpm1

07:32:18.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testHypot, DisplayName: testHypot(org.apache.commons.math.util.FastMathTestPerformance)
07:32:18.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:32:32.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - hypot    688    1.0     34 0.0502    687 0.9987
07:32:32.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testHypot
* Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog10, DisplayName: testLog10(org.apache.commons.math.util.FastMathTestPerformance)

07:32:34.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - log10    103    1.0    154 1.4860     22 0.2216
07:32:34.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog10

07:32:34.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog1p, DisplayName: testLog1p(org.apache.commons.math.util.FastMathTestPerformance)

07:32:38.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - log1p     82    1.0    157 1.9051     83 1.0061

07:32:38.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testLog1p
* Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAcos, DisplayName: testAcos(org.apache.commons.math.util.FastMathTestPerformance)

07:32:47.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - acos     380    1.0    169 0.4450    381 1.0023
07:32:47.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAcos

07:32:47.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAsin, DisplayName: testAsin(org.apache.commons.math.util.FastMathTestPerformance)

07:32:56.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - asin     388    1.0    160 0.4132    389 1.0047
07:32:56.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAsin
* Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAtan, DisplayName: testAtan(org.apache.commons.math.util.FastMathTestPerformance)

07:32:58.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - atan      60    1.0     78 1.3083     62 1.0305
07:32:58.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testAtan

07:32:58.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCbrt, DisplayName: testCbrt(org.apache.commons.math.util.FastMathTestPerformance)
07:32:58.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:01.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - cbrt     101    1.0     84 0.8405    104 1.0299

07:33:01.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCbrt

07:33:01.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCosh, DisplayName: testCosh(org.apache.commons.math.util.FastMathTestPerformance)

07:33:04.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - cosh     107    1.0     88 0.8239    107 0.9983

07:33:04.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testCosh

07:33:04.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSinh, DisplayName: testSinh(org.apache.commons.math.util.FastMathTestPerformance)
07:33:04.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:08.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - sinh     116    1.0     99 0.8522    117 1.0077

07:33:08.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSinh
* Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSqrt, DisplayName: testSqrt(org.apache.commons.math.util.FastMathTestPerformance)

07:33:08.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - sqrt       1    1.0      9 6.0859      6 4.1868

07:33:08.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testSqrt
* Started : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testTanh, DisplayName: testTanh(org.apache.commons.math.util.FastMathTestPerformance)

07:33:11.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - tanh     122    1.0    117 0.9601    121 0.9904

07:33:11.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTestPerformance, MethodName: testTanh
Number of testcases executed : 20
TestResult: 0

07:33:11.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.solvers.BrentSolverTest

07:33:11.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:33:11.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)
07:33:11.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testBadEndpoints
07:33:11.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testInitialGuess, DisplayName: testInitialGuess(org.apache.commons.math.analysis.solvers.BrentSolverTest)
07:33:11.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testInitialGuess
07:33:11.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testRootEndpoints, DisplayName: testRootEndpoints(org.apache.commons.math.analysis.solvers.BrentSolverTest)
07:33:11.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testRootEndpoints

07:33:11.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)
07:33:11.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testQuinticZero
07:33:11.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.BrentSolverTest)
07:33:11.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BrentSolverTest, MethodName: testSinZero

07:33:11.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:33:11.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest
07:33:11.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:33:11.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, MethodName: testWilcoxonSignedRankInputValidation, DisplayName: testWilcoxonSignedRankInputValidation(org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest)
07:33:11.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, MethodName: testWilcoxonSignedRankInputValidation
07:33:11.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, MethodName: testWilcoxonSignedRankSimple, DisplayName: testWilcoxonSignedRankSimple(org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest)
07:33:11.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, MethodName: testWilcoxonSignedRankSimple
07:33:11.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:11.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
TestResult: 0

07:33:11.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.genetics.OnePointCrossoverTest

07:33:12.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:12.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.OnePointCrossoverTest, MethodName: testCrossover, DisplayName: testCrossover(org.apache.commons.math.genetics.OnePointCrossoverTest)

07:33:12.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.OnePointCrossoverTest, MethodName: testCrossover
07:33:12.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest

07:33:12.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:12.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest, MethodName: testName, DisplayName: testName(org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest)
07:33:12.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.014 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest, MethodName: testName
07:33:12.014 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.014 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
TestResult: 0

07:33:12.015 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.function.SigmoidTest

07:33:12.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:33:12.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.018 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testDerivative, DisplayName: testDerivative(org.apache.commons.math.analysis.function.SigmoidTest)
07:33:12.018 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testDerivative
07:33:12.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.SigmoidTest)
07:33:12.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testSomeValues

07:33:12.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricValue, DisplayName: testParametricValue(org.apache.commons.math.analysis.function.SigmoidTest)
07:33:12.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricValue
07:33:12.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.020 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.SigmoidTest)
07:33:12.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage1

07:33:12.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.SigmoidTest)
07:33:12.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage2

07:33:12.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.SigmoidTest)
07:33:12.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage3

07:33:12.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.SigmoidTest)
07:33:12.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testParametricUsage4

07:33:12.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testDerivativeLargeArguments, DisplayName: testDerivativeLargeArguments(org.apache.commons.math.analysis.function.SigmoidTest)
07:33:12.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.function.SigmoidTest, MethodName: testDerivativeLargeArguments

07:33:12.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:33:12.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.BlockRealMatrixTest
07:33:12.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 48
07:33:12.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperatePremultiplyLarge, DisplayName: testOperatePremultiplyLarge(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperatePremultiplyLarge
07:33:12.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowMatrixLarge, DisplayName: testGetSetRowMatrixLarge(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowMatrixLarge
07:33:12.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testFrobeniusNorm, DisplayName: testFrobeniusNorm(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testFrobeniusNorm

07:33:12.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperate

07:33:12.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testExamples
07:33:12.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetEntry
07:33:12.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testAddFail
07:33:12.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnLarge, DisplayName: testGetSetColumnLarge(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnLarge
07:33:12.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testAdd

07:33:12.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testScalarAdd
07:33:12.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testTrace
07:33:12.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testNorm

07:33:12.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testWalk, DisplayName: testWalk(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testWalk
07:33:12.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testToString
07:33:12.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetMatrixLarge, DisplayName: testGetSetMatrixLarge(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetMatrixLarge
07:33:12.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowVectorLarge, DisplayName: testGetSetRowVectorLarge(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowVectorLarge
07:33:12.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRowMatrix, DisplayName: testSetRowMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRowMatrix
07:33:12.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSeveralBlocks, DisplayName: testSeveralBlocks(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSeveralBlocks
07:33:12.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPlusMinus
07:33:12.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRowVector, DisplayName: testSetRowVector(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRowVector
07:33:12.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMultiply2

07:33:12.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testDimensions

07:33:12.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testCopySubMatrix, DisplayName: testCopySubMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testCopySubMatrix
07:33:12.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowLarge, DisplayName: testGetSetRowLarge(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetRowLarge
07:33:12.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPremultiplyVector
07:33:12.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testCopyFunctions
07:33:12.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSubMatrix, DisplayName: testGetSubMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSubMatrix
07:33:12.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMath209

07:33:12.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperateLarge, DisplayName: testOperateLarge(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testOperateLarge
07:33:12.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetVectors
07:33:12.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnMatrixLarge, DisplayName: testGetSetColumnMatrixLarge(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnMatrixLarge
07:33:12.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumn, DisplayName: testSetColumn(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumn

07:33:12.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumnMatrix
07:33:12.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumn, DisplayName: testGetColumn(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumn

07:33:12.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetColumnVector
07:33:12.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testMultiply
07:33:12.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRow, DisplayName: testGetRow(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRow

07:33:12.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testEqualsAndHashCode
07:33:12.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnVectorLarge, DisplayName: testGetSetColumnVectorLarge(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetSetColumnVectorLarge
07:33:12.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSerial
07:33:12.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRow, DisplayName: testSetRow(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetRow

07:33:12.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testTranspose
07:33:12.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumnMatrix, DisplayName: testSetColumnMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumnMatrix
07:33:12.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testPremultiply
07:33:12.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRowMatrix
07:33:12.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumnVector, DisplayName: testSetColumnVector(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetColumnVector
07:33:12.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testSetSubMatrix
07:33:12.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.BlockRealMatrixTest)
07:33:12.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockRealMatrixTest, MethodName: testGetRowVector
07:33:12.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 48
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.function.GaussianTest

07:33:12.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14
07:33:12.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivative, DisplayName: testDerivative(org.apache.commons.math.analysis.function.GaussianTest)
07:33:12.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivative
07:33:12.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivativeNaN, DisplayName: testDerivativeNaN(org.apache.commons.math.analysis.function.GaussianTest)
07:33:12.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivativeNaN

07:33:12.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.GaussianTest)
07:33:12.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testSomeValues

07:33:12.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricValue, DisplayName: testParametricValue(org.apache.commons.math.analysis.function.GaussianTest)
07:33:12.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricValue
07:33:12.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.function.GaussianTest)
07:33:12.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testPreconditions

07:33:12.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.GaussianTest)
07:33:12.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage1

07:33:12.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.GaussianTest)
07:33:12.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage2

07:33:12.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.GaussianTest)
07:33:12.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage3

07:33:12.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.GaussianTest)
07:33:12.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage4

07:33:12.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage5, DisplayName: testParametricUsage5(org.apache.commons.math.analysis.function.GaussianTest)
07:33:12.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage5

07:33:12.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage6, DisplayName: testParametricUsage6(org.apache.commons.math.analysis.function.GaussianTest)
07:33:12.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricUsage6

07:33:12.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testLargeArguments, DisplayName: testLargeArguments(org.apache.commons.math.analysis.function.GaussianTest)
07:33:12.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testLargeArguments
07:33:12.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivativeLargeArguments, DisplayName: testDerivativeLargeArguments(org.apache.commons.math.analysis.function.GaussianTest)
07:33:12.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testDerivativeLargeArguments

07:33:12.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricGradient, DisplayName: testParametricGradient(org.apache.commons.math.analysis.function.GaussianTest)
07:33:12.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.function.GaussianTest, MethodName: testParametricGradient
07:33:12.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
07:33:12.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.TDistributionTest
07:33:12.369 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13
07:33:12.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilityAgaintStackOverflow, DisplayName: testCumulativeProbabilityAgaintStackOverflow(org.apache.commons.math.distribution.TDistributionTest)
07:33:12.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilityAgaintStackOverflow
07:33:12.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.TDistributionTest)
07:33:12.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testPreconditions
07:33:12.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: nistData, DisplayName: nistData(org.apache.commons.math.distribution.TDistributionTest)
07:33:12.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: nistData
07:33:12.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.TDistributionTest)
07:33:12.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testMomonts

07:33:12.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testDfAccessors, DisplayName: testDfAccessors(org.apache.commons.math.distribution.TDistributionTest)
07:33:12.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testDfAccessors

07:33:12.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.TDistributionTest)
07:33:12.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

07:33:12.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testSmallDf, DisplayName: testSmallDf(org.apache.commons.math.distribution.TDistributionTest)
07:33:12.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testSmallDf
07:33:12.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.TDistributionTest)
07:33:12.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testDensities
07:33:12.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)
07:33:12.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testInverseCumulativeProbabilities
07:33:12.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.TDistributionTest)
07:33:12.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.410 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testSampling
07:33:12.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.TDistributionTest)
07:33:12.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testCumulativeProbabilities
07:33:12.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.TDistributionTest)
07:33:12.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testIllegalArguments
07:33:12.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.TDistributionTest)
07:33:12.411 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.TDistributionTest, MethodName: testConsistency
07:33:12.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
TestResult: 0

07:33:12.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.FrequencyTest

07:33:12.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:33:12.415 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testEmptyTable, DisplayName: testEmptyTable(org.apache.commons.math.stat.FrequencyTest)
07:33:12.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testEmptyTable

07:33:12.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.stat.FrequencyTest)
07:33:12.416 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testAdd
07:33:12.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testPcts, DisplayName: testPcts(org.apache.commons.math.stat.FrequencyTest)
07:33:12.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.417 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testPcts
07:33:12.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.FrequencyTest)
07:33:12.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testToString
07:33:12.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testGetUniqueCount, DisplayName: testGetUniqueCount(org.apache.commons.math.stat.FrequencyTest)
07:33:12.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testGetUniqueCount

07:33:12.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testIntegerValues, DisplayName: testIntegerValues(org.apache.commons.math.stat.FrequencyTest)
07:33:12.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testIntegerValues
07:33:12.419 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testCounts, DisplayName: testCounts(org.apache.commons.math.stat.FrequencyTest)
07:33:12.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testCounts
07:33:12.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.FrequencyTest)
07:33:12.420 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.FrequencyTest, MethodName: testSerial
07:33:12.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
TestResult: 0

07:33:12.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest

07:33:12.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 20
07:33:12.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testIncreasingBandwidthIncreasesSmoothness, DisplayName: testIncreasingBandwidthIncreasesSmoothness(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testIncreasingBandwidthIncreasesSmoothness

07:33:12.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnStraightLine, DisplayName: testOnStraightLine(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
* Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnStraightLine
07:33:12.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testInsufficientBandwidth, DisplayName: testInsufficientBandwidth(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testInsufficientBandwidth

07:33:12.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal1, DisplayName: testNotAllFiniteReal1(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal1
07:33:12.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal2, DisplayName: testNotAllFiniteReal2(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal2

07:33:12.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal3, DisplayName: testNotAllFiniteReal3(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal3

07:33:12.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal4, DisplayName: testNotAllFiniteReal4(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal4

07:33:12.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal5, DisplayName: testNotAllFiniteReal5(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal5

07:33:12.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal6, DisplayName: testNotAllFiniteReal6(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNotAllFiniteReal6

07:33:12.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnTwoPoints, DisplayName: testOnTwoPoints(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnTwoPoints

07:33:12.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testEmptyData, DisplayName: testEmptyData(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testEmptyData

07:33:12.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNonStrictlyIncreasing1, DisplayName: testNonStrictlyIncreasing1(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNonStrictlyIncreasing1

07:33:12.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNonStrictlyIncreasing2, DisplayName: testNonStrictlyIncreasing2(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testNonStrictlyIncreasing2

07:33:12.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnOnePoint, DisplayName: testOnOnePoint(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnOnePoint

07:33:12.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testCompletelyIncorrectBandwidth1, DisplayName: testCompletelyIncorrectBandwidth1(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testCompletelyIncorrectBandwidth1

07:33:12.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testCompletelyIncorrectBandwidth2, DisplayName: testCompletelyIncorrectBandwidth2(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testCompletelyIncorrectBandwidth2

07:33:12.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, DisplayName: testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers
07:33:12.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnDistortedSine, DisplayName: testOnDistortedSine(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testOnDistortedSine
07:33:12.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testUnequalSizeArguments, DisplayName: testUnequalSizeArguments(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testUnequalSizeArguments

07:33:12.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testMath296withoutWeights, DisplayName: testMath296withoutWeights(org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest)
07:33:12.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, MethodName: testMath296withoutWeights
07:33:12.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 20
07:33:12.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:12.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest

07:33:12.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:33:12.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRank, DisplayName: testRank(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)
07:33:12.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRank

07:33:12.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCovariance, DisplayName: testMeanAndCovariance(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)
07:33:12.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCovariance
07:33:12.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testMath226, DisplayName: testMath226(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)
07:33:12.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testMath226
07:33:12.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRootMatrix, DisplayName: testRootMatrix(org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest)
07:33:12.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, MethodName: testRootMatrix

07:33:12.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:33:12.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.SumTest

07:33:12.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12
07:33:12.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.SumTest)
07:33:12.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSpecialValues

07:33:12.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testWeightedSum, DisplayName: testWeightedSum(org.apache.commons.math.stat.descriptive.summary.SumTest)
07:33:12.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testWeightedSum

07:33:12.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.SumTest)
07:33:12.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testMomentSmallSamples

07:33:12.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.SumTest)
07:33:12.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSerialization
07:33:12.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.SumTest)
07:33:12.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testIncrementation

07:33:12.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.SumTest)
07:33:12.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testConsistency

07:33:12.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.SumTest)
07:33:12.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEqualsAndHashCode
07:33:12.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.summary.SumTest)
07:33:12.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testCopyConsistency
07:33:12.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.summary.SumTest)
07:33:12.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testSerial
07:33:12.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.summary.SumTest)
07:33:12.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testCopy

07:33:12.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.SumTest)
07:33:12.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testEvaluation
07:33:12.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.summary.SumTest)
07:33:12.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumTest, MethodName: testWeightedConsistency

07:33:12.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
07:33:12.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.Well19937cTest
07:33:12.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 42
07:33:12.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well19937cTest)
07:33:12.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testReferenceCode
07:33:12.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:12.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.Well19937cTest)
07:33:12.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.347 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntDirect

07:33:13.347 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.Well19937cTest)
07:33:13.347 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextFloatDirect
07:33:13.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.Well19937cTest)
07:33:13.348 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextBooleanDirect
07:33:13.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.Well19937cTest)
07:33:13.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLongDirect
07:33:13.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.Well19937cTest)
07:33:13.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNexBoolean2
07:33:13.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.Well19937cTest)
07:33:13.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testFloatDirect
07:33:13.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.Well19937cTest)
07:33:13.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testDoubleDirect
07:33:13.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.Well19937cTest)
07:33:13.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLong2
07:33:13.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.Well19937cTest)
07:33:13.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntIAE
07:33:13.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.Well19937cTest)
07:33:13.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntNeg
07:33:13.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.Well19937cTest)
07:33:13.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNexBytes
07:33:13.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.Well19937cTest)
07:33:13.407 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextInt2
07:33:13.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.Well19937cTest)
07:33:13.409 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPascal
07:33:13.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.Well19937cTest)
07:33:13.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSample
07:33:13.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.Well19937cTest)
07:33:13.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextIntExtremeValues

07:33:13.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.Well19937cTest)
07:33:13.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextUniformExclusiveEndpoints
07:33:13.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.Well19937cTest)
07:33:13.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextGaussian
07:33:13.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.Well19937cTest)

07:33:13.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextF
07:33:13.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.Well19937cTest)
07:33:13.501 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextT
07:33:13.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.Well19937cTest)
07:33:13.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextChiSquare
07:33:13.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.Well19937cTest)
07:33:13.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSecureLong

07:33:13.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.Well19937cTest)
07:33:13.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:13.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSecureHex

07:33:13.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.Well19937cTest)
07:33:13.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextSecureInt

07:33:13.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.Well19937cTest)
07:33:13.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:14.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPoissonConsistency

07:33:14.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.Well19937cTest)

07:33:15.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextHypergeometric

07:33:15.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.Well19937cTest)
07:33:15.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLongExtremeValues

07:33:15.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.Well19937cTest)
07:33:15.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextExponential
07:33:15.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.Well19937cTest)
07:33:15.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPoisson
07:33:15.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.Well19937cTest)
07:33:15.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextUniform
07:33:15.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.Well19937cTest)
07:33:15.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextPermutation
07:33:15.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.014 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.Well19937cTest)
07:33:15.014 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextBinomial
07:33:15.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.Well19937cTest)
07:33:15.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testConfig
07:33:15.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.Well19937cTest)
07:33:15.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextInversionDeviate
07:33:15.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.Well19937cTest)
07:33:15.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextHex

07:33:15.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.Well19937cTest)
07:33:15.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextInt
07:33:15.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.Well19937cTest)
07:33:15.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextCauchy
07:33:15.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.Well19937cTest)
07:33:15.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextGamma
07:33:15.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.Well19937cTest)
07:33:15.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextWeibull
07:33:15.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.Well19937cTest)
07:33:15.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextBeta
07:33:15.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.Well19937cTest)
07:33:15.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextLong
07:33:15.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.Well19937cTest)
07:33:15.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937cTest, MethodName: testNextZipf
07:33:15.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 42
TestResult: 0

07:33:15.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.fraction.BigFractionFieldTest

07:33:15.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:15.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testOne, DisplayName: testOne(org.apache.commons.math.fraction.BigFractionFieldTest)
07:33:15.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testOne
07:33:15.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testZero, DisplayName: testZero(org.apache.commons.math.fraction.BigFractionFieldTest)
07:33:15.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testZero

07:33:15.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.fraction.BigFractionFieldTest)
07:33:15.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFieldTest, MethodName: testSerial
07:33:15.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

07:33:15.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.transform.FastSineTransformerTest

07:33:15.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:15.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testAdHocData, DisplayName: testAdHocData(org.apache.commons.math.transform.FastSineTransformerTest)
07:33:15.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testAdHocData
07:33:15.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.transform.FastSineTransformerTest)
07:33:15.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testParameters
07:33:15.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.transform.FastSineTransformerTest)
07:33:15.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastSineTransformerTest, MethodName: testSinFunction
07:33:15.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

07:33:15.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest

07:33:15.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:33:15.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testExactIntegration, DisplayName: testExactIntegration(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)
07:33:15.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testExactIntegration
07:33:15.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)
07:33:15.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testSinFunction
07:33:15.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)
07:33:15.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testQuinticFunction
07:33:15.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testIssue464, DisplayName: testIssue464(org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest)
07:33:15.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, MethodName: testIssue464
07:33:15.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:33:15.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:15.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest

07:33:15.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:15.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest)
07:33:15.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testParameters
07:33:15.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest)
07:33:15.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testSinFunction
07:33:15.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest)
07:33:15.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, MethodName: testExpm1Function
07:33:15.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:15.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.FastMathStrictComparisonTest

07:33:15.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 53

07:33:15.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[0], DisplayName: test1[0](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[0]

07:33:15.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[1], DisplayName: test1[1](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[1]
07:33:15.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[2], DisplayName: test1[2](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[2]

07:33:15.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[3], DisplayName: test1[3](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[3]

07:33:15.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[4], DisplayName: test1[4](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[4]
07:33:15.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[5], DisplayName: test1[5](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[5]
07:33:15.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[6], DisplayName: test1[6](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:33:15.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[6]
07:33:15.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[7], DisplayName: test1[7](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[7]
07:33:15.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[8], DisplayName: test1[8](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[8]
07:33:15.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[9], DisplayName: test1[9](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[9]
07:33:15.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[10], DisplayName: test1[10](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[10]
07:33:15.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[11], DisplayName: test1[11](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[11]
07:33:15.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[12], DisplayName: test1[12](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[12]
07:33:15.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[13], DisplayName: test1[13](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[13]
07:33:15.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[14], DisplayName: test1[14](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.768 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[14]
07:33:15.768 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.769 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[15], DisplayName: test1[15](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.769 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[15]
07:33:15.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[16], DisplayName: test1[16](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[16]
07:33:15.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[17], DisplayName: test1[17](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.772 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[17]
07:33:15.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[18], DisplayName: test1[18](org.apache.commons.math.util.FastMathStrictComparisonTest)

07:33:15.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[18]
07:33:15.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[19], DisplayName: test1[19](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[19]
07:33:15.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[20], DisplayName: test1[20](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[20]
07:33:15.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[21], DisplayName: test1[21](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[21]
07:33:15.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[22], DisplayName: test1[22](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[22]
07:33:15.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[23], DisplayName: test1[23](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[23]
07:33:15.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[24], DisplayName: test1[24](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[24]
07:33:15.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[25], DisplayName: test1[25](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[25]
07:33:15.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[26], DisplayName: test1[26](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[26]
07:33:15.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[27], DisplayName: test1[27](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[27]

07:33:15.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[28], DisplayName: test1[28](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[28]
07:33:15.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[29], DisplayName: test1[29](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[29]
07:33:15.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[30], DisplayName: test1[30](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[30]
07:33:15.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[31], DisplayName: test1[31](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[31]
07:33:15.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[32], DisplayName: test1[32](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[32]

07:33:15.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[33], DisplayName: test1[33](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[33]
07:33:15.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[34], DisplayName: test1[34](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[34]
07:33:15.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[35], DisplayName: test1[35](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[35]
07:33:15.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[36], DisplayName: test1[36](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[36]
07:33:15.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[37], DisplayName: test1[37](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[37]

07:33:15.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[38], DisplayName: test1[38](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[38]
07:33:15.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[39], DisplayName: test1[39](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[39]
07:33:15.786 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[40], DisplayName: test1[40](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[40]

07:33:15.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[41], DisplayName: test1[41](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[41]
07:33:15.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[42], DisplayName: test1[42](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[42]
07:33:15.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[43], DisplayName: test1[43](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[43]

07:33:15.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[44], DisplayName: test1[44](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[44]
07:33:15.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[45], DisplayName: test1[45](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[45]

07:33:15.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[46], DisplayName: test1[46](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[46]
07:33:15.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[47], DisplayName: test1[47](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[47]
07:33:15.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[48], DisplayName: test1[48](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[48]
07:33:15.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[49], DisplayName: test1[49](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[49]
07:33:15.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[50], DisplayName: test1[50](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[50]
07:33:15.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[51], DisplayName: test1[51](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[51]
07:33:15.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[52], DisplayName: test1[52](org.apache.commons.math.util.FastMathStrictComparisonTest)
07:33:15.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathStrictComparisonTest, MethodName: test1[52]

07:33:15.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 53
07:33:15.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:15.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.SingularValueSolverTest

07:33:15.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:33:15.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.SingularValueSolverTest)
07:33:15.800 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testSolve
07:33:15.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.SingularValueSolverTest)
07:33:15.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testSolveDimensionErrors
07:33:15.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testConditionNumber, DisplayName: testConditionNumber(org.apache.commons.math.linear.SingularValueSolverTest)
07:33:15.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.805 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testConditionNumber

07:33:15.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testLeastSquareSolve, DisplayName: testLeastSquareSolve(org.apache.commons.math.linear.SingularValueSolverTest)
07:33:15.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testLeastSquareSolve

07:33:15.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testMath320B, DisplayName: testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
07:33:15.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueSolverTest, MethodName: testMath320B
07:33:15.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:33:15.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:15.806 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.PlaneTest

07:33:15.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:33:15.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testIntersection2, DisplayName: testIntersection2(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
07:33:15.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testIntersection2
07:33:15.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testIntersection3, DisplayName: testIntersection3(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
07:33:15.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testIntersection3
07:33:15.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testPoint, DisplayName: testPoint(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
07:33:15.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testPoint

07:33:15.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testThreePoints, DisplayName: testThreePoints(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
07:33:15.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testThreePoints

07:33:15.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testContains, DisplayName: testContains(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
07:33:15.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testContains

07:33:15.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testIntersection, DisplayName: testIntersection(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
07:33:15.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testIntersection
07:33:15.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testOffset, DisplayName: testOffset(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
07:33:15.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testOffset

07:33:15.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testRotate, DisplayName: testRotate(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
07:33:15.819 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testRotate
07:33:15.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testSimilar, DisplayName: testSimilar(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
07:33:15.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testSimilar
07:33:15.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testTranslate, DisplayName: testTranslate(org.apache.commons.math.geometry.euclidean.threed.PlaneTest)
07:33:15.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PlaneTest, MethodName: testTranslate

07:33:15.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
07:33:15.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:15.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.complex.FrenchComplexFormatTest

07:33:15.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 31
07:33:15.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeImaginary, DisplayName: testParseNegativeImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeImaginary
07:33:15.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testConstructorSingleFormat

07:33:15.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimals
07:33:15.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroImaginary, DisplayName: testZeroImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroImaginary
07:33:15.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testDifferentImaginaryChar, DisplayName: testDifferentImaginaryChar(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testDifferentImaginaryChar
07:33:15.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testFormatNumber, DisplayName: testFormatNumber(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testFormatNumber
07:33:15.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNan

07:33:15.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc
07:33:15.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetRealFormat, DisplayName: testGetRealFormat(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetRealFormat

07:33:15.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeBoth, DisplayName: testParseNegativeBoth(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeBoth
07:33:15.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeReal, DisplayName: testParseNegativeReal(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNegativeReal
07:33:15.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetImaginaryFormat, DisplayName: testGetImaginaryFormat(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testGetImaginaryFormat

07:33:15.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc
07:33:15.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeInfinity, DisplayName: testNegativeInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeInfinity

07:33:15.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testTrimOneImaginary, DisplayName: testTrimOneImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testTrimOneImaginary
07:33:15.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPaseNegativeInfinity, DisplayName: testPaseNegativeInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPaseNegativeInfinity
07:33:15.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseDifferentImaginaryChar, DisplayName: testParseDifferentImaginaryChar(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseDifferentImaginaryChar
07:33:15.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testDefaultFormatComplex, DisplayName: testDefaultFormatComplex(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testDefaultFormatComplex
07:33:15.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleNoDecimals

07:33:15.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroReal, DisplayName: testZeroReal(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testZeroReal
07:33:15.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeBoth, DisplayName: testNegativeBoth(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeBoth
07:33:15.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeReal, DisplayName: testNegativeReal(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeReal
07:33:15.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeImaginary, DisplayName: testNegativeImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testNegativeImaginary
07:33:15.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseSimpleNoDecimals

07:33:15.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testPositiveInfinity

07:33:15.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testForgottenImaginaryCharacter, DisplayName: testForgottenImaginaryCharacter(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testForgottenImaginaryCharacter
07:33:15.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroReal, DisplayName: testParseZeroReal(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroReal

07:33:15.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseNan

07:33:15.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroImaginary, DisplayName: testParseZeroImaginary(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParseZeroImaginary

07:33:15.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testParsePositiveInfinity
07:33:15.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.complex.FrenchComplexFormatTest)
07:33:15.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.FrenchComplexFormatTest, MethodName: testSimpleWithDecimals
07:33:15.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 31
07:33:15.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:15.864 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest

07:33:15.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
07:33:15.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testSetSubVector, DisplayName: testSetSubVector(org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest)
07:33:15.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testSetSubVector
07:33:15.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest)
07:33:15.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testGetEntry
07:33:15.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testAllButExcluded, DisplayName: testAllButExcluded(org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest)
07:33:15.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:15.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testAllButExcluded

07:33:15.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testGetSubVector, DisplayName: testGetSubVector(org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest)
07:33:15.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.014 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testGetSubVector

07:33:16.014 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testSparseIterator, DisplayName: testSparseIterator(org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest)
07:33:16.014 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.015 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testSparseIterator
07:33:16.015 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testIterator, DisplayName: testIterator(org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest)
07:33:16.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testIterator
07:33:16.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testSetEntry, DisplayName: testSetEntry(org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest)
07:33:16.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest, MethodName: testSetEntry
07:33:16.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.018 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
07:33:16.018 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.transform.FastCosineTransformerTest

07:33:16.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:16.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testAdHocData, DisplayName: testAdHocData(org.apache.commons.math.transform.FastCosineTransformerTest)
07:33:16.019 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testAdHocData
07:33:16.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.transform.FastCosineTransformerTest)
07:33:16.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testParameters
07:33:16.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.transform.FastCosineTransformerTest)
07:33:16.021 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastCosineTransformerTest, MethodName: testSinFunction
07:33:16.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

07:33:16.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.ArrayRealVectorTest
07:33:16.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 22
07:33:16.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineMixedTypes, DisplayName: testCombineMixedTypes(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineMixedTypes
07:33:16.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testZeroVectors, DisplayName: testZeroVectors(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testZeroVectors

07:33:16.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMisc
07:33:16.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testConstructors
07:33:16.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombinePreconditionMixedType, DisplayName: testCombinePreconditionMixedType(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombinePreconditionMixedType

07:33:16.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testBasicFunctions, DisplayName: testBasicFunctions(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testBasicFunctions
07:33:16.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfSameType, DisplayName: testCombineToSelfSameType(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfSameType

07:33:16.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombinePreconditionSameType, DisplayName: testCombinePreconditionSameType(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombinePreconditionSameType

07:33:16.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testDataInOut, DisplayName: testDataInOut(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testDataInOut
07:33:16.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testPredicates, DisplayName: testPredicates(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testPredicates
07:33:16.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfMixedTypes, DisplayName: testCombineToSelfMixedTypes(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfMixedTypes

07:33:16.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineSameType, DisplayName: testCombineSameType(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineSameType

07:33:16.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMapFunctions, DisplayName: testMapFunctions(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMapFunctions
07:33:16.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosine, DisplayName: testCosine(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosine

07:33:16.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition1, DisplayName: testCosinePrecondition1(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition1
07:33:16.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition2, DisplayName: testCosinePrecondition2(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition2

07:33:16.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition3, DisplayName: testCosinePrecondition3(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCosinePrecondition3

07:33:16.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMinMax, DisplayName: testMinMax(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testMinMax
07:33:16.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfPreconditionSameType, DisplayName: testCombineToSelfPreconditionSameType(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfPreconditionSameType

07:33:16.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testOuterProduct, DisplayName: testOuterProduct(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testOuterProduct

07:33:16.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfPreconditionMixedType, DisplayName: testCombineToSelfPreconditionMixedType(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testCombineToSelfPreconditionMixedType

07:33:16.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.ArrayRealVectorTest)
07:33:16.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayRealVectorTest, MethodName: testSerial
07:33:16.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 22
TestResult: 0

07:33:16.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest

07:33:16.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:33:16.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinearDegenerateTwoSegment, DisplayName: testInterpolateLinearDegenerateTwoSegment(org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest)
07:33:16.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinearDegenerateTwoSegment
07:33:16.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest)
07:33:16.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testIllegalArguments

07:33:16.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinear, DisplayName: testInterpolateLinear(org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest)
07:33:16.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinear

07:33:16.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinearDegenerateThreeSegment, DisplayName: testInterpolateLinearDegenerateThreeSegment(org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest)
07:33:16.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, MethodName: testInterpolateLinearDegenerateThreeSegment

07:33:16.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:33:16.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.dfp.DfpTest
07:33:16.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 25

07:33:16.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.dfp.DfpTest)
07:33:16.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testAdd

07:33:16.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testFloor, DisplayName: testFloor(org.apache.commons.math.dfp.DfpTest)
07:33:16.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testFloor
07:33:16.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLog10, DisplayName: testLog10(org.apache.commons.math.dfp.DfpTest)
07:33:16.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLog10
07:33:16.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRound, DisplayName: testRound(org.apache.commons.math.dfp.DfpTest)
07:33:16.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRound
07:33:16.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCeil, DisplayName: testCeil(org.apache.commons.math.dfp.DfpTest)
07:33:16.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCeil
07:33:16.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRint, DisplayName: testRint(org.apache.commons.math.dfp.DfpTest)
07:33:16.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRint
07:33:16.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testSqrt, DisplayName: testSqrt(org.apache.commons.math.dfp.DfpTest)
07:33:16.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testSqrt
07:33:16.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.dfp.DfpTest)
07:33:16.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testToString
07:33:16.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testDivideInt, DisplayName: testDivideInt(org.apache.commons.math.dfp.DfpTest)
07:33:16.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testDivideInt
07:33:16.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testSignPredicates, DisplayName: testSignPredicates(org.apache.commons.math.dfp.DfpTest)
07:33:16.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testSignPredicates
07:33:16.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testPower10, DisplayName: testPower10(org.apache.commons.math.dfp.DfpTest)
07:33:16.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testPower10
07:33:16.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCopySign, DisplayName: testCopySign(org.apache.commons.math.dfp.DfpTest)
07:33:16.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCopySign
07:33:16.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCompare, DisplayName: testCompare(org.apache.commons.math.dfp.DfpTest)
07:33:16.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testCompare
07:33:16.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testByteConstructor, DisplayName: testByteConstructor(org.apache.commons.math.dfp.DfpTest)
07:33:16.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testByteConstructor
07:33:16.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIntValue, DisplayName: testIntValue(org.apache.commons.math.dfp.DfpTest)
07:33:16.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIntValue
07:33:16.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.dfp.DfpTest)
07:33:16.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testDivide
07:33:16.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.dfp.DfpTest)
07:33:16.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testMultiply
07:33:16.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIssue567, DisplayName: testIssue567(org.apache.commons.math.dfp.DfpTest)
07:33:16.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIssue567

07:33:16.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIsZero, DisplayName: testIsZero(org.apache.commons.math.dfp.DfpTest)
07:33:16.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIsZero
07:33:16.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIntConstructor, DisplayName: testIntConstructor(org.apache.commons.math.dfp.DfpTest)
07:33:16.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testIntConstructor
07:33:16.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLog10K, DisplayName: testLog10K(org.apache.commons.math.dfp.DfpTest)
07:33:16.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLog10K

07:33:16.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRemainder, DisplayName: testRemainder(org.apache.commons.math.dfp.DfpTest)
07:33:16.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testRemainder
07:33:16.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testPower10K, DisplayName: testPower10K(org.apache.commons.math.dfp.DfpTest)
07:33:16.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testPower10K
07:33:16.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLongConstructor, DisplayName: testLongConstructor(org.apache.commons.math.dfp.DfpTest)
07:33:16.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testLongConstructor

07:33:16.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testNextAfter, DisplayName: testNextAfter(org.apache.commons.math.dfp.DfpTest)
07:33:16.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpTest, MethodName: testNextAfter
07:33:16.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 25
07:33:16.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:16.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.genetics.RandomKeyTest

07:33:16.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:33:16.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testRandomPermutation, DisplayName: testRandomPermutation(org.apache.commons.math.genetics.RandomKeyTest)
07:33:16.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testRandomPermutation
07:33:16.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testInducedPermutation, DisplayName: testInducedPermutation(org.apache.commons.math.genetics.RandomKeyTest)
07:33:16.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testInducedPermutation
07:33:16.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testIdentityPermutation, DisplayName: testIdentityPermutation(org.apache.commons.math.genetics.RandomKeyTest)
07:33:16.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testIdentityPermutation

07:33:16.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testConstructor1, DisplayName: testConstructor1(org.apache.commons.math.genetics.RandomKeyTest)
07:33:16.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testConstructor1
07:33:16.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testConstructor2, DisplayName: testConstructor2(org.apache.commons.math.genetics.RandomKeyTest)
07:33:16.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testConstructor2

07:33:16.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testInvalidRepresentation, DisplayName: testInvalidRepresentation(org.apache.commons.math.genetics.RandomKeyTest)
07:33:16.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testInvalidRepresentation

07:33:16.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testComparatorPermutation, DisplayName: testComparatorPermutation(org.apache.commons.math.genetics.RandomKeyTest)
07:33:16.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testComparatorPermutation
07:33:16.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testDecode, DisplayName: testDecode(org.apache.commons.math.genetics.RandomKeyTest)
07:33:16.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testDecode
07:33:16.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testIsSame, DisplayName: testIsSame(org.apache.commons.math.genetics.RandomKeyTest)
07:33:16.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testIsSame
07:33:16.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testEqualRepr, DisplayName: testEqualRepr(org.apache.commons.math.genetics.RandomKeyTest)
07:33:16.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyTest, MethodName: testEqualRepr

07:33:16.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
07:33:16.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:16.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest

07:33:16.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:33:16.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testInsufficientData, DisplayName: testInsufficientData(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)
07:33:16.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testInsufficientData
07:33:16.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testStdErrorConsistency, DisplayName: testStdErrorConsistency(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)
07:33:16.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testStdErrorConsistency
07:33:16.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testSwissFertility, DisplayName: testSwissFertility(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)
07:33:16.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testSwissFertility
07:33:16.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testPValueNearZero, DisplayName: testPValueNearZero(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)
07:33:16.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testPValueNearZero
07:33:16.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testConstant, DisplayName: testConstant(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)
07:33:16.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testConstant

07:33:16.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testCovarianceConsistency, DisplayName: testCovarianceConsistency(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)
07:33:16.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testCovarianceConsistency
07:33:16.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)
07:33:16.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testConsistency
07:33:16.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testLongly, DisplayName: testLongly(org.apache.commons.math.stat.correlation.PearsonsCorrelationTest)
07:33:16.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, MethodName: testLongly
07:33:16.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:33:16.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:16.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.data.LotteryTest

07:33:16.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:16.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.data.LotteryTest, MethodName: testCertifiedValues, DisplayName: testCertifiedValues(org.apache.commons.math.stat.data.LotteryTest)

07:33:16.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.data.LotteryTest, MethodName: testCertifiedValues

07:33:16.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:33:16.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:16.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest

07:33:16.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:33:16.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)
07:33:16.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testMomentSmallSamples
07:33:16.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)
07:33:16.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testSerialization
07:33:16.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)
07:33:16.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testIncrementation
07:33:16.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)
07:33:16.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testConsistency

07:33:16.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)
07:33:16.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEqualsAndHashCode

07:33:16.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)
07:33:16.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testCopyConsistency

07:33:16.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)
07:33:16.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testSerial
07:33:16.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)
07:33:16.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testCopy

07:33:16.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)
07:33:16.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testEvaluation
07:33:16.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.FirstMomentTest)
07:33:16.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, MethodName: testWeightedConsistency
07:33:16.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
07:33:16.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:16.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.fitting.CurveFitterTest

07:33:16.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:16.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath303, DisplayName: testMath303(org.apache.commons.math.optimization.fitting.CurveFitterTest)
07:33:16.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath303
07:33:16.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath304, DisplayName: testMath304(org.apache.commons.math.optimization.fitting.CurveFitterTest)
07:33:16.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath304
07:33:16.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath372, DisplayName: testMath372(org.apache.commons.math.optimization.fitting.CurveFitterTest)
07:33:16.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.CurveFitterTest, MethodName: testMath372
07:33:16.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:16.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.FirstOrderConverterTest

07:33:16.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:33:16.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.FirstOrderConverterTest)
07:33:16.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testSmallStep

07:33:16.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.FirstOrderConverterTest)
07:33:16.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDecreasingSteps
07:33:16.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.FirstOrderConverterTest)
07:33:16.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testBigStep

07:33:16.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDoubleDimension, DisplayName: testDoubleDimension(org.apache.commons.math.ode.FirstOrderConverterTest)
07:33:16.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.ode.FirstOrderConverterTest, MethodName: testDoubleDimension

07:33:16.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:33:16.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:16.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.dfp.DfpDecTest

07:33:16.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:16.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testRound, DisplayName: testRound(org.apache.commons.math.dfp.DfpDecTest)

07:33:16.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testRound
07:33:16.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testRoundDecimal10, DisplayName: testRoundDecimal10(org.apache.commons.math.dfp.DfpDecTest)
07:33:16.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testRoundDecimal10
07:33:16.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testNextAfter, DisplayName: testNextAfter(org.apache.commons.math.dfp.DfpDecTest)
07:33:16.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpDecTest, MethodName: testNextAfter
07:33:16.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:16.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.MathExceptionTest

07:33:16.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:33:16.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.MathExceptionTest)
07:33:16.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.896 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testSerialization

07:33:16.896 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructorCause, DisplayName: testConstructorCause(org.apache.commons.math.MathExceptionTest)
07:33:16.896 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.896 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructorCause
07:33:16.896 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.896 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testPrintStackTrace, DisplayName: testPrintStackTrace(org.apache.commons.math.MathExceptionTest)
07:33:16.896 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testPrintStackTrace
07:33:16.897 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.MathExceptionTest)
07:33:16.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathExceptionTest, MethodName: testConstructor
07:33:16.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
TestResult: 0
07:33:16.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest

07:33:16.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:16.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCorrelation, DisplayName: testMeanAndCorrelation(org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest)
07:33:16.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, MethodName: testMeanAndCorrelation
07:33:16.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:33:16.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:16.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.GillIntegratorTest

07:33:16.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:33:16.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)
07:33:16.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testDimensionCheck
07:33:16.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:16.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)
07:33:16.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testBackward
07:33:17.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)
07:33:17.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testSmallStep
07:33:17.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)
07:33:17.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testDecreasingSteps

07:33:17.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)
07:33:17.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testBigStep
07:33:17.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testUnstableDerivative, DisplayName: testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)
07:33:17.176 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testUnstableDerivative
07:33:17.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)
07:33:17.178 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testKepler
07:33:17.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.GillIntegratorTest)
07:33:17.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillIntegratorTest, MethodName: testStepSize
07:33:17.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:33:17.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.integration.RombergIntegratorTest

07:33:17.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:17.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.integration.RombergIntegratorTest)
07:33:17.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testParameters
07:33:17.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.integration.RombergIntegratorTest)
07:33:17.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testSinFunction
07:33:17.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.integration.RombergIntegratorTest)
07:33:17.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.integration.RombergIntegratorTest, MethodName: testQuinticFunction
07:33:17.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:17.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest

07:33:17.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14
07:33:17.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testFasterThanNewton, DisplayName: testFasterThanNewton(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)
07:33:17.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testFasterThanNewton
07:33:17.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testConvergenceOnFunctionAccuracy, DisplayName: testConvergenceOnFunctionAccuracy(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)
07:33:17.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testConvergenceOnFunctionAccuracy
07:33:17.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testInsufficientOrder1, DisplayName: testInsufficientOrder1(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)
07:33:17.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testInsufficientOrder1
07:33:17.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testInsufficientOrder2, DisplayName: testInsufficientOrder2(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)
07:33:17.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testInsufficientOrder2

07:33:17.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testInsufficientOrder3, DisplayName: testInsufficientOrder3(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)
07:33:17.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testInsufficientOrder3

07:33:17.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testConstructorsOK, DisplayName: testConstructorsOK(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)
07:33:17.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testConstructorsOK

07:33:17.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionRightSide, DisplayName: testSolutionRightSide(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)
07:33:17.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionRightSide
07:33:17.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionAboveSide, DisplayName: testSolutionAboveSide(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)
07:33:17.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionAboveSide
07:33:17.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionBelowSide, DisplayName: testSolutionBelowSide(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)
07:33:17.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionBelowSide
07:33:17.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionLeftSide, DisplayName: testSolutionLeftSide(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)
07:33:17.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSolutionLeftSide
07:33:17.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)
07:33:17.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testBadEndpoints
07:33:17.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testRootEndpoints, DisplayName: testRootEndpoints(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)
07:33:17.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testRootEndpoints

07:33:17.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)
07:33:17.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testQuinticZero
07:33:17.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest)
07:33:17.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest, MethodName: testSinZero
07:33:17.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
07:33:17.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.MultidimensionalCounterTest

07:33:17.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:33:17.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testIterationConsistency, DisplayName: testIterationConsistency(org.apache.commons.math.util.MultidimensionalCounterTest)
07:33:17.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testIterationConsistency
07:33:17.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testIteratorPreconditions, DisplayName: testIteratorPreconditions(org.apache.commons.math.util.MultidimensionalCounterTest)
07:33:17.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testIteratorPreconditions

07:33:17.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.util.MultidimensionalCounterTest)
07:33:17.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testAccessors

07:33:17.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testMulti2UniConversion, DisplayName: testMulti2UniConversion(org.apache.commons.math.util.MultidimensionalCounterTest)
07:33:17.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testMulti2UniConversion

07:33:17.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.util.MultidimensionalCounterTest)
07:33:17.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MultidimensionalCounterTest, MethodName: testPreconditions
07:33:17.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:33:17.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.complex.ComplexFieldTest

07:33:17.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:17.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testOne, DisplayName: testOne(org.apache.commons.math.complex.ComplexFieldTest)
07:33:17.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testOne
07:33:17.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testZero, DisplayName: testZero(org.apache.commons.math.complex.ComplexFieldTest)
07:33:17.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testZero

07:33:17.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.complex.ComplexFieldTest)
07:33:17.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFieldTest, MethodName: testSerial
07:33:17.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:17.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest

07:33:17.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:33:17.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, MethodName: testLinearFunction2D, DisplayName: testLinearFunction2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)
07:33:17.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, MethodName: testLinearFunction2D
07:33:17.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, MethodName: testParaboloid2D, DisplayName: testParaboloid2D(org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest)
07:33:17.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, MethodName: testParaboloid2D

07:33:17.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:33:17.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.DefaultTransformerTest

07:33:17.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
07:33:17.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformDouble, DisplayName: testTransformDouble(org.apache.commons.math.util.DefaultTransformerTest)
07:33:17.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformDouble
07:33:17.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformBigDecimal, DisplayName: testTransformBigDecimal(org.apache.commons.math.util.DefaultTransformerTest)
07:33:17.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformBigDecimal
07:33:17.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformObject, DisplayName: testTransformObject(org.apache.commons.math.util.DefaultTransformerTest)
07:33:17.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformObject

07:33:17.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformString, DisplayName: testTransformString(org.apache.commons.math.util.DefaultTransformerTest)
07:33:17.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformString
07:33:17.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformInteger, DisplayName: testTransformInteger(org.apache.commons.math.util.DefaultTransformerTest)
07:33:17.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformInteger

07:33:17.452 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformNull, DisplayName: testTransformNull(org.apache.commons.math.util.DefaultTransformerTest)
07:33:17.452 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testTransformNull

07:33:17.452 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.util.DefaultTransformerTest)
07:33:17.452 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.453 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.DefaultTransformerTest, MethodName: testSerial
07:33:17.453 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.453 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
07:33:17.453 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.453 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.function.LogitTest

07:33:17.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14
07:33:17.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivative, DisplayName: testDerivative(org.apache.commons.math.analysis.function.LogitTest)
07:33:17.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivative
07:33:17.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.LogitTest)
07:33:17.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testSomeValues

07:33:17.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricValue, DisplayName: testParametricValue(org.apache.commons.math.analysis.function.LogitTest)
07:33:17.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricValue
07:33:17.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.LogitTest)
07:33:17.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage1

07:33:17.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.LogitTest)
07:33:17.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage2

07:33:17.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.LogitTest)
07:33:17.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage3

07:33:17.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.LogitTest)
07:33:17.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage4

07:33:17.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage5, DisplayName: testParametricUsage5(org.apache.commons.math.analysis.function.LogitTest)
07:33:17.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage5
07:33:17.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage6, DisplayName: testParametricUsage6(org.apache.commons.math.analysis.function.LogitTest)
07:33:17.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testParametricUsage6

07:33:17.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testPreconditions1, DisplayName: testPreconditions1(org.apache.commons.math.analysis.function.LogitTest)
07:33:17.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testPreconditions1

07:33:17.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testPreconditions2, DisplayName: testPreconditions2(org.apache.commons.math.analysis.function.LogitTest)
07:33:17.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testPreconditions2

07:33:17.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivativeLargeArguments, DisplayName: testDerivativeLargeArguments(org.apache.commons.math.analysis.function.LogitTest)
07:33:17.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivativeLargeArguments

07:33:17.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivativeWithInverseFunction, DisplayName: testDerivativeWithInverseFunction(org.apache.commons.math.analysis.function.LogitTest)
07:33:17.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testDerivativeWithInverseFunction
07:33:17.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testValueWithInverseFunction, DisplayName: testValueWithInverseFunction(org.apache.commons.math.analysis.function.LogitTest)
07:33:17.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogitTest, MethodName: testValueWithInverseFunction

07:33:17.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
07:33:17.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.NotPositiveExceptionTest

07:33:17.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:17.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NotPositiveExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NotPositiveExceptionTest)

07:33:17.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NotPositiveExceptionTest, MethodName: testAccessors
07:33:17.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:33:17.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest

07:33:17.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
07:33:17.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testIssue631, DisplayName: testIssue631(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)
07:33:17.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testIssue631
07:33:17.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionRightSide, DisplayName: testSolutionRightSide(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)
07:33:17.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionRightSide
07:33:17.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionAboveSide, DisplayName: testSolutionAboveSide(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)
07:33:17.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionAboveSide
07:33:17.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionBelowSide, DisplayName: testSolutionBelowSide(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)
07:33:17.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionBelowSide
07:33:17.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionLeftSide, DisplayName: testSolutionLeftSide(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)
07:33:17.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSolutionLeftSide
07:33:17.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)
07:33:17.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testBadEndpoints
07:33:17.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testRootEndpoints, DisplayName: testRootEndpoints(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)
07:33:17.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testRootEndpoints

07:33:17.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)
07:33:17.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testQuinticZero
07:33:17.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest)
07:33:17.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest, MethodName: testSinZero

07:33:17.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
07:33:17.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest

07:33:17.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:33:17.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testSimplistic, DisplayName: testSimplistic(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)
07:33:17.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testSimplistic

07:33:17.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testBasicStats, DisplayName: testBasicStats(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)
07:33:17.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testBasicStats

07:33:17.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testMismatch, DisplayName: testMismatch(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)
07:33:17.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testMismatch
07:33:17.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest)
07:33:17.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, MethodName: testSerial
07:33:17.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:33:17.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.SumSqTest

07:33:17.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
07:33:17.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.480 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
07:33:17.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSpecialValues

07:33:17.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
07:33:17.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testMomentSmallSamples
07:33:17.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
07:33:17.481 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSerialization
07:33:17.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
07:33:17.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testIncrementation

07:33:17.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
07:33:17.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testConsistency

07:33:17.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
07:33:17.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEqualsAndHashCode
07:33:17.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
07:33:17.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testCopyConsistency
07:33:17.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
07:33:17.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testSerial

07:33:17.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.summary.SumSqTest)

07:33:17.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testCopy

07:33:17.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
07:33:17.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testEvaluation

07:33:17.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.summary.SumSqTest)
07:33:17.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumSqTest, MethodName: testWeightedConsistency

07:33:17.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
07:33:17.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.complex.ComplexUtilsTest

07:33:17.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:33:17.486 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexInf, DisplayName: testPolar2ComplexInf(org.apache.commons.math.complex.ComplexUtilsTest)
07:33:17.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexInf
07:33:17.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.487 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexNaN, DisplayName: testPolar2ComplexNaN(org.apache.commons.math.complex.ComplexUtilsTest)
07:33:17.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexNaN

07:33:17.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexIllegalModulus, DisplayName: testPolar2ComplexIllegalModulus(org.apache.commons.math.complex.ComplexUtilsTest)
07:33:17.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2ComplexIllegalModulus

07:33:17.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2Complex, DisplayName: testPolar2Complex(org.apache.commons.math.complex.ComplexUtilsTest)
07:33:17.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexUtilsTest, MethodName: testPolar2Complex
07:33:17.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:33:17.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest

07:33:17.491 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:33:17.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testConvergenceOnFunctionAccuracy, DisplayName: testConvergenceOnFunctionAccuracy(org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest)

07:33:17.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testConvergenceOnFunctionAccuracy
07:33:17.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testNeta, DisplayName: testNeta(org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest)
07:33:17.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testNeta

07:33:17.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testInsufficientOrder3, DisplayName: testInsufficientOrder3(org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest)
07:33:17.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testInsufficientOrder3
07:33:17.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testConstructorOK, DisplayName: testConstructorOK(org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest)
07:33:17.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest, MethodName: testConstructorOK
07:33:17.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:33:17.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest

07:33:17.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
07:33:17.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testfirstDerivativeComparison, DisplayName: testfirstDerivativeComparison(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)
07:33:17.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testfirstDerivativeComparison
07:33:17.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testQuadratic, DisplayName: testQuadratic(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)
07:33:17.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testQuadratic

07:33:17.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testMultiplication, DisplayName: testMultiplication(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)
07:33:17.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testMultiplication
07:33:17.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testAddition, DisplayName: testAddition(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)
07:33:17.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testAddition
07:33:17.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testConstants, DisplayName: testConstants(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)
07:33:17.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testConstants

07:33:17.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testQuintic, DisplayName: testQuintic(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)
07:33:17.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testQuintic

07:33:17.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testMath341, DisplayName: testMath341(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)
07:33:17.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testMath341

07:33:17.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testLinear, DisplayName: testLinear(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)
07:33:17.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testLinear

07:33:17.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)
07:33:17.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testSerial
07:33:17.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testString, DisplayName: testString(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)
07:33:17.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testString
07:33:17.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testSubtraction, DisplayName: testSubtraction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest)
07:33:17.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, MethodName: testSubtraction
07:33:17.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
07:33:17.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.SparseRealVectorTest

07:33:17.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
07:33:17.866 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.linear.SparseRealVectorTest)
07:33:17.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testMisc
07:33:17.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.linear.SparseRealVectorTest)
07:33:17.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testConstructors
07:33:17.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testBasicFunctions, DisplayName: testBasicFunctions(org.apache.commons.math.linear.SparseRealVectorTest)
07:33:17.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testBasicFunctions
07:33:17.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testDataInOut, DisplayName: testDataInOut(org.apache.commons.math.linear.SparseRealVectorTest)
07:33:17.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testDataInOut
07:33:17.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testPredicates, DisplayName: testPredicates(org.apache.commons.math.linear.SparseRealVectorTest)
07:33:17.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testPredicates
07:33:17.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testConcurrentModification, DisplayName: testConcurrentModification(org.apache.commons.math.linear.SparseRealVectorTest)
07:33:17.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testConcurrentModification

07:33:17.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testMapFunctions, DisplayName: testMapFunctions(org.apache.commons.math.linear.SparseRealVectorTest)
07:33:17.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testMapFunctions
07:33:17.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testOuterProduct, DisplayName: testOuterProduct(org.apache.commons.math.linear.SparseRealVectorTest)
07:33:17.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testOuterProduct
07:33:17.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.SparseRealVectorTest)
07:33:17.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealVectorTest, MethodName: testSerial
07:33:17.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
07:33:17.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.SparseFieldMatrixTest

07:33:17.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 24
07:33:17.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testOperate
07:33:17.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.893 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.893 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testExamples
07:33:17.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetEntry
07:33:17.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testAddFail
07:33:17.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testAdd
07:33:17.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testScalarAdd
07:33:17.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testTrace
07:33:17.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPlusMinus
07:33:17.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMultiply2
07:33:17.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testDimensions
07:33:17.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testSubMatrix, DisplayName: testSubMatrix(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testSubMatrix
07:33:17.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPremultiplyVector
07:33:17.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testCopyFunctions
07:33:17.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMath209
07:33:17.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetVectors
07:33:17.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetColumnMatrix
07:33:17.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetColumnVector
07:33:17.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testMultiply
07:33:17.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testEqualsAndHashCode
07:33:17.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.918 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testTranspose
07:33:17.918 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.918 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.918 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testPremultiply
07:33:17.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetRowMatrix
07:33:17.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testSetSubMatrix
07:33:17.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.SparseFieldMatrixTest)
07:33:17.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldMatrixTest, MethodName: testGetRowVector
07:33:17.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 24
07:33:17.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.fraction.FractionFormatTest

07:33:17.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 18
07:33:17.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testNumeratorFormat, DisplayName: testNumeratorFormat(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testNumeratorFormat
07:33:17.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproperNegative, DisplayName: testFormatImproperNegative(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproperNegative
07:33:17.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testLongFormat, DisplayName: testLongFormat(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testLongFormat
07:33:17.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproper, DisplayName: testFormatImproper(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatImproper
07:33:17.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProper, DisplayName: testParseProper(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProper
07:33:17.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperNegative, DisplayName: testParseProperNegative(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperNegative
07:33:17.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParse, DisplayName: testParse(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParse
07:33:17.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testWholeFormat, DisplayName: testWholeFormat(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testWholeFormat
07:33:17.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatZero, DisplayName: testFormatZero(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatZero
07:33:17.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatNegative, DisplayName: testFormatNegative(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormatNegative
07:33:17.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalidDenominator, DisplayName: testParseInvalidDenominator(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalidDenominator
07:33:17.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testDenominatorFormat, DisplayName: testDenominatorFormat(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testDenominatorFormat
07:33:17.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperInvalidMinus, DisplayName: testParseProperInvalidMinus(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseProperInvalidMinus
07:33:17.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInteger, DisplayName: testParseInteger(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInteger
07:33:17.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalid, DisplayName: testParseInvalid(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseInvalid
07:33:17.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormat, DisplayName: testFormat(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testFormat
07:33:17.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testDoubleFormat, DisplayName: testDoubleFormat(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testDoubleFormat
07:33:17.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseNegative, DisplayName: testParseNegative(org.apache.commons.math.fraction.FractionFormatTest)
07:33:17.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFormatTest, MethodName: testParseNegative
07:33:17.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 18
07:33:17.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.special.ErfTest

07:33:17.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:33:17.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testLargeValues, DisplayName: testLargeValues(org.apache.commons.math.special.ErfTest)

07:33:17.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testLargeValues

07:33:17.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf1960, DisplayName: testErf1960(org.apache.commons.math.special.ErfTest)
07:33:17.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf1960

07:33:17.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2576, DisplayName: testErf2576(org.apache.commons.math.special.ErfTest)
07:33:17.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2576

07:33:17.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2807, DisplayName: testErf2807(org.apache.commons.math.special.ErfTest)
07:33:17.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf2807

07:33:17.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf3291, DisplayName: testErf3291(org.apache.commons.math.special.ErfTest)
07:33:17.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf3291

07:33:17.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfcGnu, DisplayName: testErfcGnu(org.apache.commons.math.special.ErfTest)
07:33:17.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfcGnu
07:33:17.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfcMaple, DisplayName: testErfcMaple(org.apache.commons.math.special.ErfTest)
07:33:17.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfcMaple
07:33:17.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf0, DisplayName: testErf0(org.apache.commons.math.special.ErfTest)
07:33:17.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErf0
07:33:17.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testTwoArgumentErf, DisplayName: testTwoArgumentErf(org.apache.commons.math.special.ErfTest)
07:33:17.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testTwoArgumentErf
07:33:17.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfGnu, DisplayName: testErfGnu(org.apache.commons.math.special.ErfTest)
07:33:17.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.ErfTest, MethodName: testErfGnu
07:33:17.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
07:33:17.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest

07:33:17.947 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:33:17.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)
07:33:17.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testProductAndGeometricMean
07:33:17.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)
07:33:17.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testStats
07:33:17.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)
07:33:17.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testN0andN1Conditions
07:33:17.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testSkewAndKurtosis, DisplayName: testSkewAndKurtosis(org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest)
07:33:17.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, MethodName: testSkewAndKurtosis
07:33:17.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:33:17.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest

07:33:17.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:17.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, MethodName: testCircleFitting, DisplayName: testCircleFitting(org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest)

07:33:17.970 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, MethodName: testCircleFitting

07:33:17.971 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:33:17.971 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.special.BetaTest

07:33:17.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17
07:33:17.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNanPositive, DisplayName: testRegularizedBetaPositiveNanPositive(org.apache.commons.math.special.BetaTest)
07:33:17.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNanPositive

07:33:17.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositivePositive, DisplayName: testRegularizedBetaPositivePositivePositive(org.apache.commons.math.special.BetaTest)
07:33:17.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.974 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositivePositive

07:33:17.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNegative, DisplayName: testRegularizedBetaPositivePositiveNegative(org.apache.commons.math.special.BetaTest)
07:33:17.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNegative

07:33:17.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveZeroPositive, DisplayName: testRegularizedBetaPositiveZeroPositive(org.apache.commons.math.special.BetaTest)
07:33:17.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveZeroPositive
07:33:17.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositivePositive, DisplayName: testLogBetaPositivePositive(org.apache.commons.math.special.BetaTest)
07:33:17.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositivePositive
07:33:17.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNegative, DisplayName: testLogBetaPositiveNegative(org.apache.commons.math.special.BetaTest)
07:33:17.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNegative
07:33:17.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNan, DisplayName: testLogBetaPositiveNan(org.apache.commons.math.special.BetaTest)
07:33:17.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveNan
07:33:17.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNegativePositivePositive, DisplayName: testRegularizedBetaNegativePositivePositive(org.apache.commons.math.special.BetaTest)
07:33:17.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNegativePositivePositive
07:33:17.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNan, DisplayName: testRegularizedBetaPositivePositiveNan(org.apache.commons.math.special.BetaTest)
07:33:17.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveNan
07:33:17.976 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaZeroPositive, DisplayName: testLogBetaZeroPositive(org.apache.commons.math.special.BetaTest)
07:33:17.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaZeroPositive

07:33:17.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveZero, DisplayName: testRegularizedBetaPositivePositiveZero(org.apache.commons.math.special.BetaTest)
07:33:17.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositivePositiveZero
07:33:17.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNegativePositive, DisplayName: testRegularizedBetaPositiveNegativePositive(org.apache.commons.math.special.BetaTest)
07:33:17.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaPositiveNegativePositive
07:33:17.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.977 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNanPositive, DisplayName: testLogBetaNanPositive(org.apache.commons.math.special.BetaTest)
07:33:17.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNanPositive
07:33:17.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNegativePositive, DisplayName: testLogBetaNegativePositive(org.apache.commons.math.special.BetaTest)
07:33:17.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaNegativePositive
07:33:17.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveZero, DisplayName: testLogBetaPositiveZero(org.apache.commons.math.special.BetaTest)
07:33:17.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testLogBetaPositiveZero
07:33:17.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaZeroPositivePositive, DisplayName: testRegularizedBetaZeroPositivePositive(org.apache.commons.math.special.BetaTest)
07:33:17.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaZeroPositivePositive

07:33:17.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNanPositivePositive, DisplayName: testRegularizedBetaNanPositivePositive(org.apache.commons.math.special.BetaTest)
07:33:17.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.BetaTest, MethodName: testRegularizedBetaNanPositivePositive
07:33:17.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
07:33:17.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest

07:33:17.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14
07:33:17.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveNoRoot, DisplayName: testSolveNoRoot(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)
07:33:17.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveNoRoot
07:33:17.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveSin, DisplayName: testSolveSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)
07:33:17.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveSin

07:33:17.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testNullFunction, DisplayName: testNullFunction(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)
07:33:17.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testNullFunction
07:33:17.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracySin, DisplayName: testSolveAccuracySin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)
07:33:17.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracySin

07:33:17.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveBadAccuracy, DisplayName: testSolveBadAccuracy(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)
07:33:17.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveBadAccuracy
07:33:17.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)
07:33:17.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testMisc
07:33:17.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveNull, DisplayName: testSolveNull(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)
07:33:17.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveNull

07:33:17.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBracketSin, DisplayName: testBracketSin(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)
07:33:17.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBracketSin

07:33:17.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadInitial, DisplayName: testBadInitial(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)
07:33:17.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadInitial
07:33:17.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadMaximumIterations, DisplayName: testBadMaximumIterations(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)
07:33:17.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadMaximumIterations

07:33:17.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)
07:33:17.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBadEndpoints

07:33:17.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBracketEndpointRoot, DisplayName: testBracketEndpointRoot(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)
07:33:17.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testBracketEndpointRoot

07:33:17.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracyNull, DisplayName: testSolveAccuracyNull(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)
07:33:17.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveAccuracyNull
07:33:17.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveBadEndpoints, DisplayName: testSolveBadEndpoints(org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest)
07:33:17.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, MethodName: testSolveBadEndpoints
07:33:17.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
07:33:17.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.LUSolverTest

07:33:17.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
07:33:17.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.LUSolverTest)
07:33:17.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolve
07:33:17.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testThreshold, DisplayName: testThreshold(org.apache.commons.math.linear.LUSolverTest)
07:33:17.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testThreshold

07:33:17.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testDeterminant, DisplayName: testDeterminant(org.apache.commons.math.linear.LUSolverTest)
07:33:17.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testDeterminant
07:33:17.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.LUSolverTest)
07:33:17.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolveDimensionErrors
07:33:17.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolveSingularityErrors, DisplayName: testSolveSingularityErrors(org.apache.commons.math.linear.LUSolverTest)
07:33:17.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSolveSingularityErrors
07:33:17.990 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSingular, DisplayName: testSingular(org.apache.commons.math.linear.LUSolverTest)
07:33:17.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.LUSolverTest, MethodName: testSingular

07:33:17.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
07:33:17.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.CholeskySolverTest

07:33:17.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:17.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.992 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.CholeskySolverTest)

07:33:17.995 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testSolve
07:33:17.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testDeterminant, DisplayName: testDeterminant(org.apache.commons.math.linear.CholeskySolverTest)
07:33:17.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testDeterminant

07:33:17.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.CholeskySolverTest)
07:33:17.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskySolverTest, MethodName: testSolveDimensionErrors
07:33:17.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:17.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:17.996 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.solvers.SecantSolverTest

07:33:17.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:33:17.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionRightSide, DisplayName: testSolutionRightSide(org.apache.commons.math.analysis.solvers.SecantSolverTest)
07:33:17.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:17.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionRightSide
07:33:17.999 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionAboveSide, DisplayName: testSolutionAboveSide(org.apache.commons.math.analysis.solvers.SecantSolverTest)
07:33:18.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionAboveSide
07:33:18.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionBelowSide, DisplayName: testSolutionBelowSide(org.apache.commons.math.analysis.solvers.SecantSolverTest)
07:33:18.000 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionBelowSide
07:33:18.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionLeftSide, DisplayName: testSolutionLeftSide(org.apache.commons.math.analysis.solvers.SecantSolverTest)
07:33:18.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSolutionLeftSide
07:33:18.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.SecantSolverTest)
07:33:18.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testBadEndpoints
07:33:18.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testRootEndpoints, DisplayName: testRootEndpoints(org.apache.commons.math.analysis.solvers.SecantSolverTest)
07:33:18.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testRootEndpoints

07:33:18.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.SecantSolverTest)
07:33:18.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testQuinticZero
07:33:18.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.SecantSolverTest)
07:33:18.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.SecantSolverTest, MethodName: testSinZero

07:33:18.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:33:18.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.complex.ComplexTest

07:33:18.023 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 116
07:33:18.023 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.025 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_NAN_Inf, DisplayName: testNthRoot_cornercase_NAN_Inf(org.apache.commons.math.complex.ComplexTest)
07:33:18.025 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_NAN_Inf
07:33:18.025 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.026 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhInf, DisplayName: testTanhInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.026 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhInf
07:33:18.026 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.026 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhNaN, DisplayName: testTanhNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.026 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.026 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhNaN

07:33:18.026 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateNaN, DisplayName: testConjugateNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.026 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateNaN
07:33:18.026 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivideInf, DisplayName: testScalarDivideInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivideInf

07:33:18.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivideNaN, DisplayName: testScalarDivideNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivideNaN

07:33:18.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiplyInf, DisplayName: testScalarMultiplyInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiplyInf

07:33:18.027 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiplyNaN, DisplayName: testScalarMultiplyNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiplyNaN
07:33:18.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideImaginary, DisplayName: testDivideImaginary(org.apache.commons.math.complex.ComplexTest)
07:33:18.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideImaginary

07:33:18.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosInf, DisplayName: testAcosInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosInf
07:33:18.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.028 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosNaN, DisplayName: testAcosNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcosNaN

07:33:18.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsClass, DisplayName: testEqualsClass(org.apache.commons.math.complex.ComplexTest)
07:33:18.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsClass

07:33:18.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbs, DisplayName: testAbs(org.apache.commons.math.complex.ComplexTest)
07:33:18.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbs

07:33:18.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.complex.ComplexTest)
07:33:18.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.029 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAdd

07:33:18.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCos, DisplayName: testCos(org.apache.commons.math.complex.ComplexTest)
07:33:18.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCos

07:33:18.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExp, DisplayName: testExp(org.apache.commons.math.complex.ComplexTest)
07:33:18.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.030 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExp

07:33:18.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLog, DisplayName: testLog(org.apache.commons.math.complex.ComplexTest)
07:33:18.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLog

07:33:18.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.complex.ComplexTest)
07:33:18.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPow
07:33:18.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSin, DisplayName: testSin(org.apache.commons.math.complex.ComplexTest)
07:33:18.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSin

07:33:18.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTan, DisplayName: testTan(org.apache.commons.math.complex.ComplexTest)
07:33:18.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTan

07:33:18.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.complex.ComplexTest)
07:33:18.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtract

07:33:18.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.complex.ComplexTest)
07:33:18.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarAdd

07:33:18.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPow, DisplayName: testScalarPow(org.apache.commons.math.complex.ComplexTest)
07:33:18.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPow

07:33:18.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaNInf, DisplayName: testDivideNaNInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaNInf

07:33:18.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanI, DisplayName: testAtanI(org.apache.commons.math.complex.ComplexTest)
07:33:18.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 0.5493061443340549)
07:33:18.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 0.5850356263251273)

07:33:18.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 0.6263814842476839)

07:33:18.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 0.6749633584745077)

07:33:18.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 0.7331685343967135)

07:33:18.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 0.8047189562170501)
07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)

07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 1.1989476363991853)

07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (-1.5707963267948966, 1.522261218861711)
07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
(NaN, NaN)
07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 1.4722194895832204)

07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 1.0986122886681098)

07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 0.8673005276940532)

07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 0.6931471805599453)
07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 0.5493061443340549)

07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 0.4236489301936017)

07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 0.3095196042031116)

07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 0.2027325540540821)
07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - (0.0, 0.10033534773107562)

07:33:18.035 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:33:18.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4Cla
07:33:18.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - ssRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testAtanI

07:33:18.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanI
07:33:18.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcos, DisplayName: testAcos(org.apache.commons.math.complex.ComplexTest)
07:33:18.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAcos
07:33:18.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.037 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsin, DisplayName: testAsin(org.apache.commons.math.complex.ComplexTest)
07:33:18.037 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsin

07:33:18.037 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtan, DisplayName: testAtan(org.apache.commons.math.complex.ComplexTest)
07:33:18.037 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.037 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtan

07:33:18.037 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosh, DisplayName: testCosh(org.apache.commons.math.complex.ComplexTest)
07:33:18.037 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.037 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosh

07:33:18.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinh, DisplayName: testSinh(org.apache.commons.math.complex.ComplexTest)
07:33:18.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinh

07:33:18.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanh, DisplayName: testTanh(org.apache.commons.math.complex.ComplexTest)
07:33:18.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanh

07:33:18.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinInf, DisplayName: testAsinInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinInf
07:33:18.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinNaN, DisplayName: testAsinNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAsinNaN

07:33:18.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanInf, DisplayName: testAtanInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanInf
07:33:18.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanNaN, DisplayName: testAtanNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAtanNaN

07:33:18.039 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarAddInf, DisplayName: testScalarAddInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarAddInf

07:33:18.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarAddNaN, DisplayName: testScalarAddNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarAddNaN

07:33:18.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowZero, DisplayName: testScalarPowZero(org.apache.commons.math.complex.ComplexTest)
07:33:18.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowZero
07:33:18.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivide, DisplayName: testScalarDivide(org.apache.commons.math.complex.ComplexTest)
07:33:18.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.040 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivide

07:33:18.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideInf, DisplayName: testDivideInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideInf

07:33:18.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaN, DisplayName: testDivideNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideNaN

07:33:18.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsRealDifference, DisplayName: testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)
07:33:18.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.041 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsRealDifference

07:33:18.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegateNaN, DisplayName: testNegateNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegateNaN

07:33:18.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhCritical, DisplayName: testTanhCritical(org.apache.commons.math.complex.ComplexTest)
07:33:18.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanhCritical

07:33:18.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowZero, DisplayName: testPowZero(org.apache.commons.math.complex.ComplexTest)
07:33:18.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowZero
07:33:18.042 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowInf, DisplayName: testScalarPowInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowInf

07:33:18.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiply, DisplayName: testScalarMultiply(org.apache.commons.math.complex.ComplexTest)
07:33:18.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarMultiply

07:33:18.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryZero, DisplayName: testSqrtImaginaryZero(org.apache.commons.math.complex.ComplexTest)
07:33:18.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryZero

07:33:18.043 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealPositive, DisplayName: testSqrtRealPositive(org.apache.commons.math.complex.ComplexTest)
07:33:18.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealPositive

07:33:18.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNull, DisplayName: testEqualsNull(org.apache.commons.math.complex.ComplexTest)
07:33:18.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNull

07:33:18.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsSame, DisplayName: testEqualsSame(org.apache.commons.math.complex.ComplexTest)
07:33:18.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsSame

07:33:18.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsTrue, DisplayName: testEqualsTrue(org.apache.commons.math.complex.ComplexTest)
07:33:18.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.044 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsTrue

07:33:18.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1zNaN, DisplayName: testSqrt1zNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1zNaN

07:33:18.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealNegative, DisplayName: testSqrtRealNegative(org.apache.commons.math.complex.ComplexTest)
07:33:18.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealNegative

07:33:18.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowNaNBase, DisplayName: testScalarPowNaNBase(org.apache.commons.math.complex.ComplexTest)
07:33:18.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.045 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowNaNBase

07:33:18.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgument, DisplayName: testGetArgument(org.apache.commons.math.complex.ComplexTest)
07:33:18.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgument

07:33:18.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtPolar, DisplayName: testSqrtPolar(org.apache.commons.math.complex.ComplexTest)
07:33:18.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtPolar
07:33:18.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaN, DisplayName: testMultiplyNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaN

07:33:18.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogZero, DisplayName: testLogZero(org.apache.commons.math.complex.ComplexTest)
07:33:18.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogZero

07:33:18.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugate, DisplayName: testConjugate(org.apache.commons.math.complex.ComplexTest)
07:33:18.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugate

07:33:18.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_normal_fourthRoot, DisplayName: testNthRoot_normal_fourthRoot(org.apache.commons.math.complex.ComplexTest)
07:33:18.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_normal_fourthRoot
07:33:18.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaNInf, DisplayName: testMultiplyNaNInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiplyNaNInf

07:33:18.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsImaginaryDifference, DisplayName: testEqualsImaginaryDifference(org.apache.commons.math.complex.ComplexTest)
07:33:18.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsImaginaryDifference

07:33:18.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarSubtractInf, DisplayName: testScalarSubtractInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarSubtractInf

07:33:18.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarSubtractNaN, DisplayName: testScalarSubtractNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarSubtractNaN

07:33:18.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanCritical, DisplayName: testTanCritical(org.apache.commons.math.complex.ComplexTest)
07:33:18.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanCritical

07:33:18.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNBase, DisplayName: testPowNaNBase(org.apache.commons.math.complex.ComplexTest)
07:33:18.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNBase

07:33:18.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMath221, DisplayName: testMath221(org.apache.commons.math.complex.ComplexTest)
07:33:18.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMath221

07:33:18.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, DisplayName: testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(org.apache.commons.math.complex.ComplexTest)
07:33:18.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty

07:33:18.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgumentInf, DisplayName: testGetArgumentInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgumentInf

07:33:18.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgumentNaN, DisplayName: testGetArgumentNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.050 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testGetArgumentNaN

07:33:18.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructorNaN, DisplayName: testConstructorNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructorNaN

07:33:18.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshInf, DisplayName: testCoshInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshInf

07:33:18.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshNaN, DisplayName: testCoshNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.051 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCoshNaN

07:33:18.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNExponent, DisplayName: testPowNaNExponent(org.apache.commons.math.complex.ComplexTest)
07:33:18.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowNaNExponent

07:33:18.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testHashCode, DisplayName: testHashCode(org.apache.commons.math.complex.ComplexTest)
07:33:18.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testHashCode

07:33:18.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealZero, DisplayName: testSqrtRealZero(org.apache.commons.math.complex.ComplexTest)
07:33:18.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtRealZero

07:33:18.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryNegative, DisplayName: testSqrtImaginaryNegative(org.apache.commons.math.complex.ComplexTest)
07:33:18.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtImaginaryNegative

07:33:18.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_thirdRoot_realPartZero, DisplayName: testNthRoot_cornercase_thirdRoot_realPartZero(org.apache.commons.math.complex.ComplexTest)
07:33:18.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_cornercase_thirdRoot_realPartZero

07:33:18.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivideZero, DisplayName: testScalarDivideZero(org.apache.commons.math.complex.ComplexTest)
07:33:18.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarDivideZero

07:33:18.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarSubtract, DisplayName: testScalarSubtract(org.apache.commons.math.complex.ComplexTest)
07:33:18.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarSubtract

07:33:18.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsNaN, DisplayName: testAbsNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsNaN

07:33:18.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddInf, DisplayName: testAddInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddInf

07:33:18.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddNaN, DisplayName: testAddNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAddNaN

07:33:18.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosInf, DisplayName: testCosInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosInf

07:33:18.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosNaN, DisplayName: testCosNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testCosNaN

07:33:18.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.complex.ComplexTest)
07:33:18.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivide

07:33:18.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpInf, DisplayName: testExpInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpInf

07:33:18.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpNaN, DisplayName: testExpNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testExpNaN
07:33:18.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.complex.ComplexTest)
07:33:18.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testMultiply

07:33:18.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideReal, DisplayName: testDivideReal(org.apache.commons.math.complex.ComplexTest)
07:33:18.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideReal

07:33:18.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideZero, DisplayName: testDivideZero(org.apache.commons.math.complex.ComplexTest)
07:33:18.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
07:33:18.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.run
07:33:18.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - ners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testDivideZero

07:33:18.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideZero
07:33:18.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNaN, DisplayName: testEqualsNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testEqualsNaN

07:33:18.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogInf, DisplayName: testLogInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogInf
07:33:18.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogNaN, DisplayName: testLogNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testLogNaN

07:33:18.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegate, DisplayName: testNegate(org.apache.commons.math.complex.ComplexTest)
07:33:18.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNegate

07:33:18.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowInf, DisplayName: testPowInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testPowInf
07:33:18.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateInfiinite, DisplayName: testConjugateInfiinite(org.apache.commons.math.complex.ComplexTest)
07:33:18.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConjugateInfiinite

07:33:18.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhInf, DisplayName: testSinhInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhInf
07:33:18.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhNaN, DisplayName: testSinhNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinhNaN

07:33:18.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.complex.ComplexTest)
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSerial
* Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinInf, DisplayName: testSinInf(org.apache.commons.math.complex.ComplexTest)
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinInf
* Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinNaN, DisplayName: testSinNaN(org.apache.commons.math.complex.ComplexTest)
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSinNaN
* Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1z, DisplayName: testSqrt1z(org.apache.commons.math.complex.ComplexTest)
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrt1z
* St
07:33:18.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arted : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanInf, DisplayName: testTanInf(org.apache.commons.math.complex.ComplexTest)
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanInf
* Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanNaN, DisplayName: testTanNaN(org.apache.commons.math.complex.ComplexTest)
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testTanNaN

07:33:18.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_normal_thirdRoot, DisplayName: testNthRoot_normal_thirdRoot(org.apache.commons.math.complex.ComplexTest)
07:33:18.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.064 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testNthRoot_normal_thirdRoot

07:33:18.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testpowNull, DisplayName: testpowNull(org.apache.commons.math.complex.ComplexTest)
07:33:18.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testpowNull

07:33:18.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtractInf, DisplayName: testSubtractInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtractInf

07:33:18.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtractNaN, DisplayName: testSubtractNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.065 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSubtractNaN

07:33:18.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsInfinite, DisplayName: testAbsInfinite(org.apache.commons.math.complex.ComplexTest)
07:33:18.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testAbsInfinite

07:33:18.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtInf, DisplayName: testSqrtInf(org.apache.commons.math.complex.ComplexTest)
07:33:18.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtInf

07:33:18.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtNaN, DisplayName: testSqrtNaN(org.apache.commons.math.complex.ComplexTest)
07:33:18.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testSqrtNaN
07:33:18.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideZeroZero, DisplayName: testDivideZeroZero(org.apache.commons.math.complex.ComplexTest)

07:33:18.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testDivideZeroZero

07:33:18.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.complex.ComplexTest)
07:33:18.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testConstructor

07:33:18.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowNaNExponent, DisplayName: testScalarPowNaNExponent(org.apache.commons.math.complex.ComplexTest)
07:33:18.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexTest, MethodName: testScalarPowNaNExponent

07:33:18.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 116
07:33:18.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 1

07:33:18.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.PairTest

07:33:18.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:33:18.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.PairTest, MethodName: testAccessor, DisplayName: testAccessor(org.apache.commons.math.util.PairTest)
07:33:18.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.PairTest, MethodName: testAccessor
07:33:18.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.PairTest, MethodName: testEquals, DisplayName: testEquals(org.apache.commons.math.util.PairTest)
07:33:18.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.PairTest, MethodName: testEquals
07:33:18.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:33:18.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:18.069 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest

07:33:18.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
07:33:18.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: polynomial, DisplayName: polynomial(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)
07:33:18.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: polynomial

07:33:18.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: dimensionCheck, DisplayName: dimensionCheck(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)
07:33:18.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: dimensionCheck
07:33:18.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)
07:33:18.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: testMinStep
07:33:18.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: exceedMaxEvaluations, DisplayName: exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)
07:33:18.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: exceedMaxEvaluations
07:33:18.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)
07:33:18.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: testIncreasingTolerance

07:33:18.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: backward, DisplayName: backward(org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest)
07:33:18.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, MethodName: backward
07:33:18.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
07:33:18.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.dfp.DfpMathTest

07:33:18.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:33:18.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpMathTest, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.dfp.DfpMathTest)
07:33:18.224 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpMathTest, MethodName: testPow
07:33:18.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.dfp.DfpMathTest, MethodName: testSin, DisplayName: testSin(org.apache.commons.math.dfp.DfpMathTest)
07:33:18.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.dfp.DfpMathTest, MethodName: testSin
07:33:18.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:33:18.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:18.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.MinTest

07:33:18.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12
07:33:18.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testNaNs, DisplayName: testNaNs(org.apache.commons.math.stat.descriptive.rank.MinTest)
07:33:18.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testNaNs
07:33:18.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.rank.MinTest)
07:33:18.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSpecialValues

07:33:18.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.rank.MinTest)
07:33:18.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testMomentSmallSamples

07:33:18.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.rank.MinTest)
07:33:18.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSerialization
07:33:18.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.rank.MinTest)
07:33:18.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testIncrementation

07:33:18.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.rank.MinTest)
07:33:18.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testConsistency

07:33:18.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.rank.MinTest)
07:33:18.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEqualsAndHashCode
07:33:18.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.rank.MinTest)
07:33:18.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testCopyConsistency
07:33:18.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.rank.MinTest)
07:33:18.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testSerial
07:33:18.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.rank.MinTest)
07:33:18.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testCopy

07:33:18.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.MinTest)
07:33:18.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testEvaluation

07:33:18.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.rank.MinTest)
07:33:18.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MinTest, MethodName: testWeightedConsistency

07:33:18.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
07:33:18.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.BinaryChromosomeTest

07:33:18.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:18.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testInvalidConstructor, DisplayName: testInvalidConstructor(org.apache.commons.math.genetics.BinaryChromosomeTest)
07:33:18.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testInvalidConstructor
07:33:18.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testIsSame, DisplayName: testIsSame(org.apache.commons.math.genetics.BinaryChromosomeTest)
07:33:18.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testIsSame
07:33:18.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testRandomConstructor, DisplayName: testRandomConstructor(org.apache.commons.math.genetics.BinaryChromosomeTest)
07:33:18.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.BinaryChromosomeTest, MethodName: testRandomConstructor
07:33:18.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:18.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:18.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.special.GammaTest

07:33:18.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14
07:33:18.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testTrigamma, DisplayName: testTrigamma(org.apache.commons.math.special.GammaTest)
07:33:18.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testTrigamma
07:33:18.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaPositive, DisplayName: testLogGammaPositive(org.apache.commons.math.special.GammaTest)
07:33:18.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaPositive

07:33:18.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNegative, DisplayName: testLogGammaNegative(org.apache.commons.math.special.GammaTest)
07:33:18.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNegative

07:33:18.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositivePositive, DisplayName: testRegularizedGammaPositivePositive(org.apache.commons.math.special.GammaTest)
07:33:18.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositivePositive

07:33:18.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNegative, DisplayName: testRegularizedGammaPositiveNegative(org.apache.commons.math.special.GammaTest)
07:33:18.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNegative

07:33:18.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNan, DisplayName: testLogGammaNan(org.apache.commons.math.special.GammaTest)
07:33:18.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaNan

07:33:18.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testDigammaLargeArgs, DisplayName: testDigammaLargeArgs(org.apache.commons.math.special.GammaTest)
07:33:18.247 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.247 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testDigammaLargeArgs
07:33:18.247 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.247 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNanPositive, DisplayName: testRegularizedGammaNanPositive(org.apache.commons.math.special.GammaTest)
07:33:18.247 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.247 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNanPositive

07:33:18.247 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaZeroPositive, DisplayName: testRegularizedGammaZeroPositive(org.apache.commons.math.special.GammaTest)
07:33:18.247 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.247 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaZeroPositive

07:33:18.247 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaZero, DisplayName: testLogGammaZero(org.apache.commons.math.special.GammaTest)
07:33:18.248 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.248 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testLogGammaZero

07:33:18.248 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testDigammaSmallArgs, DisplayName: testDigammaSmallArgs(org.apache.commons.math.special.GammaTest)
07:33:18.248 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testDigammaSmallArgs
07:33:18.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNegativePositive, DisplayName: testRegularizedGammaNegativePositive(org.apache.commons.math.special.GammaTest)
07:33:18.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaNegativePositive

07:33:18.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNan, DisplayName: testRegularizedGammaPositiveNan(org.apache.commons.math.special.GammaTest)
07:33:18.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveNan

07:33:18.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveZero, DisplayName: testRegularizedGammaPositiveZero(org.apache.commons.math.special.GammaTest)
07:33:18.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.special.GammaTest, MethodName: testRegularizedGammaPositiveZero

07:33:18.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
07:33:18.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.ChromosomeTest

07:33:18.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:33:18.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.ChromosomeTest, MethodName: testFindSameChromosome, DisplayName: testFindSameChromosome(org.apache.commons.math.genetics.ChromosomeTest)
07:33:18.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.ChromosomeTest, MethodName: testFindSameChromosome
07:33:18.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.ChromosomeTest, MethodName: testCompareTo, DisplayName: testCompareTo(org.apache.commons.math.genetics.ChromosomeTest)
07:33:18.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.ChromosomeTest, MethodName: testCompareTo
07:33:18.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:33:18.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:18.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest

07:33:18.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:33:18.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: interpolationAtBounds, DisplayName: interpolationAtBounds(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)
07:33:18.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: interpolationAtBounds
07:33:18.259 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.259 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)
07:33:18.259 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: derivativesConsistency
07:33:18.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: interpolationInside, DisplayName: interpolationInside(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)
07:33:18.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: interpolationInside

07:33:18.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)
07:33:18.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: serialization
07:33:18.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: noReset, DisplayName: noReset(org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest)
07:33:18.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, MethodName: noReset

07:33:18.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:33:18.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:18.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.ResizableDoubleArrayTest

07:33:18.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14
07:33:18.365 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAddElements, DisplayName: testAddElements(org.apache.commons.math.util.ResizableDoubleArrayTest)
07:33:18.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAddElements
07:33:18.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAdd1000, DisplayName: testAdd1000(org.apache.commons.math.util.ResizableDoubleArrayTest)
07:33:18.366 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAdd1000
07:33:18.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSubstitute, DisplayName: testSubstitute(org.apache.commons.math.util.ResizableDoubleArrayTest)
07:33:18.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSubstitute
07:33:18.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.util.ResizableDoubleArrayTest)
07:33:18.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testConstructors
07:33:18.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAddElementRolling, DisplayName: testAddElementRolling(org.apache.commons.math.util.ResizableDoubleArrayTest)
07:33:18.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testAddElementRolling
07:33:18.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacityAndExpansionFactor, DisplayName: testWithInitialCapacityAndExpansionFactor(org.apache.commons.math.util.ResizableDoubleArrayTest)
07:33:18.372 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacityAndExpansionFactor
07:33:18.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetNumberOfElements, DisplayName: testSetNumberOfElements(org.apache.commons.math.util.ResizableDoubleArrayTest)
07:33:18.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetNumberOfElements

07:33:18.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacity, DisplayName: testWithInitialCapacity(org.apache.commons.math.util.ResizableDoubleArrayTest)
07:33:18.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testWithInitialCapacity
07:33:18.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testDiscard, DisplayName: testDiscard(org.apache.commons.math.util.ResizableDoubleArrayTest)
07:33:18.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testDiscard
07:33:18.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.util.ResizableDoubleArrayTest)
07:33:18.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testEqualsAndHashCode
07:33:18.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMutators, DisplayName: testMutators(org.apache.commons.math.util.ResizableDoubleArrayTest)
07:33:18.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMutators
07:33:18.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetElementArbitraryExpansion, DisplayName: testSetElementArbitraryExpansion(org.apache.commons.math.util.ResizableDoubleArrayTest)
07:33:18.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testSetElementArbitraryExpansion
07:33:18.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testGetValues, DisplayName: testGetValues(org.apache.commons.math.util.ResizableDoubleArrayTest)
07:33:18.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testGetValues
07:33:18.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMinMax, DisplayName: testMinMax(org.apache.commons.math.util.ResizableDoubleArrayTest)
07:33:18.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.ResizableDoubleArrayTest, MethodName: testMinMax

07:33:18.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
07:33:18.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:18.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.FunctionUtilsTest

07:33:18.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
07:33:18.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCollector, DisplayName: testCollector(org.apache.commons.math.analysis.FunctionUtilsTest)
07:33:18.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCollector
07:33:18.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testFixingArguments, DisplayName: testFixingArguments(org.apache.commons.math.analysis.FunctionUtilsTest)
07:33:18.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testFixingArguments
07:33:18.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.analysis.FunctionUtilsTest)
07:33:18.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testAdd
07:33:18.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testSinc, DisplayName: testSinc(org.apache.commons.math.analysis.FunctionUtilsTest)
07:33:18.385 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testSinc
07:33:18.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCombine, DisplayName: testCombine(org.apache.commons.math.analysis.FunctionUtilsTest)
07:33:18.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCombine

07:33:18.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCompose, DisplayName: testCompose(org.apache.commons.math.analysis.FunctionUtilsTest)
07:33:18.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.386 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testCompose

07:33:18.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.analysis.FunctionUtilsTest)
07:33:18.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.FunctionUtilsTest, MethodName: testMultiply
07:33:18.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
07:33:18.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:18.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest

07:33:18.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:18.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest)
07:33:18.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest, MethodName: testAccessors
07:33:18.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:33:18.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:18.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.ContinuedFractionTest

07:33:18.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:18.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.ContinuedFractionTest, MethodName: testGoldenRatio, DisplayName: testGoldenRatio(org.apache.commons.math.util.ContinuedFractionTest)

07:33:18.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.ContinuedFractionTest, MethodName: testGoldenRatio
07:33:18.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:33:18.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:18.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.IncrementorTest

07:33:18.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:33:18.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testAboveMaxCount, DisplayName: testAboveMaxCount(org.apache.commons.math.util.IncrementorTest)

07:33:18.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testAboveMaxCount

07:33:18.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testBelowMaxCount, DisplayName: testBelowMaxCount(org.apache.commons.math.util.IncrementorTest)

07:33:18.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testBelowMaxCount

07:33:18.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testAccessor, DisplayName: testAccessor(org.apache.commons.math.util.IncrementorTest)
07:33:18.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testAccessor

07:33:18.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testReset, DisplayName: testReset(org.apache.commons.math.util.IncrementorTest)
07:33:18.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testReset

07:33:18.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testBulkIncrement, DisplayName: testBulkIncrement(org.apache.commons.math.util.IncrementorTest)
07:33:18.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.IncrementorTest, MethodName: testBulkIncrement

07:33:18.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:33:18.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:18.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest

07:33:18.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:18.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest)

07:33:18.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: derivativesConsistency
07:33:18.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: checklone, DisplayName: checklone(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest)
07:33:18.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: checklone
07:33:18.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest)
07:33:18.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, MethodName: serialization
07:33:18.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:18.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:18.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.BitsStreamGeneratorTest

07:33:18.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 41
07:33:18.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:18.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:18.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntDirect
07:33:19.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextFloatDirect
07:33:19.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextBooleanDirect
07:33:19.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLongDirect
07:33:19.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNexBoolean2
07:33:19.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testFloatDirect
07:33:19.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testDoubleDirect
07:33:19.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLong2
07:33:19.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntIAE
07:33:19.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntNeg

07:33:19.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNexBytes
07:33:19.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextInt2
07:33:19.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.174 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPascal
07:33:19.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSample
07:33:19.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextIntExtremeValues
07:33:19.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextUniformExclusiveEndpoints
07:33:19.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextGaussian
07:33:19.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextF
07:33:19.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextT
07:33:19.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextChiSquare
07:33:19.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSecureLong

07:33:19.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSecureHex

07:33:19.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextSecureInt
07:33:19.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:19.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:19.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPoissonConsistency

07:33:20.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextHypergeometric
07:33:20.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.815 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLongExtremeValues

07:33:20.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.816 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextExponential
07:33:20.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.818 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPoisson
07:33:20.821 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextUniform
07:33:20.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextPermutation
07:33:20.822 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextBinomial
07:33:20.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.833 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testConfig
07:33:20.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextInversionDeviate
07:33:20.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextHex

07:33:20.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextInt
07:33:20.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextCauchy
07:33:20.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextGamma
07:33:20.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextWeibull
07:33:20.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextBeta
07:33:20.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextLong
07:33:20.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.BitsStreamGeneratorTest)
07:33:20.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.BitsStreamGeneratorTest, MethodName: testNextZipf
07:33:20.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 41
07:33:20.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:20.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest

07:33:20.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 16
07:33:20.898 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulNeitherRev, DisplayName: testMulNeitherRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.899 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulNeitherRev
07:33:20.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncNeither, DisplayName: testIncNeither(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncNeither
07:33:20.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulLastRev, DisplayName: testMulLastRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.902 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulLastRev
07:33:20.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulBothRev, DisplayName: testMulBothRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulBothRev
07:33:20.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncFirstRev, DisplayName: testIncFirstRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncFirstRev
07:33:20.904 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncFirst, DisplayName: testIncFirst(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncFirst
07:33:20.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulBoth, DisplayName: testMulBoth(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.905 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulBoth
07:33:20.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulLast, DisplayName: testMulLast(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.906 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulLast
07:33:20.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulNeither, DisplayName: testMulNeither(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.907 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulNeither
07:33:20.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncLastRev, DisplayName: testIncLastRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncLastRev
07:33:20.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulFirst, DisplayName: testMulFirst(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulFirst
07:33:20.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncBothRev, DisplayName: testIncBothRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncBothRev
07:33:20.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulFirstRev, DisplayName: testMulFirstRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testMulFirstRev
07:33:20.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncBoth, DisplayName: testIncBoth(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncBoth
07:33:20.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncLast, DisplayName: testIncLast(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncLast
07:33:20.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncNeitherRev, DisplayName: testIncNeitherRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest)
07:33:20.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest, MethodName: testIncNeitherRev
07:33:20.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 16
07:33:20.914 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.BisectionSolverTest

07:33:20.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:20.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testMath369, DisplayName: testMath369(org.apache.commons.math.analysis.solvers.BisectionSolverTest)
07:33:20.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testMath369
07:33:20.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.BisectionSolverTest)
07:33:20.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testQuinticZero
07:33:20.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.BisectionSolverTest)
07:33:20.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.BisectionSolverTest, MethodName: testSinZero

07:33:20.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:20.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:20.917 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.fraction.BigFractionTest

07:33:20.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 24
07:33:20.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testFloatValue, DisplayName: testFloatValue(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testFloatValue
07:33:20.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testAbs, DisplayName: testAbs(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testAbs
07:33:20.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.923 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testAdd
07:33:20.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testPow
07:33:20.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testSubtract
07:33:20.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testReciprocal, DisplayName: testReciprocal(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testReciprocal
07:33:20.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testEpsilonLimitConstructor, DisplayName: testEpsilonLimitConstructor(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testEpsilonLimitConstructor
07:33:20.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testGetReducedFraction, DisplayName: testGetReducedFraction(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testGetReducedFraction
07:33:20.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testConstructorDouble, DisplayName: testConstructorDouble(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testConstructorDouble
07:33:20.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testCompareTo, DisplayName: testCompareTo(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testCompareTo
07:33:20.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDoubleConstructor, DisplayName: testDoubleConstructor(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDoubleConstructor
07:33:20.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testBigDecimalValue, DisplayName: testBigDecimalValue(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testBigDecimalValue
07:33:20.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testMath340, DisplayName: testMath340(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.929 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testMath340
07:33:20.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testLongValue, DisplayName: testLongValue(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testLongValue
07:33:20.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDigitLimitConstructor, DisplayName: testDigitLimitConstructor(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDigitLimitConstructor
07:33:20.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testIntValue, DisplayName: testIntValue(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testIntValue

07:33:20.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDivide
07:33:20.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testMultiply
07:33:20.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testEqualsAndHashCode
07:33:20.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testNegate, DisplayName: testNegate(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testNegate

07:33:20.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.933 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testSerial
07:33:20.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testGoldenRatio, DisplayName: testGoldenRatio(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testGoldenRatio
07:33:20.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDoubleValue, DisplayName: testDoubleValue(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testDoubleValue
07:33:20.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.fraction.BigFractionTest)
07:33:20.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionTest, MethodName: testConstructor
07:33:20.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 24
07:33:20.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:20.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.inference.TestUtilsTest

07:33:20.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
07:33:20.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleTTest, DisplayName: testOneSampleTTest(org.apache.commons.math.stat.inference.TestUtilsTest)
07:33:20.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleTTest
07:33:20.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareIndependence, DisplayName: testChiSquareIndependence(org.apache.commons.math.stat.inference.TestUtilsTest)
07:33:20.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareIndependence
07:33:20.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareZeroCount, DisplayName: testChiSquareZeroCount(org.apache.commons.math.stat.inference.TestUtilsTest)
07:33:20.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareZeroCount
07:33:20.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testSmallSamples, DisplayName: testSmallSamples(org.apache.commons.math.stat.inference.TestUtilsTest)
07:33:20.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testSmallSamples
07:33:20.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHeterscedastic, DisplayName: testTwoSampleTHeterscedastic(org.apache.commons.math.stat.inference.TestUtilsTest)
07:33:20.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHeterscedastic
07:33:20.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareLargeTestStatistic, DisplayName: testChiSquareLargeTestStatistic(org.apache.commons.math.stat.inference.TestUtilsTest)
07:33:20.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquareLargeTestStatistic

07:33:20.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquare, DisplayName: testChiSquare(org.apache.commons.math.stat.inference.TestUtilsTest)
07:33:20.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testChiSquare
07:33:20.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleT, DisplayName: testOneSampleT(org.apache.commons.math.stat.inference.TestUtilsTest)
07:33:20.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneSampleT
07:33:20.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testPaired, DisplayName: testPaired(org.apache.commons.math.stat.inference.TestUtilsTest)
07:33:20.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testPaired
07:33:20.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHomoscedastic, DisplayName: testTwoSampleTHomoscedastic(org.apache.commons.math.stat.inference.TestUtilsTest)
07:33:20.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testTwoSampleTHomoscedastic
07:33:20.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneWayAnovaUtils, DisplayName: testOneWayAnovaUtils(org.apache.commons.math.stat.inference.TestUtilsTest)
07:33:20.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.954 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TestUtilsTest, MethodName: testOneWayAnovaUtils
07:33:20.954 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.954 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
07:33:20.954 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:20.954 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.genetics.TournamentSelectionTest

07:33:20.955 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:20.955 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.955 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.TournamentSelectionTest, MethodName: testSelect, DisplayName: testSelect(org.apache.commons.math.genetics.TournamentSelectionTest)
07:33:20.955 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.TournamentSelectionTest, MethodName: testSelect
07:33:20.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:33:20.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:20.958 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.BetaDistributionTest

07:33:20.960 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:20.960 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.960 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.BetaDistributionTest)
07:33:20.960 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.960 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testMomonts
07:33:20.960 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.960 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testCumulative, DisplayName: testCumulative(org.apache.commons.math.distribution.BetaDistributionTest)
07:33:20.960 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.964 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testCumulative
07:33:20.964 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.964 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.BetaDistributionTest)
07:33:20.964 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BetaDistributionTest, MethodName: testDensity
07:33:20.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:20.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations

07:33:20.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:20.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:20.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, MethodName: test, DisplayName: test(org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations)
07:33:20.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, MethodName: test

07:33:21.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:33:21.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest

07:33:21.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:33:21.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testSmallLastStep, DisplayName: testSmallLastStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)
07:33:21.382 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testSmallLastStep
07:33:21.383 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)
07:33:21.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testDimensionCheck

07:33:21.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)
07:33:21.384 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testBackward
07:33:21.387 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testVariableSteps, DisplayName: testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)
07:33:21.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testVariableSteps
07:33:21.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)
07:33:21.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testMinStep
07:33:21.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testEvents, DisplayName: testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)
07:33:21.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testEvents
07:33:21.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)
07:33:21.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testKepler
07:33:21.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest)
07:33:21.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, MethodName: testIncreasingTolerance
07:33:21.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:33:21.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:21.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest

07:33:21.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17
07:33:21.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFittingGoodInit, DisplayName: testCircleFittingGoodInit(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFittingGoodInit
07:33:21.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testNoDependency, DisplayName: testNoDependency(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testNoDependency
07:33:21.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testRedundantEquations, DisplayName: testRedundantEquations(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testRedundantEquations
07:33:21.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testTrivial, DisplayName: testTrivial(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testTrivial
07:33:21.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentSizes1, DisplayName: testInconsistentSizes1(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentSizes1
07:33:21.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentSizes2, DisplayName: testInconsistentSizes2(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentSizes2
07:33:21.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testTwoSets, DisplayName: testTwoSets(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testTwoSets
07:33:21.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMoreEstimatedParametersSimple, DisplayName: testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMoreEstimatedParametersSimple
07:33:21.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted, DisplayName: testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted
07:33:21.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testIllConditioned, DisplayName: testIllConditioned(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testIllConditioned
07:33:21.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testColumnsPermutation, DisplayName: testColumnsPermutation(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testColumnsPermutation
07:33:21.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testNonInversible, DisplayName: testNonInversible(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testNonInversible
07:33:21.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentEquations, DisplayName: testInconsistentEquations(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testInconsistentEquations
07:33:21.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFitting, DisplayName: testCircleFitting(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFitting
07:33:21.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testOneSet, DisplayName: testOneSet(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testOneSet
07:33:21.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.478 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMaxEvaluations, DisplayName: testMaxEvaluations(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.479 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.482 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testMaxEvaluations
07:33:21.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFittingBadInit, DisplayName: testCircleFittingBadInit(org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest)
07:33:21.483 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, MethodName: testCircleFittingBadInit
07:33:21.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
07:33:21.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:21.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.Array2DRowRealMatrixTest

07:33:21.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 39
07:33:21.492 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testFrobeniusNorm, DisplayName: testFrobeniusNorm(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testFrobeniusNorm
07:33:21.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
* Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testOperate
* Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
* Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testExamples
* Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
* Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetEntry
* Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.
07:33:21.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - apache.commons.math.linear.Array2DRowRealMatrixTest)
* Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testAddFail
* Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
* Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testAdd
* Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
* Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testScalarAdd
* Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPower, DisplayName: testPower(org.apache.commons.math.linear.Array2DRowRealMatrixTest)

07:33:21.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPower
07:33:21.499 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testTrace

07:33:21.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testNorm

07:33:21.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testWalk, DisplayName: testWalk(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.500 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testWalk
07:33:21.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testToString
07:33:21.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRowMatrix, DisplayName: testSetRowMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRowMatrix
07:33:21.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPlusMinus
07:33:21.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRowVector, DisplayName: testSetRowVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRowVector

07:33:21.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMultiply2
07:33:21.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testDimensions
07:33:21.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testCopySubMatrix, DisplayName: testCopySubMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testCopySubMatrix
07:33:21.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPremultiplyVector
07:33:21.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testCopyFunctions
07:33:21.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetSubMatrix, DisplayName: testGetSubMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetSubMatrix
07:33:21.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMath209

07:33:21.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetVectors

07:33:21.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumn, DisplayName: testSetColumn(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumn
07:33:21.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumnMatrix
07:33:21.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumn, DisplayName: testGetColumn(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumn
07:33:21.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetColumnVector
07:33:21.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testMultiply
07:33:21.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRow, DisplayName: testGetRow(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRow
07:33:21.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testEqualsAndHashCode
07:33:21.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSerial
07:33:21.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRow, DisplayName: testSetRow(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetRow
07:33:21.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testTranspose
07:33:21.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumnMatrix, DisplayName: testSetColumnMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumnMatrix
07:33:21.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testPremultiply
07:33:21.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRowMatrix
07:33:21.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumnVector, DisplayName: testSetColumnVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetColumnVector
07:33:21.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testSetSubMatrix
07:33:21.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.Array2DRowRealMatrixTest)
07:33:21.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.Array2DRowRealMatrixTest, MethodName: testGetRowVector
07:33:21.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 39
07:33:21.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:21.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.optimization.univariate.BracketFinderTest

07:33:21.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:33:21.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testMinimumIsOnIntervalBoundary, DisplayName: testMinimumIsOnIntervalBoundary(org.apache.commons.math.optimization.univariate.BracketFinderTest)
07:33:21.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testMinimumIsOnIntervalBoundary
07:33:21.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testCubicMax, DisplayName: testCubicMax(org.apache.commons.math.optimization.univariate.BracketFinderTest)
07:33:21.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testCubicMax
07:33:21.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testCubicMin, DisplayName: testCubicMin(org.apache.commons.math.optimization.univariate.BracketFinderTest)
07:33:21.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testCubicMin
07:33:21.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testIntervalBoundsOrdering, DisplayName: testIntervalBoundsOrdering(org.apache.commons.math.optimization.univariate.BracketFinderTest)
07:33:21.544 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BracketFinderTest, MethodName: testIntervalBoundsOrdering
07:33:21.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:33:21.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:21.545 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest

07:33:21.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:21.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testQuinticMin, DisplayName: testQuinticMin(org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest)
07:33:21.546 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.551 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testQuinticMin
07:33:21.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testBadFunction, DisplayName: testBadFunction(org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest)
07:33:21.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testBadFunction
07:33:21.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testSinMin, DisplayName: testSinMin(org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest)
07:33:21.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, MethodName: testSinMin
07:33:21.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:21.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest

07:33:21.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 16
07:33:21.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulNeitherRev, DisplayName: testMulNeitherRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulNeitherRev
07:33:21.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncNeither, DisplayName: testIncNeither(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.557 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncNeither
07:33:21.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulLastRev, DisplayName: testMulLastRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulLastRev
07:33:21.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulBothRev, DisplayName: testMulBothRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulBothRev
07:33:21.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncFirstRev, DisplayName: testIncFirstRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncFirstRev
07:33:21.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncFirst, DisplayName: testIncFirst(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncFirst
07:33:21.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulBoth, DisplayName: testMulBoth(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulBoth

07:33:21.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulLast, DisplayName: testMulLast(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulLast
07:33:21.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulNeither, DisplayName: testMulNeither(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulNeither
07:33:21.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncLastRev, DisplayName: testIncLastRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncLastRev
07:33:21.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulFirst, DisplayName: testMulFirst(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulFirst
07:33:21.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncBothRev, DisplayName: testIncBothRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncBothRev
07:33:21.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulFirstRev, DisplayName: testMulFirstRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.563 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testMulFirstRev
07:33:21.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncBoth, DisplayName: testIncBoth(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncBoth
07:33:21.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncLast, DisplayName: testIncLast(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncLast
07:33:21.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncNeitherRev, DisplayName: testIncNeitherRev(org.apache.commons.math.ode.sampling.StepNormalizerOutputTest)
07:33:21.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerOutputTest, MethodName: testIncNeitherRev
07:33:21.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 16
07:33:21.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:21.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.Well1024aTest

07:33:21.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 42
07:33:21.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well1024aTest)
07:33:21.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testReferenceCode
07:33:21.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:21.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.Well1024aTest)
07:33:21.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntDirect
07:33:22.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.Well1024aTest)
07:33:22.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextFloatDirect
07:33:22.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.Well1024aTest)
07:33:22.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextBooleanDirect
07:33:22.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.Well1024aTest)
07:33:22.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLongDirect
07:33:22.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.Well1024aTest)
07:33:22.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNexBoolean2
07:33:22.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.Well1024aTest)
07:33:22.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testFloatDirect
07:33:22.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.Well1024aTest)
07:33:22.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testDoubleDirect
07:33:22.138 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.Well1024aTest)
07:33:22.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLong2
07:33:22.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.Well1024aTest)
07:33:22.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntIAE
07:33:22.139 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.Well1024aTest)
07:33:22.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntNeg

07:33:22.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.Well1024aTest)
07:33:22.140 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNexBytes
07:33:22.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.Well1024aTest)
07:33:22.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextInt2
07:33:22.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.Well1024aTest)
07:33:22.150 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.188 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPascal
07:33:22.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.Well1024aTest)
07:33:22.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSample
07:33:22.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.Well1024aTest)
07:33:22.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextIntExtremeValues

07:33:22.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.Well1024aTest)
07:33:22.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextUniformExclusiveEndpoints
07:33:22.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.Well1024aTest)
07:33:22.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextGaussian
07:33:22.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.Well1024aTest)
07:33:22.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextF
07:33:22.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.Well1024aTest)
07:33:22.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextT
07:33:22.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.Well1024aTest)
07:33:22.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextChiSquare
07:33:22.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.Well1024aTest)
07:33:22.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSecureLong

07:33:22.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.Well1024aTest)
07:33:22.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSecureHex

07:33:22.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.Well1024aTest)
07:33:22.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:22.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextSecureInt

07:33:22.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.Well1024aTest)
07:33:22.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPoissonConsistency

07:33:23.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.Well1024aTest)

07:33:23.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextHypergeometric

07:33:23.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.Well1024aTest)
07:33:23.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLongExtremeValues

07:33:23.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.Well1024aTest)
07:33:23.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextExponential
07:33:23.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.Well1024aTest)
07:33:23.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPoisson
07:33:23.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.Well1024aTest)
07:33:23.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextUniform
07:33:23.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.Well1024aTest)
07:33:23.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextPermutation
07:33:23.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.Well1024aTest)
07:33:23.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextBinomial
07:33:23.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.Well1024aTest)
07:33:23.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testConfig
07:33:23.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.Well1024aTest)
07:33:23.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextInversionDeviate
07:33:23.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.Well1024aTest)
07:33:23.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextHex

07:33:23.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.Well1024aTest)
07:33:23.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextInt
07:33:23.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.Well1024aTest)
07:33:23.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextCauchy
07:33:23.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.Well1024aTest)
07:33:23.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextGamma
07:33:23.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.Well1024aTest)
07:33:23.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextWeibull
07:33:23.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.Well1024aTest)
07:33:23.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextBeta
07:33:23.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.Well1024aTest)
07:33:23.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextLong
07:33:23.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.Well1024aTest)
07:33:23.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well1024aTest, MethodName: testNextZipf

07:33:23.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 42
07:33:23.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:23.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.RetryRunnerTest

07:33:23.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:33:23.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.RetryRunnerTest, MethodName: testRetryFailSometimes, DisplayName: testRetryFailSometimes(org.apache.commons.math.RetryRunnerTest)
07:33:23.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.RetryRunnerTest, MethodName: testRetryFailSometimes
07:33:23.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.RetryRunnerTest, MethodName: testRetryFailAlways, DisplayName: testRetryFailAlways(org.apache.commons.math.RetryRunnerTest)
07:33:23.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.RetryRunnerTest, MethodName: testRetryFailAlways

07:33:23.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:33:23.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:23.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.genetics.FitnessCachingTest

07:33:23.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:23.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.FitnessCachingTest, MethodName: testFitnessCaching, DisplayName: testFitnessCaching(org.apache.commons.math.genetics.FitnessCachingTest)

07:33:23.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.FitnessCachingTest, MethodName: testFitnessCaching

07:33:23.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:33:23.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:23.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.direct.PowellOptimizerTest

07:33:23.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:23.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testQuadratic, DisplayName: testQuadratic(org.apache.commons.math.optimization.direct.PowellOptimizerTest)
07:33:23.737 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testQuadratic
07:33:23.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testMaximizeQuadratic, DisplayName: testMaximizeQuadratic(org.apache.commons.math.optimization.direct.PowellOptimizerTest)
07:33:23.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testMaximizeQuadratic
07:33:23.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testSumSinc, DisplayName: testSumSinc(org.apache.commons.math.optimization.direct.PowellOptimizerTest)
07:33:23.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.PowellOptimizerTest, MethodName: testSumSinc
07:33:23.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:23.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:23.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest

07:33:23.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 21
07:33:23.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:23.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testGLSEfficiency, DisplayName: testGLSEfficiency(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:23.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testGLSEfficiency

07:33:26.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddNullYSampleData, DisplayName: cannotAddNullYSampleData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddNullYSampleData
07:33:26.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddCovarianceDataThatIsNotSquare, DisplayName: cannotAddCovarianceDataThatIsNotSquare(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddCovarianceDataThatIsNotSquare

07:33:26.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: notEnoughData, DisplayName: notEnoughData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: notEnoughData
07:33:26.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testGLSOLSConsistency, DisplayName: testGLSOLSConsistency(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testGLSOLSConsistency
07:33:26.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddNullCovarianceData, DisplayName: cannotAddNullCovarianceData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddNullCovarianceData
07:33:26.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddCovarianceDataWithSampleSizeMismatch, DisplayName: cannotAddCovarianceDataWithSampleSizeMismatch(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddCovarianceDataWithSampleSizeMismatch

07:33:26.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testYVariance, DisplayName: testYVariance(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testYVariance
07:33:26.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddSampleDataWithSizeMismatch, DisplayName: cannotAddSampleDataWithSizeMismatch(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddSampleDataWithSizeMismatch
07:33:26.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddXSampleData, DisplayName: cannotAddXSampleData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: cannotAddXSampleData
07:33:26.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSample2, DisplayName: testNewSample2(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSample2
07:33:26.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateResiduals, DisplayName: canEstimateResiduals(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateResiduals
07:33:26.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressandVariance, DisplayName: canEstimateRegressandVariance(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressandVariance

07:33:26.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleInsufficientData, DisplayName: testNewSampleInsufficientData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleInsufficientData
07:33:26.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSample, DisplayName: testNewSample(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSample
07:33:26.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParameters, DisplayName: canEstimateRegressionParameters(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParameters
07:33:26.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParametersVariance, DisplayName: canEstimateRegressionParametersVariance(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParametersVariance
07:33:26.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleNullData, DisplayName: testNewSampleNullData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleNullData
07:33:26.439 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testXSampleDataNull, DisplayName: testXSampleDataNull(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testXSampleDataNull
07:33:26.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleInvalidData, DisplayName: testNewSampleInvalidData(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testNewSampleInvalidData

07:33:26.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testYSampleDataNull, DisplayName: testYSampleDataNull(org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest)
07:33:26.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, MethodName: testYSampleDataNull
07:33:26.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 21
07:33:26.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.CauchyDistributionTest

07:33:26.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
07:33:26.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testScale, DisplayName: testScale(org.apache.commons.math.distribution.CauchyDistributionTest)
07:33:26.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testScale
07:33:26.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.CauchyDistributionTest)
07:33:26.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testPreconditions
07:33:26.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.CauchyDistributionTest)
07:33:26.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testMomonts
07:33:26.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testMedian, DisplayName: testMedian(org.apache.commons.math.distribution.CauchyDistributionTest)
07:33:26.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testMedian

07:33:26.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.CauchyDistributionTest)
07:33:26.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes
07:33:26.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.CauchyDistributionTest)
07:33:26.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testDensities
07:33:26.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.CauchyDistributionTest)
07:33:26.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testInverseCumulativeProbabilities
07:33:26.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.CauchyDistributionTest)
07:33:26.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testSampling
07:33:26.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.CauchyDistributionTest)
07:33:26.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testCumulativeProbabilities
07:33:26.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.CauchyDistributionTest)
07:33:26.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testIllegalArguments
07:33:26.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.CauchyDistributionTest)
07:33:26.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.CauchyDistributionTest, MethodName: testConsistency
07:33:26.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
07:33:26.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.exception.TooManyEvaluationsExceptionTest

07:33:26.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:26.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, MethodName: testMessage, DisplayName: testMessage(org.apache.commons.math.exception.TooManyEvaluationsExceptionTest)
07:33:26.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, MethodName: testMessage
07:33:26.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:33:26.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:26.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.RotationTest

07:33:26.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13
07:33:26.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testAxisAngle, DisplayName: testAxisAngle(org.apache.commons.math.geometry.euclidean.threed.RotationTest)
07:33:26.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testAxisAngle
07:33:26.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.454 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testVectorTwoPairs, DisplayName: testVectorTwoPairs(org.apache.commons.math.geometry.euclidean.threed.RotationTest)
07:33:26.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testVectorTwoPairs
07:33:26.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testCompose, DisplayName: testCompose(org.apache.commons.math.geometry.euclidean.threed.RotationTest)
07:33:26.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testCompose
07:33:26.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testIdentity, DisplayName: testIdentity(org.apache.commons.math.geometry.euclidean.threed.RotationTest)
07:33:26.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testIdentity

07:33:26.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testComposeInverse, DisplayName: testComposeInverse(org.apache.commons.math.geometry.euclidean.threed.RotationTest)
07:33:26.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testComposeInverse
07:33:26.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testApplyInverseTo, DisplayName: testApplyInverseTo(org.apache.commons.math.geometry.euclidean.threed.RotationTest)

07:33:26.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testApplyInverseTo
07:33:26.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testAngles, DisplayName: testAngles(org.apache.commons.math.geometry.euclidean.threed.RotationTest)
07:33:26.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testAngles

07:33:26.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testVectorOnePair, DisplayName: testVectorOnePair(org.apache.commons.math.geometry.euclidean.threed.RotationTest)
07:33:26.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testVectorOnePair
07:33:26.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testIssue639, DisplayName: testIssue639(org.apache.commons.math.geometry.euclidean.threed.RotationTest)
07:33:26.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testIssue639
07:33:26.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testMatrix, DisplayName: testMatrix(org.apache.commons.math.geometry.euclidean.threed.RotationTest)
07:33:26.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testMatrix
07:33:26.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testRevert, DisplayName: testRevert(org.apache.commons.math.geometry.euclidean.threed.RotationTest)
07:33:26.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testRevert
07:33:26.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testSingularities, DisplayName: testSingularities(org.apache.commons.math.geometry.euclidean.threed.RotationTest)
07:33:26.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testSingularities
07:33:26.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testQuaternion, DisplayName: testQuaternion(org.apache.commons.math.geometry.euclidean.threed.RotationTest)
07:33:26.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.RotationTest, MethodName: testQuaternion
07:33:26.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
07:33:26.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:26.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.BinomialDistributionTest
07:33:26.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
07:33:26.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.BinomialDistributionTest)
07:33:26.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testMomonts
07:33:26.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate0, DisplayName: testDegenerate0(org.apache.commons.math.distribution.BinomialDistributionTest)
07:33:26.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate0
07:33:26.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate1, DisplayName: testDegenerate1(org.apache.commons.math.distribution.BinomialDistributionTest)
07:33:26.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDegenerate1
07:33:26.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.BinomialDistributionTest)
07:33:26.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testDensities
07:33:26.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.BinomialDistributionTest)
07:33:26.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testInverseCumulativeProbabilities
07:33:26.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.BinomialDistributionTest)
07:33:26.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testSampling
07:33:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.BinomialDistributionTest)
07:33:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testCumulativeProbabilities
07:33:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.BinomialDistributionTest)
07:33:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testIllegalArguments
07:33:26.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.BinomialDistributionTest)
07:33:26.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.BinomialDistributionTest, MethodName: testFloatingPointArguments
07:33:26.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
07:33:26.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:26.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest
07:33:26.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:26.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, MethodName: testInfinite, DisplayName: testInfinite(org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest)
07:33:26.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.668 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, MethodName: testInfinite

07:33:26.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, MethodName: testInterval, DisplayName: testInterval(org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest)
07:33:26.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, MethodName: testInterval
07:33:26.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, MethodName: testMultiple, DisplayName: testMultiple(org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest)
07:33:26.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest, MethodName: testMultiple

07:33:26.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:26.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest

07:33:26.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:26.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.integration.SimpsonIntegratorTest)
07:33:26.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testParameters
07:33:26.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.integration.SimpsonIntegratorTest)
07:33:26.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testSinFunction
07:33:26.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.integration.SimpsonIntegratorTest)
07:33:26.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, MethodName: testQuinticFunction
07:33:26.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:26.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:26.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.genetics.ElitisticListPopulationTest
07:33:26.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:26.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.ElitisticListPopulationTest, MethodName: testNextGeneration, DisplayName: testNextGeneration(org.apache.commons.math.genetics.ElitisticListPopulationTest)
07:33:26.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.ElitisticListPopulationTest, MethodName: testNextGeneration
07:33:26.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:33:26.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.AbstractRandomGeneratorTest

07:33:26.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 41
07:33:26.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:26.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:26.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntDirect

07:33:27.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextFloatDirect
07:33:27.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBooleanDirect
07:33:27.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLongDirect
07:33:27.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNexBoolean2
07:33:27.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testFloatDirect
07:33:27.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testDoubleDirect
07:33:27.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLong2
07:33:27.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntIAE
07:33:27.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntNeg
07:33:27.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNexBytes
07:33:27.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInt2
07:33:27.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPascal
07:33:27.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSample
07:33:27.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextIntExtremeValues

07:33:27.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniformExclusiveEndpoints
07:33:27.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextGaussian
07:33:27.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.519 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextF
07:33:27.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextT
07:33:27.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextChiSquare
07:33:27.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureLong
07:33:27.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureHex

07:33:27.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextSecureInt
07:33:27.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:27.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:27.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:28.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPoissonConsistency

07:33:28.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:28.985 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:28.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextHypergeometric
07:33:28.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:28.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:28.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:28.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLongExtremeValues
07:33:28.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:28.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:28.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:28.993 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextExponential
07:33:28.993 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:28.993 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:28.993 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:28.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPoisson
07:33:28.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:28.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:28.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:28.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextUniform
07:33:28.997 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:28.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:28.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:28.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextPermutation
07:33:28.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:28.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:28.998 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBinomial
07:33:29.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:29.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testConfig
07:33:29.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:29.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInversionDeviate
07:33:29.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:29.013 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextHex

07:33:29.031 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:29.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextInt
07:33:29.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:29.032 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextCauchy
07:33:29.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:29.034 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextGamma
07:33:29.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:29.036 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextWeibull
07:33:29.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:29.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextBeta
07:33:29.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:29.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextLong
07:33:29.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.AbstractRandomGeneratorTest)
07:33:29.049 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.067 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.AbstractRandomGeneratorTest, MethodName: testNextZipf
07:33:29.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 41
07:33:29.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:29.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest

07:33:29.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
07:33:29.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
07:33:29.070 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSpecialValues
07:33:29.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
07:33:29.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testMomentSmallSamples

07:33:29.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
07:33:29.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSerialization
07:33:29.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
07:33:29.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testIncrementation
07:33:29.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
07:33:29.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testConsistency
07:33:29.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
07:33:29.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEqualsAndHashCode
07:33:29.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
07:33:29.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testCopyConsistency
07:33:29.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
07:33:29.074 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testSerial
07:33:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
07:33:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testCopy
07:33:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
07:33:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testEvaluation
07:33:29.075 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest)
07:33:29.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, MethodName: testWeightedConsistency

07:33:29.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
07:33:29.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:29.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.MaxTest
07:33:29.076 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12
07:33:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testNaNs, DisplayName: testNaNs(org.apache.commons.math.stat.descriptive.rank.MaxTest)
07:33:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testNaNs
07:33:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.rank.MaxTest)
07:33:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSpecialValues
07:33:29.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.rank.MaxTest)
07:33:29.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testMomentSmallSamples

07:33:29.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.rank.MaxTest)
07:33:29.079 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSerialization
07:33:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.rank.MaxTest)
07:33:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testIncrementation
07:33:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.rank.MaxTest)
07:33:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testConsistency
07:33:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.rank.MaxTest)
07:33:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEqualsAndHashCode
07:33:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.rank.MaxTest)
07:33:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testCopyConsistency
07:33:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.rank.MaxTest)
07:33:29.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testSerial
07:33:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.rank.MaxTest)
07:33:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testCopy
07:33:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.MaxTest)
07:33:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testEvaluation
07:33:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.rank.MaxTest)
07:33:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MaxTest, MethodName: testWeightedConsistency

07:33:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
07:33:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.transform.FastFourierTransformerTest
07:33:29.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:33:29.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testAdHocData, DisplayName: testAdHocData(org.apache.commons.math.transform.FastFourierTransformerTest)
07:33:29.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testAdHocData
07:33:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.transform.FastFourierTransformerTest)
07:33:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testParameters
07:33:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.transform.FastFourierTransformerTest)
07:33:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: testSinFunction
07:33:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: test2DData, DisplayName: test2DData(org.apache.commons.math.transform.FastFourierTransformerTest)
07:33:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastFourierTransformerTest, MethodName: test2DData
07:33:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:33:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.BlockFieldMatrixTest

07:33:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 46
07:33:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperatePremultiplyLarge, DisplayName: testOperatePremultiplyLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperatePremultiplyLarge

07:33:29.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowMatrixLarge, DisplayName: testGetSetRowMatrixLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowMatrixLarge
07:33:29.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperate
07:33:29.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testExamples
07:33:29.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetEntry

07:33:29.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testAddFail
07:33:29.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnLarge, DisplayName: testGetSetColumnLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.299 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnLarge
07:33:29.303 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testAdd
07:33:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testScalarAdd
07:33:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testTrace
07:33:29.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testWalk, DisplayName: testWalk(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testWalk

07:33:29.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testToString
07:33:29.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetMatrixLarge, DisplayName: testGetSetMatrixLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetMatrixLarge
07:33:29.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowVectorLarge, DisplayName: testGetSetRowVectorLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowVectorLarge
07:33:29.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRowMatrix, DisplayName: testSetRowMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRowMatrix
07:33:29.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSeveralBlocks, DisplayName: testSeveralBlocks(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSeveralBlocks

07:33:29.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.BlockFieldMatrixTest)

07:33:29.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPlusMinus
07:33:29.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRowVector, DisplayName: testSetRowVector(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRowVector
07:33:29.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMultiply2
07:33:29.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testDimensions
07:33:29.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testCopySubMatrix, DisplayName: testCopySubMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testCopySubMatrix
07:33:29.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowLarge, DisplayName: testGetSetRowLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetRowLarge
07:33:29.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPremultiplyVector
07:33:29.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testCopyFunctions
07:33:29.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSubMatrix, DisplayName: testGetSubMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSubMatrix
07:33:29.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMath209
07:33:29.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperateLarge, DisplayName: testOperateLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testOperateLarge

07:33:29.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetVectors
07:33:29.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnMatrixLarge, DisplayName: testGetSetColumnMatrixLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnMatrixLarge
07:33:29.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumn, DisplayName: testSetColumn(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumn
07:33:29.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumnMatrix
07:33:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumn, DisplayName: testGetColumn(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumn
07:33:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetColumnVector
07:33:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testMultiply
07:33:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRow, DisplayName: testGetRow(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRow
07:33:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testEqualsAndHashCode
07:33:29.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnVectorLarge, DisplayName: testGetSetColumnVectorLarge(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.689 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetSetColumnVectorLarge
07:33:29.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSerial
07:33:29.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRow, DisplayName: testSetRow(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetRow
07:33:29.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testTranspose
07:33:29.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumnMatrix, DisplayName: testSetColumnMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumnMatrix
07:33:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testPremultiply
07:33:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRowMatrix
07:33:29.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumnVector, DisplayName: testSetColumnVector(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetColumnVector
07:33:29.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testSetSubMatrix
07:33:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.BlockFieldMatrixTest)
07:33:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BlockFieldMatrixTest, MethodName: testGetRowVector
07:33:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 46
07:33:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.BiDiagonalTransformerTest

07:33:29.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:33:29.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testBBiDiagonal, DisplayName: testBBiDiagonal(org.apache.commons.math.linear.BiDiagonalTransformerTest)
07:33:29.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testBBiDiagonal
07:33:29.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testUpperOrLower, DisplayName: testUpperOrLower(org.apache.commons.math.linear.BiDiagonalTransformerTest)
07:33:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testUpperOrLower

07:33:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testUOrthogonal, DisplayName: testUOrthogonal(org.apache.commons.math.linear.BiDiagonalTransformerTest)
07:33:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testUOrthogonal
07:33:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testSingularMatrix, DisplayName: testSingularMatrix(org.apache.commons.math.linear.BiDiagonalTransformerTest)
07:33:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testSingularMatrix
07:33:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testMatricesValues, DisplayName: testMatricesValues(org.apache.commons.math.linear.BiDiagonalTransformerTest)
07:33:29.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testMatricesValues

07:33:29.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.BiDiagonalTransformerTest)
07:33:29.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testDimensions
07:33:29.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.703 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testAEqualUSVt, DisplayName: testAEqualUSVt(org.apache.commons.math.linear.BiDiagonalTransformerTest)
07:33:29.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testAEqualUSVt
07:33:29.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testVOrthogonal, DisplayName: testVOrthogonal(org.apache.commons.math.linear.BiDiagonalTransformerTest)
07:33:29.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.BiDiagonalTransformerTest, MethodName: testVOrthogonal
07:33:29.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:33:29.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:29.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.complex.ComplexFormatTest
07:33:29.704 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 31
07:33:29.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeImaginary, DisplayName: testParseNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeImaginary
07:33:29.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testConstructorSingleFormat
07:33:29.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimals
07:33:29.709 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroImaginary, DisplayName: testZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroImaginary

07:33:29.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testDifferentImaginaryChar, DisplayName: testDifferentImaginaryChar(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testDifferentImaginaryChar
07:33:29.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testFormatNumber, DisplayName: testFormatNumber(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.710 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testFormatNumber
07:33:29.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNan
07:33:29.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimalsTrunc
07:33:29.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetRealFormat, DisplayName: testGetRealFormat(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetRealFormat
07:33:29.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeBoth, DisplayName: testParseNegativeBoth(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeBoth
07:33:29.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeReal, DisplayName: testParseNegativeReal(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNegativeReal

07:33:29.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetImaginaryFormat, DisplayName: testGetImaginaryFormat(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testGetImaginaryFormat
07:33:29.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleWithDecimalsTrunc
07:33:29.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeInfinity, DisplayName: testNegativeInfinity(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeInfinity
07:33:29.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testTrimOneImaginary, DisplayName: testTrimOneImaginary(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testTrimOneImaginary
07:33:29.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPaseNegativeInfinity, DisplayName: testPaseNegativeInfinity(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPaseNegativeInfinity
07:33:29.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseDifferentImaginaryChar, DisplayName: testParseDifferentImaginaryChar(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseDifferentImaginaryChar
07:33:29.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testDefaultFormatComplex, DisplayName: testDefaultFormatComplex(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testDefaultFormatComplex
07:33:29.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleNoDecimals
07:33:29.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroReal, DisplayName: testZeroReal(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testZeroReal

07:33:29.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeBoth, DisplayName: testNegativeBoth(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeBoth
07:33:29.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeReal, DisplayName: testNegativeReal(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeReal
07:33:29.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeImaginary, DisplayName: testNegativeImaginary(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testNegativeImaginary
07:33:29.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseSimpleNoDecimals
07:33:29.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testPositiveInfinity
07:33:29.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testForgottenImaginaryCharacter, DisplayName: testForgottenImaginaryCharacter(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testForgottenImaginaryCharacter
07:33:29.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroReal, DisplayName: testParseZeroReal(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroReal

07:33:29.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseNan
07:33:29.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroImaginary, DisplayName: testParseZeroImaginary(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParseZeroImaginary
07:33:29.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testParsePositiveInfinity
07:33:29.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.complex.ComplexFormatTest)
07:33:29.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.complex.ComplexFormatTest, MethodName: testSimpleWithDecimals
07:33:29.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 31
07:33:29.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.MersenneTwisterTest

07:33:29.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 42
07:33:29.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testMakotoNishimura, DisplayName: testMakotoNishimura(org.apache.commons.math.random.MersenneTwisterTest)
07:33:29.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testMakotoNishimura
07:33:29.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:29.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.MersenneTwisterTest)
07:33:29.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntDirect
07:33:30.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextFloatDirect
07:33:30.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextBooleanDirect
07:33:30.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLongDirect
07:33:30.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNexBoolean2
07:33:30.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testFloatDirect
07:33:30.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testDoubleDirect
07:33:30.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLong2
07:33:30.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntIAE
07:33:30.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntNeg
07:33:30.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.248 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNexBytes
07:33:30.248 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.248 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.248 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextInt2
07:33:30.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPascal
07:33:30.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSample
07:33:30.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextIntExtremeValues
07:33:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextUniformExclusiveEndpoints
07:33:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextGaussian
07:33:30.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.294 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextF
07:33:30.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextT
07:33:30.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextChiSquare
07:33:30.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSecureLong
07:33:30.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSecureHex
07:33:30.342 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:30.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextSecureInt

07:33:30.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.MersenneTwisterTest)
07:33:30.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPoissonConsistency

07:33:31.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextHypergeometric
07:33:31.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLongExtremeValues
07:33:31.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextExponential
07:33:31.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPoisson
07:33:31.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextUniform
07:33:31.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextPermutation
07:33:31.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextBinomial
07:33:31.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testConfig
07:33:31.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextInversionDeviate
07:33:31.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextHex

07:33:31.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextInt
07:33:31.715 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.716 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextCauchy
07:33:31.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextGamma
07:33:31.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.719 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextWeibull
07:33:31.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextBeta
07:33:31.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextLong
07:33:31.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.MersenneTwisterTest)
07:33:31.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.MersenneTwisterTest, MethodName: testNextZipf
07:33:31.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 42
07:33:31.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:33:31.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.MathUtilsTest

07:33:31.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 76
07:33:31.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt, DisplayName: testCopyOfInt(org.apache.commons.math.util.MathUtilsTest)
07:33:31.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt
07:33:31.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficient, DisplayName: testBinomialCoefficient(org.apache.commons.math.util.MathUtilsTest)
07:33:31.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficient
07:33:31.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorialFail, DisplayName: testFactorialFail(org.apache.commons.math.util.MathUtilsTest)
07:33:31.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorialFail
07:33:31.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcdConsistency, DisplayName: testGcdConsistency(org.apache.commons.math.util.MathUtilsTest)
07:33:31.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcdConsistency
07:33:31.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble2, DisplayName: testCopyOfDouble2(org.apache.commons.math.util.MathUtilsTest)
07:33:31.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble2
07:33:31.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble3, DisplayName: testCopyOfDouble3(org.apache.commons.math.util.MathUtilsTest)
07:33:31.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble3

07:33:31.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSortInPlace, DisplayName: testSortInPlace(org.apache.commons.math.util.MathUtilsTest)
07:33:31.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSortInPlace
07:33:31.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt2, DisplayName: testCopyOfInt2(org.apache.commons.math.util.MathUtilsTest)
07:33:31.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt2
07:33:31.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt3, DisplayName: testCopyOfInt3(org.apache.commons.math.util.MathUtilsTest)
07:33:31.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfInt3
07:33:31.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorDouble, DisplayName: testIndicatorDouble(org.apache.commons.math.util.MathUtilsTest)
07:33:31.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorDouble
07:33:31.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundDouble, DisplayName: testRoundDouble(org.apache.commons.math.util.MathUtilsTest)
07:33:31.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundDouble
07:33:31.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNormalizeAngle, DisplayName: testNormalizeAngle(org.apache.commons.math.util.MathUtilsTest)
07:33:31.794 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNormalizeAngle
07:33:31.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNormalizeArray, DisplayName: testNormalizeArray(org.apache.commons.math.util.MathUtilsTest)
07:33:31.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testNormalizeArray
07:33:31.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorInt, DisplayName: testIndicatorInt(org.apache.commons.math.util.MathUtilsTest)
07:33:31.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorInt
07:33:31.807 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.808 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testReduceComparedWithNormalizeAngle, DisplayName: testReduceComparedWithNormalizeAngle(org.apache.commons.math.util.MathUtilsTest)
07:33:31.808 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.808 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testReduceComparedWithNormalizeAngle
07:33:31.808 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL1DistanceDouble, DisplayName: testL1DistanceDouble(org.apache.commons.math.util.MathUtilsTest)
07:33:31.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL1DistanceDouble

07:33:31.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcd, DisplayName: testGcd(org.apache.commons.math.util.MathUtilsTest)
07:33:31.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcd
07:33:31.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLcm, DisplayName: testLcm(org.apache.commons.math.util.MathUtilsTest)
07:33:31.809 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLcm
07:33:31.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLog, DisplayName: testLog(org.apache.commons.math.util.MathUtilsTest)
07:33:31.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLog
07:33:31.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testPow, DisplayName: testPow(org.apache.commons.math.util.MathUtilsTest)
07:33:31.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testPow
07:33:31.810 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:31.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficientLarge, DisplayName: testBinomialCoefficientLarge(org.apache.commons.math.util.MathUtilsTest)
07:33:31.811 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficientLarge

07:33:32.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckOrder, DisplayName: testCheckOrder(org.apache.commons.math.util.MathUtilsTest)
07:33:32.189 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckOrder
07:33:32.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCosh, DisplayName: testCosh(org.apache.commons.math.util.MathUtilsTest)
07:33:32.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCosh
07:33:32.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testHash, DisplayName: testHash(org.apache.commons.math.util.MathUtilsTest)
07:33:32.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testHash
07:33:32.190 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinh, DisplayName: testSinh(org.apache.commons.math.util.MathUtilsTest)
07:33:32.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinh

07:33:32.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testPermutedArrayHash, DisplayName: testPermutedArrayHash(org.apache.commons.math.util.MathUtilsTest)
07:33:32.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testPermutedArrayHash
07:33:32.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL1DistanceInt, DisplayName: testL1DistanceInt(org.apache.commons.math.util.MathUtilsTest)
07:33:32.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL1DistanceInt
07:33:32.191 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckLong, DisplayName: testSubAndCheckLong(org.apache.commons.math.util.MathUtilsTest)
07:33:32.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckLong
07:33:32.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL2DistanceInt, DisplayName: testL2DistanceInt(org.apache.commons.math.util.MathUtilsTest)
07:33:32.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL2DistanceInt
07:33:32.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCompareToEpsilon, DisplayName: testCompareToEpsilon(org.apache.commons.math.util.MathUtilsTest)
07:33:32.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCompareToEpsilon
07:33:32.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLInfDistanceDouble, DisplayName: testLInfDistanceDouble(org.apache.commons.math.util.MathUtilsTest)
07:33:32.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLInfDistanceDouble

07:33:32.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundFloat, DisplayName: testRoundFloat(org.apache.commons.math.util.MathUtilsTest)
07:33:32.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testRoundFloat
07:33:32.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayEqualsIncludingNaN, DisplayName: testArrayEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)
07:33:32.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayEqualsIncludingNaN
07:33:32.193 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayHash, DisplayName: testArrayHash(org.apache.commons.math.util.MathUtilsTest)
07:33:32.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayHash

07:33:32.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorial, DisplayName: testFactorial(org.apache.commons.math.util.MathUtilsTest)
07:33:32.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFactorial
07:33:32.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaNWithAllowedDelta, DisplayName: testEqualsIncludingNaNWithAllowedDelta(org.apache.commons.math.util.MathUtilsTest)
07:33:32.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaNWithAllowedDelta
07:33:32.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcdLong, DisplayName: testGcdLong(org.apache.commons.math.util.MathUtilsTest)
07:33:32.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testGcdLong

07:33:32.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaNWithAllowedUlps, DisplayName: testEqualsIncludingNaNWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)
07:33:32.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaNWithAllowedUlps
07:33:32.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLcmLong, DisplayName: testLcmLong(org.apache.commons.math.util.MathUtilsTest)
07:33:32.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLcmLong
07:33:32.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayEquals, DisplayName: testArrayEquals(org.apache.commons.math.util.MathUtilsTest)
07:33:32.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testArrayEquals

07:33:32.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheck, DisplayName: testSubAndCheck(org.apache.commons.math.util.MathUtilsTest)
07:33:32.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheck
07:33:32.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckFinite, DisplayName: testCheckFinite(org.apache.commons.math.util.MathUtilsTest)
07:33:32.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckFinite
07:33:32.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFloatEqualsWithAllowedUlps, DisplayName: testFloatEqualsWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)
07:33:32.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testFloatEqualsWithAllowedUlps
07:33:32.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheckLong, DisplayName: testMulAndCheckLong(org.apache.commons.math.util.MathUtilsTest)
07:33:32.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheckLong
07:33:32.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL2DistanceDouble, DisplayName: testL2DistanceDouble(org.apache.commons.math.util.MathUtilsTest)
07:33:32.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testL2DistanceDouble

07:33:32.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLInfDistanceInt, DisplayName: testLInfDistanceInt(org.apache.commons.math.util.MathUtilsTest)
07:33:32.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLInfDistanceInt

07:33:32.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficientFail, DisplayName: testBinomialCoefficientFail(org.apache.commons.math.util.MathUtilsTest)
07:33:32.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testBinomialCoefficientFail
07:33:32.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLinearCombinationInfinite, DisplayName: testLinearCombinationInfinite(org.apache.commons.math.util.MathUtilsTest)
07:33:32.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLinearCombinationInfinite
07:33:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMath475, DisplayName: testMath475(org.apache.commons.math.util.MathUtilsTest)
07:33:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMath475
07:33:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCoshNaN, DisplayName: testCoshNaN(org.apache.commons.math.util.MathUtilsTest)
07:33:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCoshNaN
07:33:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLinearCombination1, DisplayName: testLinearCombination1(org.apache.commons.math.util.MathUtilsTest)
07:33:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLinearCombination1
07:33:32.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLinearCombination2, DisplayName: testLinearCombination2(org.apache.commons.math.util.MathUtilsTest)
07:33:32.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testLinearCombination2
07:33:32.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckErrorMessage, DisplayName: testSubAndCheckErrorMessage(org.apache.commons.math.util.MathUtilsTest)
07:33:32.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSubAndCheckErrorMessage
07:33:32.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: test0Choose0, DisplayName: test0Choose0(org.apache.commons.math.util.MathUtilsTest)
07:33:32.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: test0Choose0
07:33:32.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsWithAllowedUlps, DisplayName: testEqualsWithAllowedUlps(org.apache.commons.math.util.MathUtilsTest)
07:33:32.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsWithAllowedUlps
07:33:32.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheck, DisplayName: testMulAndCheck(org.apache.commons.math.util.MathUtilsTest)
07:33:32.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testMulAndCheck

07:33:32.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignByte, DisplayName: testSignByte(org.apache.commons.math.util.MathUtilsTest)
07:33:32.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignByte
07:33:32.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignLong, DisplayName: testSignLong(org.apache.commons.math.util.MathUtilsTest)
07:33:32.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignLong
07:33:32.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsWithAllowedDelta, DisplayName: testEqualsWithAllowedDelta(org.apache.commons.math.util.MathUtilsTest)
07:33:32.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsWithAllowedDelta

07:33:32.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheckLong, DisplayName: testAddAndCheckLong(org.apache.commons.math.util.MathUtilsTest)
07:33:32.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheckLong
07:33:32.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble, DisplayName: testCopyOfDouble(org.apache.commons.math.util.MathUtilsTest)
07:33:32.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCopyOfDouble
07:33:32.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorFloat, DisplayName: testIndicatorFloat(org.apache.commons.math.util.MathUtilsTest)
07:33:32.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorFloat

07:33:32.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCompareToMaxUlps, DisplayName: testCompareToMaxUlps(org.apache.commons.math.util.MathUtilsTest)
07:33:32.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCompareToMaxUlps
07:33:32.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorShort, DisplayName: testIndicatorShort(org.apache.commons.math.util.MathUtilsTest)
07:33:32.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorShort
07:33:32.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorByte, DisplayName: testIndicatorByte(org.apache.commons.math.util.MathUtilsTest)
07:33:32.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorByte

07:33:32.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorLong, DisplayName: testIndicatorLong(org.apache.commons.math.util.MathUtilsTest)
07:33:32.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testIndicatorLong
07:33:32.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckNotNull1, DisplayName: testCheckNotNull1(org.apache.commons.math.util.MathUtilsTest)
07:33:32.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckNotNull1
07:33:32.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckNotNull2, DisplayName: testCheckNotNull2(org.apache.commons.math.util.MathUtilsTest)
07:33:32.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testCheckNotNull2
07:33:32.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaN, DisplayName: testEqualsIncludingNaN(org.apache.commons.math.util.MathUtilsTest)
07:33:32.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testEqualsIncludingNaN
07:33:32.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignDouble, DisplayName: testSignDouble(org.apache.commons.math.util.MathUtilsTest)
07:33:32.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignDouble
07:33:32.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheck, DisplayName: testAddAndCheck(org.apache.commons.math.util.MathUtilsTest)
07:33:32.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testAddAndCheck
07:33:32.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testReduce, DisplayName: testReduce(org.apache.commons.math.util.MathUtilsTest)
07:33:32.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testReduce

07:33:32.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignInt, DisplayName: testSignInt(org.apache.commons.math.util.MathUtilsTest)
07:33:32.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignInt
07:33:32.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinhNaN, DisplayName: testSinhNaN(org.apache.commons.math.util.MathUtilsTest)
07:33:32.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSinhNaN
07:33:32.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignFloat, DisplayName: testSignFloat(org.apache.commons.math.util.MathUtilsTest)
07:33:32.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignFloat

07:33:32.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignShort, DisplayName: testSignShort(org.apache.commons.math.util.MathUtilsTest)
07:33:32.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.MathUtilsTest, MethodName: testSignShort
07:33:32.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 76
07:33:32.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:32.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest

07:33:32.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:32.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest)
07:33:32.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testPlane
07:33:32.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest)
07:33:32.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testPreconditions
07:33:32.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testParaboloid, DisplayName: testParaboloid(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest)
07:33:32.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, MethodName: testParaboloid
07:33:32.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:32.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:32.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.inference.TTestTest
07:33:32.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
07:33:32.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleTTest, DisplayName: testOneSampleTTest(org.apache.commons.math.stat.inference.TTestTest)
07:33:32.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleTTest
07:33:32.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testSmallSamples, DisplayName: testSmallSamples(org.apache.commons.math.stat.inference.TTestTest)
07:33:32.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testSmallSamples
07:33:32.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHeterscedastic, DisplayName: testTwoSampleTHeterscedastic(org.apache.commons.math.stat.inference.TTestTest)
07:33:32.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHeterscedastic
07:33:32.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleT, DisplayName: testOneSampleT(org.apache.commons.math.stat.inference.TTestTest)
07:33:32.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testOneSampleT
07:33:32.244 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testPaired, DisplayName: testPaired(org.apache.commons.math.stat.inference.TTestTest)
07:33:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testPaired
07:33:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHomoscedastic, DisplayName: testTwoSampleTHomoscedastic(org.apache.commons.math.stat.inference.TTestTest)
07:33:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.TTestTest, MethodName: testTwoSampleTHomoscedastic
07:33:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
07:33:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest
07:33:32.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:33:32.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.246 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, MethodName: testDerivativesConsistency, DisplayName: testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)
07:33:32.247 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, MethodName: testDerivativesConsistency
07:33:32.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest)
07:33:32.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, MethodName: serialization

07:33:32.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:33:32.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:32.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.distribution.ChiSquareDistributionTest
07:33:32.311 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:33:32.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.ChiSquareDistributionTest)
07:33:32.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testMomonts
07:33:32.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.ChiSquareDistributionTest)
07:33:32.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDensity
07:33:32.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDfAccessors, DisplayName: testDfAccessors(org.apache.commons.math.distribution.ChiSquareDistributionTest)
07:33:32.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDfAccessors
07:33:32.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testSmallDf, DisplayName: testSmallDf(org.apache.commons.math.distribution.ChiSquareDistributionTest)
07:33:32.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testSmallDf
07:33:32.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.ChiSquareDistributionTest)
07:33:32.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testDensities
07:33:32.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)
07:33:32.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testInverseCumulativeProbabilities
07:33:32.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.ChiSquareDistributionTest)
07:33:32.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testSampling
07:33:32.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.ChiSquareDistributionTest)
07:33:32.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testCumulativeProbabilities
07:33:32.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.ChiSquareDistributionTest)
07:33:32.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testIllegalArguments
07:33:32.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.ChiSquareDistributionTest)
07:33:32.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ChiSquareDistributionTest, MethodName: testConsistency
07:33:32.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
07:33:32.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:32.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest

07:33:32.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
07:33:32.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: polynomial, DisplayName: polynomial(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)
07:33:32.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: polynomial
07:33:32.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: dimensionCheck, DisplayName: dimensionCheck(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)
07:33:32.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: dimensionCheck
07:33:32.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)
07:33:32.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: testMinStep
07:33:32.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: exceedMaxEvaluations, DisplayName: exceedMaxEvaluations(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)
07:33:32.337 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: exceedMaxEvaluations
07:33:32.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)
07:33:32.351 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: testIncreasingTolerance

07:33:32.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: backward, DisplayName: backward(org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest)
07:33:32.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, MethodName: backward

07:33:32.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
07:33:32.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:32.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.genetics.FixedGenerationCountTest

07:33:32.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:32.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.FixedGenerationCountTest, MethodName: testIsSatisfied, DisplayName: testIsSatisfied(org.apache.commons.math.genetics.FixedGenerationCountTest)
07:33:32.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.FixedGenerationCountTest, MethodName: testIsSatisfied
07:33:32.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:33:32.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:32.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.MeanTest
07:33:32.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12
07:33:32.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSmallSamples, DisplayName: testSmallSamples(org.apache.commons.math.stat.descriptive.moment.MeanTest)
07:33:32.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSmallSamples
07:33:32.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testWeightedMean, DisplayName: testWeightedMean(org.apache.commons.math.stat.descriptive.moment.MeanTest)
07:33:32.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testWeightedMean
07:33:32.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.MeanTest)
07:33:32.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testMomentSmallSamples

07:33:32.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.MeanTest)
07:33:32.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSerialization
07:33:32.394 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.MeanTest)
07:33:32.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testIncrementation

07:33:32.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.MeanTest)
07:33:32.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testConsistency
07:33:32.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.MeanTest)
07:33:32.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEqualsAndHashCode
07:33:32.395 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.MeanTest)
07:33:32.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testCopyConsistency
07:33:32.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.MeanTest)
07:33:32.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testSerial
07:33:32.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.MeanTest)
07:33:32.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testCopy
07:33:32.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.MeanTest)
07:33:32.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testEvaluation
07:33:32.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.MeanTest)
07:33:32.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.MeanTest, MethodName: testWeightedConsistency
07:33:32.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
07:33:32.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.fitting.HarmonicFitterTest
07:33:32.398 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
07:33:32.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: test1PercentError, DisplayName: test1PercentError(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)
07:33:32.399 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: test1PercentError
07:33:32.405 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testTinyVariationsData, DisplayName: testTinyVariationsData(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)
07:33:32.406 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testTinyVariationsData
07:33:32.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testPreconditions1, DisplayName: testPreconditions1(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)
07:33:32.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testPreconditions1
07:33:32.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testInitialGuess, DisplayName: testInitialGuess(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)
07:33:32.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testInitialGuess
07:33:32.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testUnsorted, DisplayName: testUnsorted(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)
07:33:32.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testUnsorted
07:33:32.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testNoError, DisplayName: testNoError(org.apache.commons.math.optimization.fitting.HarmonicFitterTest)
07:33:32.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.HarmonicFitterTest, MethodName: testNoError
07:33:32.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
07:33:32.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest
07:33:32.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:33:32.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)
07:33:32.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, MethodName: derivativesConsistency
07:33:32.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest)
07:33:32.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, MethodName: serialization

07:33:32.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:33:32.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:32.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.correlation.CovarianceTest

07:33:32.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:33:32.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testInsufficientData, DisplayName: testInsufficientData(org.apache.commons.math.stat.correlation.CovarianceTest)
07:33:32.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testInsufficientData
07:33:32.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testSwissFertility, DisplayName: testSwissFertility(org.apache.commons.math.stat.correlation.CovarianceTest)
07:33:32.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testSwissFertility
07:33:32.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testConstant, DisplayName: testConstant(org.apache.commons.math.stat.correlation.CovarianceTest)
07:33:32.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testConstant
07:33:32.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.correlation.CovarianceTest)
07:33:32.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testConsistency
07:33:32.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testLongly, DisplayName: testLongly(org.apache.commons.math.stat.correlation.CovarianceTest)
07:33:32.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.CovarianceTest, MethodName: testLongly
07:33:32.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:33:32.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:32.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.random.EmpiricalDistributionTest
07:33:32.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14
07:33:32.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testBinIndexOverflow, DisplayName: testBinIndexOverflow(org.apache.commons.math.random.EmpiricalDistributionTest)
07:33:32.543 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testBinIndexOverflow

07:33:32.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.random.EmpiricalDistributionTest)
07:33:32.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testSerialization

07:33:32.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoad, DisplayName: testLoad(org.apache.commons.math.random.EmpiricalDistributionTest)
07:33:32.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoad

07:33:32.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNext, DisplayName: testNext(org.apache.commons.math.random.EmpiricalDistributionTest)
07:33:32.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNext

07:33:32.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullDoubleArray, DisplayName: testLoadNullDoubleArray(org.apache.commons.math.random.EmpiricalDistributionTest)
07:33:32.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullDoubleArray
07:33:32.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGeneratorConfig, DisplayName: testGeneratorConfig(org.apache.commons.math.random.EmpiricalDistributionTest)
07:33:32.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGeneratorConfig
07:33:32.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFat, DisplayName: testGridTooFat(org.apache.commons.math.random.EmpiricalDistributionTest)
07:33:32.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFat
07:33:32.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testDoubleLoad, DisplayName: testDoubleLoad(org.apache.commons.math.random.EmpiricalDistributionTest)
07:33:32.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testDoubleLoad
07:33:32.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFine, DisplayName: testGridTooFine(org.apache.commons.math.random.EmpiricalDistributionTest)
07:33:32.711 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGridTooFine

07:33:32.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullFile, DisplayName: testLoadNullFile(org.apache.commons.math.random.EmpiricalDistributionTest)
07:33:32.730 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullFile
07:33:32.731 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGetBinUpperBounds, DisplayName: testGetBinUpperBounds(org.apache.commons.math.random.EmpiricalDistributionTest)
07:33:32.732 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testGetBinUpperBounds
07:33:32.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullURL, DisplayName: testLoadNullURL(org.apache.commons.math.random.EmpiricalDistributionTest)
07:33:32.733 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testLoadNullURL
07:33:32.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNexFail, DisplayName: testNexFail(org.apache.commons.math.random.EmpiricalDistributionTest)
07:33:32.734 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testNexFail
07:33:32.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testReSeed, DisplayName: testReSeed(org.apache.commons.math.random.EmpiricalDistributionTest)
07:33:32.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.EmpiricalDistributionTest, MethodName: testReSeed
07:33:32.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
07:33:32.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:32.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.740 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.solvers.IllinoisSolverTest

07:33:32.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:33:32.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionRightSide, DisplayName: testSolutionRightSide(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)
07:33:32.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionRightSide
07:33:32.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionAboveSide, DisplayName: testSolutionAboveSide(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)
07:33:32.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionAboveSide
07:33:32.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionBelowSide, DisplayName: testSolutionBelowSide(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)
07:33:32.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.743 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionBelowSide
07:33:32.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionLeftSide, DisplayName: testSolutionLeftSide(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)
07:33:32.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSolutionLeftSide
07:33:32.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testBadEndpoints, DisplayName: testBadEndpoints(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)
07:33:32.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testBadEndpoints
07:33:32.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testRootEndpoints, DisplayName: testRootEndpoints(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)
07:33:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testRootEndpoints
07:33:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)
07:33:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testQuinticZero
07:33:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.IllinoisSolverTest)
07:33:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.IllinoisSolverTest, MethodName: testSinZero
07:33:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:33:32.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.RealVectorFormatTest
07:33:32.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 30
07:33:32.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testConstructorSingleFormat
07:33:32.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleWithDecimals
07:33:32.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenSeparator, DisplayName: testForgottenSeparator(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenSeparator
07:33:32.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseZeroX, DisplayName: testParseZeroX(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseZeroX
07:33:32.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNan
07:33:32.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleWithDecimalsTrunc
07:33:32.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeX, DisplayName: testParseNegativeX(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.754 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeX
07:33:32.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeY, DisplayName: testParseNegativeY(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeY
07:33:32.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeZ, DisplayName: testParseNegativeZ(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeZ
07:33:32.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeAll, DisplayName: testParseNegativeAll(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeAll
07:33:32.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenPrefix, DisplayName: testForgottenPrefix(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenPrefix
07:33:32.756 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenSuffix, DisplayName: testForgottenSuffix(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testForgottenSuffix
07:33:32.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeX, DisplayName: testNegativeX(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeX
07:33:32.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeY, DisplayName: testNegativeY(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.757 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeY
07:33:32.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeZ, DisplayName: testNegativeZ(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNegativeZ
07:33:32.758 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseIgnoredWhitespace, DisplayName: testParseIgnoredWhitespace(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseIgnoredWhitespace
07:33:32.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleWithDecimalsTrunc
07:33:32.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNoComponents, DisplayName: testParseNoComponents(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.759 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNoComponents
07:33:32.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseManyComponents, DisplayName: testParseManyComponents(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseManyComponents
07:33:32.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: tesNegativeInfinity, DisplayName: tesNegativeInfinity(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: tesNegativeInfinity

07:33:32.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testDefaultFormatRealVectorImpl, DisplayName: testDefaultFormatRealVectorImpl(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testDefaultFormatRealVectorImpl
07:33:32.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeInfinity, DisplayName: testParseNegativeInfinity(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNegativeInfinity
07:33:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNonDefaultSetting, DisplayName: testNonDefaultSetting(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testNonDefaultSetting
07:33:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleNoDecimals
07:33:32.762 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseSimpleNoDecimals
07:33:32.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testPositiveInfinity
07:33:32.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.763 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNonDefaultSetting, DisplayName: testParseNonDefaultSetting(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNonDefaultSetting
07:33:32.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParseNan
07:33:32.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testParsePositiveInfinity
07:33:32.764 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.linear.RealVectorFormatTest)
07:33:32.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorFormatTest, MethodName: testSimpleWithDecimals
07:33:32.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 30
07:33:32.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:32.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest
07:33:32.765 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
07:33:32.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)
07:33:32.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testDimensionCheck
07:33:32.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)
07:33:32.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testBackward
07:33:32.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)
07:33:32.771 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testSmallStep
07:33:32.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)
07:33:32.775 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testDecreasingSteps
07:33:32.823 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)
07:33:32.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testBigStep
07:33:32.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest)
07:33:32.824 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, MethodName: testStepSize
07:33:32.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
07:33:32.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:32.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.inference.OneWayAnovaTest
07:33:32.825 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:32.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaTest, DisplayName: testAnovaTest(org.apache.commons.math.stat.inference.OneWayAnovaTest)
07:33:32.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaTest
07:33:32.826 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaFValue, DisplayName: testAnovaFValue(org.apache.commons.math.stat.inference.OneWayAnovaTest)
07:33:32.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaFValue
07:33:32.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaPValue, DisplayName: testAnovaPValue(org.apache.commons.math.stat.inference.OneWayAnovaTest)
07:33:32.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.OneWayAnovaTest, MethodName: testAnovaPValue
07:33:32.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:32.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:32.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest
07:33:32.827 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:32.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest)
07:33:32.829 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testPlane

07:33:32.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testWave, DisplayName: testWave(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest)
07:33:32.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testWave
07:33:32.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest)
07:33:32.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, MethodName: testPreconditions
07:33:32.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:32.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:32.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.random.Well19937aTest
07:33:32.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 42
07:33:32.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well19937aTest)
07:33:32.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testReferenceCode
07:33:32.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:32.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.Well19937aTest)
07:33:32.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntDirect

07:33:33.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.Well19937aTest)
07:33:33.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextFloatDirect
07:33:33.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.Well19937aTest)
07:33:33.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextBooleanDirect
07:33:33.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.Well19937aTest)
07:33:33.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLongDirect
07:33:33.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.Well19937aTest)
07:33:33.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNexBoolean2
07:33:33.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.Well19937aTest)
07:33:33.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testFloatDirect
07:33:33.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.Well19937aTest)
07:33:33.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testDoubleDirect
07:33:33.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.Well19937aTest)
07:33:33.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLong2
07:33:33.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.Well19937aTest)
07:33:33.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntIAE
07:33:33.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.Well19937aTest)
07:33:33.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntNeg
07:33:33.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.Well19937aTest)
07:33:33.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.488 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNexBytes
07:33:33.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.Well19937aTest)
07:33:33.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextInt2
07:33:33.489 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.Well19937aTest)
07:33:33.490 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPascal
07:33:33.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.Well19937aTest)
07:33:33.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSample
07:33:33.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.Well19937aTest)
07:33:33.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextIntExtremeValues

07:33:33.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.Well19937aTest)
07:33:33.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextUniformExclusiveEndpoints
07:33:33.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.Well19937aTest)
07:33:33.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextGaussian
07:33:33.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.Well19937aTest)
07:33:33.536 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextF
07:33:33.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.Well19937aTest)
07:33:33.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextT
07:33:33.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.Well19937aTest)
07:33:33.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextChiSquare
07:33:33.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.Well19937aTest)
07:33:33.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSecureLong
07:33:33.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.Well19937aTest)
07:33:33.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSecureHex
07:33:33.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.Well19937aTest)
07:33:33.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextSecureInt
07:33:33.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:33.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.Well19937aTest)
07:33:33.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPoissonConsistency

07:33:35.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.Well19937aTest)
07:33:35.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextHypergeometric
07:33:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.Well19937aTest)
07:33:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLongExtremeValues
07:33:35.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.Well19937aTest)
07:33:35.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextExponential
07:33:35.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.Well19937aTest)
07:33:35.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPoisson
07:33:35.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.Well19937aTest)
07:33:35.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextUniform
07:33:35.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.Well19937aTest)
07:33:35.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextPermutation
07:33:35.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.Well19937aTest)
07:33:35.187 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextBinomial
07:33:35.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.Well19937aTest)
07:33:35.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testConfig
07:33:35.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.Well19937aTest)
07:33:35.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextInversionDeviate
07:33:35.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.Well19937aTest)
07:33:35.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextHex

07:33:35.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.Well19937aTest)
07:33:35.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextInt
07:33:35.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.Well19937aTest)
07:33:35.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextCauchy
07:33:35.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.Well19937aTest)
07:33:35.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextGamma
07:33:35.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.Well19937aTest)
07:33:35.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextWeibull
07:33:35.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.Well19937aTest)
07:33:35.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextBeta
07:33:35.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.Well19937aTest)
07:33:35.233 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextLong
07:33:35.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.Well19937aTest)
07:33:35.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well19937aTest, MethodName: testNextZipf
07:33:35.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 42
07:33:35.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:33:35.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.FastMathTest

07:33:35.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 36
07:33:35.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLogSpecialCases, DisplayName: testLogSpecialCases(org.apache.commons.math.util.FastMathTest)
07:33:35.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLogSpecialCases
07:33:35.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testDoubleNextAfterSpecialCases, DisplayName: testDoubleNextAfterSpecialCases(org.apache.commons.math.util.FastMathTest)
07:33:35.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testDoubleNextAfterSpecialCases
07:33:35.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2SpecialCases, DisplayName: testAtan2SpecialCases(org.apache.commons.math.util.FastMathTest)
07:33:35.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2SpecialCases
07:33:35.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:35.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCbrtAccuracy, DisplayName: testCbrtAccuracy(org.apache.commons.math.util.FastMathTest)
07:33:35.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:37.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCbrtAccuracy

07:33:37.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2, DisplayName: testAtan2(org.apache.commons.math.util.FastMathTest)
* Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2
* Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: checkMissingFastMathClasses, DisplayName: checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
* Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: checkMissingFastMathClasses
* Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLogAccuracy, DisplayName: testLogAccuracy(org.apache.commons.math.util.FastMathTest)

07:33:37.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLogAccuracy

07:33:37.296 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAcosAccuracy, DisplayName: testAcosAccuracy(org.apache.commons.math.util.FastMathTest)
07:33:37.296 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:39.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAcosAccuracy

07:33:39.010 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testMinMaxDouble, DisplayName: testMinMaxDouble(org.apache.commons.math.util.FastMathTest)
07:33:39.010 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:39.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testMinMaxDouble
07:33:39.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:39.011 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testPowSpecialCases, DisplayName: testPowSpecialCases(org.apache.commons.math.util.FastMathTest)
07:33:39.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:39.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testPowSpecialCases
07:33:39.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:39.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testDoubleScalbSpecialCases, DisplayName: testDoubleScalbSpecialCases(org.apache.commons.math.util.FastMathTest)
07:33:39.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:39.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testDoubleScalbSpecialCases
07:33:39.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:39.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testTanhAccuracy, DisplayName: testTanhAccuracy(org.apache.commons.math.util.FastMathTest)
07:33:39.012 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:41.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testTanhAccuracy

07:33:41.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testToRadians, DisplayName: testToRadians(org.apache.commons.math.util.FastMathTest)
07:33:41.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:41.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testToRadians

07:33:41.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testConstants, DisplayName: testConstants(org.apache.commons.math.util.FastMathTest)
07:33:41.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:41.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testConstants
07:33:41.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:41.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testTanAccuracy, DisplayName: testTanAccuracy(org.apache.commons.math.util.FastMathTest)
07:33:41.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:42.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testTanAccuracy

07:33:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testFloatScalbSpecialCases, DisplayName: testFloatScalbSpecialCases(org.apache.commons.math.util.FastMathTest)
07:33:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testFloatScalbSpecialCases
07:33:42.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testToDegrees, DisplayName: testToDegrees(org.apache.commons.math.util.FastMathTest)
07:33:42.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:42.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testToDegrees

07:33:42.192 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testSinAccuracy, DisplayName: testSinAccuracy(org.apache.commons.math.util.FastMathTest)

07:33:42.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testSinAccuracy

07:33:42.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2Accuracy, DisplayName: testAtan2Accuracy(org.apache.commons.math.util.FastMathTest)
07:33:42.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:42.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtan2Accuracy

07:33:42.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testFloatNextAfterSpecialCases, DisplayName: testFloatNextAfterSpecialCases(org.apache.commons.math.util.FastMathTest)
07:33:42.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:42.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testFloatNextAfterSpecialCases
07:33:42.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:42.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpm1Accuracy, DisplayName: testExpm1Accuracy(org.apache.commons.math.util.FastMathTest)
07:33:42.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:42.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpm1Accuracy

07:33:42.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testMinMaxFloat, DisplayName: testMinMaxFloat(org.apache.commons.math.util.FastMathTest)
07:33:42.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:42.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testMinMaxFloat
07:33:42.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:42.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testHyperbolic, DisplayName: testHyperbolic(org.apache.commons.math.util.FastMathTest)
07:33:42.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:42.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testHyperbolic

07:33:42.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCoshAccuracy, DisplayName: testCoshAccuracy(org.apache.commons.math.util.FastMathTest)
07:33:42.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:44.001 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCoshAccuracy

07:33:44.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testPowAccuracy, DisplayName: testPowAccuracy(org.apache.commons.math.util.FastMathTest)
07:33:44.002 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:44.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testPowAccuracy

07:33:44.263 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpSpecialCases, DisplayName: testExpSpecialCases(org.apache.commons.math.util.FastMathTest)
07:33:44.263 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:44.263 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpSpecialCases
07:33:44.263 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:44.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLog10Accuracy, DisplayName: testLog10Accuracy(org.apache.commons.math.util.FastMathTest)
07:33:44.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:44.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLog10Accuracy

07:33:44.493 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtanAccuracy, DisplayName: testAtanAccuracy(org.apache.commons.math.util.FastMathTest)
07:33:44.494 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:44.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAtanAccuracy

07:33:44.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testNextAfter, DisplayName: testNextAfter(org.apache.commons.math.util.FastMathTest)
07:33:44.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:44.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testNextAfter
07:33:44.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:44.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLog1pAccuracy, DisplayName: testLog1pAccuracy(org.apache.commons.math.util.FastMathTest)
07:33:44.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:44.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testLog1pAccuracy

07:33:44.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testHyperbolicInverses, DisplayName: testHyperbolicInverses(org.apache.commons.math.util.FastMathTest)
07:33:44.712 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:44.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testHyperbolicInverses
07:33:44.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:44.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Execution of test case ignored : checkExtraFastMathClasses
07:33:44.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:44.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAsinAccuracy, DisplayName: testAsinAccuracy(org.apache.commons.math.util.FastMathTest)
07:33:44.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:46.352 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testAsinAccuracy

07:33:46.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCosAccuracy, DisplayName: testCosAccuracy(org.apache.commons.math.util.FastMathTest)
07:33:46.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:46.434 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testCosAccuracy

07:33:46.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpAccuracy, DisplayName: testExpAccuracy(org.apache.commons.math.util.FastMathTest)
07:33:46.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:46.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testExpAccuracy

07:33:46.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testSinhAccuracy, DisplayName: testSinhAccuracy(org.apache.commons.math.util.FastMathTest)
07:33:46.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.FastMathTest, MethodName: testSinhAccuracy

07:33:48.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 35
07:33:48.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.125 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:33:48.125 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.fraction.FractionFieldTest

07:33:48.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:48.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testOne, DisplayName: testOne(org.apache.commons.math.fraction.FractionFieldTest)
07:33:48.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testOne
07:33:48.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testZero, DisplayName: testZero(org.apache.commons.math.fraction.FractionFieldTest)
07:33:48.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testZero
07:33:48.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.fraction.FractionFieldTest)
07:33:48.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.FractionFieldTest, MethodName: testSerial
07:33:48.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:48.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.random.Well512aTest
07:33:48.128 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 42
07:33:48.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well512aTest)
07:33:48.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testReferenceCode
07:33:48.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.Well512aTest)
07:33:48.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntDirect
07:33:48.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.Well512aTest)
07:33:48.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextFloatDirect
07:33:48.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.Well512aTest)
07:33:48.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextBooleanDirect
07:33:48.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.Well512aTest)
07:33:48.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLongDirect
07:33:48.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.Well512aTest)
07:33:48.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNexBoolean2
07:33:48.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.Well512aTest)
07:33:48.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testFloatDirect
07:33:48.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.Well512aTest)
07:33:48.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testDoubleDirect
07:33:48.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.Well512aTest)
07:33:48.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLong2
07:33:48.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.Well512aTest)
07:33:48.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntIAE
07:33:48.587 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.Well512aTest)
07:33:48.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntNeg
07:33:48.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.Well512aTest)
07:33:48.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNexBytes
07:33:48.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.Well512aTest)
07:33:48.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextInt2
07:33:48.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.Well512aTest)
07:33:48.598 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPascal
07:33:48.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.Well512aTest)
07:33:48.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSample
07:33:48.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.Well512aTest)
07:33:48.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextIntExtremeValues
07:33:48.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.Well512aTest)
07:33:48.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextUniformExclusiveEndpoints
07:33:48.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.Well512aTest)
07:33:48.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextGaussian
07:33:48.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.Well512aTest)
07:33:48.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextF
07:33:48.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.Well512aTest)
07:33:48.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextT
07:33:48.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.Well512aTest)
07:33:48.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextChiSquare
07:33:48.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.Well512aTest)
07:33:48.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSecureLong
07:33:48.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.Well512aTest)
07:33:48.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSecureHex
07:33:48.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.Well512aTest)
07:33:48.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextSecureInt
07:33:48.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:48.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.Well512aTest)
07:33:48.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPoissonConsistency

07:33:50.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.Well512aTest)
07:33:50.156 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextHypergeometric
07:33:50.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.Well512aTest)
07:33:50.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLongExtremeValues

07:33:50.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.Well512aTest)
07:33:50.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextExponential
07:33:50.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.Well512aTest)
07:33:50.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPoisson
07:33:50.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.Well512aTest)
07:33:50.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextUniform
07:33:50.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.Well512aTest)
07:33:50.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextPermutation
07:33:50.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.Well512aTest)
07:33:50.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextBinomial
07:33:50.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.Well512aTest)
07:33:50.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testConfig
07:33:50.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.Well512aTest)
07:33:50.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextInversionDeviate
07:33:50.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.Well512aTest)
07:33:50.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextHex

07:33:50.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.Well512aTest)
07:33:50.197 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextInt
07:33:50.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.Well512aTest)
07:33:50.198 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextCauchy
07:33:50.199 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.Well512aTest)
07:33:50.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.200 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextGamma
07:33:50.201 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.201 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.Well512aTest)
07:33:50.201 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextWeibull
07:33:50.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.Well512aTest)
07:33:50.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextBeta
07:33:50.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.Well512aTest)
07:33:50.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextLong
07:33:50.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.Well512aTest)
07:33:50.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well512aTest, MethodName: testNextZipf
07:33:50.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 42
07:33:50.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:33:50.232 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.genetics.RandomKeyMutationTest

07:33:50.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:50.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.RandomKeyMutationTest, MethodName: testMutate, DisplayName: testMutate(org.apache.commons.math.genetics.RandomKeyMutationTest)
07:33:50.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.RandomKeyMutationTest, MethodName: testMutate
07:33:50.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:33:50.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:50.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.analysis.solvers.NewtonSolverTest
07:33:50.234 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:33:50.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.NewtonSolverTest, MethodName: testQuinticZero, DisplayName: testQuinticZero(org.apache.commons.math.analysis.solvers.NewtonSolverTest)
07:33:50.235 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.NewtonSolverTest, MethodName: testQuinticZero
07:33:50.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.NewtonSolverTest, MethodName: testSinZero, DisplayName: testSinZero(org.apache.commons.math.analysis.solvers.NewtonSolverTest)
07:33:50.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.NewtonSolverTest, MethodName: testSinZero
07:33:50.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:33:50.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:50.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.LUDecompositionImplTest
07:33:50.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
07:33:50.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testPPermutation, DisplayName: testPPermutation(org.apache.commons.math.linear.LUDecompositionImplTest)
07:33:50.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testPPermutation
07:33:50.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testUUpperTriangular, DisplayName: testUUpperTriangular(org.apache.commons.math.linear.LUDecompositionImplTest)
07:33:50.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testUUpperTriangular
07:33:50.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.LUDecompositionImplTest)
07:33:50.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testDimensions
07:33:50.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testNonSquare, DisplayName: testNonSquare(org.apache.commons.math.linear.LUDecompositionImplTest)
07:33:50.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testNonSquare
07:33:50.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testSingular, DisplayName: testSingular(org.apache.commons.math.linear.LUDecompositionImplTest)
07:33:50.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testSingular
07:33:50.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testLLowerTriangular, DisplayName: testLLowerTriangular(org.apache.commons.math.linear.LUDecompositionImplTest)
07:33:50.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testLLowerTriangular
07:33:50.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testPAEqualLU, DisplayName: testPAEqualLU(org.apache.commons.math.linear.LUDecompositionImplTest)
07:33:50.241 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testPAEqualLU
07:33:50.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testMatricesValues1, DisplayName: testMatricesValues1(org.apache.commons.math.linear.LUDecompositionImplTest)
07:33:50.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testMatricesValues1
07:33:50.242 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testMatricesValues2, DisplayName: testMatricesValues2(org.apache.commons.math.linear.LUDecompositionImplTest)
07:33:50.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.LUDecompositionImplTest, MethodName: testMatricesValues2
07:33:50.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
07:33:50.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:50.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest

07:33:50.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17

07:33:50.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testOppositeHyperplanes, DisplayName: testOppositeHyperplanes(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testOppositeHyperplanes
07:33:50.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testDisjointPolygons, DisplayName: testDisjointPolygons(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testDisjointPolygons
07:33:50.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testEmptyDifference, DisplayName: testEmptyDifference(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testEmptyDifference
07:33:50.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testXor, DisplayName: testXor(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testXor
07:33:50.281 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testBug20040520, DisplayName: testBug20040520(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testBug20040520
07:33:50.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testBug20041003, DisplayName: testBug20041003(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testBug20041003
07:33:50.286 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testStair, DisplayName: testStair(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.287 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testStair
07:33:50.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testUnion, DisplayName: testUnion(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testUnion
07:33:50.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testHole, DisplayName: testHole(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testHole
07:33:50.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testChoppedHexagon, DisplayName: testChoppedHexagon(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.298 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testChoppedHexagon
07:33:50.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testLineIntersection, DisplayName: testLineIntersection(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.300 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testLineIntersection
07:33:50.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testDifference, DisplayName: testDifference(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testDifference
07:33:50.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testIntersection, DisplayName: testIntersection(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testIntersection
07:33:50.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testUnlimitedSubHyperplane, DisplayName: testUnlimitedSubHyperplane(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testUnlimitedSubHyperplane
07:33:50.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testConcentric, DisplayName: testConcentric(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testConcentric
07:33:50.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testSingularPoint, DisplayName: testSingularPoint(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testSingularPoint
07:33:50.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testSimplyConnected, DisplayName: testSimplyConnected(org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest)
07:33:50.317 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest, MethodName: testSimplyConnected
07:33:50.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
07:33:50.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:50.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.GammaDistributionTest

07:33:50.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13
07:33:50.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testProbabilities, DisplayName: testProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)
07:33:50.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testProbabilities
07:33:50.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.GammaDistributionTest)
07:33:50.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testPreconditions
07:33:50.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testParameterAccessors, DisplayName: testParameterAccessors(org.apache.commons.math.distribution.GammaDistributionTest)
07:33:50.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testParameterAccessors

07:33:50.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.GammaDistributionTest)
07:33:50.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testMomonts
07:33:50.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.GammaDistributionTest)
07:33:50.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testDensity
07:33:50.326 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.GammaDistributionTest)
07:33:50.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes
07:33:50.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testValues, DisplayName: testValues(org.apache.commons.math.distribution.GammaDistributionTest)
07:33:50.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testValues
07:33:50.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.GammaDistributionTest)
07:33:50.327 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testDensities
07:33:50.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)
07:33:50.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testInverseCumulativeProbabilities
07:33:50.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.GammaDistributionTest)
07:33:50.328 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testSampling
07:33:50.338 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.GammaDistributionTest)
07:33:50.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testCumulativeProbabilities
07:33:50.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.GammaDistributionTest)
07:33:50.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testIllegalArguments
07:33:50.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.GammaDistributionTest)
07:33:50.339 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.GammaDistributionTest, MethodName: testConsistency
07:33:50.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
07:33:50.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:50.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.InteractionTest
07:33:50.340 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:33:50.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.InteractionTest, MethodName: testInteraction, DisplayName: testInteraction(org.apache.commons.math.stat.descriptive.InteractionTest)
07:33:50.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.InteractionTest, MethodName: testInteraction
07:33:50.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:33:50.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:50.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.ProductTest
07:33:50.341 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12
07:33:50.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.ProductTest)
07:33:50.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSpecialValues
07:33:50.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testWeightedProduct, DisplayName: testWeightedProduct(org.apache.commons.math.stat.descriptive.summary.ProductTest)
07:33:50.343 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testWeightedProduct
07:33:50.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.ProductTest)
07:33:50.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testMomentSmallSamples

07:33:50.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.ProductTest)
07:33:50.344 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSerialization
07:33:50.345 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.ProductTest)
07:33:50.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testIncrementation

07:33:50.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.ProductTest)
07:33:50.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testConsistency
07:33:50.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.ProductTest)
07:33:50.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEqualsAndHashCode
07:33:50.346 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.summary.ProductTest)

07:33:50.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testCopyConsistency
07:33:50.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.summary.ProductTest)
07:33:50.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testSerial
07:33:50.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.summary.ProductTest)
07:33:50.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testCopy
07:33:50.349 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.ProductTest)
07:33:50.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testEvaluation

07:33:50.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.summary.ProductTest)
07:33:50.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.ProductTest, MethodName: testWeightedConsistency
07:33:50.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
07:33:50.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:50.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.SubLineTest
07:33:50.350 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12
07:33:50.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testEndPoints, DisplayName: testEndPoints(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)
07:33:50.353 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testEndPoints
07:33:50.354 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testNoEndPoints, DisplayName: testNoEndPoints(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)
07:33:50.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testNoEndPoints
07:33:50.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionInsideInside, DisplayName: testIntersectionInsideInside(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)
07:33:50.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionInsideInside
07:33:50.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionBoundaryBoundary, DisplayName: testIntersectionBoundaryBoundary(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)
07:33:50.355 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionBoundaryBoundary
07:33:50.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionOutsideOutside, DisplayName: testIntersectionOutsideOutside(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)
07:33:50.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionOutsideOutside
07:33:50.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionBoundaryOutside, DisplayName: testIntersectionBoundaryOutside(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)
07:33:50.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionBoundaryOutside
07:33:50.356 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testSeveralSegments, DisplayName: testSeveralSegments(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)
07:33:50.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testSeveralSegments
07:33:50.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testHalfInfiniteNeg, DisplayName: testHalfInfiniteNeg(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)
07:33:50.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testHalfInfiniteNeg
07:33:50.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testHalfInfinitePos, DisplayName: testHalfInfinitePos(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)
07:33:50.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testHalfInfinitePos
07:33:50.357 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionInsideOutside, DisplayName: testIntersectionInsideOutside(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)
07:33:50.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionInsideOutside
07:33:50.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testNoSegments, DisplayName: testNoSegments(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)
07:33:50.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testNoSegments
07:33:50.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionInsideBoundary, DisplayName: testIntersectionInsideBoundary(org.apache.commons.math.geometry.euclidean.threed.SubLineTest)
07:33:50.358 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.SubLineTest, MethodName: testIntersectionInsideBoundary
07:33:50.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
07:33:50.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:50.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest
07:33:50.359 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:33:50.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testLinearFunction, DisplayName: testLinearFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest)
07:33:50.360 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testLinearFunction
07:33:50.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testQuadraticFunction, DisplayName: testQuadraticFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest)
07:33:50.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testQuadraticFunction
07:33:50.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest)
07:33:50.361 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testParameters
07:33:50.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest)
07:33:50.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, MethodName: testQuinticFunction
07:33:50.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:33:50.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:50.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest
07:33:50.362 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:33:50.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, MethodName: testTrivial, DisplayName: testTrivial(org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest)
07:33:50.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, MethodName: testTrivial
07:33:50.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, MethodName: testNoOptimum, DisplayName: testNoOptimum(org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest)
07:33:50.367 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, MethodName: testNoOptimum
07:33:50.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:33:50.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:50.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest
07:33:50.368 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
07:33:50.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testInsufficientData, DisplayName: testInsufficientData(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)
07:33:50.370 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testInsufficientData
07:33:50.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testStdErrorConsistency, DisplayName: testStdErrorConsistency(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)
07:33:50.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testStdErrorConsistency

07:33:50.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testSwiss, DisplayName: testSwiss(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)
07:33:50.371 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testSwiss
07:33:50.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testConstant, DisplayName: testConstant(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)
07:33:50.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testConstant
07:33:50.373 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testCovarianceConsistency, DisplayName: testCovarianceConsistency(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)
07:33:50.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testCovarianceConsistency

07:33:50.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)
07:33:50.374 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testConsistency
07:33:50.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testLongly, DisplayName: testLongly(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)
07:33:50.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testLongly
07:33:50.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testSwissFertility, DisplayName: testSwissFertility(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)
07:33:50.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testSwissFertility
07:33:50.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testPValueNearZero, DisplayName: testPValueNearZero(org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest)
07:33:50.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, MethodName: testPValueNearZero
07:33:50.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
07:33:50.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:50.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.util.OpenIntToDoubleHashMapTest
07:33:50.378 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17
07:33:50.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAbsentOnExisting, DisplayName: testPutAbsentOnExisting(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.381 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAbsentOnExisting
07:33:50.388 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutKeysWithCollision2, DisplayName: testPutKeysWithCollision2(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.389 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.390 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutKeysWithCollision2
07:33:50.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutKeysWithCollisions, DisplayName: testPutKeysWithCollisions(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.391 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutKeysWithCollisions
07:33:50.392 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.393 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testCopy
07:33:50.396 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testContainsKey, DisplayName: testContainsKey(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.397 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testContainsKey

07:33:50.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemoveAbsent, DisplayName: testRemoveAbsent(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.412 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemoveAbsent
07:33:50.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGet, DisplayName: testPutAndGet(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.418 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGet
07:33:50.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGetWith0ExpectedSize, DisplayName: testPutAndGetWith0ExpectedSize(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.421 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGetWith0ExpectedSize
07:33:50.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemove2, DisplayName: testRemove2(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemove2
07:33:50.427 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testConcurrentModification, DisplayName: testConcurrentModification(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testConcurrentModification
07:33:50.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testGetAbsent, DisplayName: testGetAbsent(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testGetAbsent
07:33:50.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testGetFromEmpty, DisplayName: testGetFromEmpty(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testGetFromEmpty
07:33:50.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutOnExisting, DisplayName: testPutOnExisting(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.433 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutOnExisting
07:33:50.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemove, DisplayName: testRemove(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.435 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemove
07:33:50.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testIterator, DisplayName: testIterator(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)

07:33:50.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testIterator
07:33:50.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGetWithExpectedSize, DisplayName: testPutAndGetWithExpectedSize(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testPutAndGetWithExpectedSize
07:33:50.445 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemoveFromEmpty, DisplayName: testRemoveFromEmpty(org.apache.commons.math.util.OpenIntToDoubleHashMapTest)
07:33:50.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToDoubleHashMapTest, MethodName: testRemoveFromEmpty
07:33:50.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
07:33:50.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:50.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.transform.FastHadamardTransformerTest

07:33:50.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:33:50.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test3Points, DisplayName: test3Points(org.apache.commons.math.transform.FastHadamardTransformerTest)
07:33:50.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test3Points
07:33:50.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test8Points, DisplayName: test8Points(org.apache.commons.math.transform.FastHadamardTransformerTest)
07:33:50.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test8Points
07:33:50.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test4Points, DisplayName: test4Points(org.apache.commons.math.transform.FastHadamardTransformerTest)
07:33:50.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: test4Points
07:33:50.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: testNoIntInverse, DisplayName: testNoIntInverse(org.apache.commons.math.transform.FastHadamardTransformerTest)
07:33:50.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.transform.FastHadamardTransformerTest, MethodName: testNoIntInverse
07:33:50.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:33:50.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:50.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.random.Well44497bTest
07:33:50.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 42
07:33:50.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testReferenceCode, DisplayName: testReferenceCode(org.apache.commons.math.random.Well44497bTest)
07:33:50.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.457 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testReferenceCode
07:33:50.457 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:50.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.Well44497bTest)
07:33:50.458 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntDirect
07:33:51.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.Well44497bTest)
07:33:51.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextFloatDirect
07:33:51.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.Well44497bTest)
07:33:51.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextBooleanDirect
07:33:51.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.Well44497bTest)
07:33:51.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLongDirect
07:33:51.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.Well44497bTest)
07:33:51.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNexBoolean2
07:33:51.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.Well44497bTest)
07:33:51.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testFloatDirect
07:33:51.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.Well44497bTest)
07:33:51.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testDoubleDirect
07:33:51.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.Well44497bTest)
07:33:51.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLong2
07:33:51.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.Well44497bTest)
07:33:51.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntIAE
07:33:51.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.Well44497bTest)
07:33:51.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntNeg
07:33:51.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.Well44497bTest)
07:33:51.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNexBytes
07:33:51.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.Well44497bTest)
07:33:51.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextInt2
07:33:51.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.Well44497bTest)
07:33:51.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPascal
07:33:51.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.Well44497bTest)
07:33:51.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSample
07:33:51.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.Well44497bTest)
07:33:51.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextIntExtremeValues
07:33:51.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.Well44497bTest)
07:33:51.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextUniformExclusiveEndpoints
07:33:51.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.Well44497bTest)
07:33:51.222 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextGaussian
07:33:51.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.Well44497bTest)
07:33:51.225 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextF
07:33:51.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.Well44497bTest)
07:33:51.243 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextT
07:33:51.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.Well44497bTest)
07:33:51.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextChiSquare
07:33:51.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.Well44497bTest)
07:33:51.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSecureLong
07:33:51.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.Well44497bTest)
07:33:51.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSecureHex
07:33:51.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.Well44497bTest)
07:33:51.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextSecureInt
07:33:51.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:51.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.Well44497bTest)
07:33:51.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.894 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPoissonConsistency

07:33:52.895 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.Well44497bTest)
07:33:52.895 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextHypergeometric
07:33:52.900 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.Well44497bTest)
07:33:52.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLongExtremeValues
07:33:52.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.Well44497bTest)
07:33:52.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextExponential
07:33:52.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.Well44497bTest)
07:33:52.903 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPoisson
07:33:52.908 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.Well44497bTest)
07:33:52.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextUniform
07:33:52.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.Well44497bTest)
07:33:52.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextPermutation
07:33:52.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.Well44497bTest)
07:33:52.910 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextBinomial
07:33:52.920 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.Well44497bTest)
07:33:52.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testConfig
07:33:52.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.Well44497bTest)
07:33:52.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextInversionDeviate
07:33:52.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.Well44497bTest)
07:33:52.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextHex

07:33:52.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.Well44497bTest)
07:33:52.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextInt
07:33:52.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.Well44497bTest)
07:33:52.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextCauchy
07:33:52.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.Well44497bTest)
07:33:52.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextGamma
07:33:52.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.Well44497bTest)
07:33:52.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextWeibull
07:33:52.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.Well44497bTest)
07:33:52.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextBeta
07:33:52.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.Well44497bTest)
07:33:52.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextLong
07:33:52.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.Well44497bTest)
07:33:52.957 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.Well44497bTest, MethodName: testNextZipf
07:33:52.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 42
07:33:52.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:33:52.975 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.MatrixUtilsTest

07:33:52.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12
07:33:52.978 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testFractionConverter, DisplayName: testFractionConverter(org.apache.commons.math.linear.MatrixUtilsTest)
07:33:52.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.979 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testFractionConverter
07:33:52.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testcreateFieldIdentityMatrix, DisplayName: testcreateFieldIdentityMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
07:33:52.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testcreateFieldIdentityMatrix
07:33:52.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRealMatrix, DisplayName: testCreateRealMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
07:33:52.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRealMatrix
07:33:52.980 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowRealMatrix, DisplayName: testCreateRowRealMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
07:33:52.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowRealMatrix
07:33:52.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testcreateFieldMatrix, DisplayName: testcreateFieldMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
07:33:52.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testcreateFieldMatrix
07:33:52.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testBigFractionConverter, DisplayName: testBigFractionConverter(org.apache.commons.math.linear.MatrixUtilsTest)
07:33:52.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testBigFractionConverter
07:33:52.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testSolveUpperTriangularSystem, DisplayName: testSolveUpperTriangularSystem(org.apache.commons.math.linear.MatrixUtilsTest)
07:33:52.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testSolveUpperTriangularSystem
07:33:52.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateIdentityMatrix, DisplayName: testCreateIdentityMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
07:33:52.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.982 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateIdentityMatrix
07:33:52.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnRealMatrix, DisplayName: testCreateColumnRealMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
07:33:52.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnRealMatrix
07:33:52.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowFieldMatrix, DisplayName: testCreateRowFieldMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
07:33:52.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateRowFieldMatrix
07:33:52.983 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnFieldMatrix, DisplayName: testCreateColumnFieldMatrix(org.apache.commons.math.linear.MatrixUtilsTest)
07:33:52.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testCreateColumnFieldMatrix
07:33:52.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testSolveLowerTriangularSystem, DisplayName: testSolveLowerTriangularSystem(org.apache.commons.math.linear.MatrixUtilsTest)
07:33:52.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixUtilsTest, MethodName: testSolveLowerTriangularSystem
07:33:52.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
07:33:52.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:52.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest
07:33:52.984 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:33:52.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:52.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testBox, DisplayName: testBox(org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest)
07:33:52.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testBox
07:33:53.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testCross, DisplayName: testCross(org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest)
07:33:53.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testCross
07:33:53.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testBuildBox, DisplayName: testBuildBox(org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest)
07:33:53.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testBuildBox
07:33:53.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testTetrahedron, DisplayName: testTetrahedron(org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest)
07:33:53.068 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testTetrahedron
07:33:53.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testIsometry, DisplayName: testIsometry(org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest)
07:33:53.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest, MethodName: testIsometry
07:33:53.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:33:53.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ConvergenceExceptionTest
07:33:53.080 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:33:53.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructorCause, DisplayName: testConstructorCause(org.apache.commons.math.ConvergenceExceptionTest)
07:33:53.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructorCause
07:33:53.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.ConvergenceExceptionTest)
07:33:53.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ConvergenceExceptionTest, MethodName: testConstructor
07:33:53.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:33:53.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest
07:33:53.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:33:53.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)
07:33:53.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testBackward
07:33:53.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testMissedEndEvent, DisplayName: testMissedEndEvent(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)
07:33:53.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testMissedEndEvent
07:33:53.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)
07:33:53.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testSmallStep
07:33:53.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)
07:33:53.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testDecreasingSteps
07:33:53.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)
* Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testBigStep
* Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)

07:33:53.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testKepler
07:33:53.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testSanityChecks, DisplayName: testSanityChecks(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)
07:33:53.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testSanityChecks
07:33:53.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest)
07:33:53.148 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, MethodName: testStepSize
07:33:53.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:33:53.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.FieldMatrixImplTest
07:33:53.149 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 37
07:33:53.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testOperate
07:33:53.157 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testExamples
07:33:53.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetEntry
07:33:53.158 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testAddFail
07:33:53.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testAdd
07:33:53.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testScalarAdd
07:33:53.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPower, DisplayName: testPower(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.160 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPower
07:33:53.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testTrace
07:33:53.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testWalk, DisplayName: testWalk(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testWalk

07:33:53.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testToString
07:33:53.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRowMatrix, DisplayName: testSetRowMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRowMatrix
07:33:53.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPlusMinus
07:33:53.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRowVector, DisplayName: testSetRowVector(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRowVector
07:33:53.204 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.205 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.205 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.205 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMultiply2
07:33:53.205 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.205 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.205 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.205 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testDimensions
07:33:53.205 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testCopySubMatrix, DisplayName: testCopySubMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testCopySubMatrix
07:33:53.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.206 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPremultiplyVector
07:33:53.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testCopyFunctions
07:33:53.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetSubMatrix, DisplayName: testGetSubMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.207 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetSubMatrix
07:33:53.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMath209
07:33:53.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetVectors
07:33:53.208 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumn, DisplayName: testSetColumn(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumn
07:33:53.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumnMatrix
07:33:53.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumn, DisplayName: testGetColumn(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.209 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumn
07:33:53.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetColumnVector
07:33:53.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testMultiply
07:33:53.210 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRow, DisplayName: testGetRow(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRow
07:33:53.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testEqualsAndHashCode
07:33:53.211 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSerial
07:33:53.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRow, DisplayName: testSetRow(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetRow
07:33:53.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testTranspose
07:33:53.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumnMatrix, DisplayName: testSetColumnMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumnMatrix
07:33:53.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testPremultiply
07:33:53.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRowMatrix
07:33:53.215 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumnVector, DisplayName: testSetColumnVector(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetColumnVector
07:33:53.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testSetSubMatrix
07:33:53.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.FieldMatrixImplTest)
07:33:53.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldMatrixImplTest, MethodName: testGetRowVector
07:33:53.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 37
07:33:53.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest

07:33:53.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:33:53.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testPerformClusterAnalysisDegenerate, DisplayName: testPerformClusterAnalysisDegenerate(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)
07:33:53.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testPerformClusterAnalysisDegenerate
07:33:53.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testCertainSpace, DisplayName: testCertainSpace(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)
07:33:53.223 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testCertainSpace

07:33:53.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testPerformClusterAnalysisToManyClusters, DisplayName: testPerformClusterAnalysisToManyClusters(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)
07:33:53.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testPerformClusterAnalysisToManyClusters
07:33:53.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testSmallDistances, DisplayName: testSmallDistances(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)
07:33:53.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: testSmallDistances
07:33:53.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: dimension2, DisplayName: dimension2(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest)
07:33:53.375 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, MethodName: dimension2
07:33:53.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:33:53.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:33:53.376 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest

07:33:53.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:33:53.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, MethodName: testDerivativesConsistency, DisplayName: testDerivativesConsistency(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)
07:33:53.377 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, MethodName: testDerivativesConsistency
07:33:53.379 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest)
07:33:53.380 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, MethodName: serialization

07:33:53.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:33:53.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.438 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.TriDiagonalTransformerTest

07:33:53.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:33:53.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testAEqualQTQt, DisplayName: testAEqualQTQt(org.apache.commons.math.linear.TriDiagonalTransformerTest)
07:33:53.440 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testAEqualQTQt
07:33:53.441 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testTTriDiagonal, DisplayName: testTTriDiagonal(org.apache.commons.math.linear.TriDiagonalTransformerTest)
07:33:53.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testTTriDiagonal
07:33:53.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testNonSquare, DisplayName: testNonSquare(org.apache.commons.math.linear.TriDiagonalTransformerTest)
07:33:53.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testNonSquare
07:33:53.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testQTOrthogonal, DisplayName: testQTOrthogonal(org.apache.commons.math.linear.TriDiagonalTransformerTest)
07:33:53.442 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testQTOrthogonal
07:33:53.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testNoAccessBelowDiagonal, DisplayName: testNoAccessBelowDiagonal(org.apache.commons.math.linear.TriDiagonalTransformerTest)
07:33:53.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testNoAccessBelowDiagonal
07:33:53.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testQOrthogonal, DisplayName: testQOrthogonal(org.apache.commons.math.linear.TriDiagonalTransformerTest)
07:33:53.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testQOrthogonal
07:33:53.443 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testMatricesValues3, DisplayName: testMatricesValues3(org.apache.commons.math.linear.TriDiagonalTransformerTest)
07:33:53.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testMatricesValues3

07:33:53.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testMatricesValues5, DisplayName: testMatricesValues5(org.apache.commons.math.linear.TriDiagonalTransformerTest)
07:33:53.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.TriDiagonalTransformerTest, MethodName: testMatricesValues5
07:33:53.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:33:53.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.LineTest
07:33:53.444 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
07:33:53.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testContains, DisplayName: testContains(org.apache.commons.math.geometry.euclidean.threed.LineTest)
07:33:53.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testContains
07:33:53.446 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testLineDistance, DisplayName: testLineDistance(org.apache.commons.math.geometry.euclidean.threed.LineTest)
07:33:53.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testLineDistance
07:33:53.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testClosest, DisplayName: testClosest(org.apache.commons.math.geometry.euclidean.threed.LineTest)
07:33:53.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testClosest
07:33:53.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testIntersection, DisplayName: testIntersection(org.apache.commons.math.geometry.euclidean.threed.LineTest)
07:33:53.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testIntersection
07:33:53.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testSimilar, DisplayName: testSimilar(org.apache.commons.math.geometry.euclidean.threed.LineTest)
07:33:53.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testSimilar
07:33:53.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testPointDistance, DisplayName: testPointDistance(org.apache.commons.math.geometry.euclidean.threed.LineTest)
07:33:53.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.LineTest, MethodName: testPointDistance
07:33:53.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
07:33:53.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest
07:33:53.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:33:53.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest)
07:33:53.450 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testSerialization
07:33:53.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testImpossibleSerialization, DisplayName: testImpossibleSerialization(org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest)
07:33:53.451 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testImpossibleSerialization
07:33:53.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testFixedState, DisplayName: testFixedState(org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest)
07:33:53.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testFixedState
07:33:53.455 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testNoReset, DisplayName: testNoReset(org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest)
07:33:53.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, MethodName: testNoReset
07:33:53.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:33:53.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.StatUtilsTest
07:33:53.456 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 15
07:33:53.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testNormalize1, DisplayName: testNormalize1(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testNormalize1
07:33:53.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testNormalize2, DisplayName: testNormalize2(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testNormalize2
07:33:53.459 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testDifferenceStats, DisplayName: testDifferenceStats(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testDifferenceStats
07:33:53.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testPercentile, DisplayName: testPercentile(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testPercentile
07:33:53.460 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testArrayIndexConditions, DisplayName: testArrayIndexConditions(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testArrayIndexConditions
07:33:53.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMax, DisplayName: testMax(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMax
07:33:53.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMin, DisplayName: testMin(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMin
07:33:53.461 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testStats
07:33:53.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumSq, DisplayName: testSumSq(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumSq
07:33:53.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMean, DisplayName: testMean(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testMean
07:33:53.462 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testN0andN1Conditions

07:33:53.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testProduct, DisplayName: testProduct(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testProduct
07:33:53.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testGeometricMean, DisplayName: testGeometricMean(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testGeometricMean
07:33:53.463 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testVariance, DisplayName: testVariance(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testVariance
07:33:53.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumLog, DisplayName: testSumLog(org.apache.commons.math.stat.StatUtilsTest)
07:33:53.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.StatUtilsTest, MethodName: testSumLog
07:33:53.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 15
07:33:53.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest
07:33:53.464 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:33:53.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)
07:33:53.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testProductAndGeometricMean
07:33:53.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)
07:33:53.466 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSerialization
07:33:53.472 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)
07:33:53.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testStats
07:33:53.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)
07:33:53.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testN0andN1Conditions
07:33:53.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSkewAndKurtosis, DisplayName: testSkewAndKurtosis(org.apache.commons.math.stat.descriptive.ListUnivariateImplTest)
07:33:53.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, MethodName: testSkewAndKurtosis
07:33:53.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:33:53.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.distribution.ZipfDistributionTest
07:33:53.474 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:33:53.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.ZipfDistributionTest)
07:33:53.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testPreconditions
07:33:53.475 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.ZipfDistributionTest)
07:33:53.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testMomonts
07:33:53.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.ZipfDistributionTest)
07:33:53.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testDensities
07:33:53.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ZipfDistributionTest)
07:33:53.476 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testInverseCumulativeProbabilities
07:33:53.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.ZipfDistributionTest)
07:33:53.477 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testSampling
07:33:53.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.ZipfDistributionTest)
07:33:53.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testCumulativeProbabilities
07:33:53.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.ZipfDistributionTest)
07:33:53.496 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testIllegalArguments
07:33:53.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.ZipfDistributionTest)
07:33:53.497 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ZipfDistributionTest, MethodName: testFloatingPointArguments
07:33:53.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:33:53.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.498 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.FrenchRealVectorFormatTest

07:33:53.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 30
07:33:53.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testConstructorSingleFormat
07:33:53.502 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleWithDecimals
07:33:53.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenSeparator, DisplayName: testForgottenSeparator(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenSeparator
07:33:53.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseZeroX, DisplayName: testParseZeroX(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseZeroX
07:33:53.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNan
07:33:53.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleWithDecimalsTrunc
07:33:53.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeX, DisplayName: testParseNegativeX(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeX
07:33:53.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeY, DisplayName: testParseNegativeY(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeY
07:33:53.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeZ, DisplayName: testParseNegativeZ(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeZ
07:33:53.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeAll, DisplayName: testParseNegativeAll(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeAll
07:33:53.506 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenPrefix, DisplayName: testForgottenPrefix(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenPrefix
07:33:53.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenSuffix, DisplayName: testForgottenSuffix(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testForgottenSuffix
07:33:53.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeX, DisplayName: testNegativeX(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeX
07:33:53.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeY, DisplayName: testNegativeY(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeY
07:33:53.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeZ, DisplayName: testNegativeZ(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNegativeZ
07:33:53.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseIgnoredWhitespace, DisplayName: testParseIgnoredWhitespace(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseIgnoredWhitespace
07:33:53.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleWithDecimalsTrunc
07:33:53.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNoComponents, DisplayName: testParseNoComponents(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNoComponents
07:33:53.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseManyComponents, DisplayName: testParseManyComponents(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseManyComponents
07:33:53.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: tesNegativeInfinity, DisplayName: tesNegativeInfinity(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: tesNegativeInfinity
07:33:53.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testDefaultFormatRealVectorImpl, DisplayName: testDefaultFormatRealVectorImpl(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testDefaultFormatRealVectorImpl
07:33:53.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeInfinity, DisplayName: testParseNegativeInfinity(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNegativeInfinity
07:33:53.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNonDefaultSetting, DisplayName: testNonDefaultSetting(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testNonDefaultSetting
07:33:53.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleNoDecimals
07:33:53.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseSimpleNoDecimals
07:33:53.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testPositiveInfinity
07:33:53.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNonDefaultSetting, DisplayName: testParseNonDefaultSetting(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNonDefaultSetting
07:33:53.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParseNan
07:33:53.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testParsePositiveInfinity
07:33:53.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.linear.FrenchRealVectorFormatTest)
07:33:53.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FrenchRealVectorFormatTest, MethodName: testSimpleWithDecimals
07:33:53.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 30
07:33:53.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest
07:33:53.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 23
07:33:53.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testHat, DisplayName: testHat(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testHat
07:33:53.520 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testSwissFertility, DisplayName: testSwissFertility(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testSwissFertility
07:33:53.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleDataXNull, DisplayName: testNewSampleDataXNull(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleDataXNull
07:33:53.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleDataYNull, DisplayName: testNewSampleDataYNull(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleDataYNull
07:33:53.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testYVariance, DisplayName: testYVariance(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testYVariance
07:33:53.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: cannotAddSampleDataWithSizeMismatch, DisplayName: cannotAddSampleDataWithSizeMismatch(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: cannotAddSampleDataWithSizeMismatch
07:33:53.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testPerfectFit, DisplayName: testPerfectFit(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testPerfectFit
07:33:53.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler1, DisplayName: testWampler1(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler1
07:33:53.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler2, DisplayName: testWampler2(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler2
07:33:53.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler3, DisplayName: testWampler3(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler3
07:33:53.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler4, DisplayName: testWampler4(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testWampler4
07:33:53.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testLongly, DisplayName: testLongly(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testLongly
07:33:53.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSample2, DisplayName: testNewSample2(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSample2
07:33:53.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateResiduals, DisplayName: canEstimateResiduals(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateResiduals
07:33:53.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressandVariance, DisplayName: canEstimateRegressandVariance(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressandVariance
07:33:53.527 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleInsufficientData, DisplayName: testNewSampleInsufficientData(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleInsufficientData
07:33:53.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSample, DisplayName: testNewSample(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSample
07:33:53.528 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParameters, DisplayName: canEstimateRegressionParameters(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParameters
07:33:53.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParametersVariance, DisplayName: canEstimateRegressionParametersVariance(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: canEstimateRegressionParametersVariance
07:33:53.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleNullData, DisplayName: testNewSampleNullData(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.529 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleNullData
07:33:53.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testXSampleDataNull, DisplayName: testXSampleDataNull(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testXSampleDataNull
07:33:53.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleInvalidData, DisplayName: testNewSampleInvalidData(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testNewSampleInvalidData
07:33:53.530 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testYSampleDataNull, DisplayName: testYSampleDataNull(org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest)
07:33:53.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, MethodName: testYSampleDataNull
07:33:53.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 23
07:33:53.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest
07:33:53.531 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:53.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest)
07:33:53.533 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testSerialization
07:33:53.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest)
07:33:53.534 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testToString
07:33:53.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest)
07:33:53.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, MethodName: testEqualsAndHashCode
07:33:53.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:53.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest
07:33:53.535 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
07:33:53.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)
07:33:53.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.537 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testDimensionCheck
07:33:53.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)
07:33:53.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testBackward
07:33:53.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.538 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testVariableSteps, DisplayName: testVariableSteps(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)
07:33:53.539 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testVariableSteps
07:33:53.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIntegratorControls, DisplayName: testIntegratorControls(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)
07:33:53.541 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIntegratorControls
07:33:53.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)
07:33:53.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testMinStep
07:33:53.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testUnstableDerivative, DisplayName: testUnstableDerivative(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)
07:33:53.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testUnstableDerivative
07:33:53.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testNullIntervalCheck, DisplayName: testNullIntervalCheck(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)
07:33:53.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testNullIntervalCheck
07:33:53.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testEvents, DisplayName: testEvents(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)
07:33:53.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testEvents
07:33:53.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIssue596, DisplayName: testIssue596(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)
07:33:53.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIssue596
07:33:53.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)
07:33:53.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testKepler
07:33:53.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest)
07:33:53.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, MethodName: testIncreasingTolerance
07:33:53.676 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
07:33:53.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:33:53.677 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.MedianTest

07:33:53.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:33:53.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.rank.MedianTest)
07:33:53.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testCopy
07:33:53.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.MedianTest)
07:33:53.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testEvaluation

07:33:53.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.rank.MedianTest)
07:33:53.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.MedianTest, MethodName: testWeightedConsistency

07:33:53.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:33:53.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.inference.MannWhitneyUTestTest
07:33:53.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:33:53.680 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.MannWhitneyUTestTest, MethodName: testMannWhitneyUInputValidation, DisplayName: testMannWhitneyUInputValidation(org.apache.commons.math.stat.inference.MannWhitneyUTestTest)
07:33:53.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.MannWhitneyUTestTest, MethodName: testMannWhitneyUInputValidation
07:33:53.681 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.MannWhitneyUTestTest, MethodName: testMannWhitneyUSimple, DisplayName: testMannWhitneyUSimple(org.apache.commons.math.stat.inference.MannWhitneyUTestTest)
07:33:53.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.MannWhitneyUTestTest, MethodName: testMannWhitneyUSimple
07:33:53.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:33:53.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:33:53.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.optimization.direct.CMAESOptimizerTest
07:33:53.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 21
07:33:53.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:53.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testConstrainedRosen, DisplayName: testConstrainedRosen(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:33:53.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:54.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testConstrainedRosen

07:33:54.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testElliRotated, DisplayName: testElliRotated(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:33:54.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:55.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testElliRotated

07:33:55.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testEllipse, DisplayName: testEllipse(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:33:55.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:56.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testEllipse

07:33:56.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testTwoAxes, DisplayName: testTwoAxes(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:33:56.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:58.413 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testTwoAxes

07:33:58.414 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testCigar, DisplayName: testCigar(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:33:58.426 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:59.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testCigar

07:33:59.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testRosen, DisplayName: testRosen(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:33:59.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:59.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testRosen

07:33:59.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInitOutofbounds, DisplayName: testInitOutofbounds(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:33:59.987 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:59.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInitOutofbounds
07:33:59.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:59.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaOutOfRange, DisplayName: testInputSigmaOutOfRange(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:33:59.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:59.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaOutOfRange
07:33:59.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:59.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaNegative, DisplayName: testInputSigmaNegative(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:33:59.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:59.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaNegative
07:33:59.988 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:59.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaDimensionMismatch, DisplayName: testInputSigmaDimensionMismatch(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:33:59.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:59.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testInputSigmaDimensionMismatch
07:33:59.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:59.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testBoundariesNoData, DisplayName: testBoundariesNoData(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:33:59.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:59.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testBoundariesNoData
07:33:59.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:33:59.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testRastrigin, DisplayName: testRastrigin(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:33:59.989 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:08.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testRastrigin

07:34:08.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testDiagonalRosen, DisplayName: testDiagonalRosen(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:34:08.082 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:09.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testDiagonalRosen

07:34:09.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testSsDiffPow, DisplayName: testSsDiffPow(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:34:09.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:10.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testSsDiffPow

07:34:10.924 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testMaximize, DisplayName: testMaximize(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
* Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testMaximize
* Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testAckley, DisplayName: testAckley(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:34:11.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testAckley
07:34:11.424 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:11.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testCigTab, DisplayName: testCigTab(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:34:11.425 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:12.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testCigTab
07:34:12.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:12.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testDiffPow, DisplayName: testDiffPow(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)

07:34:12.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testDiffPow

07:34:12.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testBoundariesDimensionMismatch, DisplayName: testBoundariesDimensionMismatch(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:34:12.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:12.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testBoundariesDimensionMismatch
07:34:12.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:12.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testSphere, DisplayName: testSphere(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:34:12.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:12.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testSphere

07:34:12.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testTablet, DisplayName: testTablet(org.apache.commons.math.optimization.direct.CMAESOptimizerTest)
07:34:12.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.CMAESOptimizerTest, MethodName: testTablet

07:34:13.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 21
TestResult: 0
 Run JUnit Test: org.apache.commons.math.filter.KalmanFilterTest
Number of testcases to execute : 1
* Started : ClasseName: org.apache.commons.math.filter.KalmanFilterTest, MethodName: testConstant, DisplayName: testConstant(org.apache.commons.math.filter.KalmanFilterTest)
* Finished : ClasseName: org.apache.commons.math.filter.KalmanFilterTest, MethodName: testConstant
Number of testcases executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.regression.SimpleRegressionTest
Number of testcases to execute : 16
* Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultiplePastEmpty, DisplayName: testRemoveMultiplePastEmpty(org.apache.commons.math.stat.regression.SimpleRegressionTest)
* Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultiplePastEmpty
* Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest,
07:34:13.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  MethodName: testClear, DisplayName: testClear(org.apache.commons.math.stat.regression.SimpleRegressionTest)
* Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testClear
* Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testCorr, DisplayName: testCorr(org.apache.commons.math.stat.regression.SimpleRegressionTest)
* Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testCorr
* Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNaNs, DisplayName: testNaNs(org.apache.commons.math.stat.regression.SimpleRegressionTest)
* Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNaNs
* Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfect, DisplayName: testPerfect(org.apache.commons.math.stat.regression.SimpleRegressionTest)
* Finish
07:34:13.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - ed : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfect
* Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveObsFromEmpty, DisplayName: testRemoveObsFromEmpty(org.apache.commons.math.stat.regression.SimpleRegressionTest)
* Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveObsFromEmpty
* Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testSSENonNegative, DisplayName: testSSENonNegative(org.apache.commons.math.stat.regression.SimpleRegressionTest)
* Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testSSENonNegative
* Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveObsFromSingle, DisplayName: testRemoveObsFromSingle(org.apache.commons.math.stat.regression.SimpleRegressionTest)
* Finished : ClasseName: or
07:34:13.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - g.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveObsFromSingle
* Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultipleToEmpty, DisplayName: testRemoveMultipleToEmpty(org.apache.commons.math.stat.regression.SimpleRegressionTest)
* Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultipleToEmpty
* Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveSingle, DisplayName: testRemoveSingle(org.apache.commons.math.stat.regression.SimpleRegressionTest)

07:34:13.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveSingle

07:34:13.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveXY, DisplayName: testRemoveXY(org.apache.commons.math.stat.regression.SimpleRegressionTest)
07:34:13.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveXY
07:34:13.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfectNegative, DisplayName: testPerfectNegative(org.apache.commons.math.stat.regression.SimpleRegressionTest)
07:34:13.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testPerfectNegative
07:34:13.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNorris, DisplayName: testNorris(org.apache.commons.math.stat.regression.SimpleRegressionTest)
07:34:13.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testNorris
07:34:13.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testInference, DisplayName: testInference(org.apache.commons.math.stat.regression.SimpleRegressionTest)
07:34:13.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testInference
07:34:13.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRandom, DisplayName: testRandom(org.apache.commons.math.stat.regression.SimpleRegressionTest)
07:34:13.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRandom
07:34:13.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultiple, DisplayName: testRemoveMultiple(org.apache.commons.math.stat.regression.SimpleRegressionTest)
07:34:13.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.SimpleRegressionTest, MethodName: testRemoveMultiple
07:34:13.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 16
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest
Number of testcases to execute : 7

07:34:13.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMath283, DisplayName: testMath283(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)

07:34:13.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMath283

07:34:13.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMaximize1, DisplayName: testMaximize1(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)
07:34:13.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMaximize1
07:34:13.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMaximize2, DisplayName: testMaximize2(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)
07:34:13.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMaximize2
07:34:13.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testRosenbrock, DisplayName: testRosenbrock(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)
07:34:13.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testRosenbrock
07:34:13.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMinimize1, DisplayName: testMinimize1(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)
07:34:13.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMinimize1
07:34:13.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMinimize2, DisplayName: testMinimize2(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)
07:34:13.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testMinimize2
07:34:13.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testPowell, DisplayName: testPowell(org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest)
07:34:13.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, MethodName: testPowell
07:34:13.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
07:34:13.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:13.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.SparseRealMatrixTest
07:34:13.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 27
07:34:13.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testOperate, DisplayName: testOperate(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testOperate
07:34:13.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testExamples, DisplayName: testExamples(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testExamples
07:34:13.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetEntry, DisplayName: testGetEntry(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetEntry
07:34:13.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testAddFail, DisplayName: testAddFail(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testAddFail
07:34:13.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testAdd
07:34:13.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testScalarAdd, DisplayName: testScalarAdd(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testScalarAdd
07:34:13.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testTrace, DisplayName: testTrace(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testTrace
07:34:13.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testNorm
07:34:13.656 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testToString
07:34:13.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPlusMinus, DisplayName: testPlusMinus(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPlusMinus
07:34:13.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMultiply2, DisplayName: testMultiply2(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMultiply2
07:34:13.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testDimensions
07:34:13.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSubMatrix, DisplayName: testSubMatrix(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSubMatrix
07:34:13.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPremultiplyVector, DisplayName: testPremultiplyVector(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPremultiplyVector
07:34:13.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testCopyFunctions, DisplayName: testCopyFunctions(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testCopyFunctions
07:34:13.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMath209, DisplayName: testMath209(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMath209
07:34:13.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetVectors, DisplayName: testGetVectors(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetVectors
07:34:13.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetColumnMatrix, DisplayName: testGetColumnMatrix(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetColumnMatrix
07:34:13.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetColumnVector, DisplayName: testGetColumnVector(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetColumnVector
07:34:13.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testMultiply
07:34:13.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testEqualsAndHashCode
07:34:13.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSerial
07:34:13.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testTranspose, DisplayName: testTranspose(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testTranspose
07:34:13.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPremultiply, DisplayName: testPremultiply(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testPremultiply
07:34:13.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetRowMatrix, DisplayName: testGetRowMatrix(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetRowMatrix
07:34:13.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSetSubMatrix, DisplayName: testSetSubMatrix(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testSetSubMatrix
07:34:13.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetRowVector, DisplayName: testGetRowVector(org.apache.commons.math.linear.SparseRealMatrixTest)
07:34:13.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseRealMatrixTest, MethodName: testGetRowVector
07:34:13.666 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 27
07:34:13.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:34:13.667 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest

07:34:13.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
07:34:13.669 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testPercentileSetter, DisplayName: testPercentileSetter(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
07:34:13.670 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testPercentileSetter
07:34:13.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: test20090720, DisplayName: test20090720(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
07:34:13.671 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: test20090720
07:34:13.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
07:34:13.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testCopy
07:34:13.672 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
07:34:13.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testToString
07:34:13.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testShuffledStatistics, DisplayName: testShuffledStatistics(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
07:34:13.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testShuffledStatistics
07:34:13.673 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
07:34:13.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testSetterInjection

07:34:13.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testRemoval, DisplayName: testRemoval(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
07:34:13.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testRemoval
07:34:13.674 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testWindowSize, DisplayName: testWindowSize(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
07:34:13.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testWindowSize
07:34:13.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testGetValues, DisplayName: testGetValues(org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest)
07:34:13.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, MethodName: testGetValues
07:34:13.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
07:34:13.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:13.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest
07:34:13.675 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12
07:34:13.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
07:34:13.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testNaN
07:34:13.678 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testPopulation, DisplayName: testPopulation(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
07:34:13.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testPopulation
07:34:13.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
07:34:13.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testMomentSmallSamples
07:34:13.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
07:34:13.679 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testSerialization
07:34:13.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
07:34:13.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testIncrementation
07:34:13.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
07:34:13.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testConsistency
07:34:13.682 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
07:34:13.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEqualsAndHashCode
07:34:13.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
07:34:13.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testCopyConsistency
07:34:13.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
07:34:13.683 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testSerial
07:34:13.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
07:34:13.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testCopy
07:34:13.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
07:34:13.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testEvaluation
07:34:13.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest)
07:34:13.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, MethodName: testWeightedConsistency

07:34:13.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
07:34:13.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:13.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest
07:34:13.685 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17
07:34:13.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testHdiagConstant, DisplayName: testHdiagConstant(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.752 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testHdiagConstant

07:34:13.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testRegressAirlineConstantInternal, DisplayName: testRegressAirlineConstantInternal(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.753 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testRegressAirlineConstantInternal
07:34:13.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testHdiag, DisplayName: testHdiag(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.755 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testHdiag
07:34:13.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testPCorr, DisplayName: testPCorr(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testPCorr
07:34:13.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testOneRedundantColumn, DisplayName: testOneRedundantColumn(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testOneRedundantColumn
07:34:13.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testThreeRedundantColumn, DisplayName: testThreeRedundantColumn(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testThreeRedundantColumn
07:34:13.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testNegativeTestAddObs, DisplayName: testNegativeTestAddObs(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testNegativeTestAddObs
07:34:13.787 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testSubsetRegression, DisplayName: testSubsetRegression(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.788 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testSubsetRegression
07:34:13.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testRegressAirlineConstantExternal, DisplayName: testRegressAirlineConstantExternal(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.789 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testRegressAirlineConstantExternal
07:34:13.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testHasIntercept, DisplayName: testHasIntercept(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testHasIntercept
07:34:13.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testAddObsGetNClear, DisplayName: testAddObsGetNClear(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.790 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testAddObsGetNClear
07:34:13.791 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testWampler1, DisplayName: testWampler1(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testWampler1
07:34:13.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testWampler2, DisplayName: testWampler2(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.792 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testWampler2
07:34:13.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testWampler3, DisplayName: testWampler3(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testWampler3
07:34:13.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testFilippelli, DisplayName: testFilippelli(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.793 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testFilippelli
07:34:13.795 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testLongly, DisplayName: testLongly(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testLongly
07:34:13.796 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testNegativeTestAddMultipleObs, DisplayName: testNegativeTestAddMultipleObs(org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest)
07:34:13.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest, MethodName: testNegativeTestAddMultipleObs
07:34:13.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
07:34:13.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:13.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.797 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest

07:34:13.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:34:13.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)
07:34:13.798 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, MethodName: derivativesConsistency

07:34:13.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest)
07:34:13.817 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, MethodName: serialization
07:34:13.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:34:13.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:13.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.830 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest

07:34:13.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
07:34:13.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testInsufficientData, DisplayName: testInsufficientData(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
07:34:13.832 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testInsufficientData
07:34:13.834 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testVarianceDecompNonMeanCutoff, DisplayName: testVarianceDecompNonMeanCutoff(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
07:34:13.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testVarianceDecompNonMeanCutoff

07:34:13.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testNoVariance, DisplayName: testNoVariance(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
07:34:13.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testNoVariance
07:34:13.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSingleDown, DisplayName: testSingleDown(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
07:34:13.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSingleDown
07:34:13.835 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testNonMeanCutoffs, DisplayName: testNonMeanCutoffs(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
07:34:13.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testNonMeanCutoffs
07:34:13.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSingleUp, DisplayName: testSingleUp(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
07:34:13.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSingleUp
07:34:13.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testPopulation, DisplayName: testPopulation(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
07:34:13.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testPopulation
07:34:13.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testVarianceDecompMeanCutoff, DisplayName: testVarianceDecompMeanCutoff(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
07:34:13.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testVarianceDecompMeanCutoff
07:34:13.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSample, DisplayName: testSample(org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest)
07:34:13.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, MethodName: testSample
07:34:13.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
07:34:13.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:13.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.EigenSolverTest
07:34:13.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:34:13.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.EigenSolverTest)
07:34:13.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testSolve
07:34:13.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.EigenSolverTest)
07:34:13.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testSolveDimensionErrors
07:34:13.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testNonInvertible, DisplayName: testNonInvertible(org.apache.commons.math.linear.EigenSolverTest)
07:34:13.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testNonInvertible
07:34:13.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testInvertible, DisplayName: testInvertible(org.apache.commons.math.linear.EigenSolverTest)
07:34:13.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenSolverTest, MethodName: testInvertible
07:34:13.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:34:13.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:13.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.KurtosisTest
07:34:13.843 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
07:34:13.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
07:34:13.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testNaN
07:34:13.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
07:34:13.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testMomentSmallSamples

07:34:13.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
07:34:13.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testSerialization
07:34:13.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
07:34:13.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testIncrementation
07:34:13.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
07:34:13.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testConsistency
07:34:13.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
07:34:13.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEqualsAndHashCode
07:34:13.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
07:34:13.849 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testCopyConsistency
07:34:13.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
07:34:13.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testSerial
07:34:13.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
07:34:13.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testCopy
07:34:13.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
07:34:13.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testEvaluation
07:34:13.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.KurtosisTest)
07:34:13.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.KurtosisTest, MethodName: testWeightedConsistency
07:34:13.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
07:34:13.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:13.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest
07:34:13.852 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
07:34:13.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)
07:34:13.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testDimensionCheck
07:34:13.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)
07:34:13.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testBackward
07:34:13.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)
07:34:13.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testSmallStep
07:34:13.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)
07:34:13.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testDecreasingSteps
07:34:13.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)
07:34:13.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testBigStep
07:34:13.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.EulerIntegratorTest)
07:34:13.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, MethodName: testStepSize
07:34:13.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
07:34:13.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest
07:34:13.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
07:34:13.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)
07:34:13.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testBackward
07:34:13.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testWrongDerivative, DisplayName: testWrongDerivative(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)
07:34:13.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testWrongDerivative
07:34:13.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)
07:34:13.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testMinStep
07:34:13.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.879 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEvents, DisplayName: testEvents(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)
07:34:13.879 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEvents
07:34:13.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEventsErrors, DisplayName: testEventsErrors(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)
07:34:13.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEventsErrors
07:34:13.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)
07:34:13.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testKepler
07:34:13.921 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)
07:34:13.922 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testIncreasingTolerance
07:34:13.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEventsNoConvergence, DisplayName: testEventsNoConvergence(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)
07:34:13.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testEventsNoConvergence
07:34:13.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testSanityChecks, DisplayName: testSanityChecks(org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest)
07:34:13.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, MethodName: testSanityChecks
07:34:13.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
07:34:13.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:13.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.QRDecompositionImplTest
07:34:13.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
07:34:13.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testAEqualQR, DisplayName: testAEqualQR(org.apache.commons.math.linear.QRDecompositionImplTest)
07:34:13.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testAEqualQR
07:34:13.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.962 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testMatricesValues, DisplayName: testMatricesValues(org.apache.commons.math.linear.QRDecompositionImplTest)
07:34:13.962 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.962 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testMatricesValues
07:34:13.962 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.962 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.QRDecompositionImplTest)
07:34:13.962 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testDimensions
07:34:13.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testRUpperTriangular, DisplayName: testRUpperTriangular(org.apache.commons.math.linear.QRDecompositionImplTest)
07:34:13.986 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testRUpperTriangular
07:34:13.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:13.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testQOrthogonal, DisplayName: testQOrthogonal(org.apache.commons.math.linear.QRDecompositionImplTest)
07:34:13.991 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testQOrthogonal
07:34:14.016 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testHTrapezoidal, DisplayName: testHTrapezoidal(org.apache.commons.math.linear.QRDecompositionImplTest)
07:34:14.017 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRDecompositionImplTest, MethodName: testHTrapezoidal
07:34:14.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
07:34:14.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:14.022 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest

07:34:14.023 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:34:14.023 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.024 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest)
07:34:14.024 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testPlane

07:34:14.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testWave, DisplayName: testWave(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest)
07:34:14.038 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testWave
07:34:14.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest)
07:34:14.048 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, MethodName: testPreconditions
07:34:14.055 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:34:14.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.CertifiedDataTest
07:34:14.056 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:34:14.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testSummaryStatistics, DisplayName: testSummaryStatistics(org.apache.commons.math.stat.CertifiedDataTest)
07:34:14.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testSummaryStatistics
07:34:14.071 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testDescriptiveStatistics, DisplayName: testDescriptiveStatistics(org.apache.commons.math.stat.CertifiedDataTest)
07:34:14.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.CertifiedDataTest, MethodName: testDescriptiveStatistics
07:34:14.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:34:14.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:14.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest

07:34:14.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:34:14.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
07:34:14.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSerialization
07:34:14.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
07:34:14.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testStats
07:34:14.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
07:34:14.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testToString
07:34:14.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
07:34:14.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testNaNContracts
07:34:14.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
07:34:14.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testN0andN1Conditions
07:34:14.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testShuffledStatistics, DisplayName: testShuffledStatistics(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
07:34:14.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testShuffledStatistics
07:34:14.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testDimension, DisplayName: testDimension(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
07:34:14.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testDimension
07:34:14.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
07:34:14.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterInjection
07:34:14.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterIllegalState, DisplayName: testSetterIllegalState(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
07:34:14.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testSetterIllegalState
07:34:14.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest)
07:34:14.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, MethodName: testEqualsAndHashCode
07:34:14.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
07:34:14.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:14.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.exception.NumberIsTooLargeExceptionTest
07:34:14.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:34:14.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NumberIsTooLargeExceptionTest)
07:34:14.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, MethodName: testAccessors
07:34:14.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:34:14.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest
07:34:14.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:34:14.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMaxIterations, DisplayName: testMaxIterations(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)
07:34:14.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMaxIterations
07:34:14.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMaximize1, DisplayName: testMaximize1(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)
07:34:14.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMaximize1
07:34:14.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMaximize2, DisplayName: testMaximize2(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)
07:34:14.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMaximize2
07:34:14.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testRosenbrock, DisplayName: testRosenbrock(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)
07:34:14.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testRosenbrock
07:34:14.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares1, DisplayName: testLeastSquares1(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)
07:34:14.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares1
07:34:14.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares2, DisplayName: testLeastSquares2(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)
07:34:14.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.111 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares2
07:34:14.111 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.111 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares3, DisplayName: testLeastSquares3(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)
07:34:14.111 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testLeastSquares3
07:34:14.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMinimize1, DisplayName: testMinimize1(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)
07:34:14.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMinimize1
07:34:14.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMinimize2, DisplayName: testMinimize2(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)
07:34:14.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testMinimize2
07:34:14.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testPowell, DisplayName: testPowell(org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest)
07:34:14.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, MethodName: testPowell
07:34:14.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
07:34:14.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest
07:34:14.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12
07:34:14.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testNoDependency, DisplayName: testNoDependency(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)
07:34:14.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testNoDependency
07:34:14.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testRedundantEquations, DisplayName: testRedundantEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)
07:34:14.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testRedundantEquations
07:34:14.119 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testTrivial, DisplayName: testTrivial(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)
07:34:14.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testTrivial
07:34:14.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testTwoSets, DisplayName: testTwoSets(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)
07:34:14.120 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.121 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testTwoSets
07:34:14.121 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.121 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testMoreEstimatedParametersSimple, DisplayName: testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)
07:34:14.121 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.121 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testMoreEstimatedParametersSimple
07:34:14.121 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted, DisplayName: testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)
07:34:14.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted
07:34:14.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testIllConditioned, DisplayName: testIllConditioned(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)
07:34:14.122 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testIllConditioned
07:34:14.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testColumnsPermutation, DisplayName: testColumnsPermutation(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)
07:34:14.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testColumnsPermutation
07:34:14.123 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testNonInversible, DisplayName: testNonInversible(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)
07:34:14.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testNonInversible
07:34:14.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testInconsistentEquations, DisplayName: testInconsistentEquations(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)
07:34:14.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testInconsistentEquations
07:34:14.124 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.125 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testCircleFitting, DisplayName: testCircleFitting(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)
07:34:14.125 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.126 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testCircleFitting
07:34:14.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testOneSet, DisplayName: testOneSet(org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest)
07:34:14.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, MethodName: testOneSet
07:34:14.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
07:34:14.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:14.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest
07:34:14.127 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 16
07:34:14.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testNoDependency, DisplayName: testNoDependency(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testNoDependency
07:34:14.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testInconsistentSizes, DisplayName: testInconsistentSizes(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testInconsistentSizes
07:34:14.132 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testRedundantEquations, DisplayName: testRedundantEquations(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testRedundantEquations
07:34:14.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testTrivial, DisplayName: testTrivial(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testTrivial
07:34:14.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testQRColumnsPermutation, DisplayName: testQRColumnsPermutation(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.133 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testQRColumnsPermutation
07:34:14.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testTwoSets, DisplayName: testTwoSets(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testTwoSets
07:34:14.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMoreEstimatedParametersSimple, DisplayName: testMoreEstimatedParametersSimple(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMoreEstimatedParametersSimple
07:34:14.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted, DisplayName: testMoreEstimatedParametersUnsorted(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMoreEstimatedParametersUnsorted
07:34:14.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testIllConditioned, DisplayName: testIllConditioned(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testIllConditioned
07:34:14.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMath199, DisplayName: testMath199(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testMath199
07:34:14.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testNonInvertible, DisplayName: testNonInvertible(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.136 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testNonInvertible
07:34:14.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testInconsistentEquations, DisplayName: testInconsistentEquations(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testInconsistentEquations
07:34:14.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testCircleFitting, DisplayName: testCircleFitting(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.137 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testCircleFitting
07:34:14.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.141 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testControlParameters, DisplayName: testControlParameters(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testControlParameters
07:34:14.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testOneSet, DisplayName: testOneSet(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.142 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testOneSet
07:34:14.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testCircleFittingBadInit, DisplayName: testCircleFittingBadInit(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest)
07:34:14.143 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, MethodName: testCircleFittingBadInit
07:34:14.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 16
07:34:14.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.SparseFieldVectorTest
07:34:14.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:34:14.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.linear.SparseFieldVectorTest)
07:34:14.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testMisc
07:34:14.151 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testBasicFunctions, DisplayName: testBasicFunctions(org.apache.commons.math.linear.SparseFieldVectorTest)
07:34:14.152 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testBasicFunctions
07:34:14.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testPredicates, DisplayName: testPredicates(org.apache.commons.math.linear.SparseFieldVectorTest)
07:34:14.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testPredicates
07:34:14.153 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testMapFunctions, DisplayName: testMapFunctions(org.apache.commons.math.linear.SparseFieldVectorTest)
07:34:14.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testMapFunctions
07:34:14.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testOuterProduct, DisplayName: testOuterProduct(org.apache.commons.math.linear.SparseFieldVectorTest)
07:34:14.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SparseFieldVectorTest, MethodName: testOuterProduct
07:34:14.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:34:14.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:14.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.155 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.fraction.BigFractionFormatTest

07:34:14.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 19
07:34:14.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testNumeratorFormat, DisplayName: testNumeratorFormat(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.159 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testNumeratorFormat
07:34:14.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatImproperNegative, DisplayName: testFormatImproperNegative(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatImproperNegative
07:34:14.161 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testLongFormat, DisplayName: testLongFormat(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testLongFormat
07:34:14.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatImproper, DisplayName: testFormatImproper(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatImproper
07:34:14.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProper, DisplayName: testParseProper(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProper
07:34:14.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProperNegative, DisplayName: testParseProperNegative(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProperNegative
07:34:14.163 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParse, DisplayName: testParse(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParse
07:34:14.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testWholeFormat, DisplayName: testWholeFormat(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testWholeFormat
07:34:14.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatZero, DisplayName: testFormatZero(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatZero
07:34:14.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatNegative, DisplayName: testFormatNegative(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormatNegative
07:34:14.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInvalidDenominator, DisplayName: testParseInvalidDenominator(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInvalidDenominator
07:34:14.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testDenominatorFormat, DisplayName: testDenominatorFormat(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testDenominatorFormat
07:34:14.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProperInvalidMinus, DisplayName: testParseProperInvalidMinus(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.166 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseProperInvalidMinus
07:34:14.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInteger, DisplayName: testParseInteger(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInteger
07:34:14.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInvalid, DisplayName: testParseInvalid(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseInvalid
07:34:14.167 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormat, DisplayName: testFormat(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testFormat
07:34:14.168 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testDoubleFormat, DisplayName: testDoubleFormat(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testDoubleFormat
07:34:14.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseBig, DisplayName: testParseBig(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.169 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseBig
07:34:14.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseNegative, DisplayName: testParseNegative(org.apache.commons.math.fraction.BigFractionFormatTest)
07:34:14.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.fraction.BigFractionFormatTest, MethodName: testParseNegative
07:34:14.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 19
07:34:14.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:14.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.171 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest

07:34:14.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:34:14.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, MethodName: testRosenbrock, DisplayName: testRosenbrock(org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest)
07:34:14.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, MethodName: testRosenbrock
07:34:14.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:34:14.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:14.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest
07:34:14.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:34:14.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest)
07:34:14.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, MethodName: testAccessors
07:34:14.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:34:14.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:14.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.util.OpenIntToFieldTest
07:34:14.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 17
07:34:14.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAbsentOnExisting, DisplayName: testPutAbsentOnExisting(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.201 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAbsentOnExisting
07:34:14.201 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutKeysWithCollision2, DisplayName: testPutKeysWithCollision2(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutKeysWithCollision2
07:34:14.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutKeysWithCollisions, DisplayName: testPutKeysWithCollisions(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutKeysWithCollisions
07:34:14.202 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testCopy
07:34:14.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testContainsKey, DisplayName: testContainsKey(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.203 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testContainsKey
07:34:14.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemoveAbsent, DisplayName: testRemoveAbsent(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.220 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemoveAbsent
07:34:14.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGet, DisplayName: testPutAndGet(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGet
07:34:14.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGetWith0ExpectedSize, DisplayName: testPutAndGetWith0ExpectedSize(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGetWith0ExpectedSize
07:34:14.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemove2, DisplayName: testRemove2(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemove2
07:34:14.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testConcurrentModification, DisplayName: testConcurrentModification(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testConcurrentModification
07:34:14.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testGetAbsent, DisplayName: testGetAbsent(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testGetAbsent
07:34:14.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testGetFromEmpty, DisplayName: testGetFromEmpty(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.257 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testGetFromEmpty
07:34:14.257 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.257 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutOnExisting, DisplayName: testPutOnExisting(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.257 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.257 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutOnExisting
07:34:14.257 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemove, DisplayName: testRemove(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemove
07:34:14.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testIterator, DisplayName: testIterator(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.259 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testIterator
07:34:14.259 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.259 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGetWithExpectedSize, DisplayName: testPutAndGetWithExpectedSize(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.259 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testPutAndGetWithExpectedSize
07:34:14.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemoveFromEmpty, DisplayName: testRemoveFromEmpty(org.apache.commons.math.util.OpenIntToFieldTest)
07:34:14.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.OpenIntToFieldTest, MethodName: testRemoveFromEmpty
07:34:14.260 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 17
07:34:14.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.SingularValueDecompositionImplTest
07:34:14.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.263 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12
07:34:14.263 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.263 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testUOrthogonal, DisplayName: testUOrthogonal(org.apache.commons.math.linear.SingularValueDecompositionImplTest)
07:34:14.263 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testUOrthogonal
07:34:14.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testRank, DisplayName: testRank(org.apache.commons.math.linear.SingularValueDecompositionImplTest)
07:34:14.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testRank
07:34:14.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testMoreColumns, DisplayName: testMoreColumns(org.apache.commons.math.linear.SingularValueDecompositionImplTest)
07:34:14.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.264 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testMoreColumns
07:34:14.265 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.265 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.SingularValueDecompositionImplTest)
07:34:14.265 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.265 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testDimensions
07:34:14.265 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.265 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testConditionNumber, DisplayName: testConditionNumber(org.apache.commons.math.linear.SingularValueDecompositionImplTest)
07:34:14.265 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.265 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testConditionNumber
07:34:14.265 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testAEqualUSVt, DisplayName: testAEqualUSVt(org.apache.commons.math.linear.SingularValueDecompositionImplTest)
07:34:14.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testAEqualUSVt
07:34:14.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testStability1, DisplayName: testStability1(org.apache.commons.math.linear.SingularValueDecompositionImplTest)
07:34:14.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.836 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testStability1

07:34:14.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testStability2, DisplayName: testStability2(org.apache.commons.math.linear.SingularValueDecompositionImplTest)
07:34:14.837 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testStability2
07:34:14.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testInverseConditionNumber, DisplayName: testInverseConditionNumber(org.apache.commons.math.linear.SingularValueDecompositionImplTest)
07:34:14.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testInverseConditionNumber
07:34:14.839 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testHadamard, DisplayName: testHadamard(org.apache.commons.math.linear.SingularValueDecompositionImplTest)
07:34:14.840 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testHadamard
07:34:14.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testMoreRows, DisplayName: testMoreRows(org.apache.commons.math.linear.SingularValueDecompositionImplTest)
07:34:14.841 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testMoreRows
07:34:14.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testVOrthogonal, DisplayName: testVOrthogonal(org.apache.commons.math.linear.SingularValueDecompositionImplTest)
07:34:14.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.SingularValueDecompositionImplTest, MethodName: testVOrthogonal
07:34:14.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
07:34:14.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:14.842 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.function.StepFunctionTest

07:34:14.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:34:14.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.StepFunctionTest)
07:34:14.844 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testSomeValues
07:34:14.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions1, DisplayName: testPreconditions1(org.apache.commons.math.analysis.function.StepFunctionTest)
07:34:14.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions1
07:34:14.845 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions2, DisplayName: testPreconditions2(org.apache.commons.math.analysis.function.StepFunctionTest)
07:34:14.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions2
07:34:14.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions3, DisplayName: testPreconditions3(org.apache.commons.math.analysis.function.StepFunctionTest)
07:34:14.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions3
07:34:14.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions4, DisplayName: testPreconditions4(org.apache.commons.math.analysis.function.StepFunctionTest)
07:34:14.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions4
07:34:14.846 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions5, DisplayName: testPreconditions5(org.apache.commons.math.analysis.function.StepFunctionTest)
07:34:14.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions5
07:34:14.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions6, DisplayName: testPreconditions6(org.apache.commons.math.analysis.function.StepFunctionTest)
07:34:14.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testPreconditions6
07:34:14.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.847 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testHeaviside, DisplayName: testHeaviside(org.apache.commons.math.analysis.function.StepFunctionTest)
07:34:14.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.StepFunctionTest, MethodName: testHeaviside

07:34:14.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:34:14.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:14.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.correlation.StorelessCovarianceTest
07:34:14.848 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
07:34:14.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglySimpleCov, DisplayName: testLonglySimpleCov(org.apache.commons.math.stat.correlation.StorelessCovarianceTest)
07:34:14.850 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglySimpleCov
07:34:14.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglySimpleVar, DisplayName: testLonglySimpleVar(org.apache.commons.math.stat.correlation.StorelessCovarianceTest)
07:34:14.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglySimpleVar
07:34:14.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglyByEntry, DisplayName: testLonglyByEntry(org.apache.commons.math.stat.correlation.StorelessCovarianceTest)
07:34:14.851 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglyByEntry
07:34:14.853 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testSwissFertilityByEntry, DisplayName: testSwissFertilityByEntry(org.apache.commons.math.stat.correlation.StorelessCovarianceTest)
07:34:14.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.854 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testSwissFertilityByEntry
07:34:14.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testSwissFertilityByRow, DisplayName: testSwissFertilityByRow(org.apache.commons.math.stat.correlation.StorelessCovarianceTest)
07:34:14.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testSwissFertilityByRow
07:34:14.855 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglyByRow, DisplayName: testLonglyByRow(org.apache.commons.math.stat.correlation.StorelessCovarianceTest)
07:34:14.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.correlation.StorelessCovarianceTest, MethodName: testLonglyByRow
07:34:14.856 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
07:34:14.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
07:34:14.857 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.858 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:34:14.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.859 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
* Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testMomentSmallSamples
* Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)

07:34:14.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testSerialization
07:34:14.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
07:34:14.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testIncrementation
07:34:14.860 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
07:34:14.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testConsistency
07:34:14.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
07:34:14.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEqualsAndHashCode
07:34:14.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
07:34:14.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testCopyConsistency
07:34:14.861 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
07:34:14.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testSerial
07:34:14.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
07:34:14.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testCopy
07:34:14.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.862 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
07:34:14.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testEvaluation

07:34:14.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.SecondMomentTest)
07:34:14.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, MethodName: testWeightedConsistency

07:34:14.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
07:34:14.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:14.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest
07:34:14.863 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:34:14.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)
07:34:14.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testMomentSmallSamples
07:34:14.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)
07:34:14.865 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testSerialization
07:34:14.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)
07:34:14.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testIncrementation
07:34:14.867 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)
07:34:14.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testConsistency
07:34:14.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)
07:34:14.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEqualsAndHashCode
07:34:14.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)
07:34:14.868 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testCopyConsistency
07:34:14.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)
07:34:14.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testSerial
07:34:14.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)
07:34:14.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testCopy
07:34:14.869 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)
07:34:14.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testEvaluation
07:34:14.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.FourthMomentTest)
07:34:14.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, MethodName: testWeightedConsistency
07:34:14.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
07:34:14.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:14.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.870 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest

07:34:14.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
07:34:14.871 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testPercentileSetter, DisplayName: testPercentileSetter(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
07:34:14.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testPercentileSetter
07:34:14.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: test20090720, DisplayName: test20090720(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
07:34:14.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: test20090720
07:34:14.872 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
07:34:14.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testCopy
07:34:14.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testToString, DisplayName: testToString(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
07:34:14.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testToString
07:34:14.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testShuffledStatistics, DisplayName: testShuffledStatistics(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
07:34:14.873 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testShuffledStatistics
07:34:14.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
07:34:14.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testSetterInjection
07:34:14.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testRemoval, DisplayName: testRemoval(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
07:34:14.874 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testRemoval
07:34:14.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testWindowSize, DisplayName: testWindowSize(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
07:34:14.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testWindowSize
07:34:14.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testGetValues, DisplayName: testGetValues(org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest)
07:34:14.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, MethodName: testGetValues
07:34:14.875 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
07:34:14.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.ListPopulationTest
07:34:14.876 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:34:14.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.ListPopulationTest, MethodName: testGetFittestChromosome, DisplayName: testGetFittestChromosome(org.apache.commons.math.genetics.ListPopulationTest)
07:34:14.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.ListPopulationTest, MethodName: testGetFittestChromosome
07:34:14.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:34:14.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:14.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.rank.PercentileTest
07:34:14.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12

07:34:14.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testPercentile, DisplayName: testPercentile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
07:34:14.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testPercentile
07:34:14.880 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNISTExample, DisplayName: testNISTExample(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
07:34:14.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNISTExample
07:34:14.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSingleton, DisplayName: testSingleton(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
07:34:14.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSingleton
07:34:14.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testLowPercentile, DisplayName: testLowPercentile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
07:34:14.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testLowPercentile
07:34:14.881 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSetQuantile, DisplayName: testSetQuantile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
07:34:14.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSetQuantile
07:34:14.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: test5, DisplayName: test5(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
07:34:14.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: test5
07:34:14.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testHighPercentile, DisplayName: testHighPercentile(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
07:34:14.882 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testHighPercentile
07:34:14.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
07:34:14.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testSpecialValues
07:34:14.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNullEmpty, DisplayName: testNullEmpty(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
07:34:14.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testNullEmpty
07:34:14.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
07:34:14.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testCopy
07:34:14.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
07:34:14.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testEvaluation
07:34:14.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.rank.PercentileTest)
07:34:14.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.rank.PercentileTest, MethodName: testWeightedConsistency
07:34:14.884 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
07:34:14.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:34:14.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.RandomAdaptorTest

07:34:14.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:34:14.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.886 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testAdaptor, DisplayName: testAdaptor(org.apache.commons.math.random.RandomAdaptorTest)
07:34:14.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomAdaptorTest, MethodName: testAdaptor
07:34:14.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:34:14.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:14.887 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest

07:34:14.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:34:14.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testSimplistic, DisplayName: testSimplistic(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)
07:34:14.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testSimplistic
07:34:14.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testBasicStats, DisplayName: testBasicStats(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)
07:34:14.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testBasicStats
07:34:14.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testMismatch, DisplayName: testMismatch(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)
07:34:14.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testMismatch
07:34:14.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest)
07:34:14.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, MethodName: testSerial
07:34:14.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:34:14.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.QRSolverTest
07:34:14.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 6
07:34:14.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testOverdetermined, DisplayName: testOverdetermined(org.apache.commons.math.linear.QRSolverTest)
07:34:14.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testOverdetermined

07:34:14.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolve, DisplayName: testSolve(org.apache.commons.math.linear.QRSolverTest)
07:34:14.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolve
07:34:14.930 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testRank, DisplayName: testRank(org.apache.commons.math.linear.QRSolverTest)
07:34:14.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testRank
07:34:14.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolveRankErrors, DisplayName: testSolveRankErrors(org.apache.commons.math.linear.QRSolverTest)
07:34:14.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolveRankErrors
07:34:14.931 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolveDimensionErrors, DisplayName: testSolveDimensionErrors(org.apache.commons.math.linear.QRSolverTest)
07:34:14.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testSolveDimensionErrors
07:34:14.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testUnderdetermined, DisplayName: testUnderdetermined(org.apache.commons.math.linear.QRSolverTest)
07:34:14.932 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.QRSolverTest, MethodName: testUnderdetermined
07:34:14.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 6
07:34:14.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:34:14.953 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest

07:34:14.955 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 18
07:34:14.955 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testConstrainedRosen, DisplayName: testConstrainedRosen(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:14.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:14.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
07:34:14.956 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:16.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen END

07:34:16.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testConstrainedRosen

07:34:16.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testElliRotated, DisplayName: testElliRotated(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:16.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:16.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$ElliRotated BEGIN
07:34:16.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:25.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$ElliRotated END

07:34:25.194 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testElliRotated

07:34:25.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testEllipse, DisplayName: testEllipse(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:25.195 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:25.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Elli BEGIN
07:34:25.196 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:25.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Elli END
07:34:25.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testEllipse

07:34:25.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testInitOutOfBounds, DisplayName: testInitOutOfBounds(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:25.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:25.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
07:34:25.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:25.363 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testInitOutOfBounds
07:34:25.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:25.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testTwoAxes, DisplayName: testTwoAxes(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:25.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:25.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$TwoAxes BEGIN
07:34:25.364 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:25.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$TwoAxes END
07:34:25.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testTwoAxes

07:34:25.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testProblemDimensionTooSmall, DisplayName: testProblemDimensionTooSmall(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:25.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:25.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
07:34:25.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:25.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testProblemDimensionTooSmall
07:34:25.401 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:25.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testCigar, DisplayName: testCigar(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:25.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:25.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Cigar BEGIN
07:34:25.402 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:25.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Cigar END
07:34:25.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testCigar

07:34:25.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testRosen, DisplayName: testRosen(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:25.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:25.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
07:34:25.428 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:26.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen END

07:34:26.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testRosen

07:34:26.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testRastrigin, DisplayName: testRastrigin(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:26.926 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:26.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rastrigin BEGIN
07:34:26.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:27.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rastrigin END
07:34:27.046 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testRastrigin

07:34:27.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testSsDiffPow, DisplayName: testSsDiffPow(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:27.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:27.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$SsDiffPow BEGIN
07:34:27.047 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:28.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$SsDiffPow END

07:34:28.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testSsDiffPow

07:34:28.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testMaximize, DisplayName: testMaximize(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:28.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:28.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli BEGIN
07:34:28.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:28.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli END
07:34:28.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli BEGIN

07:34:28.971 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli END
07:34:28.971 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testMaximize

07:34:28.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testAckley, DisplayName: testAckley(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:28.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:28.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testAckley

07:34:28.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testCigTab, DisplayName: testCigTab(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:28.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:28.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$CigTab BEGIN
07:34:28.972 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$CigTab END
07:34:29.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testCigTab

07:34:29.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testDiffPow, DisplayName: testDiffPow(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:29.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testDiffPow
07:34:29.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testBoundariesDimensionMismatch, DisplayName: testBoundariesDimensionMismatch(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:29.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN

07:34:29.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testBoundariesDimensionMismatch
07:34:29.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testSphere, DisplayName: testSphere(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:29.008 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Sphere BEGIN
07:34:29.009 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Sphere END
07:34:29.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testSphere

07:34:29.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testTablet, DisplayName: testTablet(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:29.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Tablet BEGIN
07:34:29.033 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Tablet END
07:34:29.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testTablet

07:34:29.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testMaxEvaluations, DisplayName: testMaxEvaluations(org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest)
07:34:29.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
07:34:29.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest, MethodName: testMaxEvaluations
07:34:29.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 18
07:34:29.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
07:34:29.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.RandomGeneratorAbstractTest
07:34:29.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 41
07:34:29.066 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntDirect, DisplayName: testNextIntDirect(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Message : null

07:34:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextIntDirect

07:34:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntDirect
07:34:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextFloatDirect, DisplayName: testNextFloatDirect(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextFloatDirect

07:34:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextFloatDirect
07:34:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextBooleanDirect, DisplayName: testNextBooleanDirect(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextBooleanDirect
07:34:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextBooleanDirect
07:34:29.086 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLongDirect, DisplayName: testNextLongDirect(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Message : null

07:34:29.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)


07:34:29.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - MethodName: testNextLongDirect

07:34:29.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLongDirect
07:34:29.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNexBoolean2, DisplayName: testNexBoolean2(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNexBoolean2
07:34:29.087 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNexBoolean2
07:34:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testFloatDirect, DisplayName: testFloatDirect(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testFloatDirect

07:34:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testFloatDirect
07:34:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testDoubleDirect, DisplayName: testDoubleDirect(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.088 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testDoubleDirect

07:34:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testDoubleDirect
07:34:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLong2, DisplayName: testNextLong2(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextLong2

07:34:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLong2
07:34:29.089 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntIAE, DisplayName: testNextIntIAE(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Message : null

07:34:29.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextIntIAE
07:34:29.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntIAE
07:34:29.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntNeg, DisplayName: testNextIntNeg(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.090 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextIntNeg

07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntNeg
07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNexBytes, DisplayName: testNexBytes(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNexBytes
07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNexBytes
07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextInt2, DisplayName: testNextInt2(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.091 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextInt2

07:34:29.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextInt2
07:34:29.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextPascal
07:34:29.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPascal
07:34:29.092 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Message : null

07:34:29.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextSample

07:34:29.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSample
07:34:29.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextIntExtremeValues

07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextIntExtremeValues
07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextUniformExclusiveEndpoints
07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextUniformExclusiveEndpoints
07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.094 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextGaussian

07:34:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextGaussian
07:34:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextF
07:34:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextF
07:34:29.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Message : null

07:34:29.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextT

07:34:29.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextT
07:34:29.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextChiSquare

07:34:29.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextChiSquare
07:34:29.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextSecureLong
07:34:29.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSecureLong
07:34:29.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Message : null

07:34:29.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextSecureHex

07:34:29.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSecureHex
07:34:29.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextSecureInt

07:34:29.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextSecureInt
07:34:29.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextPoissonConsistency

07:34:29.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPoissonConsistency
07:34:29.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextHypergeometric

07:34:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextHypergeometric
07:34:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextLongExtremeValues
07:34:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLongExtremeValues
07:34:29.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Message : null

07:34:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextExponential

07:34:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextExponential
07:34:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextPoisson

07:34:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPoisson
07:34:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextUniform

07:34:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextUniform
07:34:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextPermutation

07:34:29.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextPermutation
07:34:29.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextBinomial

07:34:29.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextBinomial
07:34:29.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Message : null
Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRun
07:34:29.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - ner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testConfig

07:34:29.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testConfig
07:34:29.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Message : null

07:34:29.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.104 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextInversionDeviate

07:34:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextInversionDeviate
07:34:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextHex

07:34:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextHex
07:34:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.105 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextInt

07:34:29.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextInt
07:34:29.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextCauchy

07:34:29.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextCauchy
07:34:29.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
Message : null

07:34:29.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextGamma

07:34:29.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextGamma
07:34:29.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.107 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextWeibull

07:34:29.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextWeibull
07:34:29.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextBeta

07:34:29.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextBeta
07:34:29.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.108 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextLong

07:34:29.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextLong
07:34:29.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.RandomGeneratorAbstractTest)
07:34:29.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Message : null
07:34:29.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Trace : java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:48)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)
	at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(P
07:34:29.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - arentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:43)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

MethodName: testNextZipf

07:34:29.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomGeneratorAbstractTest, MethodName: testNextZipf
07:34:29.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 41
07:34:29.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 1

07:34:29.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.ranking.NaturalRankingTest
07:34:29.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
07:34:29.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMinimalTiesAverage, DisplayName: testNaNsMinimalTiesAverage(org.apache.commons.math.stat.ranking.NaturalRankingTest)
07:34:29.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMinimalTiesAverage
07:34:29.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsFixedTiesRandom, DisplayName: testNaNsFixedTiesRandom(org.apache.commons.math.stat.ranking.NaturalRankingTest)
07:34:29.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsFixedTiesRandom
07:34:29.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsRemovedTiesSequential, DisplayName: testNaNsRemovedTiesSequential(org.apache.commons.math.stat.ranking.NaturalRankingTest)
07:34:29.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsRemovedTiesSequential
07:34:29.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMinimalTiesMaximum, DisplayName: testNaNsMinimalTiesMaximum(org.apache.commons.math.stat.ranking.NaturalRankingTest)
07:34:29.113 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMinimalTiesMaximum
07:34:29.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testDefault, DisplayName: testDefault(org.apache.commons.math.stat.ranking.NaturalRankingTest)
07:34:29.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testDefault
07:34:29.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsAndInfs, DisplayName: testNaNsAndInfs(org.apache.commons.math.stat.ranking.NaturalRankingTest)
07:34:29.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsAndInfs
07:34:29.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMaximalTiesMinimum, DisplayName: testNaNsMaximalTiesMinimum(org.apache.commons.math.stat.ranking.NaturalRankingTest)
07:34:29.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.ranking.NaturalRankingTest, MethodName: testNaNsMaximalTiesMinimum
07:34:29.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
07:34:29.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:29.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest

07:34:29.116 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
07:34:29.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)
07:34:29.117 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testDimensionCheck
07:34:29.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)
07:34:29.118 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testBackward

07:34:29.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testSmallStep, DisplayName: testSmallStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)
07:34:29.131 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testSmallStep
07:34:29.134 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testDecreasingSteps, DisplayName: testDecreasingSteps(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)
07:34:29.135 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testDecreasingSteps
07:34:29.172 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testBigStep, DisplayName: testBigStep(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)
07:34:29.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testBigStep
07:34:29.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)
07:34:29.173 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testKepler
07:34:29.179 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testStepSize, DisplayName: testStepSize(org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest)
07:34:29.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, MethodName: testStepSize
07:34:29.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
07:34:29.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.180 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:29.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest
07:34:29.181 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:34:29.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testPlane, DisplayName: testPlane(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)
07:34:29.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testPlane
07:34:29.182 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)
07:34:29.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testPreconditions
07:34:29.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testParaboloid, DisplayName: testParaboloid(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)
07:34:29.183 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testParaboloid
07:34:29.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testSplinePartialDerivatives, DisplayName: testSplinePartialDerivatives(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)
07:34:29.184 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testSplinePartialDerivatives
07:34:29.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testMatchingPartialDerivatives, DisplayName: testMatchingPartialDerivatives(org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest)
07:34:29.186 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.212 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, MethodName: testMatchingPartialDerivatives

07:34:29.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:34:29.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.BigRealFieldTest
07:34:29.213 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:34:29.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testOne, DisplayName: testOne(org.apache.commons.math.util.BigRealFieldTest)
07:34:29.214 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testOne
07:34:29.216 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testZero, DisplayName: testZero(org.apache.commons.math.util.BigRealFieldTest)
07:34:29.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testZero
07:34:29.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.util.BigRealFieldTest)
07:34:29.217 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.BigRealFieldTest, MethodName: testSerial
07:34:29.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:34:29.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:29.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.218 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest

07:34:29.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:34:29.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest)
07:34:29.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testParameters
07:34:29.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest)
07:34:29.219 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testSinFunction
07:34:29.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest)
07:34:29.221 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.226 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, MethodName: testQuinticFunction

07:34:29.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:34:29.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest
07:34:29.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:34:29.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest)
07:34:29.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, MethodName: testAccessors
07:34:29.227 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:34:29.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest
07:34:29.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:34:29.228 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)
07:34:29.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: derivativesConsistency
07:34:29.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: checklone, DisplayName: checklone(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)
07:34:29.231 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: checklone

07:34:29.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest)
07:34:29.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, MethodName: serialization

07:34:29.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:34:29.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:29.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.ValueServerTest
07:34:29.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.269 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:34:29.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testProperties, DisplayName: testProperties(org.apache.commons.math.random.ValueServerTest)
07:34:29.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testProperties
07:34:29.270 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testModes, DisplayName: testModes(org.apache.commons.math.random.ValueServerTest)
07:34:29.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testModes
07:34:29.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testFill, DisplayName: testFill(org.apache.commons.math.random.ValueServerTest)
07:34:29.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.271 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testFill

07:34:29.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyDigestFile, DisplayName: testEmptyDigestFile(org.apache.commons.math.random.ValueServerTest)
07:34:29.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyDigestFile
07:34:29.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyReplayFile, DisplayName: testEmptyReplayFile(org.apache.commons.math.random.ValueServerTest)
07:34:29.272 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testEmptyReplayFile
07:34:29.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigestFail, DisplayName: testNextDigestFail(org.apache.commons.math.random.ValueServerTest)
07:34:29.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigestFail
07:34:29.273 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testFixedSeed, DisplayName: testFixedSeed(org.apache.commons.math.random.ValueServerTest)
07:34:29.274 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testFixedSeed

07:34:29.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testReplay, DisplayName: testReplay(org.apache.commons.math.random.ValueServerTest)
07:34:29.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testReplay
07:34:29.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigest, DisplayName: testNextDigest(org.apache.commons.math.random.ValueServerTest)
07:34:29.285 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.ValueServerTest, MethodName: testNextDigest

07:34:29.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9
07:34:29.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:29.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.302 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest

07:34:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:34:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
07:34:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testMomentSmallSamples
07:34:29.304 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
07:34:29.305 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testSerialization
07:34:29.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
07:34:29.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.306 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testIncrementation

07:34:29.307 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
07:34:29.307 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.307 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testConsistency
07:34:29.307 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.307 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
07:34:29.307 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.307 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEqualsAndHashCode
07:34:29.307 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
07:34:29.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testCopyConsistency
07:34:29.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
07:34:29.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testSerial
07:34:29.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
07:34:29.308 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testCopy
07:34:29.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
07:34:29.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testEvaluation
07:34:29.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest)
07:34:29.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, MethodName: testWeightedConsistency
07:34:29.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
07:34:29.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:29.309 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.310 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.euclidean.twod.SubLineTest

07:34:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 12
07:34:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testEndPoints, DisplayName: testEndPoints(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)
07:34:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testEndPoints
07:34:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testNoEndPoints, DisplayName: testNoEndPoints(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)
07:34:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testNoEndPoints
07:34:29.312 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionInsideInside, DisplayName: testIntersectionInsideInside(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)
07:34:29.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionInsideInside
07:34:29.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionBoundaryBoundary, DisplayName: testIntersectionBoundaryBoundary(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)
07:34:29.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionBoundaryBoundary
07:34:29.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionOutsideOutside, DisplayName: testIntersectionOutsideOutside(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)
07:34:29.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionOutsideOutside
07:34:29.313 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionBoundaryOutside, DisplayName: testIntersectionBoundaryOutside(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)
07:34:29.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionBoundaryOutside
07:34:29.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testSeveralSegments, DisplayName: testSeveralSegments(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)
07:34:29.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testSeveralSegments
07:34:29.314 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testHalfInfiniteNeg, DisplayName: testHalfInfiniteNeg(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)
07:34:29.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testHalfInfiniteNeg
07:34:29.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testHalfInfinitePos, DisplayName: testHalfInfinitePos(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)
07:34:29.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testHalfInfinitePos
07:34:29.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionInsideOutside, DisplayName: testIntersectionInsideOutside(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)
07:34:29.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionInsideOutside
07:34:29.315 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testNoSegments, DisplayName: testNoSegments(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)
07:34:29.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testNoSegments
07:34:29.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionInsideBoundary, DisplayName: testIntersectionInsideBoundary(org.apache.commons.math.geometry.euclidean.twod.SubLineTest)
07:34:29.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.SubLineTest, MethodName: testIntersectionInsideBoundary
07:34:29.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 12
07:34:29.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:29.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.316 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.util.TransformerMapTest

07:34:29.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:34:29.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClear, DisplayName: testClear(org.apache.commons.math.util.TransformerMapTest)
07:34:29.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClear
07:34:29.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsTransformer, DisplayName: testContainsTransformer(org.apache.commons.math.util.TransformerMapTest)
07:34:29.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsTransformer
07:34:29.318 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testTransformers, DisplayName: testTransformers(org.apache.commons.math.util.TransformerMapTest)
07:34:29.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testTransformers
07:34:29.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testPutTransformer, DisplayName: testPutTransformer(org.apache.commons.math.util.TransformerMapTest)
07:34:29.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testPutTransformer
07:34:29.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsClass, DisplayName: testContainsClass(org.apache.commons.math.util.TransformerMapTest)
07:34:29.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testContainsClass
07:34:29.319 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClasses, DisplayName: testClasses(org.apache.commons.math.util.TransformerMapTest)
07:34:29.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testClasses
07:34:29.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.util.TransformerMapTest)
07:34:29.320 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testSerial
07:34:29.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testRemoveTransformer, DisplayName: testRemoveTransformer(org.apache.commons.math.util.TransformerMapTest)
07:34:29.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.util.TransformerMapTest, MethodName: testRemoveTransformer
07:34:29.321 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:34:29.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.EigenDecompositionImplTest
07:34:29.322 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.324 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 20

07:34:29.324 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension4WithoutSplit, DisplayName: testDimension4WithoutSplit(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.324 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.324 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension4WithoutSplit
07:34:29.324 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testEigenvectors, DisplayName: testEigenvectors(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testEigenvectors
07:34:29.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testTridiagonal, DisplayName: testTridiagonal(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.325 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testTridiagonal
07:34:29.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension1, DisplayName: testDimension1(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.329 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension1
07:34:29.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension2, DisplayName: testDimension2(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension2
07:34:29.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension3, DisplayName: testDimension3(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension3
07:34:29.330 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimensions
07:34:29.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testEigenvalues, DisplayName: testEigenvalues(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testEigenvalues
07:34:29.331 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testRepeatedEigenvalue, DisplayName: testRepeatedEigenvalue(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testRepeatedEigenvalue
07:34:29.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testAEqualVDVt, DisplayName: testAEqualVDVt(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testAEqualVDVt
07:34:29.332 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMath308, DisplayName: testMath308(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMath308
07:34:29.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDiagonal, DisplayName: testDiagonal(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDiagonal
07:34:29.333 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDistinctEigenvalues, DisplayName: testDistinctEigenvalues(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDistinctEigenvalues
07:34:29.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testVOrthogonal, DisplayName: testVOrthogonal(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testVOrthogonal
07:34:29.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension3MultipleRoot, DisplayName: testDimension3MultipleRoot(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.334 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension3MultipleRoot
07:34:29.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMathpbx02, DisplayName: testMathpbx02(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.335 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMathpbx02
07:34:29.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMathpbx03, DisplayName: testMathpbx03(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testMathpbx03
07:34:29.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testBigMatrix, DisplayName: testBigMatrix(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.336 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testBigMatrix

07:34:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension4WithSplit, DisplayName: testDimension4WithSplit(org.apache.commons.math.linear.EigenDecompositionImplTest)
07:34:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testDimension4WithSplit
07:34:29.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testZeroDivide, DisplayName: testZeroDivide(org.apache.commons.math.linear.EigenDecompositionImplTest)

07:34:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.EigenDecompositionImplTest, MethodName: testZeroDivide

07:34:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 20
07:34:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
07:34:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.ArrayFieldVectorTest
07:34:29.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:34:29.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testZeroVectors, DisplayName: testZeroVectors(org.apache.commons.math.linear.ArrayFieldVectorTest)
07:34:29.691 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testZeroVectors
07:34:29.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testMisc, DisplayName: testMisc(org.apache.commons.math.linear.ArrayFieldVectorTest)
07:34:29.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testMisc
07:34:29.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.linear.ArrayFieldVectorTest)
07:34:29.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testConstructors
07:34:29.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testBasicFunctions, DisplayName: testBasicFunctions(org.apache.commons.math.linear.ArrayFieldVectorTest)
07:34:29.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testBasicFunctions
07:34:29.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testDataInOut, DisplayName: testDataInOut(org.apache.commons.math.linear.ArrayFieldVectorTest)
07:34:29.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testDataInOut
07:34:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testMapFunctions, DisplayName: testMapFunctions(org.apache.commons.math.linear.ArrayFieldVectorTest)
07:34:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testMapFunctions
07:34:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testOuterProduct, DisplayName: testOuterProduct(org.apache.commons.math.linear.ArrayFieldVectorTest)
07:34:29.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testOuterProduct
07:34:29.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.linear.ArrayFieldVectorTest)
07:34:29.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.ArrayFieldVectorTest, MethodName: testSerial
07:34:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:34:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.solvers.MullerSolver2Test
07:34:29.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:34:29.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.solvers.MullerSolver2Test)
07:34:29.698 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testParameters
07:34:29.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.solvers.MullerSolver2Test)
07:34:29.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testSinFunction
07:34:29.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.solvers.MullerSolver2Test)
07:34:29.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testExpm1Function
07:34:29.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.solvers.MullerSolver2Test)
07:34:29.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolver2Test, MethodName: testQuinticFunction
07:34:29.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:34:29.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:29.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest
07:34:29.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:34:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, MethodName: testCumulativeDensityFunction, DisplayName: testCumulativeDensityFunction(org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest)
07:34:29.702 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, MethodName: testCumulativeDensityFunction

07:34:29.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:34:29.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
07:34:29.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.UniformRandomGeneratorTest
07:34:29.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:34:29.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.UniformRandomGeneratorTest, MethodName: testMeanAndStandardDeviation, DisplayName: testMeanAndStandardDeviation(org.apache.commons.math.random.UniformRandomGeneratorTest)
07:34:29.885 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.888 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.UniformRandomGeneratorTest, MethodName: testMeanAndStandardDeviation
07:34:29.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:34:29.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:29.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest
07:34:29.889 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:34:29.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testCentroid, DisplayName: testCentroid(org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest)
07:34:29.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testCentroid
07:34:29.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testDistance, DisplayName: testDistance(org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest)
07:34:29.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testDistance
07:34:29.890 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testArrayIsReference, DisplayName: testArrayIsReference(org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest)
07:34:29.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testArrayIsReference
07:34:29.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest)
07:34:29.891 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, MethodName: testSerial
07:34:29.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:34:29.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:29.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest
07:34:29.892 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.893 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:34:29.893 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.893 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)
07:34:29.893 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.894 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: derivativesConsistency
07:34:29.894 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.895 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: checkClone, DisplayName: checkClone(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)
07:34:29.895 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: checkClone
07:34:29.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest)
07:34:29.901 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, MethodName: serialization
07:34:29.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:34:29.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:29.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.solvers.MullerSolverTest
07:34:29.909 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:34:29.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.solvers.MullerSolverTest)
07:34:29.911 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testParameters
07:34:29.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.solvers.MullerSolverTest)
07:34:29.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testSinFunction
07:34:29.912 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.solvers.MullerSolverTest)
07:34:29.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testExpm1Function
07:34:29.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.solvers.MullerSolverTest)
07:34:29.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.MullerSolverTest, MethodName: testQuinticFunction
07:34:29.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:34:29.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:29.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest
07:34:29.913 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:34:29.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.915 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstChebyshevPolynomials, DisplayName: testFirstChebyshevPolynomials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)
07:34:29.916 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.918 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstChebyshevPolynomials
07:34:29.918 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.918 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testHighDegreeLegendre, DisplayName: testHighDegreeLegendre(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)
07:34:29.918 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testHighDegreeLegendre
07:34:29.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testLaguerreDifferentials, DisplayName: testLaguerreDifferentials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)
07:34:29.925 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testLaguerreDifferentials
07:34:29.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testHermiteDifferentials, DisplayName: testHermiteDifferentials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)
07:34:29.927 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testHermiteDifferentials
07:34:29.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testChebyshevBounds, DisplayName: testChebyshevBounds(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)
07:34:29.928 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testChebyshevBounds
07:34:29.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstHermitePolynomials, DisplayName: testFirstHermitePolynomials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)
07:34:29.934 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstHermitePolynomials
07:34:29.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstLegendrePolynomials, DisplayName: testFirstLegendrePolynomials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)
07:34:29.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstLegendrePolynomials
07:34:29.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testChebyshevDifferentials, DisplayName: testChebyshevDifferentials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)
07:34:29.935 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testChebyshevDifferentials
07:34:29.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstLaguerrePolynomials, DisplayName: testFirstLaguerrePolynomials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)
07:34:29.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.936 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testFirstLaguerrePolynomials
07:34:29.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testLegendreDifferentials, DisplayName: testLegendreDifferentials(org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest)
07:34:29.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, MethodName: testLegendreDifferentials
07:34:29.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
07:34:29.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.937 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:29.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.euclidean.twod.LineTest
07:34:29.938 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:34:29.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testAbscissa, DisplayName: testAbscissa(org.apache.commons.math.geometry.euclidean.twod.LineTest)
07:34:29.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testAbscissa
07:34:29.939 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testOriginOffset, DisplayName: testOriginOffset(org.apache.commons.math.geometry.euclidean.twod.LineTest)
07:34:29.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testOriginOffset

07:34:29.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testPointAt, DisplayName: testPointAt(org.apache.commons.math.geometry.euclidean.twod.LineTest)
07:34:29.940 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testPointAt
07:34:29.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testContains, DisplayName: testContains(org.apache.commons.math.geometry.euclidean.twod.LineTest)
07:34:29.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testContains
07:34:29.941 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testIntersection, DisplayName: testIntersection(org.apache.commons.math.geometry.euclidean.twod.LineTest)
07:34:29.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testIntersection
07:34:29.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testOffset, DisplayName: testOffset(org.apache.commons.math.geometry.euclidean.twod.LineTest)
07:34:29.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testOffset
07:34:29.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testTransform, DisplayName: testTransform(org.apache.commons.math.geometry.euclidean.twod.LineTest)
07:34:29.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testTransform
07:34:29.942 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testParallel, DisplayName: testParallel(org.apache.commons.math.geometry.euclidean.twod.LineTest)
07:34:29.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.twod.LineTest, MethodName: testParallel
07:34:29.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:34:29.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:29.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.util.ExceptionContextTest
07:34:29.943 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:34:29.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testNoArgAddMessage, DisplayName: testNoArgAddMessage(org.apache.commons.math.exception.util.ExceptionContextTest)
07:34:29.944 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testNoArgAddMessage
07:34:29.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testSerializeUnserializable, DisplayName: testSerializeUnserializable(org.apache.commons.math.exception.util.ExceptionContextTest)
07:34:29.945 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.946 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testSerializeUnserializable
07:34:29.946 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.946 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testMessageChain, DisplayName: testMessageChain(org.apache.commons.math.exception.util.ExceptionContextTest)
07:34:29.946 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.947 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testMessageChain
07:34:29.947 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.947 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testSerialize, DisplayName: testSerialize(org.apache.commons.math.exception.util.ExceptionContextTest)
07:34:29.947 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testSerialize
07:34:29.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testContext, DisplayName: testContext(org.apache.commons.math.exception.util.ExceptionContextTest)
07:34:29.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ExceptionContextTest, MethodName: testContext
07:34:29.948 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:34:29.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.AbtractIntegerDistributionTest
07:34:29.949 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4
07:34:29.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesSingleDoubleArguments, DisplayName: testCumulativeProbabilitiesSingleDoubleArguments(org.apache.commons.math.distribution.AbtractIntegerDistributionTest)
07:34:29.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesSingleDoubleArguments
07:34:29.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesRangeDoubleArguments, DisplayName: testCumulativeProbabilitiesRangeDoubleArguments(org.apache.commons.math.distribution.AbtractIntegerDistributionTest)
07:34:29.950 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesRangeDoubleArguments
07:34:29.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesSingleIntegerArguments, DisplayName: testCumulativeProbabilitiesSingleIntegerArguments(org.apache.commons.math.distribution.AbtractIntegerDistributionTest)
07:34:29.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesSingleIntegerArguments
07:34:29.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesRangeIntegerArguments, DisplayName: testCumulativeProbabilitiesRangeIntegerArguments(org.apache.commons.math.distribution.AbtractIntegerDistributionTest)
07:34:29.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.AbtractIntegerDistributionTest, MethodName: testCumulativeProbabilitiesRangeIntegerArguments
07:34:29.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4
07:34:29.951 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:29.952 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.general.MinpackTest

07:34:29.959 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 18
07:34:29.959 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.959 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearRank1, DisplayName: testMinpackLinearRank1(org.apache.commons.math.optimization.general.MinpackTest)
07:34:29.959 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearRank1
07:34:29.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:29.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBrownDennis, DisplayName: testMinpackBrownDennis(org.apache.commons.math.optimization.general.MinpackTest)
07:34:29.961 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBrownDennis
07:34:30.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackJennrichSampson, DisplayName: testMinpackJennrichSampson(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.003 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackJennrichSampson
07:34:30.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackRosenbrok, DisplayName: testMinpackRosenbrok(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.004 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackRosenbrok
07:34:30.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBox3Dimensional, DisplayName: testMinpackBox3Dimensional(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBox3Dimensional
07:34:30.005 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackHelicalValley, DisplayName: testMinpackHelicalValley(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.006 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackHelicalValley
07:34:30.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackMeyer, DisplayName: testMinpackMeyer(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.007 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackMeyer
07:34:30.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearFullRank, DisplayName: testMinpackLinearFullRank(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.057 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearFullRank
07:34:30.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackFreudensteinRoth, DisplayName: testMinpackFreudensteinRoth(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.058 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackFreudensteinRoth
07:34:30.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackOsborne1, DisplayName: testMinpackOsborne1(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.059 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.060 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackOsborne1
07:34:30.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackOsborne2, DisplayName: testMinpackOsborne2(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.061 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.062 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackOsborne2
07:34:30.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackWatson, DisplayName: testMinpackWatson(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.063 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackWatson
07:34:30.072 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackKowalikOsborne, DisplayName: testMinpackKowalikOsborne(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.073 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackKowalikOsborne
07:34:30.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackPowellSingular, DisplayName: testMinpackPowellSingular(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.078 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackPowellSingular
07:34:30.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackChebyquad, DisplayName: testMinpackChebyquad(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.081 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackChebyquad
07:34:30.083 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearRank1ZeroColsAndRows, DisplayName: testMinpackLinearRank1ZeroColsAndRows(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackLinearRank1ZeroColsAndRows
07:34:30.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBard, DisplayName: testMinpackBard(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.084 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBard
07:34:30.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBrownAlmostLinear, DisplayName: testMinpackBrownAlmostLinear(org.apache.commons.math.optimization.general.MinpackTest)
07:34:30.085 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.general.MinpackTest, MethodName: testMinpackBrownAlmostLinear
07:34:30.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 18
07:34:30.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:30.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.SkewnessTest
07:34:30.093 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
07:34:30.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
07:34:30.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testNaN
07:34:30.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
07:34:30.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testMomentSmallSamples
07:34:30.095 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
07:34:30.096 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testSerialization
07:34:30.097 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
07:34:30.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testIncrementation
07:34:30.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
07:34:30.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testConsistency
07:34:30.098 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
07:34:30.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEqualsAndHashCode
07:34:30.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
07:34:30.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testCopyConsistency
07:34:30.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
07:34:30.099 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testSerial
07:34:30.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
07:34:30.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testCopy
07:34:30.100 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
07:34:30.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testEvaluation
07:34:30.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.SkewnessTest)
07:34:30.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.SkewnessTest, MethodName: testWeightedConsistency
07:34:30.101 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11
07:34:30.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.BinaryMutationTest
07:34:30.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:34:30.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.BinaryMutationTest, MethodName: testMutate, DisplayName: testMutate(org.apache.commons.math.genetics.BinaryMutationTest)
07:34:30.102 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.BinaryMutationTest, MethodName: testMutate
07:34:30.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:34:30.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:30.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.fitting.GaussianFitterTest
07:34:30.103 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:34:30.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit01, DisplayName: testFit01(org.apache.commons.math.optimization.fitting.GaussianFitterTest)
07:34:30.106 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit01
07:34:30.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit02, DisplayName: testFit02(org.apache.commons.math.optimization.fitting.GaussianFitterTest)
07:34:30.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit02
07:34:30.109 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit03, DisplayName: testFit03(org.apache.commons.math.optimization.fitting.GaussianFitterTest)
07:34:30.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit03
07:34:30.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit04, DisplayName: testFit04(org.apache.commons.math.optimization.fitting.GaussianFitterTest)
07:34:30.110 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit04
07:34:30.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit05, DisplayName: testFit05(org.apache.commons.math.optimization.fitting.GaussianFitterTest)
07:34:30.112 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit05
07:34:30.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit06, DisplayName: testFit06(org.apache.commons.math.optimization.fitting.GaussianFitterTest)
07:34:30.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit06
07:34:30.114 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit07, DisplayName: testFit07(org.apache.commons.math.optimization.fitting.GaussianFitterTest)
07:34:30.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testFit07
07:34:30.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testMath519, DisplayName: testMath519(org.apache.commons.math.optimization.fitting.GaussianFitterTest)
07:34:30.115 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.GaussianFitterTest, MethodName: testMath519
07:34:30.144 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:34:30.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:34:30.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest
07:34:30.145 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3
07:34:30.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)
07:34:30.146 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: derivativesConsistency
07:34:30.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: checkClone, DisplayName: checkClone(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)
07:34:30.147 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: checkClone
07:34:30.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest)
07:34:30.154 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, MethodName: serialization
07:34:30.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3
07:34:30.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:30.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.linear.RealVectorTest
07:34:30.162 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:34:30.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testMap, DisplayName: testMap(org.apache.commons.math.linear.RealVectorTest)
07:34:30.164 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testMap
07:34:30.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testClone, DisplayName: testClone(org.apache.commons.math.linear.RealVectorTest)
07:34:30.165 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.248 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testClone

07:34:30.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombineToSelf, DisplayName: testCombineToSelf(org.apache.commons.math.linear.RealVectorTest)
07:34:30.276 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
* Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombineToSelf
* Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombinePrecondition, DisplayName: testCombinePrecondition(org.apache.commons.math.linear.RealVectorTest)
* Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombinePrecondition
* Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombine, DisplayName: testCombine(org.apache.commons.math.linear.RealVectorTest)
* Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombine
* Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testSparseIterator, DisplayName: testSparseIterator(org.apache.commons.math.linear.RealVectorTest)
* Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testSparseIterator
* Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, M
07:34:30.276 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - ethodName: testCombineToSelfPrecondition, DisplayName: testCombineToSelfPrecondition(org.apache.commons.math.linear.RealVectorTest)
* Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testCombineToSelfPrecondition
* Started : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testIterator, DisplayName: testIterator(org.apache.commons.math.linear.RealVectorTest)
* Finished : ClasseName: org.apache.commons.math.linear.RealVectorTest, MethodName: testIterator
Number of testcases executed : 8
TestResult: 0
 Run JUnit Test: org.apache.commons.math.exception.DimensionMismatchExceptionTest
Number of testcases to execute : 1
* Started : ClasseName: org.apache.commons.math.exception.DimensionMismatchExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.DimensionMismatchExceptionTest)
* Finished : ClasseName: org.apache.commons.math.exception.DimensionMismatchExceptionTest, MethodName: testAccessors
Number of testcases 
07:34:30.276 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - executed : 1
TestResult: 0
 Run JUnit Test: org.apache.commons.math.util.BigRealTest
Number of testcases to execute : 10
* Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.util.BigRealTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testAdd
* Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.util.BigRealTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testSubtract
* Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testCompareTo, DisplayName: testCompareTo(org.apache.commons.math.util.BigRealTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testCompareTo
* Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testBigDecimalValue, DisplayName: testBigDecimalValue(org.apache.commons.math.uti
07:34:30.276 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - l.BigRealTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testBigDecimalValue
* Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testDivide, DisplayName: testDivide(org.apache.commons.math.util.BigRealTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testDivide
* Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testMultiply, DisplayName: testMultiply(org.apache.commons.math.util.BigRealTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testMultiply
* Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.util.BigRealTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testEqualsAndHashCode
* Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.
07:34:30.276 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - math.util.BigRealTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testSerial
* Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testDoubleValue, DisplayName: testDoubleValue(org.apache.commons.math.util.BigRealTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testDoubleValue
* Started : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.util.BigRealTest)
* Finished : ClasseName: org.apache.commons.math.util.BigRealTest, MethodName: testConstructor
Number of testcases executed : 10
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.data.LewTest
Number of testcases to execute : 1
* Started : ClasseName: org.apache.commons.math.stat.data.LewTest, MethodName: testCertifiedValues, DisplayName: testCertifiedValues(org.apache.commons.math.stat.data.LewTest)

07:34:30.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.data.LewTest, MethodName: testCertifiedValues
07:34:30.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:34:30.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:30.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.MathConfigurationExceptionTest
07:34:30.277 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:34:30.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructorCause, DisplayName: testConstructorCause(org.apache.commons.math.MathConfigurationExceptionTest)
07:34:30.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructorCause
07:34:30.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.MathConfigurationExceptionTest)
07:34:30.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.MathConfigurationExceptionTest, MethodName: testConstructor
07:34:30.278 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:34:30.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest
07:34:30.279 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:34:30.282 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
07:34:30.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testProductAndGeometricMean
07:34:30.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testGetSummary, DisplayName: testGetSummary(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
07:34:30.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testGetSummary
07:34:30.283 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
07:34:30.284 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSerialization
07:34:30.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
07:34:30.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testStats
07:34:30.288 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
07:34:30.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testCopy
07:34:30.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
07:34:30.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testNaNContracts
07:34:30.289 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
07:34:30.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testN0andN1Conditions
07:34:30.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
07:34:30.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSetterInjection
07:34:30.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSetterIllegalState, DisplayName: testSetterIllegalState(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
07:34:30.290 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testSetterIllegalState
07:34:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest)
07:34:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, MethodName: testEqualsAndHashCode
07:34:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10
07:34:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.NumberIsTooSmallExceptionTest
07:34:30.291 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:34:30.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.NumberIsTooSmallExceptionTest)
07:34:30.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, MethodName: testAccessors
07:34:30.292 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.293 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:34:30.293 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.PoissonDistributionTest
07:34:30.293 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13
07:34:30.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDegenerateInverseCumulativeProbability, DisplayName: testDegenerateInverseCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest)
07:34:30.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDegenerateInverseCumulativeProbability
07:34:30.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testCumulativeProbabilitySpecial, DisplayName: testCumulativeProbabilitySpecial(org.apache.commons.math.distribution.PoissonDistributionTest)
07:34:30.295 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.296 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testCumulativeProbabilitySpecial
07:34:30.296 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.296 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testMean, DisplayName: testMean(org.apache.commons.math.distribution.PoissonDistributionTest)
07:34:30.296 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.296 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testMean
07:34:30.296 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanInverseCumulativeProbability, DisplayName: testLargeMeanInverseCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest)
07:34:30.297 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanInverseCumulativeProbability
07:34:30.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.PoissonDistributionTest)
07:34:30.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testMomonts
07:34:30.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testNormalApproximateProbability, DisplayName: testNormalApproximateProbability(org.apache.commons.math.distribution.PoissonDistributionTest)
07:34:30.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testNormalApproximateProbability
07:34:30.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanCumulativeProbability, DisplayName: testLargeMeanCumulativeProbability(org.apache.commons.math.distribution.PoissonDistributionTest)
07:34:30.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testLargeMeanCumulativeProbability
07:34:30.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.PoissonDistributionTest)
07:34:30.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testDensities
07:34:30.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.PoissonDistributionTest)
07:34:30.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testInverseCumulativeProbabilities
07:34:30.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.PoissonDistributionTest)
07:34:30.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testSampling
07:34:30.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.PoissonDistributionTest)
07:34:30.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testCumulativeProbabilities
07:34:30.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.PoissonDistributionTest)
07:34:30.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testIllegalArguments
07:34:30.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.PoissonDistributionTest)
07:34:30.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PoissonDistributionTest, MethodName: testFloatingPointArguments
07:34:30.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13
07:34:30.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:34:30.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.events.OverlappingEventsTest

07:34:30.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:34:30.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.events.OverlappingEventsTest, MethodName: testOverlappingEvents0, DisplayName: testOverlappingEvents0(org.apache.commons.math.ode.events.OverlappingEventsTest)
07:34:30.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.events.OverlappingEventsTest, MethodName: testOverlappingEvents0
07:34:30.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.events.OverlappingEventsTest, MethodName: testOverlappingEvents1, DisplayName: testOverlappingEvents1(org.apache.commons.math.ode.events.OverlappingEventsTest)
07:34:30.578 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.events.OverlappingEventsTest, MethodName: testOverlappingEvents1
07:34:30.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:34:30.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:30.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest
07:34:30.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2
07:34:30.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, MethodName: testValues, DisplayName: testValues(org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest)
07:34:30.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, MethodName: testValues
07:34:30.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, MethodName: testConstructor, DisplayName: testConstructor(org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest)
07:34:30.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, MethodName: testConstructor
07:34:30.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.583 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2
07:34:30.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.genetics.GeneticAlgorithmTestBinary

07:34:30.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:34:30.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, MethodName: test, DisplayName: test(org.apache.commons.math.genetics.GeneticAlgorithmTestBinary)
07:34:30.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.617 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, MethodName: test

07:34:30.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:34:30.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:34:30.618 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest

07:34:30.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5
07:34:30.619 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateSin, DisplayName: testInterpolateSin(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)
07:34:30.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateSin
07:34:30.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateTwoSegment, DisplayName: testInterpolateLinearDegenerateTwoSegment(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)
07:34:30.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateTwoSegment
07:34:30.620 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)
07:34:30.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testIllegalArguments
07:34:30.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinear, DisplayName: testInterpolateLinear(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)
07:34:30.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinear
07:34:30.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateThreeSegment, DisplayName: testInterpolateLinearDegenerateThreeSegment(org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest)
07:34:30.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, MethodName: testInterpolateLinearDegenerateThreeSegment
07:34:30.621 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5
07:34:30.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0

07:34:30.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest

07:34:30.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 28
07:34:30.628 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testConstructorSingleFormat
07:34:30.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseSimpleWithDecimals
07:34:30.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testForgottenSeparator, DisplayName: testForgottenSeparator(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testForgottenSeparator
07:34:30.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseZeroX, DisplayName: testParseZeroX(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseZeroX
07:34:30.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNan
07:34:30.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testSimpleWithDecimalsTrunc
07:34:30.631 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeX, DisplayName: testParseNegativeX(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeX
07:34:30.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeY, DisplayName: testParseNegativeY(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeY
07:34:30.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeZ, DisplayName: testParseNegativeZ(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeZ
07:34:30.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeAll, DisplayName: testParseNegativeAll(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeAll
07:34:30.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testDefaultFormatVector3D, DisplayName: testDefaultFormatVector3D(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testDefaultFormatVector3D
07:34:30.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testForgottenPrefix, DisplayName: testForgottenPrefix(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testForgottenPrefix
07:34:30.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testForgottenSuffix, DisplayName: testForgottenSuffix(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testForgottenSuffix
07:34:30.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNegativeX, DisplayName: testNegativeX(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNegativeX
07:34:30.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNegativeY, DisplayName: testNegativeY(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNegativeY
07:34:30.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNegativeZ, DisplayName: testNegativeZ(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNegativeZ
07:34:30.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseIgnoredWhitespace, DisplayName: testParseIgnoredWhitespace(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseIgnoredWhitespace
07:34:30.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseSimpleWithDecimalsTrunc
07:34:30.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: tesNegativeInfinity, DisplayName: tesNegativeInfinity(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: tesNegativeInfinity
07:34:30.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeInfinity, DisplayName: testParseNegativeInfinity(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNegativeInfinity
07:34:30.638 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNonDefaultSetting, DisplayName: testNonDefaultSetting(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testNonDefaultSetting
07:34:30.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testSimpleNoDecimals
07:34:30.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.639 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseSimpleNoDecimals
07:34:30.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testPositiveInfinity
07:34:30.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNonDefaultSetting, DisplayName: testParseNonDefaultSetting(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNonDefaultSetting
07:34:30.640 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParseNan
07:34:30.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testParsePositiveInfinity
07:34:30.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest)
07:34:30.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest, MethodName: testSimpleWithDecimals
07:34:30.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 28
07:34:30.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:30.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.RandomDataTest
07:34:30.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 29
07:34:30.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPascal, DisplayName: testNextPascal(org.apache.commons.math.random.RandomDataTest)
07:34:30.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPascal
07:34:30.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSample, DisplayName: testNextSample(org.apache.commons.math.random.RandomDataTest)
07:34:30.684 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSample
07:34:30.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextIntExtremeValues, DisplayName: testNextIntExtremeValues(org.apache.commons.math.random.RandomDataTest)
07:34:30.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextIntExtremeValues
07:34:30.686 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniformExclusiveEndpoints, DisplayName: testNextUniformExclusiveEndpoints(org.apache.commons.math.random.RandomDataTest)
07:34:30.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniformExclusiveEndpoints
07:34:30.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextGaussian, DisplayName: testNextGaussian(org.apache.commons.math.random.RandomDataTest)
07:34:30.687 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextGaussian
07:34:30.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextF, DisplayName: testNextF(org.apache.commons.math.random.RandomDataTest)
07:34:30.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextF
07:34:30.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextT, DisplayName: testNextT(org.apache.commons.math.random.RandomDataTest)
07:34:30.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextT
07:34:30.735 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextChiSquare, DisplayName: testNextChiSquare(org.apache.commons.math.random.RandomDataTest)
07:34:30.736 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextChiSquare
07:34:30.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureLong, DisplayName: testNextSecureLong(org.apache.commons.math.random.RandomDataTest)
07:34:30.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureLong
07:34:30.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureHex, DisplayName: testNextSecureHex(org.apache.commons.math.random.RandomDataTest)
07:34:30.760 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.877 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureHex

07:34:30.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureInt, DisplayName: testNextSecureInt(org.apache.commons.math.random.RandomDataTest)
07:34:30.878 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextSecureInt
07:34:30.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:30.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPoissonConsistency, DisplayName: testNextPoissonConsistency(org.apache.commons.math.random.RandomDataTest)
07:34:30.883 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPoissonConsistency
07:34:32.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextHypergeometric, DisplayName: testNextHypergeometric(org.apache.commons.math.random.RandomDataTest)
07:34:32.423 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextHypergeometric
07:34:32.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLongExtremeValues, DisplayName: testNextLongExtremeValues(org.apache.commons.math.random.RandomDataTest)
07:34:32.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLongExtremeValues
07:34:32.429 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextExponential, DisplayName: testNextExponential(org.apache.commons.math.random.RandomDataTest)
07:34:32.430 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextExponential
07:34:32.431 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPoisson, DisplayName: testNextPoisson(org.apache.commons.math.random.RandomDataTest)
07:34:32.432 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPoisson
07:34:32.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniform, DisplayName: testNextUniform(org.apache.commons.math.random.RandomDataTest)
07:34:32.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextUniform
07:34:32.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPermutation, DisplayName: testNextPermutation(org.apache.commons.math.random.RandomDataTest)
07:34:32.436 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextPermutation
07:34:32.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextBinomial, DisplayName: testNextBinomial(org.apache.commons.math.random.RandomDataTest)
07:34:32.437 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextBinomial
07:34:32.447 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testConfig, DisplayName: testConfig(org.apache.commons.math.random.RandomDataTest)
07:34:32.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testConfig
07:34:32.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextInversionDeviate, DisplayName: testNextInversionDeviate(org.apache.commons.math.random.RandomDataTest)
07:34:32.448 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextInversionDeviate
07:34:32.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextHex, DisplayName: testNextHex(org.apache.commons.math.random.RandomDataTest)
07:34:32.449 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.467 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextHex

07:34:32.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextInt, DisplayName: testNextInt(org.apache.commons.math.random.RandomDataTest)
07:34:32.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextInt
07:34:32.468 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextCauchy, DisplayName: testNextCauchy(org.apache.commons.math.random.RandomDataTest)
07:34:32.469 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextCauchy
07:34:32.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextGamma, DisplayName: testNextGamma(org.apache.commons.math.random.RandomDataTest)
07:34:32.470 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextGamma
07:34:32.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextWeibull, DisplayName: testNextWeibull(org.apache.commons.math.random.RandomDataTest)
07:34:32.471 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextWeibull
07:34:32.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextBeta, DisplayName: testNextBeta(org.apache.commons.math.random.RandomDataTest)
07:34:32.473 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextBeta
07:34:32.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLong, DisplayName: testNextLong(org.apache.commons.math.random.RandomDataTest)
07:34:32.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextLong
07:34:32.484 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextZipf, DisplayName: testNextZipf(org.apache.commons.math.random.RandomDataTest)
07:34:32.485 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.RandomDataTest, MethodName: testNextZipf
07:34:32.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 29
07:34:32.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
07:34:32.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.MaxCountExceededExceptionTest
07:34:32.503 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:34:32.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.MaxCountExceededExceptionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.exception.MaxCountExceededExceptionTest)
07:34:32.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.MaxCountExceededExceptionTest, MethodName: testAccessors
07:34:32.504 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:34:32.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.function.LogisticTest
07:34:32.505 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14
07:34:32.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.LogisticTest)
07:34:32.507 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testSomeValues
07:34:32.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.LogisticTest)
07:34:32.508 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage1
07:34:32.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.LogisticTest)
07:34:32.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage2
07:34:32.509 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.LogisticTest)
07:34:32.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage3
07:34:32.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.LogisticTest)
07:34:32.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage4
07:34:32.510 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage5, DisplayName: testParametricUsage5(org.apache.commons.math.analysis.function.LogisticTest)
07:34:32.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage5
07:34:32.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage6, DisplayName: testParametricUsage6(org.apache.commons.math.analysis.function.LogisticTest)
07:34:32.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testParametricUsage6
07:34:32.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent5, DisplayName: testGradientComponent5(org.apache.commons.math.analysis.function.LogisticTest)
07:34:32.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent5
07:34:32.511 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testPreconditions1, DisplayName: testPreconditions1(org.apache.commons.math.analysis.function.LogisticTest)
07:34:32.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testPreconditions1
07:34:32.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testPreconditions2, DisplayName: testPreconditions2(org.apache.commons.math.analysis.function.LogisticTest)
07:34:32.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testPreconditions2
07:34:32.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testCompareDerivativeSigmoid, DisplayName: testCompareDerivativeSigmoid(org.apache.commons.math.analysis.function.LogisticTest)
07:34:32.512 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testCompareDerivativeSigmoid
07:34:32.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testCompareSigmoid, DisplayName: testCompareSigmoid(org.apache.commons.math.analysis.function.LogisticTest)
07:34:32.513 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testCompareSigmoid
07:34:32.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent0Component4, DisplayName: testGradientComponent0Component4(org.apache.commons.math.analysis.function.LogisticTest)
07:34:32.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent0Component4
07:34:32.514 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent1Component2Component3, DisplayName: testGradientComponent1Component2Component3(org.apache.commons.math.analysis.function.LogisticTest)
07:34:32.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.LogisticTest, MethodName: testGradientComponent1Component2Component3

07:34:32.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14
07:34:32.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:32.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.random.GaussianRandomGeneratorTest
07:34:32.515 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1
07:34:32.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.random.GaussianRandomGeneratorTest, MethodName: testMeanAndStandardDeviation, DisplayName: testMeanAndStandardDeviation(org.apache.commons.math.random.GaussianRandomGeneratorTest)
07:34:32.516 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.random.GaussianRandomGeneratorTest, MethodName: testMeanAndStandardDeviation
07:34:32.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1
07:34:32.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:32.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest
07:34:32.518 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 23
07:34:32.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testVectorialProducts, DisplayName: testVectorialProducts(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testVectorialProducts
07:34:32.521 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAccurateCrossProduct, DisplayName: testAccurateCrossProduct(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAccurateCrossProduct
07:34:32.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testCrossProductCancellation, DisplayName: testCrossProductCancellation(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testCrossProductCancellation
07:34:32.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAdd, DisplayName: testAdd(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAdd
07:34:32.522 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistanceInf, DisplayName: testDistanceInf(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistanceInf
07:34:32.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testSubtract, DisplayName: testSubtract(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testSubtract
07:34:32.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAngular, DisplayName: testAngular(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAngular
07:34:32.523 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAngle, DisplayName: testAngle(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAngle
07:34:32.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNorm1, DisplayName: testNorm1(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNorm1
07:34:32.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNorm, DisplayName: testNorm(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.524 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNorm
07:34:32.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testConstructors, DisplayName: testConstructors(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testConstructors
07:34:32.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testScalarProduct, DisplayName: testScalarProduct(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testScalarProduct
07:34:32.525 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDotProduct, DisplayName: testDotProduct(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.526 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDotProduct
07:34:32.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testCrossProduct, DisplayName: testCrossProduct(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.532 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testCrossProduct
07:34:32.552 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testOrthogonal, DisplayName: testOrthogonal(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testOrthogonal
07:34:32.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAngularSeparation, DisplayName: testAngularSeparation(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAngularSeparation
07:34:32.553 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNormalize, DisplayName: testNormalize(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNormalize
07:34:32.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistance, DisplayName: testDistance(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistance
07:34:32.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.554 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistance1, DisplayName: testDistance1(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistance1

07:34:32.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testCoordinates, DisplayName: testCoordinates(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testCoordinates
07:34:32.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAccurateDotProduct, DisplayName: testAccurateDotProduct(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testAccurateDotProduct
07:34:32.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.555 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistanceSq, DisplayName: testDistanceSq(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testDistanceSq

07:34:32.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNormInf, DisplayName: testNormInf(org.apache.commons.math.geometry.euclidean.threed.Vector3DTest)
07:34:32.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DTest, MethodName: testNormInf
07:34:32.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 23
07:34:32.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
07:34:32.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.analysis.function.HarmonicOscillatorTest
07:34:32.556 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 8
07:34:32.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testDerivative, DisplayName: testDerivative(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)
07:34:32.558 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testDerivative
07:34:32.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testSomeValues, DisplayName: testSomeValues(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)
07:34:32.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testSomeValues
07:34:32.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricValue, DisplayName: testParametricValue(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)
07:34:32.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricValue
07:34:32.559 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage1, DisplayName: testParametricUsage1(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)
07:34:32.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage1
07:34:32.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage2, DisplayName: testParametricUsage2(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)
07:34:32.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage2
07:34:32.560 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage3, DisplayName: testParametricUsage3(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)
07:34:32.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage3
07:34:32.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage4, DisplayName: testParametricUsage4(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)
07:34:32.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricUsage4
07:34:32.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricGradient, DisplayName: testParametricGradient(org.apache.commons.math.analysis.function.HarmonicOscillatorTest)
07:34:32.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.function.HarmonicOscillatorTest, MethodName: testParametricGradient
07:34:32.561 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 8
07:34:32.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
 Run JUnit Test: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest
07:34:32.562 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 28
07:34:32.564 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testConstructorSingleFormat, DisplayName: testConstructorSingleFormat(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testConstructorSingleFormat
07:34:32.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseSimpleWithDecimals, DisplayName: testParseSimpleWithDecimals(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseSimpleWithDecimals
07:34:32.565 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testForgottenSeparator, DisplayName: testForgottenSeparator(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testForgottenSeparator
07:34:32.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseZeroX, DisplayName: testParseZeroX(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseZeroX
07:34:32.566 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNan, DisplayName: testNan(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNan
07:34:32.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testSimpleWithDecimalsTrunc, DisplayName: testSimpleWithDecimalsTrunc(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testSimpleWithDecimalsTrunc
07:34:32.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeX, DisplayName: testParseNegativeX(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.567 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeX
07:34:32.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeY, DisplayName: testParseNegativeY(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeY
07:34:32.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeZ, DisplayName: testParseNegativeZ(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeZ
07:34:32.568 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeAll, DisplayName: testParseNegativeAll(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeAll
07:34:32.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testDefaultFormatVector3D, DisplayName: testDefaultFormatVector3D(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testDefaultFormatVector3D
07:34:32.569 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testForgottenPrefix, DisplayName: testForgottenPrefix(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testForgottenPrefix
07:34:32.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testForgottenSuffix, DisplayName: testForgottenSuffix(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testForgottenSuffix
07:34:32.570 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNegativeX, DisplayName: testNegativeX(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNegativeX
07:34:32.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNegativeY, DisplayName: testNegativeY(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNegativeY
07:34:32.571 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNegativeZ, DisplayName: testNegativeZ(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNegativeZ
07:34:32.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseIgnoredWhitespace, DisplayName: testParseIgnoredWhitespace(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseIgnoredWhitespace
07:34:32.572 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseSimpleWithDecimalsTrunc, DisplayName: testParseSimpleWithDecimalsTrunc(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseSimpleWithDecimalsTrunc
07:34:32.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: tesNegativeInfinity, DisplayName: tesNegativeInfinity(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: tesNegativeInfinity
07:34:32.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeInfinity, DisplayName: testParseNegativeInfinity(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.573 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNegativeInfinity
07:34:32.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNonDefaultSetting, DisplayName: testNonDefaultSetting(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testNonDefaultSetting
07:34:32.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testSimpleNoDecimals, DisplayName: testSimpleNoDecimals(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testSimpleNoDecimals
07:34:32.574 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseSimpleNoDecimals, DisplayName: testParseSimpleNoDecimals(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseSimpleNoDecimals
07:34:32.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testPositiveInfinity, DisplayName: testPositiveInfinity(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testPositiveInfinity
07:34:32.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNonDefaultSetting, DisplayName: testParseNonDefaultSetting(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.575 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNonDefaultSetting
07:34:32.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNan, DisplayName: testParseNan(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParseNan
07:34:32.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParsePositiveInfinity, DisplayName: testParsePositiveInfinity(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testParsePositiveInfinity
07:34:32.576 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testSimpleWithDecimals, DisplayName: testSimpleWithDecimals(org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest)
07:34:32.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest, MethodName: testSimpleWithDecimals
07:34:32.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 28
07:34:32.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:32.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.inference.ChiSquareTestTest
07:34:32.577 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 7
07:34:32.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonEqualCounts, DisplayName: testChiSquareDataSetsComparisonEqualCounts(org.apache.commons.math.stat.inference.ChiSquareTestTest)
07:34:32.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonEqualCounts
07:34:32.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareIndependence, DisplayName: testChiSquareIndependence(org.apache.commons.math.stat.inference.ChiSquareTestTest)
07:34:32.579 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareIndependence
07:34:32.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonUnEqualCounts, DisplayName: testChiSquareDataSetsComparisonUnEqualCounts(org.apache.commons.math.stat.inference.ChiSquareTestTest)
07:34:32.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonUnEqualCounts
07:34:32.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareZeroCount, DisplayName: testChiSquareZeroCount(org.apache.commons.math.stat.inference.ChiSquareTestTest)
07:34:32.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareZeroCount
07:34:32.580 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareLargeTestStatistic, DisplayName: testChiSquareLargeTestStatistic(org.apache.commons.math.stat.inference.ChiSquareTestTest)
07:34:32.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareLargeTestStatistic
07:34:32.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquare, DisplayName: testChiSquare(org.apache.commons.math.stat.inference.ChiSquareTestTest)
07:34:32.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquare
07:34:32.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonBadCounts, DisplayName: testChiSquareDataSetsComparisonBadCounts(org.apache.commons.math.stat.inference.ChiSquareTestTest)
07:34:32.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.581 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.inference.ChiSquareTestTest, MethodName: testChiSquareDataSetsComparisonBadCounts
07:34:32.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 7
07:34:32.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:32.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest
07:34:32.582 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10
07:34:32.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testDimensionCheck, DisplayName: testDimensionCheck(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)
07:34:32.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testDimensionCheck
07:34:32.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testBackward, DisplayName: testBackward(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)
07:34:32.584 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testBackward
07:34:32.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testVariableSteps, DisplayName: testVariableSteps(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)
07:34:32.585 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testVariableSteps
07:34:32.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testMissedEndEvent, DisplayName: testMissedEndEvent(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)
07:34:32.588 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.589 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testMissedEndEvent
07:34:32.589 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.589 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testMinStep, DisplayName: testMinStep(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)
07:34:32.589 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.589 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testMinStep
07:34:32.589 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testUnstableDerivative, DisplayName: testUnstableDerivative(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)
07:34:32.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testUnstableDerivative
07:34:32.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testNullIntervalCheck, DisplayName: testNullIntervalCheck(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)
07:34:32.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testNullIntervalCheck
07:34:32.590 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testEvents, DisplayName: testEvents(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)
07:34:32.591 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testEvents
07:34:32.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testKepler, DisplayName: testKepler(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)
07:34:32.592 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.596 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testKepler
07:34:32.596 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testIncreasingTolerance, DisplayName: testIncreasingTolerance(org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest)
07:34:32.597 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, MethodName: testIncreasingTolerance
07:34:32.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10

07:34:32.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
07:34:32.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.distribution.NormalDistributionTest
07:34:32.600 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 15

07:34:32.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testExtremeValues, DisplayName: testExtremeValues(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testExtremeValues
07:34:32.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testPreconditions
07:34:32.603 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetStandardDeviation, DisplayName: testGetStandardDeviation(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetStandardDeviation

07:34:32.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testQuantiles, DisplayName: testQuantiles(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testQuantiles
07:34:32.604 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetMean, DisplayName: testGetMean(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testGetMean

07:34:32.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testMath280, DisplayName: testMath280(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testMath280
07:34:32.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.605 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testMomonts
07:34:32.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testDensity
07:34:32.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes
07:34:32.606 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testDensities
07:34:32.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testInverseCumulativeProbabilities
07:34:32.607 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testSampling
07:34:32.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testCumulativeProbabilities
07:34:32.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testIllegalArguments
07:34:32.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.NormalDistributionTest)
07:34:32.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.NormalDistributionTest, MethodName: testConsistency
07:34:32.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 15
07:34:32.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
TestResult: 0
07:34:32.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 
 Run JUnit Test: org.apache.commons.math.distribution.PascalDistributionTest
07:34:32.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9
07:34:32.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.PascalDistributionTest)
07:34:32.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testMomonts
07:34:32.611 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate0, DisplayName: testDegenerate0(org.apache.commons.math.distribution.PascalDistributionTest)
07:34:32.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate0
07:34:32.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate1, DisplayName: testDegenerate1(org.apache.commons.math.distribution.PascalDistributionTest)
07:34:32.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDegenerate1
07:34:32.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.PascalDistributionTest)
07:34:32.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testDensities
07:34:32.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.PascalDistributionTest)
07:34:32.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testInverseCumulativeProbabilities
07:34:32.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.614 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.PascalDistributionTest)
07:34:32.614 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testSampling

07:34:32.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.PascalDistributionTest)

07:34:32.653 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testCumulativeProbabilities

07:34:32.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.PascalDistributionTest)

07:34:32.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testIllegalArguments

07:34:32.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.PascalDistributionTest)

07:34:32.654 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.PascalDistributionTest, MethodName: testFloatingPointArguments

07:34:32.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9

07:34:32.655 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.WeibullDistributionTest

07:34:32.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:34:32.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testAlpha, DisplayName: testAlpha(org.apache.commons.math.distribution.WeibullDistributionTest)

07:34:32.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testAlpha

07:34:32.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testBeta, DisplayName: testBeta(org.apache.commons.math.distribution.WeibullDistributionTest)

07:34:32.657 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testBeta

07:34:32.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.WeibullDistributionTest)

07:34:32.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testMomonts

07:34:32.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.WeibullDistributionTest)

07:34:32.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

07:34:32.658 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.WeibullDistributionTest)

07:34:32.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testDensities

07:34:32.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.WeibullDistributionTest)

07:34:32.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testInverseCumulativeProbabilities

07:34:32.659 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.WeibullDistributionTest)

07:34:32.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testSampling

07:34:32.660 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.WeibullDistributionTest)

07:34:32.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testCumulativeProbabilities

07:34:32.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.WeibullDistributionTest)

07:34:32.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testIllegalArguments

07:34:32.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.WeibullDistributionTest)

07:34:32.661 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.WeibullDistributionTest, MethodName: testConsistency

07:34:32.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10

07:34:32.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest

07:34:32.662 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:34:32.663 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, MethodName: derivativesConsistency, DisplayName: derivativesConsistency(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)

07:34:32.664 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, MethodName: derivativesConsistency

07:34:32.665 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, MethodName: serialization, DisplayName: serialization(org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest)

07:34:32.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, MethodName: serialization

07:34:32.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2

07:34:32.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:32.688 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.ode.events.EventStateTest

07:34:32.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:34:32.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.events.EventStateTest, MethodName: closeEvents, DisplayName: closeEvents(org.apache.commons.math.ode.events.EventStateTest)

07:34:32.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.events.EventStateTest, MethodName: closeEvents

07:34:32.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1

07:34:32.690 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest

07:34:32.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:34:32.692 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testLessThanOnePeriodCoverage, DisplayName: testLessThanOnePeriodCoverage(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

07:34:32.693 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testLessThanOnePeriodCoverage

07:34:32.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testSine, DisplayName: testSine(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

07:34:32.694 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testSine

07:34:32.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testTooFewSamples, DisplayName: testTooFewSamples(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

07:34:32.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testTooFewSamples

07:34:32.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testMoreThanOnePeriodCoverage, DisplayName: testMoreThanOnePeriodCoverage(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

07:34:32.695 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testMoreThanOnePeriodCoverage

07:34:32.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testUnsortedSamples, DisplayName: testUnsortedSamples(org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest)

07:34:32.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, MethodName: testUnsortedSamples

07:34:32.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5

07:34:32.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.ContinuousOutputModelTest
07:34:32.696 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:34:32.697 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testBoundaries, DisplayName: testBoundaries(org.apache.commons.math.ode.ContinuousOutputModelTest)

07:34:32.699 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testBoundaries

07:34:32.700 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testModelsMerging, DisplayName: testModelsMerging(org.apache.commons.math.ode.ContinuousOutputModelTest)

07:34:32.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testModelsMerging

07:34:32.701 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testRandomAccess, DisplayName: testRandomAccess(org.apache.commons.math.ode.ContinuousOutputModelTest)

07:34:32.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testRandomAccess

07:34:32.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testErrorConditions, DisplayName: testErrorConditions(org.apache.commons.math.ode.ContinuousOutputModelTest)

07:34:32.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.ContinuousOutputModelTest, MethodName: testErrorConditions

07:34:32.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

07:34:32.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:32.705 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.exception.util.ArgUtilsTest

07:34:32.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 1

07:34:32.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.exception.util.ArgUtilsTest, MethodName: testFlatten, DisplayName: testFlatten(org.apache.commons.math.exception.util.ArgUtilsTest)

07:34:32.706 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.exception.util.ArgUtilsTest, MethodName: testFlatten

07:34:32.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 1

07:34:32.707 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.linear.SimplexTableauTest

07:34:32.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:34:32.708 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testInitialization, DisplayName: testInitialization(org.apache.commons.math.optimization.linear.SimplexTableauTest)

07:34:32.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testInitialization

07:34:32.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testTableauWithNoArtificialVars, DisplayName: testTableauWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexTableauTest)

07:34:32.713 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testTableauWithNoArtificialVars

07:34:32.714 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.optimization.linear.SimplexTableauTest)

07:34:32.717 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testSerial

07:34:32.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testDropPhase1Objective, DisplayName: testDropPhase1Objective(org.apache.commons.math.optimization.linear.SimplexTableauTest)

07:34:32.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexTableauTest, MethodName: testDropPhase1Objective

07:34:32.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

07:34:32.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:32.718 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.stat.descriptive.summary.SumLogTest

07:34:32.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 11
07:34:32.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSpecialValues, DisplayName: testSpecialValues(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:34:32.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSpecialValues

07:34:32.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:34:32.720 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testMomentSmallSamples

07:34:32.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:34:32.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSerialization

07:34:32.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:34:32.721 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testIncrementation

07:34:32.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:34:32.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testConsistency

07:34:32.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:34:32.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEqualsAndHashCode

07:34:32.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:34:32.722 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testCopyConsistency

07:34:32.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:34:32.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testSerial

07:34:32.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:34:32.723 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testCopy

07:34:32.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:34:32.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testEvaluation

07:34:32.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.summary.SumLogTest)

07:34:32.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.summary.SumLogTest, MethodName: testWeightedConsistency

07:34:32.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 11

07:34:32.724 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.FieldLUDecompositionImplTest

07:34:32.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:34:32.726 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testPPermutation, DisplayName: testPPermutation(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:34:32.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testPPermutation

07:34:32.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testUUpperTriangular, DisplayName: testUUpperTriangular(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:34:32.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testUUpperTriangular

07:34:32.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:34:32.727 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testDimensions

07:34:32.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testNonSquare, DisplayName: testNonSquare(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:34:32.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testNonSquare

07:34:32.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testSingular, DisplayName: testSingular(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:34:32.728 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testSingular

07:34:32.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testLLowerTriangular, DisplayName: testLLowerTriangular(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:34:32.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testLLowerTriangular

07:34:32.729 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testPAEqualLU, DisplayName: testPAEqualLU(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:34:32.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testPAEqualLU

07:34:32.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testMatricesValues1, DisplayName: testMatricesValues1(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:34:32.741 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testMatricesValues1

07:34:32.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testMatricesValues2, DisplayName: testMatricesValues2(org.apache.commons.math.linear.FieldLUDecompositionImplTest)

07:34:32.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.FieldLUDecompositionImplTest, MethodName: testMatricesValues2

07:34:32.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9

07:34:32.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.ExponentialDistributionTest
07:34:32.742 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:32.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

07:34:32.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:34:32.744 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testPreconditions

07:34:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbability2, DisplayName: testCumulativeProbability2(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:34:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbability2

07:34:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilityExtremes, DisplayName: testCumulativeProbabilityExtremes(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:34:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilityExtremes

07:34:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:34:32.745 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testMomonts

07:34:32.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testDensity, DisplayName: testDensity(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:34:32.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testDensity

07:34:32.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes, DisplayName: testInverseCumulativeProbabilityExtremes(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:34:32.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilityExtremes

07:34:32.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testMeanAccessors, DisplayName: testMeanAccessors(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:34:32.746 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testMeanAccessors

07:34:32.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:34:32.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testDensities

07:34:32.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:34:32.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testInverseCumulativeProbabilities

07:34:32.747 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:34:32.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testSampling

07:34:32.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:34:32.748 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testCumulativeProbabilities

07:34:32.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:34:32.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testIllegalArguments

07:34:32.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.distribution.ExponentialDistributionTest)

07:34:32.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.ExponentialDistributionTest, MethodName: testConsistency

07:34:32.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13

07:34:32.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:32.749 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.fitting.PolynomialFitterTest

07:34:32.750 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:34:32.751 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testSmallError, DisplayName: testSmallError(org.apache.commons.math.optimization.fitting.PolynomialFitterTest)

07:34:32.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testSmallError

07:34:32.761 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testRedundantSolvable, DisplayName: testRedundantSolvable(org.apache.commons.math.optimization.fitting.PolynomialFitterTest)

07:34:32.767 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testRedundantSolvable

07:34:32.768 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testNoError, DisplayName: testNoError(org.apache.commons.math.optimization.fitting.PolynomialFitterTest)

07:34:32.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testNoError

07:34:32.770 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testRedundantUnsolvable, DisplayName: testRedundantUnsolvable(org.apache.commons.math.optimization.fitting.PolynomialFitterTest)

07:34:32.773 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.fitting.PolynomialFitterTest, MethodName: testRedundantUnsolvable

07:34:32.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

07:34:32.774 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.moment.VarianceTest

07:34:32.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 13

07:34:32.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testNaN, DisplayName: testNaN(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:34:32.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testNaN

07:34:32.776 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testWeightedVariance, DisplayName: testWeightedVariance(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:34:32.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testWeightedVariance

07:34:32.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testPopulation, DisplayName: testPopulation(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:34:32.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testPopulation

07:34:32.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testMomentSmallSamples, DisplayName: testMomentSmallSamples(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:34:32.777 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testMomentSmallSamples

07:34:32.778 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:34:32.779 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testSerialization

07:34:32.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testIncrementation, DisplayName: testIncrementation(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:34:32.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testIncrementation

07:34:32.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testConsistency, DisplayName: testConsistency(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:34:32.780 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testConsistency

07:34:32.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:34:32.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEqualsAndHashCode

07:34:32.781 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testCopyConsistency, DisplayName: testCopyConsistency(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:34:32.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testCopyConsistency

07:34:32.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testSerial, DisplayName: testSerial(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:34:32.782 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testSerial

07:34:32.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:34:32.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testCopy

07:34:32.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEvaluation, DisplayName: testEvaluation(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:34:32.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testEvaluation

07:34:32.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testWeightedConsistency, DisplayName: testWeightedConsistency(org.apache.commons.math.stat.descriptive.moment.VarianceTest)

07:34:32.783 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.moment.VarianceTest, MethodName: testWeightedConsistency

07:34:32.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 13

07:34:32.784 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.distribution.HypergeometricDistributionTest

07:34:32.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 14

07:34:32.785 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testLargeValues, DisplayName: testLargeValues(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:34:33.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testLargeValues

07:34:33.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoFailures, DisplayName: testDegenerateNoFailures(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:34:33.052 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoFailures

07:34:33.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testAccessors, DisplayName: testAccessors(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:34:33.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testAccessors

07:34:33.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testPreconditions, DisplayName: testPreconditions(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:34:33.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testPreconditions

07:34:33.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoSuccesses, DisplayName: testDegenerateNoSuccesses(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:34:33.053 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateNoSuccesses

07:34:33.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateFullSample, DisplayName: testDegenerateFullSample(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:34:33.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDegenerateFullSample

07:34:33.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testMomonts, DisplayName: testMomonts(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:34:33.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testMomonts

07:34:33.054 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testMoreLargeValues, DisplayName: testMoreLargeValues(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:34:33.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testMoreLargeValues

07:34:33.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDensities, DisplayName: testDensities(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:34:33.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testDensities

07:34:33.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testInverseCumulativeProbabilities, DisplayName: testInverseCumulativeProbabilities(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:34:33.229 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testInverseCumulativeProbabilities

07:34:33.230 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testSampling, DisplayName: testSampling(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:34:33.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testSampling

07:34:33.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testCumulativeProbabilities, DisplayName: testCumulativeProbabilities(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:34:33.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testCumulativeProbabilities

07:34:33.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testIllegalArguments, DisplayName: testIllegalArguments(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:34:33.236 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testIllegalArguments

07:34:33.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testFloatingPointArguments, DisplayName: testFloatingPointArguments(org.apache.commons.math.distribution.HypergeometricDistributionTest)

07:34:33.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.distribution.HypergeometricDistributionTest, MethodName: testFloatingPointArguments

07:34:33.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 14

07:34:33.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest
07:34:33.237 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:33.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 3

07:34:33.238 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest)

07:34:33.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testParameters

07:34:33.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest)

07:34:33.239 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testSinFunction

07:34:33.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest)

07:34:33.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, MethodName: testExpm1Function

07:34:33.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 3

07:34:33.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.optimization.linear.SimplexSolverTest
07:34:33.240 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:33.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 22

07:34:33.245 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testRestrictVariablesToNonNegative, DisplayName: testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.248 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testRestrictVariablesToNonNegative

07:34:33.249 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testEpsilon, DisplayName: testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testEpsilon

07:34:33.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testUnboundedSolution, DisplayName: testUnboundedSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.250 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testUnboundedSolution

07:34:33.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSingleVariableAndConstraint, DisplayName: testSingleVariableAndConstraint(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.251 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSingleVariableAndConstraint

07:34:33.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSimplexSolver, DisplayName: testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.252 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSimplexSolver

07:34:33.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath290GEQ, DisplayName: testMath290GEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.253 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath290GEQ

07:34:33.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath290LEQ, DisplayName: testMath290LEQ(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath290LEQ

07:34:33.254 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testTrivialModel, DisplayName: testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testTrivialModel

07:34:33.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testInfeasibleSolution, DisplayName: testInfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.255 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testInfeasibleSolution

07:34:33.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath272, DisplayName: testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.256 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath272

07:34:33.257 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath286, DisplayName: testMath286(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath286

07:34:33.258 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath288, DisplayName: testMath288(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.259 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath288

07:34:33.259 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath293, DisplayName: testMath293(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath293

07:34:33.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testModelWithNoArtificialVars, DisplayName: testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.261 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testModelWithNoArtificialVars

07:34:33.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMinimization, DisplayName: testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.262 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMinimization

07:34:33.263 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434PivotRowSelection2, DisplayName: testMath434PivotRowSelection2(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434PivotRowSelection2

07:34:33.266 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testDegeneracy, DisplayName: testDegeneracy(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testDegeneracy

07:34:33.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434PivotRowSelection, DisplayName: testMath434PivotRowSelection(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434PivotRowSelection

07:34:33.267 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testLargeModel, DisplayName: testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.608 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testLargeModel

07:34:33.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSolutionWithNegativeDecisionVariable, DisplayName: testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testSolutionWithNegativeDecisionVariable

07:34:33.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434UnfeasibleSolution, DisplayName: testMath434UnfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.609 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434UnfeasibleSolution

07:34:33.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434NegativeVariable, DisplayName: testMath434NegativeVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)

07:34:33.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.linear.SimplexSolverTest, MethodName: testMath434NegativeVariable

07:34:33.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 22

07:34:33.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:33.610 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 -  Run JUnit Test: org.apache.commons.math.optimization.univariate.BrentOptimizerTest

07:34:33.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:34:33.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMax, DisplayName: testQuinticMax(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

07:34:33.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMax

07:34:33.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMin, DisplayName: testQuinticMin(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

07:34:33.612 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMin

07:34:33.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testMinEndpoints, DisplayName: testMinEndpoints(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

07:34:33.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testMinEndpoints

07:34:33.613 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMinStatistics, DisplayName: testQuinticMinStatistics(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

07:34:33.622 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testQuinticMinStatistics

07:34:33.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testSinMin, DisplayName: testSinMin(org.apache.commons.math.optimization.univariate.BrentOptimizerTest)

07:34:33.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.optimization.univariate.BrentOptimizerTest, MethodName: testSinMin

07:34:33.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5

07:34:33.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.analysis.solvers.RiddersSolverTest
07:34:33.623 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:33.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 4

07:34:33.624 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testParameters, DisplayName: testParameters(org.apache.commons.math.analysis.solvers.RiddersSolverTest)

07:34:33.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testParameters

07:34:33.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testSinFunction, DisplayName: testSinFunction(org.apache.commons.math.analysis.solvers.RiddersSolverTest)

07:34:33.625 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testSinFunction

07:34:33.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testExpm1Function, DisplayName: testExpm1Function(org.apache.commons.math.analysis.solvers.RiddersSolverTest)

07:34:33.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testExpm1Function

07:34:33.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testQuinticFunction, DisplayName: testQuinticFunction(org.apache.commons.math.analysis.solvers.RiddersSolverTest)

07:34:33.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.analysis.solvers.RiddersSolverTest, MethodName: testQuinticFunction

07:34:33.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 4

07:34:33.626 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.ode.sampling.StepNormalizerTest

07:34:33.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 2

07:34:33.627 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerTest, MethodName: testBoundaries, DisplayName: testBoundaries(org.apache.commons.math.ode.sampling.StepNormalizerTest)

07:34:33.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerTest, MethodName: testBoundaries

07:34:33.629 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerTest, MethodName: testBeforeEnd, DisplayName: testBeforeEnd(org.apache.commons.math.ode.sampling.StepNormalizerTest)

07:34:33.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.ode.sampling.StepNormalizerTest, MethodName: testBeforeEnd

07:34:33.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 2

07:34:33.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.linear.CholeskyDecompositionImplTest
07:34:33.630 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:33.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 9

07:34:33.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testMatricesValues, DisplayName: testMatricesValues(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:34:33.632 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testMatricesValues

07:34:33.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNotSymmetricMatrixException, DisplayName: testNotSymmetricMatrixException(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:34:33.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNotSymmetricMatrixException

07:34:33.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testDimensions, DisplayName: testDimensions(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:34:33.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testDimensions

07:34:33.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testMath274, DisplayName: testMath274(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:34:33.633 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testMath274

07:34:33.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNonSquare, DisplayName: testNonSquare(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:34:33.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNonSquare

07:34:33.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNotPositiveDefinite, DisplayName: testNotPositiveDefinite(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:34:33.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testNotPositiveDefinite

07:34:33.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testLLowerTriangular, DisplayName: testLLowerTriangular(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:34:33.634 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testLLowerTriangular

07:34:33.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testLTTransposed, DisplayName: testLTTransposed(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:34:33.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testLTTransposed

07:34:33.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testAEqualLLT, DisplayName: testAEqualLLT(org.apache.commons.math.linear.CholeskyDecompositionImplTest)

07:34:33.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.linear.CholeskyDecompositionImplTest, MethodName: testAEqualLLT

07:34:33.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 9

07:34:33.635 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest

07:34:33.636 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 10

07:34:33.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testProductAndGeometricMean, DisplayName: testProductAndGeometricMean(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:34:33.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testProductAndGeometricMean

07:34:33.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testGetSummary, DisplayName: testGetSummary(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:34:33.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testGetSummary

07:34:33.637 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSerialization, DisplayName: testSerialization(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:34:33.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSerialization

07:34:33.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testStats, DisplayName: testStats(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:34:33.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testStats

07:34:33.641 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testCopy, DisplayName: testCopy(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:34:33.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testCopy

07:34:33.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testNaNContracts, DisplayName: testNaNContracts(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:34:33.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testNaNContracts

07:34:33.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testN0andN1Conditions, DisplayName: testN0andN1Conditions(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:34:33.642 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testN0andN1Conditions

07:34:33.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterInjection, DisplayName: testSetterInjection(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:34:33.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterInjection

07:34:33.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterIllegalState, DisplayName: testSetterIllegalState(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:34:33.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testSetterIllegalState

07:34:33.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testEqualsAndHashCode, DisplayName: testEqualsAndHashCode(org.apache.commons.math.stat.descriptive.SummaryStatisticsTest)

07:34:33.643 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, MethodName: testEqualsAndHashCode

07:34:33.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 10

07:34:33.644 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0
 Run JUnit Test: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest

07:34:33.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases to execute : 5

07:34:33.645 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregation, DisplayName: testAggregation(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)

07:34:33.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregation

07:34:33.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregateSpecialValues, DisplayName: testAggregateSpecialValues(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)
07:34:33.647 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - 

07:34:33.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregateSpecialValues

07:34:33.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregationConsistency, DisplayName: testAggregationConsistency(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)

07:34:33.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregationConsistency

07:34:33.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregate, DisplayName: testAggregate(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)

07:34:33.648 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregate

07:34:33.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Started : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregateDegenerate, DisplayName: testAggregateDegenerate(org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest)

07:34:33.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - * Finished : ClasseName: org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, MethodName: testAggregateDegenerate

07:34:33.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - Number of testcases executed : 5

07:34:33.649 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - TestResult: 0

07:34:33.981 [main] DEBUG f.i.l.r.n.sps.gzoltar.GZoltarJava7 - <<< End subprocess output
07:34:34.829 [main] DEBUG f.i.l.r.n.s.g.GZoltarSuspiciousProgramStatements - Suspicious statements:
GZoltarStatement [ContainingClass=org.apache.commons.math.util.MathUtils, LineNumber=2334, Suspiciousness=0.012567188245474982]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.MathUtils, LineNumber=2337, Suspiciousness=0.012620871481070599]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=302, Suspiciousness=0.005123289667095406]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=3410, Suspiciousness=0.004481377120091212]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=97, Suspiciousness=0.022484687520664393]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=98, Suspiciousness=0.022484687520664393]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=99, Suspiciousness=0.022484687520664393]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=101, Suspiciousness=0.022484687520664393]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=102, Suspiciousness=0.022484687520664393]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=104, Suspiciousness=0.022484687520664393]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=115, Suspiciousness=0.02577696311132335]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=118, Suspiciousness=0.026153289048297074]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=121, Suspiciousness=0.02831827358942995]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=128, Suspiciousness=0.036986336072765455]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=131, Suspiciousness=0.038124642583151166]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=132, Suspiciousness=0.038124642583151166]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=156, Suspiciousness=0.03179815003744467]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=157, Suspiciousness=0.03179815003744467]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=161, Suspiciousness=0.03498557142706598]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=353, Suspiciousness=0.028565599452002117]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=362, Suspiciousness=0.02869171750210899]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=386, Suspiciousness=0.022990024493585143]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=415, Suspiciousness=0.02577696311132335]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=416, Suspiciousness=0.02577696311132335]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=419, Suspiciousness=0.02934836354418746]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=426, Suspiciousness=0.03251280443811776]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=486, Suspiciousness=0.030499714066520935]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=487, Suspiciousness=0.030499714066520935]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=491, Suspiciousness=0.03251280443811776]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=1125, Suspiciousness=0.017049858486761837]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=250, Suspiciousness=0.07397267214553091]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=251, Suspiciousness=0.07397267214553091]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=255, Suspiciousness=0.07874992309581577]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=256, Suspiciousness=0.07874992309581577]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=257, Suspiciousness=0.07874992309581577]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=261, Suspiciousness=0.04402254531628119]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=265, Suspiciousness=0.04402254531628119]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=271, Suspiciousness=0.05083285677753489]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=272, Suspiciousness=0.05083285677753489]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=273, Suspiciousness=0.05083285677753489]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=317, Suspiciousness=0.020024043286581833]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=320, Suspiciousness=0.022990024493585143]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=321, Suspiciousness=0.023531040266750583]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=322, Suspiciousness=0.023531040266750583]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=325, Suspiciousness=0.024419314525275217]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1256, Suspiciousness=0.007196852497114987]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1266, Suspiciousness=0.00623613028988775]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1269, Suspiciousness=0.006241350994267897]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1272, Suspiciousness=0.006241350994267897]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1283, Suspiciousness=0.006241350994267897]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1292, Suspiciousness=0.006246584832499385]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1294, Suspiciousness=0.006246584832499385]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1314, Suspiciousness=0.006246584832499385]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1315, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1362, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1373, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1375, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1376, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1378, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1429, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1430, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1431, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1432, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1433, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1434, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1435, Suspiciousness=0.007311746800347169]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1452, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1453, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1454, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1455, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1456, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1457, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1459, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1460, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1461, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1462, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1464, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1465, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1466, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1467, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1469, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1470, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1471, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1472, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1474, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1475, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1476, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1477, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1479, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1484, Suspiciousness=0.006310435740535299]
GZoltarStatement [ContainingClass=org.apache.commons.math.RetryRunner, LineNumber=39, Suspiciousness=0.04075695729696112]
GZoltarStatement [ContainingClass=org.apache.commons.math.RetryRunner, LineNumber=40, Suspiciousness=0.04075695729696112]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2973, Suspiciousness=0.017727598712973542]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2977, Suspiciousness=0.01784860761749785]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2978, Suspiciousness=0.023816275411477048]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2979, Suspiciousness=0.023816275411477048]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2980, Suspiciousness=0.023816275411477048]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2982, Suspiciousness=0.023816275411477048]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2990, Suspiciousness=0.024419314525275217]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2997, Suspiciousness=0.027842302319485226]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2991, Suspiciousness=0.02831827358942995]
GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2994, Suspiciousness=0.07624928516630233]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=417, Suspiciousness=0.04402254531628119]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=266, Suspiciousness=0.06819943394704735]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=267, Suspiciousness=0.06819943394704735]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=268, Suspiciousness=0.06819943394704735]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=744, Suspiciousness=0.033277916281986085]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=745, Suspiciousness=0.0576390417704235]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=748, Suspiciousness=0.039374961547907886]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=258, Suspiciousness=0.15249857033260467]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=577, Suspiciousness=0.07624928516630233]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=581, Suspiciousness=0.08804509063256238]
GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=1177, Suspiciousness=0.21566554640687682]
07:34:35.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1. org.apache.commons.math.ConvergenceExceptionTest#testConstructorCause started...]
07:34:35.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1. SUCCESS]
07:34:35.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2. org.apache.commons.math.ConvergenceExceptionTest#testConstructor started...]
07:34:35.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2. SUCCESS]
07:34:35.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#3. org.apache.commons.math.MathConfigurationExceptionTest#testConstructorCause started...]
07:34:35.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#3. SUCCESS]
07:34:35.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#4. org.apache.commons.math.MathConfigurationExceptionTest#testConstructor started...]
07:34:35.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#4. SUCCESS]
07:34:35.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#5. org.apache.commons.math.MathExceptionTest#testSerialization started...]
07:34:35.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#5. SUCCESS]
07:34:35.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#6. org.apache.commons.math.MathExceptionTest#testConstructorCause started...]
07:34:35.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#6. SUCCESS]
07:34:35.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#7. org.apache.commons.math.MathExceptionTest#testPrintStackTrace started...]
07:34:35.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#7. SUCCESS]
07:34:35.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#8. org.apache.commons.math.MathExceptionTest#testConstructor started...]
07:34:35.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#8. SUCCESS]
07:34:35.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#9. org.apache.commons.math.RetryRunnerTest#testRetryFailSometimes started...]
07:34:35.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#9. SUCCESS]
07:34:35.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#10. org.apache.commons.math.RetryRunnerTest#testRetryFailAlways started...]
07:34:35.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#10. SUCCESS]
07:34:35.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#11. org.apache.commons.math.analysis.FunctionUtilsTest#testCollector started...]
07:34:35.594 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#11. SUCCESS]
07:34:35.595 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#12. org.apache.commons.math.analysis.FunctionUtilsTest#testFixingArguments started...]
07:34:35.596 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#12. SUCCESS]
07:34:35.596 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#13. org.apache.commons.math.analysis.FunctionUtilsTest#testAdd started...]
07:34:35.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#13. SUCCESS]
07:34:35.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#14. org.apache.commons.math.analysis.FunctionUtilsTest#testSinc started...]
07:34:35.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#14. SUCCESS]
07:34:35.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#15. org.apache.commons.math.analysis.FunctionUtilsTest#testCombine started...]
07:34:35.599 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#15. SUCCESS]
07:34:35.599 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#16. org.apache.commons.math.analysis.FunctionUtilsTest#testCompose started...]
07:34:35.599 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#16. SUCCESS]
07:34:35.599 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#17. org.apache.commons.math.analysis.FunctionUtilsTest#testMultiply started...]
07:34:35.599 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#17. SUCCESS]
07:34:35.600 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#18. org.apache.commons.math.analysis.function.GaussianTest#testDerivative started...]
07:34:35.600 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#18. SUCCESS]
07:34:35.600 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#19. org.apache.commons.math.analysis.function.GaussianTest#testDerivativeNaN started...]
07:34:35.600 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#19. SUCCESS]
07:34:35.601 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#20. org.apache.commons.math.analysis.function.GaussianTest#testSomeValues started...]
07:34:35.601 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#20. SUCCESS]
07:34:35.601 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#21. org.apache.commons.math.analysis.function.GaussianTest#testParametricValue started...]
07:34:35.601 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#21. SUCCESS]
07:34:35.601 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#22. org.apache.commons.math.analysis.function.GaussianTest#testPreconditions started...]
07:34:35.602 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#22. SUCCESS]
07:34:35.602 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#23. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage1 started...]
07:34:35.602 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#23. SUCCESS]
07:34:35.602 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#24. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage2 started...]
07:34:35.602 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#24. SUCCESS]
07:34:35.602 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#25. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage3 started...]
07:34:35.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#25. SUCCESS]
07:34:35.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#26. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage4 started...]
07:34:35.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#26. SUCCESS]
07:34:35.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#27. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage5 started...]
07:34:35.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#27. SUCCESS]
07:34:35.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#28. org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage6 started...]
07:34:35.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#28. SUCCESS]
07:34:35.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#29. org.apache.commons.math.analysis.function.GaussianTest#testLargeArguments started...]
07:34:35.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#29. SUCCESS]
07:34:35.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#30. org.apache.commons.math.analysis.function.GaussianTest#testDerivativeLargeArguments started...]
07:34:35.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#30. SUCCESS]
07:34:35.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#31. org.apache.commons.math.analysis.function.GaussianTest#testParametricGradient started...]
07:34:35.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#31. SUCCESS]
07:34:35.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#32. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testDerivative started...]
07:34:35.605 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#32. SUCCESS]
07:34:35.605 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#33. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testSomeValues started...]
07:34:35.605 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#33. SUCCESS]
07:34:35.605 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#34. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricValue started...]
07:34:35.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#34. SUCCESS]
07:34:35.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#35. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage1 started...]
07:34:35.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#35. SUCCESS]
07:34:35.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#36. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage2 started...]
07:34:35.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#36. SUCCESS]
07:34:35.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#37. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage3 started...]
07:34:35.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#37. SUCCESS]
07:34:35.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#38. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage4 started...]
07:34:35.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#38. SUCCESS]
07:34:35.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#39. org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricGradient started...]
07:34:35.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#39. SUCCESS]
07:34:35.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#40. org.apache.commons.math.analysis.function.LogisticTest#testSomeValues started...]
07:34:35.608 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#40. SUCCESS]
07:34:35.608 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#41. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage1 started...]
07:34:35.608 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#41. SUCCESS]
07:34:35.608 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#42. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage2 started...]
07:34:35.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#42. SUCCESS]
07:34:35.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#43. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage3 started...]
07:34:35.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#43. SUCCESS]
07:34:35.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#44. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage4 started...]
07:34:35.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#44. SUCCESS]
07:34:35.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#45. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage5 started...]
07:34:35.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#45. SUCCESS]
07:34:35.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#46. org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage6 started...]
07:34:35.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#46. SUCCESS]
07:34:35.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#47. org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent5 started...]
07:34:35.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#47. SUCCESS]
07:34:35.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#48. org.apache.commons.math.analysis.function.LogisticTest#testPreconditions1 started...]
07:34:35.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#48. SUCCESS]
07:34:35.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#49. org.apache.commons.math.analysis.function.LogisticTest#testPreconditions2 started...]
07:34:35.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#49. SUCCESS]
07:34:35.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#50. org.apache.commons.math.analysis.function.LogisticTest#testCompareDerivativeSigmoid started...]
07:34:35.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#50. SUCCESS]
07:34:35.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#51. org.apache.commons.math.analysis.function.LogisticTest#testCompareSigmoid started...]
07:34:35.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#51. SUCCESS]
07:34:35.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#52. org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent0Component4 started...]
07:34:35.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#52. SUCCESS]
07:34:35.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#53. org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent1Component2Component3 started...]
07:34:35.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#53. SUCCESS]
07:34:35.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#54. org.apache.commons.math.analysis.function.LogitTest#testDerivative started...]
07:34:35.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#54. SUCCESS]
07:34:35.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#55. org.apache.commons.math.analysis.function.LogitTest#testSomeValues started...]
07:34:35.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#55. SUCCESS]
07:34:35.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#56. org.apache.commons.math.analysis.function.LogitTest#testParametricValue started...]
07:34:35.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#56. SUCCESS]
07:34:35.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#57. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage1 started...]
07:34:35.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#57. SUCCESS]
07:34:35.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#58. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage2 started...]
07:34:35.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#58. SUCCESS]
07:34:35.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#59. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage3 started...]
07:34:35.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#59. SUCCESS]
07:34:35.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#60. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage4 started...]
07:34:35.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#60. SUCCESS]
07:34:35.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#61. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage5 started...]
07:34:35.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#61. SUCCESS]
07:34:35.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#62. org.apache.commons.math.analysis.function.LogitTest#testParametricUsage6 started...]
07:34:35.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#62. SUCCESS]
07:34:35.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#63. org.apache.commons.math.analysis.function.LogitTest#testPreconditions1 started...]
07:34:35.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#63. SUCCESS]
07:34:35.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#64. org.apache.commons.math.analysis.function.LogitTest#testPreconditions2 started...]
07:34:35.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#64. SUCCESS]
07:34:35.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#65. org.apache.commons.math.analysis.function.LogitTest#testDerivativeLargeArguments started...]
07:34:35.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#65. SUCCESS]
07:34:35.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#66. org.apache.commons.math.analysis.function.LogitTest#testDerivativeWithInverseFunction started...]
07:34:35.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#66. SUCCESS]
07:34:35.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#67. org.apache.commons.math.analysis.function.LogitTest#testValueWithInverseFunction started...]
07:34:35.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#67. SUCCESS]
07:34:35.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#68. org.apache.commons.math.analysis.function.SigmoidTest#testDerivative started...]
07:34:35.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#68. SUCCESS]
07:34:35.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#69. org.apache.commons.math.analysis.function.SigmoidTest#testSomeValues started...]
07:34:35.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#69. SUCCESS]
07:34:35.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#70. org.apache.commons.math.analysis.function.SigmoidTest#testParametricValue started...]
07:34:35.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#70. SUCCESS]
07:34:35.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#71. org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage1 started...]
07:34:35.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#71. SUCCESS]
07:34:35.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#72. org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage2 started...]
07:34:35.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#72. SUCCESS]
07:34:35.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#73. org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage3 started...]
07:34:35.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#73. SUCCESS]
07:34:35.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#74. org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage4 started...]
07:34:35.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#74. SUCCESS]
07:34:35.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#75. org.apache.commons.math.analysis.function.SigmoidTest#testDerivativeLargeArguments started...]
07:34:35.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#75. SUCCESS]
07:34:35.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#76. org.apache.commons.math.analysis.function.StepFunctionTest#testSomeValues started...]
07:34:35.622 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#76. SUCCESS]
07:34:35.622 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#77. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions1 started...]
07:34:35.622 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#77. SUCCESS]
07:34:35.622 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#78. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions2 started...]
07:34:35.622 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#78. SUCCESS]
07:34:35.622 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#79. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions3 started...]
07:34:35.622 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#79. SUCCESS]
07:34:35.623 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#80. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions4 started...]
07:34:35.623 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#80. SUCCESS]
07:34:35.623 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#81. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions5 started...]
07:34:35.623 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#81. SUCCESS]
07:34:35.623 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#82. org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions6 started...]
07:34:35.623 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#82. SUCCESS]
07:34:35.623 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#83. org.apache.commons.math.analysis.function.StepFunctionTest#testHeaviside started...]
07:34:35.623 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#83. SUCCESS]
07:34:35.623 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#84. org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration started...]
07:34:35.637 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#84. SUCCESS]
07:34:35.637 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#85. org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction started...]
07:34:35.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#85. SUCCESS]
07:34:35.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#86. org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction started...]
07:34:35.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#86. SUCCESS]
07:34:35.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#87. org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testIssue464 started...]
07:34:36.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#87. SUCCESS]
07:34:36.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#88. org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters started...]
07:34:36.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#88. SUCCESS]
07:34:36.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#89. org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction started...]
07:34:36.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#89. SUCCESS]
07:34:36.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#90. org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction started...]
07:34:36.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#90. SUCCESS]
07:34:36.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#91. org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters started...]
07:34:36.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#91. SUCCESS]
07:34:36.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#92. org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction started...]
07:34:36.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#92. SUCCESS]
07:34:36.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#93. org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction started...]
07:34:36.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#93. SUCCESS]
07:34:36.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#94. org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters started...]
07:34:36.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#94. SUCCESS]
07:34:36.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#95. org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction started...]
07:34:36.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#95. SUCCESS]
07:34:36.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#96. org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction started...]
07:34:36.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#96. SUCCESS]
07:34:36.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#97. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPlane started...]
07:34:36.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#97. SUCCESS]
07:34:36.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#98. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPreconditions started...]
07:34:36.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#98. SUCCESS]
07:34:36.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#99. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testParaboloid started...]
07:34:36.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#99. SUCCESS]
07:34:36.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#100. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testSplinePartialDerivatives started...]
07:34:36.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#100. SUCCESS]
07:34:36.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#101. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testMatchingPartialDerivatives started...]
07:34:36.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#101. SUCCESS]
07:34:36.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#102. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPlane started...]
07:34:36.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#102. SUCCESS]
07:34:36.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#103. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPreconditions started...]
07:34:36.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#103. SUCCESS]
07:34:36.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#104. org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testParaboloid started...]
07:34:36.072 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#104. SUCCESS]
07:34:36.072 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#105. org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters started...]
07:34:36.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#105. SUCCESS]
07:34:36.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#106. org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction started...]
07:34:36.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#106. SUCCESS]
07:34:36.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#107. org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function started...]
07:34:36.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#107. SUCCESS]
07:34:36.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#108. org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateTwoSegment started...]
07:34:36.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#108. SUCCESS]
07:34:36.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#109. org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testIllegalArguments started...]
07:34:36.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#109. SUCCESS]
07:34:36.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#110. org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinear started...]
07:34:36.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#110. SUCCESS]
07:34:36.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#111. org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateThreeSegment started...]
07:34:36.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#111. SUCCESS]
07:34:36.076 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#112. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness started...]
07:34:36.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#112. SUCCESS]
07:34:36.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#113. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine started...]
07:34:36.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#113. SUCCESS]
07:34:36.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#114. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth started...]
07:34:36.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#114. SUCCESS]
07:34:36.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#115. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal1 started...]
07:34:36.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#115. SUCCESS]
07:34:36.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#116. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal2 started...]
07:34:36.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#116. SUCCESS]
07:34:36.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#117. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal3 started...]
07:34:36.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#117. SUCCESS]
07:34:36.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#118. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal4 started...]
07:34:36.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#118. SUCCESS]
07:34:36.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#119. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal5 started...]
07:34:36.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#119. SUCCESS]
07:34:36.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#120. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal6 started...]
07:34:36.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#120. SUCCESS]
07:34:36.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#121. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints started...]
07:34:36.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#121. SUCCESS]
07:34:36.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#122. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData started...]
07:34:36.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#122. SUCCESS]
07:34:36.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#123. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing1 started...]
07:34:36.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#123. SUCCESS]
07:34:36.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#124. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing2 started...]
07:34:36.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#124. SUCCESS]
07:34:36.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#125. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint started...]
07:34:36.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#125. SUCCESS]
07:34:36.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#126. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth1 started...]
07:34:36.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#126. SUCCESS]
07:34:36.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#127. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth2 started...]
07:34:36.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#127. SUCCESS]
07:34:36.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#128. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers started...]
07:34:36.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#128. SUCCESS]
07:34:36.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#129. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine started...]
07:34:36.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#129. SUCCESS]
07:34:36.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#130. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments started...]
07:34:36.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#130. SUCCESS]
07:34:36.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#131. org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testMath296withoutWeights started...]
07:34:36.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#131. SUCCESS]
07:34:36.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#132. org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testLinearFunction2D started...]
07:34:36.173 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#132. SUCCESS]
07:34:36.173 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#133. org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testParaboloid2D started...]
07:34:36.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#133. SUCCESS]
07:34:36.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#134. org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters started...]
07:34:36.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#134. SUCCESS]
07:34:36.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#135. org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction started...]
07:34:36.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#135. SUCCESS]
07:34:36.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#136. org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function started...]
07:34:36.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#136. SUCCESS]
07:34:36.296 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#137. org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPlane started...]
07:34:36.306 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#137. SUCCESS]
07:34:36.306 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#138. org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPreconditions started...]
07:34:36.307 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#138. SUCCESS]
07:34:36.307 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#139. org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testParaboloid started...]
07:34:36.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#139. SUCCESS]
07:34:36.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#140. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin started...]
07:34:36.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#140. SUCCESS]
07:34:36.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#141. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment started...]
07:34:36.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#141. SUCCESS]
07:34:36.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#142. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments started...]
07:34:36.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#142. SUCCESS]
07:34:36.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#143. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear started...]
07:34:36.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#143. SUCCESS]
07:34:36.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#144. org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment started...]
07:34:36.310 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#144. SUCCESS]
07:34:36.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#145. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPlane started...]
07:34:36.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#145. SUCCESS]
07:34:36.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#146. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testWave started...]
07:34:36.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#146. SUCCESS]
07:34:36.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#147. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPreconditions started...]
07:34:36.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#147. SUCCESS]
07:34:36.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#148. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPlane started...]
07:34:36.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#148. SUCCESS]
07:34:36.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#149. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testWave started...]
07:34:36.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#149. SUCCESS]
07:34:36.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#150. org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPreconditions started...]
07:34:36.343 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#150. SUCCESS]
07:34:36.343 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#151. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testLessThanOnePeriodCoverage started...]
07:34:36.345 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#151. SUCCESS]
07:34:36.345 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#152. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testSine started...]
07:34:36.345 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#152. SUCCESS]
07:34:36.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#153. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testTooFewSamples started...]
07:34:36.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#153. SUCCESS]
07:34:36.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#154. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testMoreThanOnePeriodCoverage started...]
07:34:36.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#154. SUCCESS]
07:34:36.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#155. org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testUnsortedSamples started...]
07:34:36.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#155. SUCCESS]
07:34:36.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#156. org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction started...]
07:34:36.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#156. SUCCESS]
07:34:36.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#157. org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction started...]
07:34:36.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#157. SUCCESS]
07:34:36.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#158. org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters started...]
07:34:36.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#158. SUCCESS]
07:34:36.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#159. org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction started...]
07:34:36.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#159. SUCCESS]
07:34:36.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#160. org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction started...]
07:34:36.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#160. SUCCESS]
07:34:36.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#161. org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction started...]
07:34:36.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#161. SUCCESS]
07:34:36.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#162. org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters started...]
07:34:36.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#162. SUCCESS]
07:34:36.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#163. org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction started...]
07:34:36.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#163. SUCCESS]
07:34:36.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#164. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison started...]
07:34:36.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#164. SUCCESS]
07:34:36.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#165. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic started...]
07:34:36.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#165. SUCCESS]
07:34:36.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#166. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication started...]
07:34:36.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#166. SUCCESS]
07:34:36.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#167. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition started...]
07:34:36.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#167. SUCCESS]
07:34:36.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#168. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants started...]
07:34:36.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#168. SUCCESS]
07:34:36.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#169. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic started...]
07:34:36.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#169. SUCCESS]
07:34:36.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#170. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMath341 started...]
07:34:36.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#170. SUCCESS]
07:34:36.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#171. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear started...]
07:34:36.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#171. SUCCESS]
07:34:36.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#172. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial started...]
07:34:36.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#172. SUCCESS]
07:34:36.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#173. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString started...]
07:34:36.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#173. SUCCESS]
07:34:36.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#174. org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction started...]
07:34:36.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#174. SUCCESS]
07:34:36.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#175. org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues started...]
07:34:36.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#175. SUCCESS]
07:34:36.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#176. org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor started...]
07:34:36.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#176. SUCCESS]
07:34:36.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#177. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials started...]
07:34:36.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#177. SUCCESS]
07:34:36.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#178. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre started...]
07:34:36.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#178. SUCCESS]
07:34:36.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#179. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials started...]
07:34:36.428 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#179. SUCCESS]
07:34:36.429 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#180. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials started...]
07:34:36.432 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#180. SUCCESS]
07:34:36.432 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#181. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds started...]
07:34:36.439 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#181. SUCCESS]
07:34:36.439 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#182. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials started...]
07:34:36.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#182. SUCCESS]
07:34:36.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#183. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials started...]
07:34:36.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#183. SUCCESS]
07:34:36.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#184. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials started...]
07:34:36.441 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#184. SUCCESS]
07:34:36.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#185. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials started...]
07:34:36.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#185. SUCCESS]
07:34:36.442 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#186. org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials started...]
07:34:36.443 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#186. SUCCESS]
07:34:36.443 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#187. org.apache.commons.math.analysis.solvers.BisectionSolverTest#testMath369 started...]
07:34:36.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#187. SUCCESS]
07:34:36.444 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#188. org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero started...]
07:34:36.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#188. SUCCESS]
07:34:36.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#189. org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero started...]
07:34:36.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#189. SUCCESS]
07:34:36.445 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#190. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testFasterThanNewton started...]
07:34:36.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#190. SUCCESS]
07:34:36.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#191. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConvergenceOnFunctionAccuracy started...]
07:34:36.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#191. SUCCESS]
07:34:36.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#192. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder1 started...]
07:34:36.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#192. SUCCESS]
07:34:36.448 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#193. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder2 started...]
07:34:36.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#193. SUCCESS]
07:34:36.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#194. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder3 started...]
07:34:36.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#194. SUCCESS]
07:34:36.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#195. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConstructorsOK started...]
07:34:36.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#195. SUCCESS]
07:34:36.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#196. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionRightSide started...]
07:34:36.449 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#196. SUCCESS]
07:34:36.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#197. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionAboveSide started...]
07:34:36.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#197. SUCCESS]
07:34:36.450 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#198. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionBelowSide started...]
07:34:36.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#198. SUCCESS]
07:34:36.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#199. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionLeftSide started...]
07:34:36.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#199. SUCCESS]
07:34:36.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#200. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testBadEndpoints started...]
07:34:36.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#200. SUCCESS]
07:34:36.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#201. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testRootEndpoints started...]
07:34:36.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#201. SUCCESS]
07:34:36.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#202. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testQuinticZero started...]
07:34:36.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#202. SUCCESS]
07:34:36.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#203. org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSinZero started...]
07:34:36.452 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#203. SUCCESS]
07:34:36.453 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#204. org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints started...]
07:34:36.453 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#204. SUCCESS]
07:34:36.453 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#205. org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess started...]
07:34:36.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#205. SUCCESS]
07:34:36.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#206. org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints started...]
07:34:36.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#206. SUCCESS]
07:34:36.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#207. org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero started...]
07:34:36.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#207. SUCCESS]
07:34:36.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#208. org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero started...]
07:34:36.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#208. SUCCESS]
07:34:36.454 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#209. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionRightSide started...]
07:34:36.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#209. SUCCESS]
07:34:36.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#210. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionAboveSide started...]
07:34:36.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#210. SUCCESS]
07:34:36.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#211. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionBelowSide started...]
07:34:36.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#211. SUCCESS]
07:34:36.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#212. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionLeftSide started...]
07:34:36.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#212. SUCCESS]
07:34:36.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#213. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testBadEndpoints started...]
07:34:36.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#213. SUCCESS]
07:34:36.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#214. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testRootEndpoints started...]
07:34:36.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#214. SUCCESS]
07:34:36.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#215. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testQuinticZero started...]
07:34:36.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#215. SUCCESS]
07:34:36.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#216. org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSinZero started...]
07:34:36.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#216. SUCCESS]
07:34:36.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#217. org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction started...]
07:34:36.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#217. SUCCESS]
07:34:36.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#218. org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction started...]
07:34:36.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#218. SUCCESS]
07:34:36.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#219. org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters started...]
07:34:36.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#219. SUCCESS]
07:34:36.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#220. org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction started...]
07:34:36.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#220. SUCCESS]
07:34:36.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#221. org.apache.commons.math.analysis.solvers.MullerSolver2Test#testParameters started...]
07:34:36.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#221. SUCCESS]
07:34:36.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#222. org.apache.commons.math.analysis.solvers.MullerSolver2Test#testSinFunction started...]
07:34:36.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#222. SUCCESS]
07:34:36.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#223. org.apache.commons.math.analysis.solvers.MullerSolver2Test#testExpm1Function started...]
07:34:36.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#223. SUCCESS]
07:34:36.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#224. org.apache.commons.math.analysis.solvers.MullerSolver2Test#testQuinticFunction started...]
07:34:36.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#224. SUCCESS]
07:34:36.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#225. org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters started...]
07:34:36.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#225. SUCCESS]
07:34:36.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#226. org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction started...]
07:34:36.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#226. SUCCESS]
07:34:36.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#227. org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function started...]
07:34:36.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#227. SUCCESS]
07:34:36.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#228. org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction started...]
07:34:36.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#228. SUCCESS]
07:34:36.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#229. org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero started...]
07:34:36.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#229. SUCCESS]
07:34:36.464 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#230. org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero started...]
07:34:36.465 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#230. SUCCESS]
07:34:36.465 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#231. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionRightSide started...]
07:34:36.465 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#231. SUCCESS]
07:34:36.465 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#232. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionAboveSide started...]
07:34:36.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#232. SUCCESS]
07:34:36.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#233. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionBelowSide started...]
07:34:36.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#233. SUCCESS]
07:34:36.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#234. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionLeftSide started...]
07:34:36.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#234. SUCCESS]
07:34:36.466 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#235. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testBadEndpoints started...]
07:34:36.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#235. SUCCESS]
07:34:36.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#236. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testRootEndpoints started...]
07:34:36.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#236. SUCCESS]
07:34:36.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#237. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testQuinticZero started...]
07:34:36.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#237. SUCCESS]
07:34:36.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#238. org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSinZero started...]
07:34:36.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#238. SUCCESS]
07:34:36.467 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#239. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testIssue631 started...]
07:34:36.471 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#239. SUCCESS]
07:34:36.471 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#240. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionRightSide started...]
07:34:36.471 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#240. SUCCESS]
07:34:36.471 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#241. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionAboveSide started...]
07:34:36.472 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#241. SUCCESS]
07:34:36.472 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#242. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionBelowSide started...]
07:34:36.472 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#242. SUCCESS]
07:34:36.472 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#243. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionLeftSide started...]
07:34:36.472 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#243. SUCCESS]
07:34:36.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#244. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testBadEndpoints started...]
07:34:36.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#244. SUCCESS]
07:34:36.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#245. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testRootEndpoints started...]
07:34:36.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#245. SUCCESS]
07:34:36.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#246. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testQuinticZero started...]
07:34:36.473 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#246. SUCCESS]
07:34:36.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#247. org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSinZero started...]
07:34:36.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#247. SUCCESS]
07:34:36.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#248. org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters started...]
07:34:36.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#248. SUCCESS]
07:34:36.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#249. org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction started...]
07:34:36.474 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#249. SUCCESS]
07:34:36.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#250. org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function started...]
07:34:36.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#250. SUCCESS]
07:34:36.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#251. org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction started...]
07:34:36.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#251. SUCCESS]
07:34:36.475 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#252. org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionRightSide started...]
07:34:36.476 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#252. SUCCESS]
07:34:36.476 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#253. org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionAboveSide started...]
07:34:36.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#253. SUCCESS]
07:34:36.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#254. org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionBelowSide started...]
07:34:36.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#254. SUCCESS]
07:34:36.477 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#255. org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionLeftSide started...]
07:34:36.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#255. SUCCESS]
07:34:36.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#256. org.apache.commons.math.analysis.solvers.SecantSolverTest#testBadEndpoints started...]
07:34:36.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#256. SUCCESS]
07:34:36.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#257. org.apache.commons.math.analysis.solvers.SecantSolverTest#testRootEndpoints started...]
07:34:36.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#257. SUCCESS]
07:34:36.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#258. org.apache.commons.math.analysis.solvers.SecantSolverTest#testQuinticZero started...]
07:34:36.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#258. SUCCESS]
07:34:36.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#259. org.apache.commons.math.analysis.solvers.SecantSolverTest#testSinZero started...]
07:34:36.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#259. SUCCESS]
07:34:36.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#260. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot started...]
07:34:36.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#260. SUCCESS]
07:34:36.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#261. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin started...]
07:34:36.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#261. SUCCESS]
07:34:36.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#262. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testNullFunction started...]
07:34:36.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#262. SUCCESS]
07:34:36.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#263. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin started...]
07:34:36.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#263. SUCCESS]
07:34:36.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#264. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadAccuracy started...]
07:34:36.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#264. SUCCESS]
07:34:36.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#265. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testMisc started...]
07:34:36.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#265. SUCCESS]
07:34:36.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#266. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull started...]
07:34:36.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#266. SUCCESS]
07:34:36.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#267. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin started...]
07:34:36.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#267. SUCCESS]
07:34:36.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#268. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadInitial started...]
07:34:36.480 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#268. SUCCESS]
07:34:36.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#269. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadMaximumIterations started...]
07:34:36.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#269. SUCCESS]
07:34:36.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#270. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadEndpoints started...]
07:34:36.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#270. SUCCESS]
07:34:36.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#271. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot started...]
07:34:36.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#271. SUCCESS]
07:34:36.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#272. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull started...]
07:34:36.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#272. SUCCESS]
07:34:36.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#273. org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadEndpoints started...]
07:34:36.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#273. SUCCESS]
07:34:36.481 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#274. org.apache.commons.math.complex.ComplexFieldTest#testOne started...]
07:34:36.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#274. SUCCESS]
07:34:36.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#275. org.apache.commons.math.complex.ComplexFieldTest#testZero started...]
07:34:36.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#275. SUCCESS]
07:34:36.482 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#276. org.apache.commons.math.complex.ComplexFieldTest#testSerial started...]
07:34:36.483 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#276. SUCCESS]
07:34:36.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#277. org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary started...]
07:34:36.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#277. SUCCESS]
07:34:36.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#278. org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat started...]
07:34:36.484 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#278. SUCCESS]
07:34:36.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#279. org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals started...]
07:34:36.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#279. SUCCESS]
07:34:36.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#280. org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary started...]
07:34:36.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#280. SUCCESS]
07:34:36.485 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#281. org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar started...]
07:34:36.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#281. SUCCESS]
07:34:36.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#282. org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber started...]
07:34:36.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#282. SUCCESS]
07:34:36.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#283. org.apache.commons.math.complex.ComplexFormatTest#testNan started...]
07:34:36.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#283. SUCCESS]
07:34:36.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#284. org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc started...]
07:34:36.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#284. SUCCESS]
07:34:36.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#285. org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat started...]
07:34:36.486 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#285. SUCCESS]
07:34:36.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#286. org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth started...]
07:34:36.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#286. SUCCESS]
07:34:36.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#287. org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal started...]
07:34:36.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#287. SUCCESS]
07:34:36.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#288. org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat started...]
07:34:36.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#288. SUCCESS]
07:34:36.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#289. org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc started...]
07:34:36.487 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#289. SUCCESS]
07:34:36.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#290. org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity started...]
07:34:36.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#290. SUCCESS]
07:34:36.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#291. org.apache.commons.math.complex.ComplexFormatTest#testTrimOneImaginary started...]
07:34:36.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#291. SUCCESS]
07:34:36.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#292. org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity started...]
07:34:36.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#292. SUCCESS]
07:34:36.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#293. org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar started...]
07:34:36.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#293. SUCCESS]
07:34:36.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#294. org.apache.commons.math.complex.ComplexFormatTest#testDefaultFormatComplex started...]
07:34:36.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#294. SUCCESS]
07:34:36.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#295. org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals started...]
07:34:36.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#295. SUCCESS]
07:34:36.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#296. org.apache.commons.math.complex.ComplexFormatTest#testZeroReal started...]
07:34:36.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#296. SUCCESS]
07:34:36.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#297. org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth started...]
07:34:36.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#297. SUCCESS]
07:34:36.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#298. org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal started...]
07:34:36.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#298. SUCCESS]
07:34:36.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#299. org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary started...]
07:34:36.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#299. SUCCESS]
07:34:36.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#300. org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals started...]
07:34:36.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#300. SUCCESS]
07:34:36.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#301. org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity started...]
07:34:36.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#301. SUCCESS]
07:34:36.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#302. org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter started...]
07:34:36.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#302. SUCCESS]
07:34:36.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#303. org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal started...]
07:34:36.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#303. SUCCESS]
07:34:36.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#304. org.apache.commons.math.complex.ComplexFormatTest#testParseNan started...]
07:34:36.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#304. SUCCESS]
07:34:36.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#305. org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary started...]
07:34:36.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#305. SUCCESS]
07:34:36.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#306. org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity started...]
07:34:36.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#306. SUCCESS]
07:34:36.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#307. org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals started...]
07:34:36.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#307. SUCCESS]
07:34:36.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#308. org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf started...]
07:34:36.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#308. SUCCESS]
07:34:36.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#309. org.apache.commons.math.complex.ComplexTest#testTanhInf started...]
07:34:36.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#309. SUCCESS]
07:34:36.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#310. org.apache.commons.math.complex.ComplexTest#testTanhNaN started...]
07:34:36.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#310. SUCCESS]
07:34:36.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#311. org.apache.commons.math.complex.ComplexTest#testConjugateNaN started...]
07:34:36.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#311. SUCCESS]
07:34:36.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#312. org.apache.commons.math.complex.ComplexTest#testScalarDivideInf started...]
07:34:36.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#312. SUCCESS]
07:34:36.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#313. org.apache.commons.math.complex.ComplexTest#testScalarDivideNaN started...]
07:34:36.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#313. SUCCESS]
07:34:36.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#314. org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf started...]
07:34:36.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#314. SUCCESS]
07:34:36.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#315. org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN started...]
07:34:36.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#315. SUCCESS]
07:34:36.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#316. org.apache.commons.math.complex.ComplexTest#testDivideImaginary started...]
07:34:36.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#316. SUCCESS]
07:34:36.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#317. org.apache.commons.math.complex.ComplexTest#testAcosInf started...]
07:34:36.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#317. SUCCESS]
07:34:36.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#318. org.apache.commons.math.complex.ComplexTest#testAcosNaN started...]
07:34:36.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#318. SUCCESS]
07:34:36.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#319. org.apache.commons.math.complex.ComplexTest#testEqualsClass started...]
07:34:36.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#319. SUCCESS]
07:34:36.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#320. org.apache.commons.math.complex.ComplexTest#testAbs started...]
07:34:36.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#320. SUCCESS]
07:34:36.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#321. org.apache.commons.math.complex.ComplexTest#testAdd started...]
07:34:36.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#321. SUCCESS]
07:34:36.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#322. org.apache.commons.math.complex.ComplexTest#testCos started...]
07:34:36.495 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#322. SUCCESS]
07:34:36.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#323. org.apache.commons.math.complex.ComplexTest#testExp started...]
07:34:36.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#323. SUCCESS]
07:34:36.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#324. org.apache.commons.math.complex.ComplexTest#testLog started...]
07:34:36.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#324. SUCCESS]
07:34:36.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#325. org.apache.commons.math.complex.ComplexTest#testPow started...]
07:34:36.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#325. SUCCESS]
07:34:36.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#326. org.apache.commons.math.complex.ComplexTest#testSin started...]
07:34:36.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#326. SUCCESS]
07:34:36.496 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#327. org.apache.commons.math.complex.ComplexTest#testTan started...]
07:34:36.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#327. SUCCESS]
07:34:36.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#328. org.apache.commons.math.complex.ComplexTest#testSubtract started...]
07:34:36.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#328. SUCCESS]
07:34:36.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#329. org.apache.commons.math.complex.ComplexTest#testScalarAdd started...]
07:34:36.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#329. SUCCESS]
07:34:36.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#330. org.apache.commons.math.complex.ComplexTest#testScalarPow started...]
07:34:36.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#330. SUCCESS]
07:34:36.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#331. org.apache.commons.math.complex.ComplexTest#testDivideNaNInf started...]
07:34:36.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#331. SUCCESS]
07:34:36.497 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#332. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:34:36.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#332. FAILED]
07:34:36.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#333. org.apache.commons.math.complex.ComplexTest#testAcos started...]
07:34:36.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#333. SUCCESS]
07:34:36.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#334. org.apache.commons.math.complex.ComplexTest#testAsin started...]
07:34:36.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#334. SUCCESS]
07:34:36.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#335. org.apache.commons.math.complex.ComplexTest#testAtan started...]
07:34:36.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#335. SUCCESS]
07:34:36.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#336. org.apache.commons.math.complex.ComplexTest#testCosh started...]
07:34:36.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#336. SUCCESS]
07:34:36.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#337. org.apache.commons.math.complex.ComplexTest#testSinh started...]
07:34:36.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#337. SUCCESS]
07:34:36.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#338. org.apache.commons.math.complex.ComplexTest#testTanh started...]
07:34:36.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#338. SUCCESS]
07:34:36.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#339. org.apache.commons.math.complex.ComplexTest#testAsinInf started...]
07:34:36.500 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#339. SUCCESS]
07:34:36.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#340. org.apache.commons.math.complex.ComplexTest#testAsinNaN started...]
07:34:36.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#340. SUCCESS]
07:34:36.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#341. org.apache.commons.math.complex.ComplexTest#testAtanInf started...]
07:34:36.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#341. SUCCESS]
07:34:36.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#342. org.apache.commons.math.complex.ComplexTest#testAtanNaN started...]
07:34:36.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#342. SUCCESS]
07:34:36.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#343. org.apache.commons.math.complex.ComplexTest#testScalarAddInf started...]
07:34:36.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#343. SUCCESS]
07:34:36.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#344. org.apache.commons.math.complex.ComplexTest#testScalarAddNaN started...]
07:34:36.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#344. SUCCESS]
07:34:36.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#345. org.apache.commons.math.complex.ComplexTest#testScalarPowZero started...]
07:34:36.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#345. SUCCESS]
07:34:36.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#346. org.apache.commons.math.complex.ComplexTest#testScalarDivide started...]
07:34:36.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#346. SUCCESS]
07:34:36.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#347. org.apache.commons.math.complex.ComplexTest#testDivideInf started...]
07:34:36.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#347. SUCCESS]
07:34:36.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#348. org.apache.commons.math.complex.ComplexTest#testDivideNaN started...]
07:34:36.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#348. SUCCESS]
07:34:36.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#349. org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference started...]
07:34:36.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#349. SUCCESS]
07:34:36.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#350. org.apache.commons.math.complex.ComplexTest#testNegateNaN started...]
07:34:36.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#350. SUCCESS]
07:34:36.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#351. org.apache.commons.math.complex.ComplexTest#testTanhCritical started...]
07:34:36.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#351. SUCCESS]
07:34:36.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#352. org.apache.commons.math.complex.ComplexTest#testPowZero started...]
07:34:36.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#352. SUCCESS]
07:34:36.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#353. org.apache.commons.math.complex.ComplexTest#testScalarPowInf started...]
07:34:36.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#353. SUCCESS]
07:34:36.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#354. org.apache.commons.math.complex.ComplexTest#testScalarMultiply started...]
07:34:36.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#354. SUCCESS]
07:34:36.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#355. org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero started...]
07:34:36.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#355. SUCCESS]
07:34:36.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#356. org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive started...]
07:34:36.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#356. SUCCESS]
07:34:36.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#357. org.apache.commons.math.complex.ComplexTest#testEqualsNull started...]
07:34:36.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#357. SUCCESS]
07:34:36.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#358. org.apache.commons.math.complex.ComplexTest#testEqualsSame started...]
07:34:36.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#358. SUCCESS]
07:34:36.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#359. org.apache.commons.math.complex.ComplexTest#testEqualsTrue started...]
07:34:36.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#359. SUCCESS]
07:34:36.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#360. org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN started...]
07:34:36.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#360. SUCCESS]
07:34:36.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#361. org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative started...]
07:34:36.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#361. SUCCESS]
07:34:36.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#362. org.apache.commons.math.complex.ComplexTest#testScalarPowNaNBase started...]
07:34:36.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#362. SUCCESS]
07:34:36.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#363. org.apache.commons.math.complex.ComplexTest#testGetArgument started...]
07:34:36.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#363. SUCCESS]
07:34:36.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#364. org.apache.commons.math.complex.ComplexTest#testSqrtPolar started...]
07:34:36.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#364. SUCCESS]
07:34:36.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#365. org.apache.commons.math.complex.ComplexTest#testMultiplyNaN started...]
07:34:36.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#365. SUCCESS]
07:34:36.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#366. org.apache.commons.math.complex.ComplexTest#testLogZero started...]
07:34:36.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#366. SUCCESS]
07:34:36.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#367. org.apache.commons.math.complex.ComplexTest#testConjugate started...]
07:34:36.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#367. SUCCESS]
07:34:36.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#368. org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot started...]
07:34:36.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#368. SUCCESS]
07:34:36.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#369. org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf started...]
07:34:36.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#369. SUCCESS]
07:34:36.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#370. org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference started...]
07:34:36.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#370. SUCCESS]
07:34:36.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#371. org.apache.commons.math.complex.ComplexTest#testScalarSubtractInf started...]
07:34:36.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#371. SUCCESS]
07:34:36.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#372. org.apache.commons.math.complex.ComplexTest#testScalarSubtractNaN started...]
07:34:36.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#372. SUCCESS]
07:34:36.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#373. org.apache.commons.math.complex.ComplexTest#testTanCritical started...]
07:34:36.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#373. SUCCESS]
07:34:36.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#374. org.apache.commons.math.complex.ComplexTest#testPowNaNBase started...]
07:34:36.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#374. SUCCESS]
07:34:36.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#375. org.apache.commons.math.complex.ComplexTest#testMath221 started...]
07:34:36.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#375. SUCCESS]
07:34:36.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#376. org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty started...]
07:34:36.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#376. SUCCESS]
07:34:36.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#377. org.apache.commons.math.complex.ComplexTest#testGetArgumentInf started...]
07:34:36.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#377. SUCCESS]
07:34:36.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#378. org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN started...]
07:34:36.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#378. SUCCESS]
07:34:36.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#379. org.apache.commons.math.complex.ComplexTest#testConstructorNaN started...]
07:34:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#379. SUCCESS]
07:34:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#380. org.apache.commons.math.complex.ComplexTest#testCoshInf started...]
07:34:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#380. SUCCESS]
07:34:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#381. org.apache.commons.math.complex.ComplexTest#testCoshNaN started...]
07:34:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#381. SUCCESS]
07:34:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#382. org.apache.commons.math.complex.ComplexTest#testPowNaNExponent started...]
07:34:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#382. SUCCESS]
07:34:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#383. org.apache.commons.math.complex.ComplexTest#testHashCode started...]
07:34:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#383. SUCCESS]
07:34:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#384. org.apache.commons.math.complex.ComplexTest#testSqrtRealZero started...]
07:34:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#384. SUCCESS]
07:34:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#385. org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative started...]
07:34:36.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#385. SUCCESS]
07:34:36.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#386. org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero started...]
07:34:36.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#386. SUCCESS]
07:34:36.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#387. org.apache.commons.math.complex.ComplexTest#testScalarDivideZero started...]
07:34:36.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#387. SUCCESS]
07:34:36.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#388. org.apache.commons.math.complex.ComplexTest#testScalarSubtract started...]
07:34:36.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#388. SUCCESS]
07:34:36.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#389. org.apache.commons.math.complex.ComplexTest#testAbsNaN started...]
07:34:36.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#389. SUCCESS]
07:34:36.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#390. org.apache.commons.math.complex.ComplexTest#testAddInf started...]
07:34:36.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#390. SUCCESS]
07:34:36.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#391. org.apache.commons.math.complex.ComplexTest#testAddNaN started...]
07:34:36.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#391. SUCCESS]
07:34:36.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#392. org.apache.commons.math.complex.ComplexTest#testCosInf started...]
07:34:36.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#392. SUCCESS]
07:34:36.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#393. org.apache.commons.math.complex.ComplexTest#testCosNaN started...]
07:34:36.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#393. SUCCESS]
07:34:36.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#394. org.apache.commons.math.complex.ComplexTest#testDivide started...]
07:34:36.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#394. SUCCESS]
07:34:36.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#395. org.apache.commons.math.complex.ComplexTest#testExpInf started...]
07:34:36.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#395. SUCCESS]
07:34:36.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#396. org.apache.commons.math.complex.ComplexTest#testExpNaN started...]
07:34:36.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#396. SUCCESS]
07:34:36.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#397. org.apache.commons.math.complex.ComplexTest#testMultiply started...]
07:34:36.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#397. SUCCESS]
07:34:36.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#398. org.apache.commons.math.complex.ComplexTest#testDivideReal started...]
07:34:36.510 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#398. SUCCESS]
07:34:36.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#399. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:34:36.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#399. FAILED]
07:34:36.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#400. org.apache.commons.math.complex.ComplexTest#testEqualsNaN started...]
07:34:36.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#400. SUCCESS]
07:34:36.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#401. org.apache.commons.math.complex.ComplexTest#testLogInf started...]
07:34:36.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#401. SUCCESS]
07:34:36.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#402. org.apache.commons.math.complex.ComplexTest#testLogNaN started...]
07:34:36.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#402. SUCCESS]
07:34:36.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#403. org.apache.commons.math.complex.ComplexTest#testNegate started...]
07:34:36.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#403. SUCCESS]
07:34:36.511 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#404. org.apache.commons.math.complex.ComplexTest#testPowInf started...]
07:34:36.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#404. SUCCESS]
07:34:36.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#405. org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite started...]
07:34:36.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#405. SUCCESS]
07:34:36.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#406. org.apache.commons.math.complex.ComplexTest#testSinhInf started...]
07:34:36.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#406. SUCCESS]
07:34:36.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#407. org.apache.commons.math.complex.ComplexTest#testSinhNaN started...]
07:34:36.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#407. SUCCESS]
07:34:36.512 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#408. org.apache.commons.math.complex.ComplexTest#testSerial started...]
07:34:36.514 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#408. SUCCESS]
07:34:36.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#409. org.apache.commons.math.complex.ComplexTest#testSinInf started...]
07:34:36.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#409. SUCCESS]
07:34:36.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#410. org.apache.commons.math.complex.ComplexTest#testSinNaN started...]
07:34:36.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#410. SUCCESS]
07:34:36.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#411. org.apache.commons.math.complex.ComplexTest#testSqrt1z started...]
07:34:36.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#411. SUCCESS]
07:34:36.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#412. org.apache.commons.math.complex.ComplexTest#testTanInf started...]
07:34:36.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#412. SUCCESS]
07:34:36.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#413. org.apache.commons.math.complex.ComplexTest#testTanNaN started...]
07:34:36.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#413. SUCCESS]
07:34:36.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#414. org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot started...]
07:34:36.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#414. SUCCESS]
07:34:36.515 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#415. org.apache.commons.math.complex.ComplexTest#testpowNull started...]
07:34:36.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#415. SUCCESS]
07:34:36.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#416. org.apache.commons.math.complex.ComplexTest#testSubtractInf started...]
07:34:36.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#416. SUCCESS]
07:34:36.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#417. org.apache.commons.math.complex.ComplexTest#testSubtractNaN started...]
07:34:36.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#417. SUCCESS]
07:34:36.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#418. org.apache.commons.math.complex.ComplexTest#testAbsInfinite started...]
07:34:36.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#418. SUCCESS]
07:34:36.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#419. org.apache.commons.math.complex.ComplexTest#testSqrtInf started...]
07:34:36.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#419. SUCCESS]
07:34:36.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#420. org.apache.commons.math.complex.ComplexTest#testSqrtNaN started...]
07:34:36.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#420. SUCCESS]
07:34:36.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#421. org.apache.commons.math.complex.ComplexTest#testDivideZeroZero started...]
07:34:36.516 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#421. SUCCESS]
07:34:36.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#422. org.apache.commons.math.complex.ComplexTest#testConstructor started...]
07:34:36.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#422. SUCCESS]
07:34:36.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#423. org.apache.commons.math.complex.ComplexTest#testScalarPowNaNExponent started...]
07:34:36.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#423. SUCCESS]
07:34:36.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#424. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf started...]
07:34:36.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#424. SUCCESS]
07:34:36.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#425. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN started...]
07:34:36.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#425. SUCCESS]
07:34:36.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#426. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus started...]
07:34:36.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#426. SUCCESS]
07:34:36.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#427. org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex started...]
07:34:36.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#427. SUCCESS]
07:34:36.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#428. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary started...]
07:34:36.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#428. SUCCESS]
07:34:36.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#429. org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat started...]
07:34:36.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#429. SUCCESS]
07:34:36.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#430. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals started...]
07:34:36.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#430. SUCCESS]
07:34:36.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#431. org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary started...]
07:34:36.524 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#431. SUCCESS]
07:34:36.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#432. org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar started...]
07:34:36.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#432. SUCCESS]
07:34:36.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#433. org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber started...]
07:34:36.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#433. SUCCESS]
07:34:36.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#434. org.apache.commons.math.complex.FrenchComplexFormatTest#testNan started...]
07:34:36.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#434. SUCCESS]
07:34:36.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#435. org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc started...]
07:34:36.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#435. SUCCESS]
07:34:36.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#436. org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat started...]
07:34:36.525 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#436. SUCCESS]
07:34:36.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#437. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth started...]
07:34:36.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#437. SUCCESS]
07:34:36.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#438. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal started...]
07:34:36.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#438. SUCCESS]
07:34:36.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#439. org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat started...]
07:34:36.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#439. SUCCESS]
07:34:36.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#440. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc started...]
07:34:36.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#440. SUCCESS]
07:34:36.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#441. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity started...]
07:34:36.526 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#441. SUCCESS]
07:34:36.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#442. org.apache.commons.math.complex.FrenchComplexFormatTest#testTrimOneImaginary started...]
07:34:36.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#442. SUCCESS]
07:34:36.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#443. org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity started...]
07:34:36.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#443. SUCCESS]
07:34:36.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#444. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar started...]
07:34:36.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#444. SUCCESS]
07:34:36.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#445. org.apache.commons.math.complex.FrenchComplexFormatTest#testDefaultFormatComplex started...]
07:34:36.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#445. SUCCESS]
07:34:36.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#446. org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals started...]
07:34:36.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#446. SUCCESS]
07:34:36.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#447. org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal started...]
07:34:36.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#447. SUCCESS]
07:34:36.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#448. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth started...]
07:34:36.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#448. SUCCESS]
07:34:36.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#449. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal started...]
07:34:36.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#449. SUCCESS]
07:34:36.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#450. org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary started...]
07:34:36.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#450. SUCCESS]
07:34:36.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#451. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals started...]
07:34:36.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#451. SUCCESS]
07:34:36.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#452. org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity started...]
07:34:36.529 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#452. SUCCESS]
07:34:36.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#453. org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter started...]
07:34:36.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#453. SUCCESS]
07:34:36.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#454. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal started...]
07:34:36.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#454. SUCCESS]
07:34:36.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#455. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan started...]
07:34:36.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#455. SUCCESS]
07:34:36.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#456. org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary started...]
07:34:36.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#456. SUCCESS]
07:34:36.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#457. org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity started...]
07:34:36.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#457. SUCCESS]
07:34:36.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#458. org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals started...]
07:34:36.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#458. SUCCESS]
07:34:36.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#459. org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConvergenceOnFunctionAccuracy started...]
07:34:36.713 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#459. SUCCESS]
07:34:36.714 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#460. org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testNeta started...]
07:34:36.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#460. SUCCESS]
07:34:36.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#461. org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testInsufficientOrder3 started...]
07:34:36.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#461. SUCCESS]
07:34:36.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#462. org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConstructorOK started...]
07:34:36.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#462. SUCCESS]
07:34:36.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#463. org.apache.commons.math.dfp.DfpDecTest#testRound started...]
07:34:36.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#463. SUCCESS]
07:34:36.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#464. org.apache.commons.math.dfp.DfpDecTest#testRoundDecimal10 started...]
07:34:36.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#464. SUCCESS]
07:34:36.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#465. org.apache.commons.math.dfp.DfpDecTest#testNextAfter started...]
07:34:36.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#465. SUCCESS]
07:34:36.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#466. org.apache.commons.math.dfp.DfpMathTest#testPow started...]
07:34:37.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#466. SUCCESS]
07:34:37.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#467. org.apache.commons.math.dfp.DfpMathTest#testSin started...]
07:34:37.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#467. SUCCESS]
07:34:37.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#468. org.apache.commons.math.dfp.DfpTest#testAdd started...]
07:34:37.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#468. SUCCESS]
07:34:37.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#469. org.apache.commons.math.dfp.DfpTest#testFloor started...]
07:34:37.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#469. SUCCESS]
07:34:37.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#470. org.apache.commons.math.dfp.DfpTest#testLog10 started...]
07:34:37.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#470. SUCCESS]
07:34:37.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#471. org.apache.commons.math.dfp.DfpTest#testRound started...]
07:34:37.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#471. SUCCESS]
07:34:37.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#472. org.apache.commons.math.dfp.DfpTest#testCeil started...]
07:34:37.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#472. SUCCESS]
07:34:37.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#473. org.apache.commons.math.dfp.DfpTest#testRint started...]
07:34:37.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#473. SUCCESS]
07:34:37.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#474. org.apache.commons.math.dfp.DfpTest#testSqrt started...]
07:34:37.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#474. SUCCESS]
07:34:37.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#475. org.apache.commons.math.dfp.DfpTest#testToString started...]
07:34:37.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#475. SUCCESS]
07:34:37.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#476. org.apache.commons.math.dfp.DfpTest#testDivideInt started...]
07:34:37.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#476. SUCCESS]
07:34:37.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#477. org.apache.commons.math.dfp.DfpTest#testSignPredicates started...]
07:34:37.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#477. SUCCESS]
07:34:37.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#478. org.apache.commons.math.dfp.DfpTest#testPower10 started...]
07:34:37.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#478. SUCCESS]
07:34:37.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#479. org.apache.commons.math.dfp.DfpTest#testCopySign started...]
07:34:37.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#479. SUCCESS]
07:34:37.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#480. org.apache.commons.math.dfp.DfpTest#testCompare started...]
07:34:37.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#480. SUCCESS]
07:34:37.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#481. org.apache.commons.math.dfp.DfpTest#testByteConstructor started...]
07:34:37.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#481. SUCCESS]
07:34:37.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#482. org.apache.commons.math.dfp.DfpTest#testIntValue started...]
07:34:37.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#482. SUCCESS]
07:34:37.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#483. org.apache.commons.math.dfp.DfpTest#testDivide started...]
07:34:37.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#483. SUCCESS]
07:34:37.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#484. org.apache.commons.math.dfp.DfpTest#testMultiply started...]
07:34:37.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#484. SUCCESS]
07:34:37.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#485. org.apache.commons.math.dfp.DfpTest#testIssue567 started...]
07:34:37.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#485. SUCCESS]
07:34:37.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#486. org.apache.commons.math.dfp.DfpTest#testIsZero started...]
07:34:37.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#486. SUCCESS]
07:34:37.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#487. org.apache.commons.math.dfp.DfpTest#testIntConstructor started...]
07:34:37.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#487. SUCCESS]
07:34:37.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#488. org.apache.commons.math.dfp.DfpTest#testLog10K started...]
07:34:37.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#488. SUCCESS]
07:34:37.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#489. org.apache.commons.math.dfp.DfpTest#testRemainder started...]
07:34:37.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#489. SUCCESS]
07:34:37.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#490. org.apache.commons.math.dfp.DfpTest#testPower10K started...]
07:34:37.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#490. SUCCESS]
07:34:37.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#491. org.apache.commons.math.dfp.DfpTest#testLongConstructor started...]
07:34:37.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#491. SUCCESS]
07:34:37.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#492. org.apache.commons.math.dfp.DfpTest#testNextAfter started...]
07:34:37.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#492. SUCCESS]
07:34:37.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#493. org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleDoubleArguments started...]
07:34:37.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#493. SUCCESS]
07:34:37.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#494. org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeDoubleArguments started...]
07:34:37.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#494. SUCCESS]
07:34:37.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#495. org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleIntegerArguments started...]
07:34:37.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#495. SUCCESS]
07:34:37.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#496. org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeIntegerArguments started...]
07:34:37.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#496. SUCCESS]
07:34:37.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#497. org.apache.commons.math.distribution.BetaDistributionTest#testMomonts started...]
07:34:37.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#497. SUCCESS]
07:34:37.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#498. org.apache.commons.math.distribution.BetaDistributionTest#testCumulative started...]
07:34:37.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#498. SUCCESS]
07:34:37.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#499. org.apache.commons.math.distribution.BetaDistributionTest#testDensity started...]
07:34:37.368 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#499. SUCCESS]
07:34:37.368 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#500. org.apache.commons.math.distribution.BinomialDistributionTest#testMomonts started...]
07:34:37.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#500. SUCCESS]
07:34:37.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#501. org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0 started...]
07:34:37.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#501. SUCCESS]
07:34:37.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#502. org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1 started...]
07:34:37.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#502. SUCCESS]
07:34:37.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#503. org.apache.commons.math.distribution.BinomialDistributionTest#testDensities started...]
07:34:37.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#503. SUCCESS]
07:34:37.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#504. org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities started...]
07:34:37.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#504. SUCCESS]
07:34:37.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#505. org.apache.commons.math.distribution.BinomialDistributionTest#testSampling started...]
07:34:37.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#505. SUCCESS]
07:34:37.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#506. org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities started...]
07:34:37.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#506. SUCCESS]
07:34:37.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#507. org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments started...]
07:34:37.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#507. SUCCESS]
07:34:37.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#508. org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments started...]
07:34:37.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#508. SUCCESS]
07:34:37.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#509. org.apache.commons.math.distribution.CauchyDistributionTest#testScale started...]
07:34:37.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#509. SUCCESS]
07:34:37.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#510. org.apache.commons.math.distribution.CauchyDistributionTest#testPreconditions started...]
07:34:37.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#510. SUCCESS]
07:34:37.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#511. org.apache.commons.math.distribution.CauchyDistributionTest#testMomonts started...]
07:34:37.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#511. SUCCESS]
07:34:37.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#512. org.apache.commons.math.distribution.CauchyDistributionTest#testMedian started...]
07:34:37.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#512. SUCCESS]
07:34:37.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#513. org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes started...]
07:34:37.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#513. SUCCESS]
07:34:37.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#514. org.apache.commons.math.distribution.CauchyDistributionTest#testDensities started...]
07:34:37.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#514. SUCCESS]
07:34:37.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#515. org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities started...]
07:34:37.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#515. SUCCESS]
07:34:37.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#516. org.apache.commons.math.distribution.CauchyDistributionTest#testSampling started...]
07:34:37.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#516. SUCCESS]
07:34:37.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#517. org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities started...]
07:34:37.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#517. SUCCESS]
07:34:37.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#518. org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments started...]
07:34:37.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#518. SUCCESS]
07:34:37.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#519. org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency started...]
07:34:37.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#519. SUCCESS]
07:34:37.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#520. org.apache.commons.math.distribution.ChiSquareDistributionTest#testMomonts started...]
07:34:37.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#520. SUCCESS]
07:34:37.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#521. org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity started...]
07:34:37.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#521. SUCCESS]
07:34:37.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#522. org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors started...]
07:34:37.414 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#522. SUCCESS]
07:34:37.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#523. org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf started...]
07:34:37.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#523. SUCCESS]
07:34:37.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#524. org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensities started...]
07:34:37.417 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#524. SUCCESS]
07:34:37.417 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#525. org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities started...]
07:34:37.419 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#525. SUCCESS]
07:34:37.419 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#526. org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling started...]
07:34:37.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#526. SUCCESS]
07:34:37.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#527. org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities started...]
07:34:37.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#527. SUCCESS]
07:34:37.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#528. org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments started...]
07:34:37.455 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#528. SUCCESS]
07:34:37.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#529. org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency started...]
07:34:37.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#529. SUCCESS]
07:34:37.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#530. org.apache.commons.math.distribution.ExponentialDistributionTest#testPreconditions started...]
07:34:37.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#530. SUCCESS]
07:34:37.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#531. org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2 started...]
07:34:37.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#531. SUCCESS]
07:34:37.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#532. org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes started...]
07:34:37.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#532. SUCCESS]
07:34:37.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#533. org.apache.commons.math.distribution.ExponentialDistributionTest#testMomonts started...]
07:34:37.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#533. SUCCESS]
07:34:37.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#534. org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity started...]
07:34:37.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#534. SUCCESS]
07:34:37.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#535. org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes started...]
07:34:37.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#535. SUCCESS]
07:34:37.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#536. org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors started...]
07:34:37.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#536. SUCCESS]
07:34:37.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#537. org.apache.commons.math.distribution.ExponentialDistributionTest#testDensities started...]
07:34:37.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#537. SUCCESS]
07:34:37.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#538. org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities started...]
07:34:37.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#538. SUCCESS]
07:34:37.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#539. org.apache.commons.math.distribution.ExponentialDistributionTest#testSampling started...]
07:34:37.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#539. SUCCESS]
07:34:37.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#540. org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities started...]
07:34:37.459 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#540. SUCCESS]
07:34:37.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#541. org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments started...]
07:34:37.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#541. SUCCESS]
07:34:37.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#542. org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency started...]
07:34:37.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#542. SUCCESS]
07:34:37.460 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#543. org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom started...]
07:34:37.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#543. SUCCESS]
07:34:37.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#544. org.apache.commons.math.distribution.FDistributionTest#testPreconditions started...]
07:34:37.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#544. SUCCESS]
07:34:37.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#545. org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes started...]
07:34:37.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#545. SUCCESS]
07:34:37.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#546. org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom started...]
07:34:37.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#546. SUCCESS]
07:34:37.461 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#547. org.apache.commons.math.distribution.FDistributionTest#testMomonts started...]
07:34:37.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#547. SUCCESS]
07:34:37.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#548. org.apache.commons.math.distribution.FDistributionTest#testDfAccessors started...]
07:34:37.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#548. SUCCESS]
07:34:37.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#549. org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes started...]
07:34:37.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#549. SUCCESS]
07:34:37.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#550. org.apache.commons.math.distribution.FDistributionTest#testDensities started...]
07:34:37.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#550. SUCCESS]
07:34:37.462 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#551. org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities started...]
07:34:37.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#551. SUCCESS]
07:34:37.463 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#552. org.apache.commons.math.distribution.FDistributionTest#testSampling started...]
07:34:37.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#552. SUCCESS]
07:34:37.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#553. org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities started...]
07:34:37.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#553. SUCCESS]
07:34:37.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#554. org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments started...]
07:34:37.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#554. SUCCESS]
07:34:37.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#555. org.apache.commons.math.distribution.FDistributionTest#testConsistency started...]
07:34:37.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#555. SUCCESS]
07:34:37.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#556. org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities started...]
07:34:37.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#556. SUCCESS]
07:34:37.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#557. org.apache.commons.math.distribution.GammaDistributionTest#testPreconditions started...]
07:34:37.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#557. SUCCESS]
07:34:37.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#558. org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors started...]
07:34:37.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#558. SUCCESS]
07:34:37.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#559. org.apache.commons.math.distribution.GammaDistributionTest#testMomonts started...]
07:34:37.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#559. SUCCESS]
07:34:37.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#560. org.apache.commons.math.distribution.GammaDistributionTest#testDensity started...]
07:34:37.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#560. SUCCESS]
07:34:37.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#561. org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes started...]
07:34:37.490 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#561. SUCCESS]
07:34:37.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#562. org.apache.commons.math.distribution.GammaDistributionTest#testValues started...]
07:34:37.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#562. SUCCESS]
07:34:37.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#563. org.apache.commons.math.distribution.GammaDistributionTest#testDensities started...]
07:34:37.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#563. SUCCESS]
07:34:37.491 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#564. org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities started...]
07:34:37.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#564. SUCCESS]
07:34:37.492 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#565. org.apache.commons.math.distribution.GammaDistributionTest#testSampling started...]
07:34:37.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#565. SUCCESS]
07:34:37.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#566. org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities started...]
07:34:37.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#566. SUCCESS]
07:34:37.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#567. org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments started...]
07:34:37.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#567. SUCCESS]
07:34:37.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#568. org.apache.commons.math.distribution.GammaDistributionTest#testConsistency started...]
07:34:37.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#568. SUCCESS]
07:34:37.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#569. org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues started...]
07:34:37.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#569. SUCCESS]
07:34:37.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#570. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures started...]
07:34:37.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#570. SUCCESS]
07:34:37.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#571. org.apache.commons.math.distribution.HypergeometricDistributionTest#testAccessors started...]
07:34:37.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#571. SUCCESS]
07:34:37.757 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#572. org.apache.commons.math.distribution.HypergeometricDistributionTest#testPreconditions started...]
07:34:37.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#572. SUCCESS]
07:34:37.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#573. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses started...]
07:34:37.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#573. SUCCESS]
07:34:37.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#574. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample started...]
07:34:37.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#574. SUCCESS]
07:34:37.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#575. org.apache.commons.math.distribution.HypergeometricDistributionTest#testMomonts started...]
07:34:37.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#575. SUCCESS]
07:34:37.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#576. org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues started...]
07:34:37.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#576. SUCCESS]
07:34:37.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#577. org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities started...]
07:34:37.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#577. SUCCESS]
07:34:37.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#578. org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities started...]
07:34:37.920 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#578. SUCCESS]
07:34:37.920 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#579. org.apache.commons.math.distribution.HypergeometricDistributionTest#testSampling started...]
07:34:37.938 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#579. SUCCESS]
07:34:37.938 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#580. org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities started...]
07:34:37.938 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#580. SUCCESS]
07:34:37.938 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#581. org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments started...]
07:34:37.938 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#581. SUCCESS]
07:34:37.938 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#582. org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments started...]
07:34:37.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#582. SUCCESS]
07:34:37.939 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#583. org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest#testCumulativeDensityFunction started...]
07:34:38.067 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#583. SUCCESS]
07:34:38.068 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#584. org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues started...]
07:34:38.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#584. SUCCESS]
07:34:38.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#585. org.apache.commons.math.distribution.NormalDistributionTest#testPreconditions started...]
07:34:38.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#585. SUCCESS]
07:34:38.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#586. org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation started...]
07:34:38.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#586. SUCCESS]
07:34:38.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#587. org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles started...]
07:34:38.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#587. SUCCESS]
07:34:38.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#588. org.apache.commons.math.distribution.NormalDistributionTest#testGetMean started...]
07:34:38.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#588. SUCCESS]
07:34:38.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#589. org.apache.commons.math.distribution.NormalDistributionTest#testMath280 started...]
07:34:38.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#589. SUCCESS]
07:34:38.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#590. org.apache.commons.math.distribution.NormalDistributionTest#testMomonts started...]
07:34:38.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#590. SUCCESS]
07:34:38.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#591. org.apache.commons.math.distribution.NormalDistributionTest#testDensity started...]
07:34:38.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#591. SUCCESS]
07:34:38.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#592. org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes started...]
07:34:38.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#592. SUCCESS]
07:34:38.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#593. org.apache.commons.math.distribution.NormalDistributionTest#testDensities started...]
07:34:38.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#593. SUCCESS]
07:34:38.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#594. org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities started...]
07:34:38.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#594. SUCCESS]
07:34:38.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#595. org.apache.commons.math.distribution.NormalDistributionTest#testSampling started...]
07:34:38.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#595. SUCCESS]
07:34:38.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#596. org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities started...]
07:34:38.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#596. SUCCESS]
07:34:38.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#597. org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments started...]
07:34:38.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#597. SUCCESS]
07:34:38.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#598. org.apache.commons.math.distribution.NormalDistributionTest#testConsistency started...]
07:34:38.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#598. SUCCESS]
07:34:38.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#599. org.apache.commons.math.distribution.PascalDistributionTest#testMomonts started...]
07:34:38.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#599. SUCCESS]
07:34:38.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#600. org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0 started...]
07:34:38.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#600. SUCCESS]
07:34:38.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#601. org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1 started...]
07:34:38.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#601. SUCCESS]
07:34:38.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#602. org.apache.commons.math.distribution.PascalDistributionTest#testDensities started...]
07:34:38.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#602. SUCCESS]
07:34:38.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#603. org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities started...]
07:34:38.076 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#603. SUCCESS]
07:34:38.076 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#604. org.apache.commons.math.distribution.PascalDistributionTest#testSampling started...]
07:34:38.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#604. SUCCESS]
07:34:38.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#605. org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities started...]
07:34:38.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#605. SUCCESS]
07:34:38.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#606. org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments started...]
07:34:38.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#606. SUCCESS]
07:34:38.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#607. org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments started...]
07:34:38.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#607. SUCCESS]
07:34:38.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#608. org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability started...]
07:34:38.122 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#608. SUCCESS]
07:34:38.122 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#609. org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilitySpecial started...]
07:34:38.122 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#609. SUCCESS]
07:34:38.122 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#610. org.apache.commons.math.distribution.PoissonDistributionTest#testMean started...]
07:34:38.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#610. SUCCESS]
07:34:38.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#611. org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability started...]
07:34:38.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#611. SUCCESS]
07:34:38.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#612. org.apache.commons.math.distribution.PoissonDistributionTest#testMomonts started...]
07:34:38.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#612. SUCCESS]
07:34:38.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#613. org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability started...]
07:34:38.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#613. SUCCESS]
07:34:38.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#614. org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability started...]
07:34:38.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#614. SUCCESS]
07:34:38.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#615. org.apache.commons.math.distribution.PoissonDistributionTest#testDensities started...]
07:34:38.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#615. SUCCESS]
07:34:38.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#616. org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities started...]
07:34:38.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#616. SUCCESS]
07:34:38.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#617. org.apache.commons.math.distribution.PoissonDistributionTest#testSampling started...]
07:34:38.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#617. SUCCESS]
07:34:38.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#618. org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities started...]
07:34:38.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#618. SUCCESS]
07:34:38.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#619. org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments started...]
07:34:38.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#619. SUCCESS]
07:34:38.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#620. org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments started...]
07:34:38.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#620. SUCCESS]
07:34:38.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#621. org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow started...]
07:34:38.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#621. SUCCESS]
07:34:38.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#622. org.apache.commons.math.distribution.TDistributionTest#testPreconditions started...]
07:34:38.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#622. SUCCESS]
07:34:38.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#623. org.apache.commons.math.distribution.TDistributionTest#nistData started...]
07:34:38.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#623. SUCCESS]
07:34:38.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#624. org.apache.commons.math.distribution.TDistributionTest#testMomonts started...]
07:34:38.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#624. SUCCESS]
07:34:38.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#625. org.apache.commons.math.distribution.TDistributionTest#testDfAccessors started...]
07:34:38.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#625. SUCCESS]
07:34:38.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#626. org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes started...]
07:34:38.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#626. SUCCESS]
07:34:38.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#627. org.apache.commons.math.distribution.TDistributionTest#testSmallDf started...]
07:34:38.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#627. SUCCESS]
07:34:38.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#628. org.apache.commons.math.distribution.TDistributionTest#testDensities started...]
07:34:38.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#628. SUCCESS]
07:34:38.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#629. org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities started...]
07:34:38.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#629. SUCCESS]
07:34:38.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#630. org.apache.commons.math.distribution.TDistributionTest#testSampling started...]
07:34:38.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#630. SUCCESS]
07:34:38.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#631. org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities started...]
07:34:38.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#631. SUCCESS]
07:34:38.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#632. org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments started...]
07:34:38.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#632. SUCCESS]
07:34:38.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#633. org.apache.commons.math.distribution.TDistributionTest#testConsistency started...]
07:34:38.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#633. SUCCESS]
07:34:38.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#634. org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha started...]
07:34:38.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#634. SUCCESS]
07:34:38.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#635. org.apache.commons.math.distribution.WeibullDistributionTest#testBeta started...]
07:34:38.347 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#635. SUCCESS]
07:34:38.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#636. org.apache.commons.math.distribution.WeibullDistributionTest#testMomonts started...]
07:34:38.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#636. SUCCESS]
07:34:38.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#637. org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes started...]
07:34:38.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#637. SUCCESS]
07:34:38.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#638. org.apache.commons.math.distribution.WeibullDistributionTest#testDensities started...]
07:34:38.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#638. SUCCESS]
07:34:38.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#639. org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities started...]
07:34:38.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#639. SUCCESS]
07:34:38.348 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#640. org.apache.commons.math.distribution.WeibullDistributionTest#testSampling started...]
07:34:38.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#640. SUCCESS]
07:34:38.349 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#641. org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities started...]
07:34:38.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#641. SUCCESS]
07:34:38.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#642. org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments started...]
07:34:38.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#642. SUCCESS]
07:34:38.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#643. org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency started...]
07:34:38.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#643. SUCCESS]
07:34:38.350 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#644. org.apache.commons.math.distribution.ZipfDistributionTest#testPreconditions started...]
07:34:38.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#644. SUCCESS]
07:34:38.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#645. org.apache.commons.math.distribution.ZipfDistributionTest#testMomonts started...]
07:34:38.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#645. SUCCESS]
07:34:38.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#646. org.apache.commons.math.distribution.ZipfDistributionTest#testDensities started...]
07:34:38.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#646. SUCCESS]
07:34:38.351 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#647. org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities started...]
07:34:38.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#647. SUCCESS]
07:34:38.352 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#648. org.apache.commons.math.distribution.ZipfDistributionTest#testSampling started...]
07:34:38.368 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#648. SUCCESS]
07:34:38.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#649. org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities started...]
07:34:38.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#649. SUCCESS]
07:34:38.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#650. org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments started...]
07:34:38.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#650. SUCCESS]
07:34:38.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#651. org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments started...]
07:34:38.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#651. SUCCESS]
07:34:38.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#652. org.apache.commons.math.exception.DimensionMismatchExceptionTest#testAccessors started...]
07:34:38.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#652. SUCCESS]
07:34:38.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#653. org.apache.commons.math.exception.MaxCountExceededExceptionTest#testAccessors started...]
07:34:38.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#653. SUCCESS]
07:34:38.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#654. org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest#testAccessors started...]
07:34:38.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#654. SUCCESS]
07:34:38.370 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#655. org.apache.commons.math.exception.NotPositiveExceptionTest#testAccessors started...]
07:34:38.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#655. SUCCESS]
07:34:38.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#656. org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest#testAccessors started...]
07:34:38.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#656. SUCCESS]
07:34:38.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#657. org.apache.commons.math.exception.NumberIsTooLargeExceptionTest#testAccessors started...]
07:34:38.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#657. SUCCESS]
07:34:38.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#658. org.apache.commons.math.exception.NumberIsTooSmallExceptionTest#testAccessors started...]
07:34:38.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#658. SUCCESS]
07:34:38.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#659. org.apache.commons.math.exception.OutOfRangeExceptionTest#testAccessors started...]
07:34:38.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#659. SUCCESS]
07:34:38.371 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#660. org.apache.commons.math.exception.TooManyEvaluationsExceptionTest#testMessage started...]
07:34:38.372 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#660. SUCCESS]
07:34:38.372 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#661. org.apache.commons.math.exception.util.ArgUtilsTest#testFlatten started...]
07:34:38.372 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#661. SUCCESS]
07:34:38.372 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#662. org.apache.commons.math.exception.util.ExceptionContextTest#testNoArgAddMessage started...]
07:34:38.373 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#662. SUCCESS]
07:34:38.373 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#663. org.apache.commons.math.exception.util.ExceptionContextTest#testSerializeUnserializable started...]
07:34:38.375 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#663. SUCCESS]
07:34:38.375 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#664. org.apache.commons.math.exception.util.ExceptionContextTest#testMessageChain started...]
07:34:38.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#664. SUCCESS]
07:34:38.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#665. org.apache.commons.math.exception.util.ExceptionContextTest#testSerialize started...]
07:34:38.377 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#665. SUCCESS]
07:34:38.377 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#666. org.apache.commons.math.exception.util.ExceptionContextTest#testContext started...]
07:34:38.377 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#666. SUCCESS]
07:34:38.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#667. org.apache.commons.math.filter.KalmanFilterTest#testConstant started...]
07:34:38.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#667. SUCCESS]
07:34:38.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#668. org.apache.commons.math.fraction.BigFractionFieldTest#testOne started...]
07:34:38.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#668. SUCCESS]
07:34:38.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#669. org.apache.commons.math.fraction.BigFractionFieldTest#testZero started...]
07:34:38.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#669. SUCCESS]
07:34:38.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#670. org.apache.commons.math.fraction.BigFractionFieldTest#testSerial started...]
07:34:38.384 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#670. SUCCESS]
07:34:38.384 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#671. org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat started...]
07:34:38.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#671. SUCCESS]
07:34:38.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#672. org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative started...]
07:34:38.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#672. SUCCESS]
07:34:38.385 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#673. org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat started...]
07:34:38.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#673. SUCCESS]
07:34:38.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#674. org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper started...]
07:34:38.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#674. SUCCESS]
07:34:38.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#675. org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper started...]
07:34:38.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#675. SUCCESS]
07:34:38.386 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#676. org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative started...]
07:34:38.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#676. SUCCESS]
07:34:38.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#677. org.apache.commons.math.fraction.BigFractionFormatTest#testParse started...]
07:34:38.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#677. SUCCESS]
07:34:38.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#678. org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat started...]
07:34:38.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#678. SUCCESS]
07:34:38.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#679. org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero started...]
07:34:38.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#679. SUCCESS]
07:34:38.387 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#680. org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative started...]
07:34:38.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#680. SUCCESS]
07:34:38.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#681. org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator started...]
07:34:38.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#681. SUCCESS]
07:34:38.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#682. org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat started...]
07:34:38.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#682. SUCCESS]
07:34:38.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#683. org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus started...]
07:34:38.388 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#683. SUCCESS]
07:34:38.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#684. org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger started...]
07:34:38.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#684. SUCCESS]
07:34:38.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#685. org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid started...]
07:34:38.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#685. SUCCESS]
07:34:38.389 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#686. org.apache.commons.math.fraction.BigFractionFormatTest#testFormat started...]
07:34:38.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#686. SUCCESS]
07:34:38.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#687. org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat started...]
07:34:38.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#687. SUCCESS]
07:34:38.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#688. org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig started...]
07:34:38.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#688. SUCCESS]
07:34:38.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#689. org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative started...]
07:34:38.391 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#689. SUCCESS]
07:34:38.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#690. org.apache.commons.math.fraction.BigFractionTest#testFloatValue started...]
07:34:38.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#690. SUCCESS]
07:34:38.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#691. org.apache.commons.math.fraction.BigFractionTest#testAbs started...]
07:34:38.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#691. SUCCESS]
07:34:38.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#692. org.apache.commons.math.fraction.BigFractionTest#testAdd started...]
07:34:38.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#692. SUCCESS]
07:34:38.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#693. org.apache.commons.math.fraction.BigFractionTest#testPow started...]
07:34:38.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#693. SUCCESS]
07:34:38.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#694. org.apache.commons.math.fraction.BigFractionTest#testSubtract started...]
07:34:38.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#694. SUCCESS]
07:34:38.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#695. org.apache.commons.math.fraction.BigFractionTest#testReciprocal started...]
07:34:38.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#695. SUCCESS]
07:34:38.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#696. org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor started...]
07:34:38.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#696. SUCCESS]
07:34:38.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#697. org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction started...]
07:34:38.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#697. SUCCESS]
07:34:38.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#698. org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble started...]
07:34:38.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#698. SUCCESS]
07:34:38.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#699. org.apache.commons.math.fraction.BigFractionTest#testCompareTo started...]
07:34:38.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#699. SUCCESS]
07:34:38.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#700. org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor started...]
07:34:38.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#700. SUCCESS]
07:34:38.394 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#701. org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue started...]
07:34:38.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#701. SUCCESS]
07:34:38.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#702. org.apache.commons.math.fraction.BigFractionTest#testMath340 started...]
07:34:38.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#702. SUCCESS]
07:34:38.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#703. org.apache.commons.math.fraction.BigFractionTest#testLongValue started...]
07:34:38.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#703. SUCCESS]
07:34:38.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#704. org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor started...]
07:34:38.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#704. SUCCESS]
07:34:38.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#705. org.apache.commons.math.fraction.BigFractionTest#testIntValue started...]
07:34:38.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#705. SUCCESS]
07:34:38.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#706. org.apache.commons.math.fraction.BigFractionTest#testDivide started...]
07:34:38.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#706. SUCCESS]
07:34:38.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#707. org.apache.commons.math.fraction.BigFractionTest#testMultiply started...]
07:34:38.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#707. SUCCESS]
07:34:38.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#708. org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode started...]
07:34:38.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#708. SUCCESS]
07:34:38.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#709. org.apache.commons.math.fraction.BigFractionTest#testNegate started...]
07:34:38.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#709. SUCCESS]
07:34:38.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#710. org.apache.commons.math.fraction.BigFractionTest#testSerial started...]
07:34:38.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#710. SUCCESS]
07:34:38.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#711. org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio started...]
07:34:38.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#711. SUCCESS]
07:34:38.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#712. org.apache.commons.math.fraction.BigFractionTest#testDoubleValue started...]
07:34:38.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#712. SUCCESS]
07:34:38.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#713. org.apache.commons.math.fraction.BigFractionTest#testConstructor started...]
07:34:38.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#713. SUCCESS]
07:34:38.401 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#714. org.apache.commons.math.fraction.FractionFieldTest#testOne started...]
07:34:38.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#714. SUCCESS]
07:34:38.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#715. org.apache.commons.math.fraction.FractionFieldTest#testZero started...]
07:34:38.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#715. SUCCESS]
07:34:38.403 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#716. org.apache.commons.math.fraction.FractionFieldTest#testSerial started...]
07:34:38.403 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#716. SUCCESS]
07:34:38.403 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#717. org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat started...]
07:34:38.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#717. SUCCESS]
07:34:38.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#718. org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative started...]
07:34:38.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#718. SUCCESS]
07:34:38.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#719. org.apache.commons.math.fraction.FractionFormatTest#testLongFormat started...]
07:34:38.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#719. SUCCESS]
07:34:38.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#720. org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper started...]
07:34:38.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#720. SUCCESS]
07:34:38.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#721. org.apache.commons.math.fraction.FractionFormatTest#testParseProper started...]
07:34:38.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#721. SUCCESS]
07:34:38.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#722. org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative started...]
07:34:38.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#722. SUCCESS]
07:34:38.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#723. org.apache.commons.math.fraction.FractionFormatTest#testParse started...]
07:34:38.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#723. SUCCESS]
07:34:38.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#724. org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat started...]
07:34:38.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#724. SUCCESS]
07:34:38.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#725. org.apache.commons.math.fraction.FractionFormatTest#testFormatZero started...]
07:34:38.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#725. SUCCESS]
07:34:38.406 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#726. org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative started...]
07:34:38.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#726. SUCCESS]
07:34:38.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#727. org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator started...]
07:34:38.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#727. SUCCESS]
07:34:38.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#728. org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat started...]
07:34:38.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#728. SUCCESS]
07:34:38.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#729. org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus started...]
07:34:38.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#729. SUCCESS]
07:34:38.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#730. org.apache.commons.math.fraction.FractionFormatTest#testParseInteger started...]
07:34:38.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#730. SUCCESS]
07:34:38.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#731. org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid started...]
07:34:38.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#731. SUCCESS]
07:34:38.408 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#732. org.apache.commons.math.fraction.FractionFormatTest#testFormat started...]
07:34:38.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#732. SUCCESS]
07:34:38.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#733. org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat started...]
07:34:38.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#733. SUCCESS]
07:34:38.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#734. org.apache.commons.math.fraction.FractionFormatTest#testParseNegative started...]
07:34:38.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#734. SUCCESS]
07:34:38.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#735. org.apache.commons.math.fraction.FractionTest#testFloatValue started...]
07:34:38.409 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#735. SUCCESS]
07:34:38.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#736. org.apache.commons.math.fraction.FractionTest#testAbs started...]
07:34:38.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#736. SUCCESS]
07:34:38.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#737. org.apache.commons.math.fraction.FractionTest#testAdd started...]
07:34:38.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#737. SUCCESS]
07:34:38.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#738. org.apache.commons.math.fraction.FractionTest#testSubtract started...]
07:34:38.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#738. SUCCESS]
07:34:38.410 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#739. org.apache.commons.math.fraction.FractionTest#testToString started...]
07:34:38.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#739. SUCCESS]
07:34:38.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#740. org.apache.commons.math.fraction.FractionTest#testReciprocal started...]
07:34:38.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#740. SUCCESS]
07:34:38.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#741. org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor started...]
07:34:38.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#741. SUCCESS]
07:34:38.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#742. org.apache.commons.math.fraction.FractionTest#testGetReducedFraction started...]
07:34:38.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#742. SUCCESS]
07:34:38.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#743. org.apache.commons.math.fraction.FractionTest#testConstructorDouble started...]
07:34:38.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#743. SUCCESS]
07:34:38.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#744. org.apache.commons.math.fraction.FractionTest#testCompareTo started...]
07:34:38.411 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#744. SUCCESS]
07:34:38.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#745. org.apache.commons.math.fraction.FractionTest#testDoubleConstructor started...]
07:34:38.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#745. SUCCESS]
07:34:38.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#746. org.apache.commons.math.fraction.FractionTest#testLongValue started...]
07:34:38.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#746. SUCCESS]
07:34:38.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#747. org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor started...]
07:34:38.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#747. SUCCESS]
07:34:38.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#748. org.apache.commons.math.fraction.FractionTest#testIntValue started...]
07:34:38.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#748. SUCCESS]
07:34:38.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#749. org.apache.commons.math.fraction.FractionTest#testDivide started...]
07:34:38.412 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#749. SUCCESS]
07:34:38.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#750. org.apache.commons.math.fraction.FractionTest#testMultiply started...]
07:34:38.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#750. SUCCESS]
07:34:38.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#751. org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode started...]
07:34:38.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#751. SUCCESS]
07:34:38.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#752. org.apache.commons.math.fraction.FractionTest#testNegate started...]
07:34:38.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#752. SUCCESS]
07:34:38.413 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#753. org.apache.commons.math.fraction.FractionTest#testSerial started...]
07:34:38.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#753. SUCCESS]
07:34:38.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#754. org.apache.commons.math.fraction.FractionTest#testGoldenRatio started...]
07:34:38.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#754. SUCCESS]
07:34:38.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#755. org.apache.commons.math.fraction.FractionTest#testIntegerOverflow started...]
07:34:38.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#755. SUCCESS]
07:34:38.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#756. org.apache.commons.math.fraction.FractionTest#testDoubleValue started...]
07:34:38.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#756. SUCCESS]
07:34:38.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#757. org.apache.commons.math.fraction.FractionTest#testConstructor started...]
07:34:38.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#757. SUCCESS]
07:34:38.415 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#758. org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor started...]
07:34:38.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#758. SUCCESS]
07:34:38.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#759. org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame started...]
07:34:38.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#759. SUCCESS]
07:34:38.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#760. org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor started...]
07:34:38.417 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#760. SUCCESS]
07:34:38.417 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#761. org.apache.commons.math.genetics.BinaryMutationTest#testMutate started...]
07:34:38.418 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#761. SUCCESS]
07:34:38.418 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#762. org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome started...]
07:34:38.419 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#762. SUCCESS]
07:34:38.419 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#763. org.apache.commons.math.genetics.ChromosomeTest#testCompareTo started...]
07:34:38.419 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#763. SUCCESS]
07:34:38.420 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#764. org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration started...]
07:34:38.420 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#764. SUCCESS]
07:34:38.420 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#765. org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching started...]
07:34:38.437 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#765. SUCCESS]
07:34:38.437 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#766. org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied started...]
07:34:38.438 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#766. SUCCESS]
07:34:38.438 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#767. org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test started...]
07:34:38.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#767. SUCCESS]
07:34:38.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#768. org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test started...]
07:34:38.681 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#768. SUCCESS]
07:34:38.681 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#769. org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome started...]
07:34:38.682 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#769. SUCCESS]
07:34:38.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#770. org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover started...]
07:34:38.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#770. SUCCESS]
07:34:38.683 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#771. org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate started...]
07:34:38.684 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#771. SUCCESS]
07:34:38.684 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#772. org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation started...]
07:34:38.684 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#772. SUCCESS]
07:34:38.684 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#773. org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation started...]
07:34:38.684 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#773. SUCCESS]
07:34:38.684 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#774. org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation started...]
07:34:38.685 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#774. SUCCESS]
07:34:38.685 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#775. org.apache.commons.math.genetics.RandomKeyTest#testConstructor1 started...]
07:34:38.685 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#775. SUCCESS]
07:34:38.685 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#776. org.apache.commons.math.genetics.RandomKeyTest#testConstructor2 started...]
07:34:38.685 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#776. SUCCESS]
07:34:38.685 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#777. org.apache.commons.math.genetics.RandomKeyTest#testInvalidRepresentation started...]
07:34:38.685 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#777. SUCCESS]
07:34:38.685 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#778. org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation started...]
07:34:38.687 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#778. SUCCESS]
07:34:38.687 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#779. org.apache.commons.math.genetics.RandomKeyTest#testDecode started...]
07:34:38.687 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#779. SUCCESS]
07:34:38.687 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#780. org.apache.commons.math.genetics.RandomKeyTest#testIsSame started...]
07:34:38.687 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#780. SUCCESS]
07:34:38.687 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#781. org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr started...]
07:34:38.687 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#781. SUCCESS]
07:34:38.688 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#782. org.apache.commons.math.genetics.TournamentSelectionTest#testSelect started...]
07:34:38.688 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#782. SUCCESS]
07:34:38.688 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#783. org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInfinite started...]
07:34:38.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#783. SUCCESS]
07:34:38.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#784. org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInterval started...]
07:34:38.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#784. SUCCESS]
07:34:38.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#785. org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testMultiple started...]
07:34:38.696 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#785. SUCCESS]
07:34:38.697 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#786. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testConstructorSingleFormat started...]
07:34:38.697 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#786. SUCCESS]
07:34:38.697 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#787. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimals started...]
07:34:38.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#787. SUCCESS]
07:34:38.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#788. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSeparator started...]
07:34:38.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#788. SUCCESS]
07:34:38.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#789. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseZeroX started...]
07:34:38.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#789. SUCCESS]
07:34:38.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#790. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNan started...]
07:34:38.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#790. SUCCESS]
07:34:38.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#791. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc started...]
07:34:38.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#791. SUCCESS]
07:34:38.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#792. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeX started...]
07:34:38.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#792. SUCCESS]
07:34:38.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#793. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeY started...]
07:34:38.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#793. SUCCESS]
07:34:38.699 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#794. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeZ started...]
07:34:38.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#794. SUCCESS]
07:34:38.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#795. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeAll started...]
07:34:38.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#795. SUCCESS]
07:34:38.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#796. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testDefaultFormatVector3D started...]
07:34:38.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#796. SUCCESS]
07:34:38.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#797. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenPrefix started...]
07:34:38.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#797. SUCCESS]
07:34:38.700 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#798. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSuffix started...]
07:34:38.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#798. SUCCESS]
07:34:38.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#799. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeX started...]
07:34:38.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#799. SUCCESS]
07:34:38.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#800. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeY started...]
07:34:38.701 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#800. SUCCESS]
07:34:38.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#801. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeZ started...]
07:34:38.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#801. SUCCESS]
07:34:38.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#802. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseIgnoredWhitespace started...]
07:34:38.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#802. SUCCESS]
07:34:38.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#803. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc started...]
07:34:38.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#803. SUCCESS]
07:34:38.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#804. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#tesNegativeInfinity started...]
07:34:38.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#804. SUCCESS]
07:34:38.702 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#805. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeInfinity started...]
07:34:38.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#805. SUCCESS]
07:34:38.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#806. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNonDefaultSetting started...]
07:34:38.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#806. SUCCESS]
07:34:38.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#807. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleNoDecimals started...]
07:34:38.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#807. SUCCESS]
07:34:38.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#808. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleNoDecimals started...]
07:34:38.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#808. SUCCESS]
07:34:38.703 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#809. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testPositiveInfinity started...]
07:34:38.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#809. SUCCESS]
07:34:38.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#810. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNonDefaultSetting started...]
07:34:38.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#810. SUCCESS]
07:34:38.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#811. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNan started...]
07:34:38.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#811. SUCCESS]
07:34:38.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#812. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParsePositiveInfinity started...]
07:34:38.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#812. SUCCESS]
07:34:38.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#813. org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimals started...]
07:34:38.704 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#813. SUCCESS]
07:34:38.705 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#814. org.apache.commons.math.geometry.euclidean.threed.LineTest#testContains started...]
07:34:38.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#814. SUCCESS]
07:34:38.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#815. org.apache.commons.math.geometry.euclidean.threed.LineTest#testLineDistance started...]
07:34:38.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#815. SUCCESS]
07:34:38.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#816. org.apache.commons.math.geometry.euclidean.threed.LineTest#testClosest started...]
07:34:38.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#816. SUCCESS]
07:34:38.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#817. org.apache.commons.math.geometry.euclidean.threed.LineTest#testIntersection started...]
07:34:38.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#817. SUCCESS]
07:34:38.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#818. org.apache.commons.math.geometry.euclidean.threed.LineTest#testSimilar started...]
07:34:38.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#818. SUCCESS]
07:34:38.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#819. org.apache.commons.math.geometry.euclidean.threed.LineTest#testPointDistance started...]
07:34:38.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#819. SUCCESS]
07:34:38.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#820. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection2 started...]
07:34:38.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#820. SUCCESS]
07:34:38.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#821. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection3 started...]
07:34:38.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#821. SUCCESS]
07:34:38.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#822. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testPoint started...]
07:34:38.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#822. SUCCESS]
07:34:38.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#823. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testThreePoints started...]
07:34:38.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#823. SUCCESS]
07:34:38.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#824. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testContains started...]
07:34:38.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#824. SUCCESS]
07:34:38.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#825. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection started...]
07:34:38.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#825. SUCCESS]
07:34:38.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#826. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testOffset started...]
07:34:38.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#826. SUCCESS]
07:34:38.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#827. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testRotate started...]
07:34:38.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#827. SUCCESS]
07:34:38.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#828. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testSimilar started...]
07:34:38.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#828. SUCCESS]
07:34:38.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#829. org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testTranslate started...]
07:34:38.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#829. SUCCESS]
07:34:38.711 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#830. org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBox started...]
07:34:38.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#830. SUCCESS]
07:34:38.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#831. org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testCross started...]
07:34:38.790 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#831. SUCCESS]
07:34:38.790 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#832. org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBuildBox started...]
07:34:38.795 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#832. SUCCESS]
07:34:38.795 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#833. org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testTetrahedron started...]
07:34:38.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#833. SUCCESS]
07:34:38.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#834. org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testIsometry started...]
07:34:38.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#834. SUCCESS]
07:34:38.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#835. org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest#testName started...]
07:34:38.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#835. SUCCESS]
07:34:38.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#836. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAxisAngle started...]
07:34:38.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#836. SUCCESS]
07:34:38.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#837. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorTwoPairs started...]
07:34:38.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#837. SUCCESS]
07:34:38.805 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#838. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testCompose started...]
07:34:38.808 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#838. SUCCESS]
07:34:38.808 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#839. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIdentity started...]
07:34:38.808 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#839. SUCCESS]
07:34:38.808 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#840. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testComposeInverse started...]
07:34:38.811 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#840. SUCCESS]
07:34:38.811 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#841. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testApplyInverseTo started...]
07:34:38.821 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#841. SUCCESS]
07:34:38.821 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#842. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAngles started...]
07:34:38.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#842. SUCCESS]
07:34:38.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#843. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorOnePair started...]
07:34:38.988 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#843. SUCCESS]
07:34:38.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#844. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIssue639 started...]
07:34:38.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#844. SUCCESS]
07:34:38.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#845. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testMatrix started...]
07:34:38.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#845. SUCCESS]
07:34:38.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#846. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testRevert started...]
07:34:38.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#846. SUCCESS]
07:34:38.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#847. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testSingularities started...]
07:34:38.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#847. SUCCESS]
07:34:38.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#848. org.apache.commons.math.geometry.euclidean.threed.RotationTest#testQuaternion started...]
07:34:38.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#848. SUCCESS]
07:34:38.990 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#849. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testEndPoints started...]
07:34:38.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#849. SUCCESS]
07:34:38.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#850. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoEndPoints started...]
07:34:38.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#850. SUCCESS]
07:34:38.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#851. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideInside started...]
07:34:38.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#851. SUCCESS]
07:34:38.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#852. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryBoundary started...]
07:34:38.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#852. SUCCESS]
07:34:38.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#853. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionOutsideOutside started...]
07:34:38.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#853. SUCCESS]
07:34:38.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#854. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryOutside started...]
07:34:38.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#854. SUCCESS]
07:34:38.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#855. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testSeveralSegments started...]
07:34:38.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#855. SUCCESS]
07:34:38.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#856. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfiniteNeg started...]
07:34:38.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#856. SUCCESS]
07:34:38.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#857. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfinitePos started...]
07:34:38.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#857. SUCCESS]
07:34:38.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#858. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideOutside started...]
07:34:38.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#858. SUCCESS]
07:34:38.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#859. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoSegments started...]
07:34:38.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#859. SUCCESS]
07:34:38.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#860. org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideBoundary started...]
07:34:38.993 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#860. SUCCESS]
07:34:38.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#861. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testConstructorSingleFormat started...]
07:34:38.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#861. SUCCESS]
07:34:38.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#862. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimals started...]
07:34:38.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#862. SUCCESS]
07:34:38.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#863. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSeparator started...]
07:34:38.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#863. SUCCESS]
07:34:38.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#864. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseZeroX started...]
07:34:38.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#864. SUCCESS]
07:34:38.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#865. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNan started...]
07:34:38.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#865. SUCCESS]
07:34:38.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#866. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimalsTrunc started...]
07:34:38.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#866. SUCCESS]
07:34:38.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#867. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeX started...]
07:34:38.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#867. SUCCESS]
07:34:38.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#868. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeY started...]
07:34:38.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#868. SUCCESS]
07:34:38.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#869. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeZ started...]
07:34:38.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#869. SUCCESS]
07:34:38.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#870. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeAll started...]
07:34:38.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#870. SUCCESS]
07:34:38.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#871. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testDefaultFormatVector3D started...]
07:34:38.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#871. SUCCESS]
07:34:38.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#872. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenPrefix started...]
07:34:38.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#872. SUCCESS]
07:34:38.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#873. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSuffix started...]
07:34:38.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#873. SUCCESS]
07:34:38.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#874. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeX started...]
07:34:38.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#874. SUCCESS]
07:34:38.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#875. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeY started...]
07:34:38.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#875. SUCCESS]
07:34:38.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#876. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeZ started...]
07:34:38.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#876. SUCCESS]
07:34:38.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#877. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseIgnoredWhitespace started...]
07:34:38.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#877. SUCCESS]
07:34:38.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#878. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc started...]
07:34:38.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#878. SUCCESS]
07:34:38.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#879. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#tesNegativeInfinity started...]
07:34:38.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#879. SUCCESS]
07:34:38.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#880. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeInfinity started...]
07:34:38.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#880. SUCCESS]
07:34:38.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#881. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNonDefaultSetting started...]
07:34:38.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#881. SUCCESS]
07:34:38.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#882. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleNoDecimals started...]
07:34:38.999 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#882. SUCCESS]
07:34:39.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#883. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleNoDecimals started...]
07:34:39.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#883. SUCCESS]
07:34:39.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#884. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testPositiveInfinity started...]
07:34:39.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#884. SUCCESS]
07:34:39.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#885. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNonDefaultSetting started...]
07:34:39.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#885. SUCCESS]
07:34:39.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#886. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNan started...]
07:34:39.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#886. SUCCESS]
07:34:39.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#887. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParsePositiveInfinity started...]
07:34:39.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#887. SUCCESS]
07:34:39.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#888. org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimals started...]
07:34:39.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#888. SUCCESS]
07:34:39.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#889. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testVectorialProducts started...]
07:34:39.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#889. SUCCESS]
07:34:39.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#890. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateCrossProduct started...]
07:34:39.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#890. SUCCESS]
07:34:39.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#891. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProductCancellation started...]
07:34:39.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#891. SUCCESS]
07:34:39.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#892. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAdd started...]
07:34:39.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#892. SUCCESS]
07:34:39.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#893. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceInf started...]
07:34:39.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#893. SUCCESS]
07:34:39.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#894. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testSubtract started...]
07:34:39.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#894. SUCCESS]
07:34:39.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#895. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngular started...]
07:34:39.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#895. SUCCESS]
07:34:39.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#896. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngle started...]
07:34:39.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#896. SUCCESS]
07:34:39.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#897. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm1 started...]
07:34:39.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#897. SUCCESS]
07:34:39.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#898. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm started...]
07:34:39.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#898. SUCCESS]
07:34:39.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#899. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testConstructors started...]
07:34:39.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#899. SUCCESS]
07:34:39.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#900. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testScalarProduct started...]
07:34:39.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#900. SUCCESS]
07:34:39.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#901. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDotProduct started...]
07:34:39.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#901. SUCCESS]
07:34:39.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#902. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProduct started...]
07:34:39.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#902. SUCCESS]
07:34:39.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#903. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testOrthogonal started...]
07:34:39.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#903. SUCCESS]
07:34:39.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#904. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngularSeparation started...]
07:34:39.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#904. SUCCESS]
07:34:39.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#905. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormalize started...]
07:34:39.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#905. SUCCESS]
07:34:39.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#906. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance started...]
07:34:39.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#906. SUCCESS]
07:34:39.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#907. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance1 started...]
07:34:39.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#907. SUCCESS]
07:34:39.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#908. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCoordinates started...]
07:34:39.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#908. SUCCESS]
07:34:39.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#909. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateDotProduct started...]
07:34:39.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#909. SUCCESS]
07:34:39.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#910. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceSq started...]
07:34:39.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#910. SUCCESS]
07:34:39.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#911. org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormInf started...]
07:34:39.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#911. SUCCESS]
07:34:39.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#912. org.apache.commons.math.geometry.euclidean.twod.LineTest#testAbscissa started...]
07:34:39.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#912. SUCCESS]
07:34:39.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#913. org.apache.commons.math.geometry.euclidean.twod.LineTest#testOriginOffset started...]
07:34:39.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#913. SUCCESS]
07:34:39.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#914. org.apache.commons.math.geometry.euclidean.twod.LineTest#testPointAt started...]
07:34:39.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#914. SUCCESS]
07:34:39.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#915. org.apache.commons.math.geometry.euclidean.twod.LineTest#testContains started...]
07:34:39.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#915. SUCCESS]
07:34:39.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#916. org.apache.commons.math.geometry.euclidean.twod.LineTest#testIntersection started...]
07:34:39.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#916. SUCCESS]
07:34:39.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#917. org.apache.commons.math.geometry.euclidean.twod.LineTest#testOffset started...]
07:34:39.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#917. SUCCESS]
07:34:39.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#918. org.apache.commons.math.geometry.euclidean.twod.LineTest#testTransform started...]
07:34:39.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#918. SUCCESS]
07:34:39.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#919. org.apache.commons.math.geometry.euclidean.twod.LineTest#testParallel started...]
07:34:39.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#919. SUCCESS]
07:34:39.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#920. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testOppositeHyperplanes started...]
07:34:39.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#920. SUCCESS]
07:34:39.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#921. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDisjointPolygons started...]
07:34:39.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#921. SUCCESS]
07:34:39.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#922. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testEmptyDifference started...]
07:34:39.038 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#922. SUCCESS]
07:34:39.038 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#923. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testXor started...]
07:34:39.041 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#923. SUCCESS]
07:34:39.041 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#924. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20040520 started...]
07:34:39.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#924. SUCCESS]
07:34:39.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#925. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20041003 started...]
07:34:39.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#925. SUCCESS]
07:34:39.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#926. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testStair started...]
07:34:39.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#926. SUCCESS]
07:34:39.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#927. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnion started...]
07:34:39.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#927. SUCCESS]
07:34:39.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#928. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testHole started...]
07:34:39.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#928. SUCCESS]
07:34:39.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#929. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testChoppedHexagon started...]
07:34:39.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#929. SUCCESS]
07:34:39.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#930. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testLineIntersection started...]
07:34:39.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#930. SUCCESS]
07:34:39.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#931. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDifference started...]
07:34:39.052 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#931. SUCCESS]
07:34:39.052 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#932. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testIntersection started...]
07:34:39.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#932. SUCCESS]
07:34:39.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#933. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnlimitedSubHyperplane started...]
07:34:39.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#933. SUCCESS]
07:34:39.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#934. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testConcentric started...]
07:34:39.057 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#934. SUCCESS]
07:34:39.057 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#935. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSingularPoint started...]
07:34:39.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#935. SUCCESS]
07:34:39.058 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#936. org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSimplyConnected started...]
07:34:39.060 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#936. SUCCESS]
07:34:39.060 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#937. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testEndPoints started...]
07:34:39.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#937. SUCCESS]
07:34:39.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#938. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoEndPoints started...]
07:34:39.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#938. SUCCESS]
07:34:39.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#939. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideInside started...]
07:34:39.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#939. SUCCESS]
07:34:39.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#940. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryBoundary started...]
07:34:39.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#940. SUCCESS]
07:34:39.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#941. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionOutsideOutside started...]
07:34:39.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#941. SUCCESS]
07:34:39.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#942. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryOutside started...]
07:34:39.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#942. SUCCESS]
07:34:39.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#943. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testSeveralSegments started...]
07:34:39.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#943. SUCCESS]
07:34:39.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#944. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfiniteNeg started...]
07:34:39.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#944. SUCCESS]
07:34:39.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#945. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfinitePos started...]
07:34:39.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#945. SUCCESS]
07:34:39.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#946. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideOutside started...]
07:34:39.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#946. SUCCESS]
07:34:39.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#947. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoSegments started...]
07:34:39.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#947. SUCCESS]
07:34:39.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#948. org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideBoundary started...]
07:34:39.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#948. SUCCESS]
07:34:39.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#949. org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testRepetition started...]
07:34:39.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#949. SUCCESS]
07:34:39.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#950. org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testNavigation started...]
07:34:39.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#950. SUCCESS]
07:34:39.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#951. org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testDelete1 started...]
07:34:39.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#951. SUCCESS]
07:34:39.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#952. org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testInsert started...]
07:34:39.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#952. SUCCESS]
07:34:39.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#953. org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testSearch started...]
07:34:39.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#953. SUCCESS]
07:34:39.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#954. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm started...]
07:34:39.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#954. SUCCESS]
07:34:39.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#955. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate started...]
07:34:39.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#955. SUCCESS]
07:34:39.065 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#956. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples started...]
07:34:39.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#956. SUCCESS]
07:34:39.066 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#957. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry started...]
07:34:39.067 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#957. SUCCESS]
07:34:39.067 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#958. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail started...]
07:34:39.067 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#958. SUCCESS]
07:34:39.067 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#959. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd started...]
07:34:39.067 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#959. SUCCESS]
07:34:39.067 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#960. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd started...]
07:34:39.068 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#960. SUCCESS]
07:34:39.068 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#961. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPower started...]
07:34:39.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#961. SUCCESS]
07:34:39.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#962. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace started...]
07:34:39.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#962. SUCCESS]
07:34:39.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#963. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm started...]
07:34:39.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#963. SUCCESS]
07:34:39.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#964. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk started...]
07:34:39.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#964. SUCCESS]
07:34:39.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#965. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString started...]
07:34:39.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#965. SUCCESS]
07:34:39.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#966. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix started...]
07:34:39.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#966. SUCCESS]
07:34:39.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#967. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus started...]
07:34:39.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#967. SUCCESS]
07:34:39.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#968. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector started...]
07:34:39.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#968. SUCCESS]
07:34:39.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#969. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2 started...]
07:34:39.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#969. SUCCESS]
07:34:39.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#970. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions started...]
07:34:39.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#970. SUCCESS]
07:34:39.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#971. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix started...]
07:34:39.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#971. SUCCESS]
07:34:39.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#972. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector started...]
07:34:39.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#972. SUCCESS]
07:34:39.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#973. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions started...]
07:34:39.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#973. SUCCESS]
07:34:39.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#974. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix started...]
07:34:39.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#974. SUCCESS]
07:34:39.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#975. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209 started...]
07:34:39.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#975. SUCCESS]
07:34:39.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#976. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors started...]
07:34:39.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#976. SUCCESS]
07:34:39.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#977. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn started...]
07:34:39.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#977. SUCCESS]
07:34:39.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#978. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix started...]
07:34:39.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#978. SUCCESS]
07:34:39.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#979. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn started...]
07:34:39.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#979. SUCCESS]
07:34:39.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#980. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector started...]
07:34:39.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#980. SUCCESS]
07:34:39.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#981. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply started...]
07:34:39.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#981. SUCCESS]
07:34:39.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#982. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow started...]
07:34:39.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#982. SUCCESS]
07:34:39.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#983. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode started...]
07:34:39.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#983. SUCCESS]
07:34:39.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#984. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial started...]
07:34:39.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#984. SUCCESS]
07:34:39.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#985. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow started...]
07:34:39.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#985. SUCCESS]
07:34:39.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#986. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose started...]
07:34:39.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#986. SUCCESS]
07:34:39.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#987. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix started...]
07:34:39.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#987. SUCCESS]
07:34:39.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#988. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply started...]
07:34:39.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#988. SUCCESS]
07:34:39.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#989. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix started...]
07:34:39.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#989. SUCCESS]
07:34:39.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#990. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector started...]
07:34:39.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#990. SUCCESS]
07:34:39.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#991. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix started...]
07:34:39.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#991. SUCCESS]
07:34:39.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#992. org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector started...]
07:34:39.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#992. SUCCESS]
07:34:39.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#993. org.apache.commons.math.linear.ArrayFieldVectorTest#testZeroVectors started...]
07:34:39.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#993. SUCCESS]
07:34:39.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#994. org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc started...]
07:34:39.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#994. SUCCESS]
07:34:39.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#995. org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors started...]
07:34:39.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#995. SUCCESS]
07:34:39.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#996. org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions started...]
07:34:39.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#996. SUCCESS]
07:34:39.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#997. org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut started...]
07:34:39.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#997. SUCCESS]
07:34:39.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#998. org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions started...]
07:34:39.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#998. SUCCESS]
07:34:39.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#999. org.apache.commons.math.linear.ArrayFieldVectorTest#testOuterProduct started...]
07:34:39.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#999. SUCCESS]
07:34:39.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1000. org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial started...]
07:34:39.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1000. SUCCESS]
07:34:39.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1001. org.apache.commons.math.linear.ArrayRealVectorTest#testCombineMixedTypes started...]
07:34:39.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1001. SUCCESS]
07:34:39.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1002. org.apache.commons.math.linear.ArrayRealVectorTest#testZeroVectors started...]
07:34:39.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1002. SUCCESS]
07:34:39.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1003. org.apache.commons.math.linear.ArrayRealVectorTest#testMisc started...]
07:34:39.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1003. SUCCESS]
07:34:39.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1004. org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors started...]
07:34:39.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1004. SUCCESS]
07:34:39.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1005. org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionMixedType started...]
07:34:39.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1005. SUCCESS]
07:34:39.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1006. org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions started...]
07:34:39.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1006. SUCCESS]
07:34:39.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1007. org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfSameType started...]
07:34:39.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1007. SUCCESS]
07:34:39.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1008. org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionSameType started...]
07:34:39.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1008. SUCCESS]
07:34:39.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1009. org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut started...]
07:34:39.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1009. SUCCESS]
07:34:39.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1010. org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates started...]
07:34:39.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1010. SUCCESS]
07:34:39.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1011. org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfMixedTypes started...]
07:34:39.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1011. SUCCESS]
07:34:39.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1012. org.apache.commons.math.linear.ArrayRealVectorTest#testCombineSameType started...]
07:34:39.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1012. SUCCESS]
07:34:39.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1013. org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions started...]
07:34:39.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1013. SUCCESS]
07:34:39.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1014. org.apache.commons.math.linear.ArrayRealVectorTest#testCosine started...]
07:34:39.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1014. SUCCESS]
07:34:39.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1015. org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition1 started...]
07:34:39.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1015. SUCCESS]
07:34:39.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1016. org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition2 started...]
07:34:39.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1016. SUCCESS]
07:34:39.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1017. org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition3 started...]
07:34:39.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1017. SUCCESS]
07:34:39.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1018. org.apache.commons.math.linear.ArrayRealVectorTest#testMinMax started...]
07:34:39.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1018. SUCCESS]
07:34:39.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1019. org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionSameType started...]
07:34:39.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1019. SUCCESS]
07:34:39.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1020. org.apache.commons.math.linear.ArrayRealVectorTest#testOuterProduct started...]
07:34:39.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1020. SUCCESS]
07:34:39.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1021. org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionMixedType started...]
07:34:39.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1021. SUCCESS]
07:34:39.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1022. org.apache.commons.math.linear.ArrayRealVectorTest#testSerial started...]
07:34:39.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1022. SUCCESS]
07:34:39.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1023. org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal started...]
07:34:39.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1023. SUCCESS]
07:34:39.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1024. org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower started...]
07:34:39.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1024. SUCCESS]
07:34:39.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1025. org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal started...]
07:34:39.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1025. SUCCESS]
07:34:39.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1026. org.apache.commons.math.linear.BiDiagonalTransformerTest#testSingularMatrix started...]
07:34:39.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1026. SUCCESS]
07:34:39.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1027. org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues started...]
07:34:39.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1027. SUCCESS]
07:34:39.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1028. org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions started...]
07:34:39.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1028. SUCCESS]
07:34:39.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1029. org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt started...]
07:34:39.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1029. SUCCESS]
07:34:39.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1030. org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal started...]
07:34:39.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1030. SUCCESS]
07:34:39.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1031. org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge started...]
07:34:39.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1031. SUCCESS]
07:34:39.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1032. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge started...]
07:34:39.373 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1032. SUCCESS]
07:34:39.373 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1033. org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate started...]
07:34:39.373 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1033. SUCCESS]
07:34:39.374 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1034. org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples started...]
07:34:39.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1034. SUCCESS]
07:34:39.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1035. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry started...]
07:34:39.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1035. SUCCESS]
07:34:39.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1036. org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail started...]
07:34:39.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1036. SUCCESS]
07:34:39.376 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1037. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge started...]
07:34:39.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1037. SUCCESS]
07:34:39.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1038. org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd started...]
07:34:39.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1038. SUCCESS]
07:34:39.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1039. org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd started...]
07:34:39.392 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1039. SUCCESS]
07:34:39.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1040. org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace started...]
07:34:39.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1040. SUCCESS]
07:34:39.393 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1041. org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk started...]
07:34:39.433 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1041. SUCCESS]
07:34:39.433 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1042. org.apache.commons.math.linear.BlockFieldMatrixTest#testToString started...]
07:34:39.433 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1042. SUCCESS]
07:34:39.433 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1043. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge started...]
07:34:39.437 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1043. SUCCESS]
07:34:39.437 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1044. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge started...]
07:34:39.439 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1044. SUCCESS]
07:34:39.439 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1045. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix started...]
07:34:39.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1045. SUCCESS]
07:34:39.440 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1046. org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks started...]
07:34:39.764 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1046. SUCCESS]
07:34:39.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1047. org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus started...]
07:34:39.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1047. SUCCESS]
07:34:39.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1048. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector started...]
07:34:39.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1048. SUCCESS]
07:34:39.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1049. org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2 started...]
07:34:39.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1049. SUCCESS]
07:34:39.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1050. org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions started...]
07:34:39.765 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1050. SUCCESS]
07:34:39.766 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1051. org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix started...]
07:34:39.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1051. SUCCESS]
07:34:39.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1052. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge started...]
07:34:39.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1052. SUCCESS]
07:34:39.768 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1053. org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector started...]
07:34:39.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1053. SUCCESS]
07:34:39.769 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1054. org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions started...]
07:34:39.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1054. SUCCESS]
07:34:39.771 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1055. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix started...]
07:34:39.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1055. SUCCESS]
07:34:39.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1056. org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209 started...]
07:34:39.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1056. SUCCESS]
07:34:39.772 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1057. org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge started...]
07:34:39.813 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1057. SUCCESS]
07:34:39.813 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1058. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors started...]
07:34:39.813 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1058. SUCCESS]
07:34:39.813 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1059. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge started...]
07:34:39.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1059. SUCCESS]
07:34:39.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1060. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn started...]
07:34:39.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1060. SUCCESS]
07:34:39.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1061. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix started...]
07:34:39.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1061. SUCCESS]
07:34:39.815 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1062. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn started...]
07:34:39.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1062. SUCCESS]
07:34:39.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1063. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector started...]
07:34:39.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1063. SUCCESS]
07:34:39.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1064. org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply started...]
07:34:39.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1064. SUCCESS]
07:34:39.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1065. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow started...]
07:34:39.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1065. SUCCESS]
07:34:39.816 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1066. org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode started...]
07:34:39.817 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1066. SUCCESS]
07:34:39.817 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1067. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge started...]
07:34:39.818 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1067. SUCCESS]
07:34:39.818 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1068. org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial started...]
07:34:39.820 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1068. SUCCESS]
07:34:39.821 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1069. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow started...]
07:34:39.821 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1069. SUCCESS]
07:34:39.821 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1070. org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose started...]
07:34:39.821 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1070. SUCCESS]
07:34:39.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1071. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix started...]
07:34:39.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1071. SUCCESS]
07:34:39.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1072. org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply started...]
07:34:39.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1072. SUCCESS]
07:34:39.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1073. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix started...]
07:34:39.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1073. SUCCESS]
07:34:39.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1074. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector started...]
07:34:39.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1074. SUCCESS]
07:34:39.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1075. org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix started...]
07:34:39.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1075. SUCCESS]
07:34:39.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1076. org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector started...]
07:34:39.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1076. SUCCESS]
07:34:39.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1077. org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge started...]
07:34:39.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1077. SUCCESS]
07:34:39.888 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1078. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge started...]
07:34:39.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1078. SUCCESS]
07:34:39.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1079. org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm started...]
07:34:39.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1079. SUCCESS]
07:34:39.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1080. org.apache.commons.math.linear.BlockRealMatrixTest#testOperate started...]
07:34:39.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1080. SUCCESS]
07:34:39.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1081. org.apache.commons.math.linear.BlockRealMatrixTest#testExamples started...]
07:34:39.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1081. SUCCESS]
07:34:39.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1082. org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry started...]
07:34:39.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1082. SUCCESS]
07:34:39.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1083. org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail started...]
07:34:39.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1083. SUCCESS]
07:34:39.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1084. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge started...]
07:34:39.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1084. SUCCESS]
07:34:39.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1085. org.apache.commons.math.linear.BlockRealMatrixTest#testAdd started...]
07:34:39.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1085. SUCCESS]
07:34:39.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1086. org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd started...]
07:34:39.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1086. SUCCESS]
07:34:39.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1087. org.apache.commons.math.linear.BlockRealMatrixTest#testTrace started...]
07:34:39.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1087. SUCCESS]
07:34:39.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1088. org.apache.commons.math.linear.BlockRealMatrixTest#testNorm started...]
07:34:39.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1088. SUCCESS]
07:34:39.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1089. org.apache.commons.math.linear.BlockRealMatrixTest#testWalk started...]
07:34:39.920 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1089. SUCCESS]
07:34:39.920 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1090. org.apache.commons.math.linear.BlockRealMatrixTest#testToString started...]
07:34:39.920 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1090. SUCCESS]
07:34:39.920 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1091. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge started...]
07:34:39.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1091. SUCCESS]
07:34:39.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1092. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge started...]
07:34:39.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1092. SUCCESS]
07:34:39.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1093. org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix started...]
07:34:39.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1093. SUCCESS]
07:34:39.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1094. org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks started...]
07:34:39.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1094. SUCCESS]
07:34:39.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1095. org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus started...]
07:34:39.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1095. SUCCESS]
07:34:39.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1096. org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector started...]
07:34:39.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1096. SUCCESS]
07:34:39.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1097. org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2 started...]
07:34:39.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1097. SUCCESS]
07:34:39.956 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1098. org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions started...]
07:34:39.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1098. SUCCESS]
07:34:39.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1099. org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix started...]
07:34:39.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1099. SUCCESS]
07:34:39.957 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1100. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge started...]
07:34:39.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1100. SUCCESS]
07:34:39.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1101. org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector started...]
07:34:39.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1101. SUCCESS]
07:34:39.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1102. org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions started...]
07:34:39.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1102. SUCCESS]
07:34:39.960 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1103. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix started...]
07:34:39.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1103. SUCCESS]
07:34:39.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1104. org.apache.commons.math.linear.BlockRealMatrixTest#testMath209 started...]
07:34:39.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1104. SUCCESS]
07:34:39.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1105. org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge started...]
07:34:40.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1105. SUCCESS]
07:34:40.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1106. org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors started...]
07:34:40.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1106. SUCCESS]
07:34:40.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1107. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge started...]
07:34:40.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1107. SUCCESS]
07:34:40.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1108. org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn started...]
07:34:40.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1108. SUCCESS]
07:34:40.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1109. org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix started...]
07:34:40.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1109. SUCCESS]
07:34:40.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1110. org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn started...]
07:34:40.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1110. SUCCESS]
07:34:40.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1111. org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector started...]
07:34:40.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1111. SUCCESS]
07:34:40.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1112. org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply started...]
07:34:40.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1112. SUCCESS]
07:34:40.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1113. org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow started...]
07:34:40.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1113. SUCCESS]
07:34:40.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1114. org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode started...]
07:34:40.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1114. SUCCESS]
07:34:40.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1115. org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge started...]
07:34:40.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1115. SUCCESS]
07:34:40.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1116. org.apache.commons.math.linear.BlockRealMatrixTest#testSerial started...]
07:34:40.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1116. SUCCESS]
07:34:40.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1117. org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow started...]
07:34:40.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1117. SUCCESS]
07:34:40.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1118. org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose started...]
07:34:40.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1118. SUCCESS]
07:34:40.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1119. org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix started...]
07:34:40.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1119. SUCCESS]
07:34:40.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1120. org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply started...]
07:34:40.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1120. SUCCESS]
07:34:40.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1121. org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix started...]
07:34:40.021 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1121. SUCCESS]
07:34:40.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1122. org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector started...]
07:34:40.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1122. SUCCESS]
07:34:40.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1123. org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix started...]
07:34:40.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1123. SUCCESS]
07:34:40.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1124. org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector started...]
07:34:40.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1124. SUCCESS]
07:34:40.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1125. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMatricesValues started...]
07:34:40.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1125. SUCCESS]
07:34:40.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1126. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotSymmetricMatrixException started...]
07:34:40.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1126. SUCCESS]
07:34:40.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1127. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testDimensions started...]
07:34:40.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1127. SUCCESS]
07:34:40.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1128. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMath274 started...]
07:34:40.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1128. SUCCESS]
07:34:40.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1129. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNonSquare started...]
07:34:40.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1129. SUCCESS]
07:34:40.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1130. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotPositiveDefinite started...]
07:34:40.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1130. SUCCESS]
07:34:40.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1131. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLLowerTriangular started...]
07:34:40.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1131. SUCCESS]
07:34:40.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1132. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLTTransposed started...]
07:34:40.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1132. SUCCESS]
07:34:40.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1133. org.apache.commons.math.linear.CholeskyDecompositionImplTest#testAEqualLLT started...]
07:34:40.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1133. SUCCESS]
07:34:40.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1134. org.apache.commons.math.linear.CholeskySolverTest#testSolve started...]
07:34:40.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1134. SUCCESS]
07:34:40.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1135. org.apache.commons.math.linear.CholeskySolverTest#testDeterminant started...]
07:34:40.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1135. SUCCESS]
07:34:40.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1136. org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors started...]
07:34:40.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1136. SUCCESS]
07:34:40.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1137. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithoutSplit started...]
07:34:40.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1137. SUCCESS]
07:34:40.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1138. org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvectors started...]
07:34:40.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1138. SUCCESS]
07:34:40.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1139. org.apache.commons.math.linear.EigenDecompositionImplTest#testTridiagonal started...]
07:34:40.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1139. SUCCESS]
07:34:40.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1140. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension1 started...]
07:34:40.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1140. SUCCESS]
07:34:40.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1141. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension2 started...]
07:34:40.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1141. SUCCESS]
07:34:40.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1142. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3 started...]
07:34:40.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1142. SUCCESS]
07:34:40.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1143. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimensions started...]
07:34:40.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1143. SUCCESS]
07:34:40.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1144. org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvalues started...]
07:34:40.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1144. SUCCESS]
07:34:40.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1145. org.apache.commons.math.linear.EigenDecompositionImplTest#testRepeatedEigenvalue started...]
07:34:40.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1145. SUCCESS]
07:34:40.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1146. org.apache.commons.math.linear.EigenDecompositionImplTest#testAEqualVDVt started...]
07:34:40.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1146. SUCCESS]
07:34:40.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1147. org.apache.commons.math.linear.EigenDecompositionImplTest#testMath308 started...]
07:34:40.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1147. SUCCESS]
07:34:40.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1148. org.apache.commons.math.linear.EigenDecompositionImplTest#testDiagonal started...]
07:34:40.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1148. SUCCESS]
07:34:40.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1149. org.apache.commons.math.linear.EigenDecompositionImplTest#testDistinctEigenvalues started...]
07:34:40.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1149. SUCCESS]
07:34:40.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1150. org.apache.commons.math.linear.EigenDecompositionImplTest#testVOrthogonal started...]
07:34:40.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1150. SUCCESS]
07:34:40.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1151. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3MultipleRoot started...]
07:34:40.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1151. SUCCESS]
07:34:40.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1152. org.apache.commons.math.linear.EigenDecompositionImplTest#testMathpbx02 started...]
07:34:40.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1152. SUCCESS]
07:34:40.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1153. org.apache.commons.math.linear.EigenDecompositionImplTest#testMathpbx03 started...]
07:34:40.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1153. SUCCESS]
07:34:40.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1154. org.apache.commons.math.linear.EigenDecompositionImplTest#testBigMatrix started...]
07:34:40.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1154. SUCCESS]
07:34:40.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1155. org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithSplit started...]
07:34:40.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1155. SUCCESS]
07:34:40.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1156. org.apache.commons.math.linear.EigenDecompositionImplTest#testZeroDivide started...]
07:34:40.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1156. SUCCESS]
07:34:40.253 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1157. org.apache.commons.math.linear.EigenSolverTest#testSolve started...]
07:34:40.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1157. SUCCESS]
07:34:40.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1158. org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors started...]
07:34:40.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1158. SUCCESS]
07:34:40.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1159. org.apache.commons.math.linear.EigenSolverTest#testNonInvertible started...]
07:34:40.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1159. SUCCESS]
07:34:40.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1160. org.apache.commons.math.linear.EigenSolverTest#testInvertible started...]
07:34:40.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1160. SUCCESS]
07:34:40.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1161. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPPermutation started...]
07:34:40.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1161. SUCCESS]
07:34:40.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1162. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testUUpperTriangular started...]
07:34:40.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1162. SUCCESS]
07:34:40.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1163. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testDimensions started...]
07:34:40.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1163. SUCCESS]
07:34:40.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1164. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testNonSquare started...]
07:34:40.257 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1164. SUCCESS]
07:34:40.257 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1165. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testSingular started...]
07:34:40.257 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1165. SUCCESS]
07:34:40.257 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1166. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testLLowerTriangular started...]
07:34:40.257 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1166. SUCCESS]
07:34:40.257 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1167. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPAEqualLU started...]
07:34:40.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1167. SUCCESS]
07:34:40.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1168. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues1 started...]
07:34:40.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1168. SUCCESS]
07:34:40.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1169. org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues2 started...]
07:34:40.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1169. SUCCESS]
07:34:40.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1170. org.apache.commons.math.linear.FieldMatrixImplTest#testOperate started...]
07:34:40.263 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1170. SUCCESS]
07:34:40.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1171. org.apache.commons.math.linear.FieldMatrixImplTest#testExamples started...]
07:34:40.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1171. SUCCESS]
07:34:40.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1172. org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry started...]
07:34:40.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1172. SUCCESS]
07:34:40.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1173. org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail started...]
07:34:40.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1173. SUCCESS]
07:34:40.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1174. org.apache.commons.math.linear.FieldMatrixImplTest#testAdd started...]
07:34:40.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1174. SUCCESS]
07:34:40.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1175. org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd started...]
07:34:40.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1175. SUCCESS]
07:34:40.265 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1176. org.apache.commons.math.linear.FieldMatrixImplTest#testPower started...]
07:34:40.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1176. SUCCESS]
07:34:40.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1177. org.apache.commons.math.linear.FieldMatrixImplTest#testTrace started...]
07:34:40.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1177. SUCCESS]
07:34:40.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1178. org.apache.commons.math.linear.FieldMatrixImplTest#testWalk started...]
07:34:40.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1178. SUCCESS]
07:34:40.311 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1179. org.apache.commons.math.linear.FieldMatrixImplTest#testToString started...]
07:34:40.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1179. SUCCESS]
07:34:40.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1180. org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix started...]
07:34:40.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1180. SUCCESS]
07:34:40.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1181. org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus started...]
07:34:40.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1181. SUCCESS]
07:34:40.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1182. org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector started...]
07:34:40.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1182. SUCCESS]
07:34:40.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1183. org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2 started...]
07:34:40.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1183. SUCCESS]
07:34:40.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1184. org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions started...]
07:34:40.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1184. SUCCESS]
07:34:40.313 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1185. org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix started...]
07:34:40.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1185. SUCCESS]
07:34:40.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1186. org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector started...]
07:34:40.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1186. SUCCESS]
07:34:40.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1187. org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions started...]
07:34:40.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1187. SUCCESS]
07:34:40.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1188. org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix started...]
07:34:40.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1188. SUCCESS]
07:34:40.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1189. org.apache.commons.math.linear.FieldMatrixImplTest#testMath209 started...]
07:34:40.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1189. SUCCESS]
07:34:40.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1190. org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors started...]
07:34:40.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1190. SUCCESS]
07:34:40.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1191. org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn started...]
07:34:40.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1191. SUCCESS]
07:34:40.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1192. org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix started...]
07:34:40.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1192. SUCCESS]
07:34:40.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1193. org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn started...]
07:34:40.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1193. SUCCESS]
07:34:40.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1194. org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector started...]
07:34:40.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1194. SUCCESS]
07:34:40.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1195. org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply started...]
07:34:40.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1195. SUCCESS]
07:34:40.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1196. org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow started...]
07:34:40.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1196. SUCCESS]
07:34:40.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1197. org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode started...]
07:34:40.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1197. SUCCESS]
07:34:40.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1198. org.apache.commons.math.linear.FieldMatrixImplTest#testSerial started...]
07:34:40.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1198. SUCCESS]
07:34:40.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1199. org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow started...]
07:34:40.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1199. SUCCESS]
07:34:40.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1200. org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose started...]
07:34:40.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1200. SUCCESS]
07:34:40.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1201. org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix started...]
07:34:40.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1201. SUCCESS]
07:34:40.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1202. org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply started...]
07:34:40.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1202. SUCCESS]
07:34:40.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1203. org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix started...]
07:34:40.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1203. SUCCESS]
07:34:40.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1204. org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector started...]
07:34:40.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1204. SUCCESS]
07:34:40.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1205. org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix started...]
07:34:40.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1205. SUCCESS]
07:34:40.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1206. org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector started...]
07:34:40.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1206. SUCCESS]
07:34:40.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1207. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat started...]
07:34:40.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1207. SUCCESS]
07:34:40.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1208. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals started...]
07:34:40.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1208. SUCCESS]
07:34:40.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1209. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator started...]
07:34:40.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1209. SUCCESS]
07:34:40.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1210. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX started...]
07:34:40.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1210. SUCCESS]
07:34:40.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1211. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan started...]
07:34:40.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1211. SUCCESS]
07:34:40.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1212. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc started...]
07:34:40.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1212. SUCCESS]
07:34:40.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1213. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX started...]
07:34:40.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1213. SUCCESS]
07:34:40.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1214. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY started...]
07:34:40.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1214. SUCCESS]
07:34:40.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1215. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ started...]
07:34:40.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1215. SUCCESS]
07:34:40.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1216. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll started...]
07:34:40.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1216. SUCCESS]
07:34:40.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1217. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix started...]
07:34:40.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1217. SUCCESS]
07:34:40.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1218. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix started...]
07:34:40.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1218. SUCCESS]
07:34:40.323 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1219. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX started...]
07:34:40.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1219. SUCCESS]
07:34:40.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1220. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY started...]
07:34:40.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1220. SUCCESS]
07:34:40.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1221. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ started...]
07:34:40.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1221. SUCCESS]
07:34:40.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1222. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace started...]
07:34:40.324 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1222. SUCCESS]
07:34:40.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1223. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc started...]
07:34:40.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1223. SUCCESS]
07:34:40.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1224. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents started...]
07:34:40.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1224. SUCCESS]
07:34:40.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1225. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents started...]
07:34:40.325 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1225. SUCCESS]
07:34:40.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1226. org.apache.commons.math.linear.FrenchRealVectorFormatTest#tesNegativeInfinity started...]
07:34:40.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1226. SUCCESS]
07:34:40.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1227. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testDefaultFormatRealVectorImpl started...]
07:34:40.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1227. SUCCESS]
07:34:40.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1228. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity started...]
07:34:40.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1228. SUCCESS]
07:34:40.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1229. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting started...]
07:34:40.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1229. SUCCESS]
07:34:40.326 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1230. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals started...]
07:34:40.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1230. SUCCESS]
07:34:40.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1231. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals started...]
07:34:40.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1231. SUCCESS]
07:34:40.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1232. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity started...]
07:34:40.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1232. SUCCESS]
07:34:40.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1233. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting started...]
07:34:40.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1233. SUCCESS]
07:34:40.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1234. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan started...]
07:34:40.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1234. SUCCESS]
07:34:40.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1235. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity started...]
07:34:40.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1235. SUCCESS]
07:34:40.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1236. org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals started...]
07:34:40.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1236. SUCCESS]
07:34:40.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1237. org.apache.commons.math.linear.LUDecompositionImplTest#testPPermutation started...]
07:34:40.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1237. SUCCESS]
07:34:40.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1238. org.apache.commons.math.linear.LUDecompositionImplTest#testUUpperTriangular started...]
07:34:40.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1238. SUCCESS]
07:34:40.328 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1239. org.apache.commons.math.linear.LUDecompositionImplTest#testDimensions started...]
07:34:40.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1239. SUCCESS]
07:34:40.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1240. org.apache.commons.math.linear.LUDecompositionImplTest#testNonSquare started...]
07:34:40.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1240. SUCCESS]
07:34:40.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1241. org.apache.commons.math.linear.LUDecompositionImplTest#testSingular started...]
07:34:40.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1241. SUCCESS]
07:34:40.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1242. org.apache.commons.math.linear.LUDecompositionImplTest#testLLowerTriangular started...]
07:34:40.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1242. SUCCESS]
07:34:40.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1243. org.apache.commons.math.linear.LUDecompositionImplTest#testPAEqualLU started...]
07:34:40.329 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1243. SUCCESS]
07:34:40.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1244. org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues1 started...]
07:34:40.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1244. SUCCESS]
07:34:40.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1245. org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues2 started...]
07:34:40.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1245. SUCCESS]
07:34:40.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1246. org.apache.commons.math.linear.LUSolverTest#testSolve started...]
07:34:40.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1246. SUCCESS]
07:34:40.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1247. org.apache.commons.math.linear.LUSolverTest#testThreshold started...]
07:34:40.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1247. SUCCESS]
07:34:40.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1248. org.apache.commons.math.linear.LUSolverTest#testDeterminant started...]
07:34:40.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1248. SUCCESS]
07:34:40.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1249. org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors started...]
07:34:40.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1249. SUCCESS]
07:34:40.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1250. org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors started...]
07:34:40.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1250. SUCCESS]
07:34:40.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1251. org.apache.commons.math.linear.LUSolverTest#testSingular started...]
07:34:40.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1251. SUCCESS]
07:34:40.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1252. org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest#testAccessors started...]
07:34:40.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1252. SUCCESS]
07:34:40.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1253. org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter started...]
07:34:40.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1253. SUCCESS]
07:34:40.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1254. org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix started...]
07:34:40.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1254. SUCCESS]
07:34:40.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1255. org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix started...]
07:34:40.332 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1255. SUCCESS]
07:34:40.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1256. org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix started...]
07:34:40.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1256. SUCCESS]
07:34:40.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1257. org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix started...]
07:34:40.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1257. SUCCESS]
07:34:40.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1258. org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter started...]
07:34:40.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1258. SUCCESS]
07:34:40.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1259. org.apache.commons.math.linear.MatrixUtilsTest#testSolveUpperTriangularSystem started...]
07:34:40.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1259. SUCCESS]
07:34:40.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1260. org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix started...]
07:34:40.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1260. SUCCESS]
07:34:40.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1261. org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix started...]
07:34:40.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1261. SUCCESS]
07:34:40.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1262. org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix started...]
07:34:40.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1262. SUCCESS]
07:34:40.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1263. org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix started...]
07:34:40.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1263. SUCCESS]
07:34:40.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1264. org.apache.commons.math.linear.MatrixUtilsTest#testSolveLowerTriangularSystem started...]
07:34:40.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1264. SUCCESS]
07:34:40.335 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1265. org.apache.commons.math.linear.QRDecompositionImplTest#testAEqualQR started...]
07:34:40.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1265. SUCCESS]
07:34:40.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1266. org.apache.commons.math.linear.QRDecompositionImplTest#testMatricesValues started...]
07:34:40.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1266. SUCCESS]
07:34:40.381 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1267. org.apache.commons.math.linear.QRDecompositionImplTest#testDimensions started...]
07:34:40.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1267. SUCCESS]
07:34:40.396 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1268. org.apache.commons.math.linear.QRDecompositionImplTest#testRUpperTriangular started...]
07:34:40.400 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1268. SUCCESS]
07:34:40.400 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1269. org.apache.commons.math.linear.QRDecompositionImplTest#testQOrthogonal started...]
07:34:40.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1269. SUCCESS]
07:34:40.417 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1270. org.apache.commons.math.linear.QRDecompositionImplTest#testHTrapezoidal started...]
07:34:40.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1270. SUCCESS]
07:34:40.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1271. org.apache.commons.math.linear.QRSolverTest#testOverdetermined started...]
07:34:40.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1271. SUCCESS]
07:34:40.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1272. org.apache.commons.math.linear.QRSolverTest#testSolve started...]
07:34:40.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1272. SUCCESS]
07:34:40.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1273. org.apache.commons.math.linear.QRSolverTest#testRank started...]
07:34:40.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1273. SUCCESS]
07:34:40.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1274. org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors started...]
07:34:40.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1274. SUCCESS]
07:34:40.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1275. org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors started...]
07:34:40.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1275. SUCCESS]
07:34:40.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1276. org.apache.commons.math.linear.QRSolverTest#testUnderdetermined started...]
07:34:40.493 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1276. SUCCESS]
07:34:40.494 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1277. org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat started...]
07:34:40.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1277. SUCCESS]
07:34:40.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1278. org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals started...]
07:34:40.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1278. SUCCESS]
07:34:40.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1279. org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator started...]
07:34:40.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1279. SUCCESS]
07:34:40.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1280. org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX started...]
07:34:40.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1280. SUCCESS]
07:34:40.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1281. org.apache.commons.math.linear.RealVectorFormatTest#testNan started...]
07:34:40.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1281. SUCCESS]
07:34:40.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1282. org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc started...]
07:34:40.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1282. SUCCESS]
07:34:40.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1283. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX started...]
07:34:40.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1283. SUCCESS]
07:34:40.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1284. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY started...]
07:34:40.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1284. SUCCESS]
07:34:40.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1285. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ started...]
07:34:40.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1285. SUCCESS]
07:34:40.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1286. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll started...]
07:34:40.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1286. SUCCESS]
07:34:40.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1287. org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix started...]
07:34:40.503 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1287. SUCCESS]
07:34:40.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1288. org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix started...]
07:34:40.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1288. SUCCESS]
07:34:40.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1289. org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX started...]
07:34:40.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1289. SUCCESS]
07:34:40.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1290. org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY started...]
07:34:40.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1290. SUCCESS]
07:34:40.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1291. org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ started...]
07:34:40.504 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1291. SUCCESS]
07:34:40.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1292. org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace started...]
07:34:40.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1292. SUCCESS]
07:34:40.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1293. org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc started...]
07:34:40.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1293. SUCCESS]
07:34:40.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1294. org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents started...]
07:34:40.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1294. SUCCESS]
07:34:40.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1295. org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents started...]
07:34:40.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1295. SUCCESS]
07:34:40.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1296. org.apache.commons.math.linear.RealVectorFormatTest#tesNegativeInfinity started...]
07:34:40.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1296. SUCCESS]
07:34:40.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1297. org.apache.commons.math.linear.RealVectorFormatTest#testDefaultFormatRealVectorImpl started...]
07:34:40.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1297. SUCCESS]
07:34:40.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1298. org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity started...]
07:34:40.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1298. SUCCESS]
07:34:40.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1299. org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting started...]
07:34:40.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1299. SUCCESS]
07:34:40.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1300. org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals started...]
07:34:40.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1300. SUCCESS]
07:34:40.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1301. org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals started...]
07:34:40.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1301. SUCCESS]
07:34:40.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1302. org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity started...]
07:34:40.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1302. SUCCESS]
07:34:40.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1303. org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting started...]
07:34:40.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1303. SUCCESS]
07:34:40.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1304. org.apache.commons.math.linear.RealVectorFormatTest#testParseNan started...]
07:34:40.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1304. SUCCESS]
07:34:40.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1305. org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity started...]
07:34:40.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1305. SUCCESS]
07:34:40.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1306. org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals started...]
07:34:40.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1306. SUCCESS]
07:34:40.508 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1307. org.apache.commons.math.linear.RealVectorTest#testMap started...]
07:34:40.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1307. SUCCESS]
07:34:40.509 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1308. org.apache.commons.math.linear.RealVectorTest#testClone started...]
07:34:40.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1308. SUCCESS]
07:34:40.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1309. org.apache.commons.math.linear.RealVectorTest#testCombineToSelf started...]
07:34:40.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1309. SUCCESS]
07:34:40.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1310. org.apache.commons.math.linear.RealVectorTest#testCombinePrecondition started...]
07:34:40.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1310. SUCCESS]
07:34:40.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1311. org.apache.commons.math.linear.RealVectorTest#testCombine started...]
07:34:40.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1311. SUCCESS]
07:34:40.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1312. org.apache.commons.math.linear.RealVectorTest#testSparseIterator started...]
07:34:40.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1312. SUCCESS]
07:34:40.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1313. org.apache.commons.math.linear.RealVectorTest#testCombineToSelfPrecondition started...]
07:34:40.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1313. SUCCESS]
07:34:40.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1314. org.apache.commons.math.linear.RealVectorTest#testIterator started...]
07:34:40.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1314. SUCCESS]
07:34:40.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1315. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testUOrthogonal started...]
07:34:40.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1315. SUCCESS]
07:34:40.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1316. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testRank started...]
07:34:40.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1316. SUCCESS]
07:34:40.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1317. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreColumns started...]
07:34:40.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1317. SUCCESS]
07:34:40.594 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1318. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testDimensions started...]
07:34:40.594 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1318. SUCCESS]
07:34:40.594 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1319. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testConditionNumber started...]
07:34:40.594 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1319. SUCCESS]
07:34:40.594 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1320. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testAEqualUSVt started...]
07:34:40.594 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1320. SUCCESS]
07:34:40.594 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1321. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testStability1 started...]
07:34:41.005 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1321. SUCCESS]
07:34:41.005 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1322. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testStability2 started...]
07:34:41.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1322. SUCCESS]
07:34:41.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1323. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testInverseConditionNumber started...]
07:34:41.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1323. SUCCESS]
07:34:41.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1324. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testHadamard started...]
07:34:41.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1324. SUCCESS]
07:34:41.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1325. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreRows started...]
07:34:41.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1325. SUCCESS]
07:34:41.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1326. org.apache.commons.math.linear.SingularValueDecompositionImplTest#testVOrthogonal started...]
07:34:41.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1326. SUCCESS]
07:34:41.008 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1327. org.apache.commons.math.linear.SingularValueSolverTest#testSolve started...]
07:34:41.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1327. SUCCESS]
07:34:41.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1328. org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors started...]
07:34:41.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1328. SUCCESS]
07:34:41.009 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1329. org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber started...]
07:34:41.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1329. SUCCESS]
07:34:41.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1330. org.apache.commons.math.linear.SingularValueSolverTest#testLeastSquareSolve started...]
07:34:41.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1330. SUCCESS]
07:34:41.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1331. org.apache.commons.math.linear.SingularValueSolverTest#testMath320B started...]
07:34:41.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1331. SUCCESS]
07:34:41.010 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1332. org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate started...]
07:34:41.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1332. SUCCESS]
07:34:41.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1333. org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples started...]
07:34:41.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1333. SUCCESS]
07:34:41.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1334. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry started...]
07:34:41.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1334. SUCCESS]
07:34:41.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1335. org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail started...]
07:34:41.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1335. SUCCESS]
07:34:41.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1336. org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd started...]
07:34:41.012 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1336. SUCCESS]
07:34:41.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1337. org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd started...]
07:34:41.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1337. SUCCESS]
07:34:41.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1338. org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace started...]
07:34:41.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1338. SUCCESS]
07:34:41.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1339. org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus started...]
07:34:41.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1339. SUCCESS]
07:34:41.013 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1340. org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2 started...]
07:34:41.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1340. SUCCESS]
07:34:41.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1341. org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions started...]
07:34:41.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1341. SUCCESS]
07:34:41.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1342. org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix started...]
07:34:41.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1342. SUCCESS]
07:34:41.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1343. org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector started...]
07:34:41.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1343. SUCCESS]
07:34:41.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1344. org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions started...]
07:34:41.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1344. SUCCESS]
07:34:41.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1345. org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209 started...]
07:34:41.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1345. SUCCESS]
07:34:41.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1346. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors started...]
07:34:41.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1346. SUCCESS]
07:34:41.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1347. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix started...]
07:34:41.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1347. SUCCESS]
07:34:41.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1348. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector started...]
07:34:41.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1348. SUCCESS]
07:34:41.016 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1349. org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply started...]
07:34:41.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1349. SUCCESS]
07:34:41.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1350. org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode started...]
07:34:41.017 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1350. SUCCESS]
07:34:41.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1351. org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose started...]
07:34:41.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1351. SUCCESS]
07:34:41.018 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1352. org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply started...]
07:34:41.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1352. SUCCESS]
07:34:41.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1353. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix started...]
07:34:41.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1353. SUCCESS]
07:34:41.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1354. org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix started...]
07:34:41.019 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1354. SUCCESS]
07:34:41.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1355. org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector started...]
07:34:41.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1355. SUCCESS]
07:34:41.020 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1356. org.apache.commons.math.linear.SparseFieldVectorTest#testMisc started...]
07:34:41.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1356. SUCCESS]
07:34:41.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1357. org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions started...]
07:34:41.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1357. SUCCESS]
07:34:41.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1358. org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates started...]
07:34:41.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1358. SUCCESS]
07:34:41.023 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1359. org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions started...]
07:34:41.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1359. SUCCESS]
07:34:41.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1360. org.apache.commons.math.linear.SparseFieldVectorTest#testOuterProduct started...]
07:34:41.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1360. SUCCESS]
07:34:41.024 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1361. org.apache.commons.math.linear.SparseRealMatrixTest#testOperate started...]
07:34:41.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1361. SUCCESS]
07:34:41.025 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1362. org.apache.commons.math.linear.SparseRealMatrixTest#testExamples started...]
07:34:41.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1362. SUCCESS]
07:34:41.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1363. org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry started...]
07:34:41.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1363. SUCCESS]
07:34:41.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1364. org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail started...]
07:34:41.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1364. SUCCESS]
07:34:41.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1365. org.apache.commons.math.linear.SparseRealMatrixTest#testAdd started...]
07:34:41.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1365. SUCCESS]
07:34:41.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1366. org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd started...]
07:34:41.026 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1366. SUCCESS]
07:34:41.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1367. org.apache.commons.math.linear.SparseRealMatrixTest#testTrace started...]
07:34:41.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1367. SUCCESS]
07:34:41.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1368. org.apache.commons.math.linear.SparseRealMatrixTest#testNorm started...]
07:34:41.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1368. SUCCESS]
07:34:41.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1369. org.apache.commons.math.linear.SparseRealMatrixTest#testToString started...]
07:34:41.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1369. SUCCESS]
07:34:41.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1370. org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus started...]
07:34:41.027 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1370. SUCCESS]
07:34:41.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1371. org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2 started...]
07:34:41.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1371. SUCCESS]
07:34:41.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1372. org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions started...]
07:34:41.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1372. SUCCESS]
07:34:41.028 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1373. org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix started...]
07:34:41.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1373. SUCCESS]
07:34:41.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1374. org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector started...]
07:34:41.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1374. SUCCESS]
07:34:41.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1375. org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions started...]
07:34:41.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1375. SUCCESS]
07:34:41.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1376. org.apache.commons.math.linear.SparseRealMatrixTest#testMath209 started...]
07:34:41.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1376. SUCCESS]
07:34:41.029 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1377. org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors started...]
07:34:41.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1377. SUCCESS]
07:34:41.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1378. org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix started...]
07:34:41.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1378. SUCCESS]
07:34:41.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1379. org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector started...]
07:34:41.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1379. SUCCESS]
07:34:41.030 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1380. org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply started...]
07:34:41.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1380. SUCCESS]
07:34:41.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1381. org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode started...]
07:34:41.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1381. SUCCESS]
07:34:41.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1382. org.apache.commons.math.linear.SparseRealMatrixTest#testSerial started...]
07:34:41.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1382. SUCCESS]
07:34:41.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1383. org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose started...]
07:34:41.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1383. SUCCESS]
07:34:41.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1384. org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply started...]
07:34:41.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1384. SUCCESS]
07:34:41.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1385. org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix started...]
07:34:41.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1385. SUCCESS]
07:34:41.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1386. org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix started...]
07:34:41.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1386. SUCCESS]
07:34:41.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1387. org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector started...]
07:34:41.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1387. SUCCESS]
07:34:41.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1388. org.apache.commons.math.linear.SparseRealVectorTest#testMisc started...]
07:34:41.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1388. SUCCESS]
07:34:41.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1389. org.apache.commons.math.linear.SparseRealVectorTest#testConstructors started...]
07:34:41.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1389. SUCCESS]
07:34:41.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1390. org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions started...]
07:34:41.038 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1390. SUCCESS]
07:34:41.038 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1391. org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut started...]
07:34:41.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1391. SUCCESS]
07:34:41.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1392. org.apache.commons.math.linear.SparseRealVectorTest#testPredicates started...]
07:34:41.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1392. SUCCESS]
07:34:41.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1393. org.apache.commons.math.linear.SparseRealVectorTest#testConcurrentModification started...]
07:34:41.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1393. SUCCESS]
07:34:41.039 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1394. org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions started...]
07:34:41.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1394. SUCCESS]
07:34:41.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1395. org.apache.commons.math.linear.SparseRealVectorTest#testOuterProduct started...]
07:34:41.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1395. SUCCESS]
07:34:41.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1396. org.apache.commons.math.linear.SparseRealVectorTest#testSerial started...]
07:34:41.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1396. SUCCESS]
07:34:41.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1397. org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt started...]
07:34:41.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1397. SUCCESS]
07:34:41.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1398. org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal started...]
07:34:41.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1398. SUCCESS]
07:34:41.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1399. org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare started...]
07:34:41.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1399. SUCCESS]
07:34:41.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1400. org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal started...]
07:34:41.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1400. SUCCESS]
07:34:41.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1401. org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal started...]
07:34:41.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1401. SUCCESS]
07:34:41.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1402. org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal started...]
07:34:41.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1402. SUCCESS]
07:34:41.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1403. org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3 started...]
07:34:41.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1403. SUCCESS]
07:34:41.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1404. org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5 started...]
07:34:41.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1404. SUCCESS]
07:34:41.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1405. org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetSubVector started...]
07:34:41.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1405. SUCCESS]
07:34:41.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1406. org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetEntry started...]
07:34:41.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1406. SUCCESS]
07:34:41.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1407. org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testAllButExcluded started...]
07:34:41.057 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1407. SUCCESS]
07:34:41.057 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1408. org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetSubVector started...]
07:34:41.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1408. SUCCESS]
07:34:41.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1409. org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSparseIterator started...]
07:34:41.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1409. SUCCESS]
07:34:41.090 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1410. org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testIterator started...]
07:34:41.091 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1410. SUCCESS]
07:34:41.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1411. org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetEntry started...]
07:34:41.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1411. SUCCESS]
07:34:41.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1412. org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetSubVector started...]
07:34:41.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1412. SUCCESS]
07:34:41.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1413. org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetEntry started...]
07:34:41.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1413. SUCCESS]
07:34:41.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1414. org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testAllButExcluded started...]
07:34:41.142 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1414. SUCCESS]
07:34:41.142 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1415. org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetSubVector started...]
07:34:41.220 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1415. SUCCESS]
07:34:41.220 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1416. org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSparseIterator started...]
07:34:41.221 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1416. SUCCESS]
07:34:41.221 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1417. org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testIterator started...]
07:34:41.222 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1417. SUCCESS]
07:34:41.222 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1418. org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetEntry started...]
07:34:41.222 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1418. SUCCESS]
07:34:41.223 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1419. org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries started...]
07:34:41.237 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1419. SUCCESS]
07:34:41.237 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1420. org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging started...]
07:34:41.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1420. SUCCESS]
07:34:41.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1421. org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess started...]
07:34:41.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1421. SUCCESS]
07:34:41.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1422. org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions started...]
07:34:41.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1422. SUCCESS]
07:34:41.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1423. org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep started...]
07:34:41.337 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1423. SUCCESS]
07:34:41.337 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1424. org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps started...]
07:34:41.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1424. SUCCESS]
07:34:41.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1425. org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep started...]
07:34:41.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1425. SUCCESS]
07:34:41.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1426. org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension started...]
07:34:41.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1426. SUCCESS]
07:34:41.342 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1427. org.apache.commons.math.ode.events.EventStateTest#closeEvents started...]
07:34:41.344 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1427. SUCCESS]
07:34:41.344 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1428. org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents0 started...]
07:34:41.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1428. SUCCESS]
07:34:41.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1429. org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents1 started...]
07:34:41.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1429. SUCCESS]
07:34:41.357 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1430. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial started...]
07:34:41.373 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1430. SUCCESS]
07:34:41.373 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1431. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck started...]
07:34:41.373 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1431. SUCCESS]
07:34:41.373 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1432. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep started...]
07:34:41.374 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1432. SUCCESS]
07:34:41.374 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1433. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations started...]
07:34:41.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1433. SUCCESS]
07:34:41.488 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1434. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance started...]
07:34:41.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1434. SUCCESS]
07:34:41.523 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1435. org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward started...]
07:34:41.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1435. SUCCESS]
07:34:41.537 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1436. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial started...]
07:34:41.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1436. SUCCESS]
07:34:41.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1437. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck started...]
07:34:41.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1437. SUCCESS]
07:34:41.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1438. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep started...]
07:34:41.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1438. SUCCESS]
07:34:41.543 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1439. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations started...]
07:34:41.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1439. SUCCESS]
07:34:41.553 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1440. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance started...]
07:34:41.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1440. SUCCESS]
07:34:41.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1441. org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward started...]
07:34:41.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1441. SUCCESS]
07:34:41.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1442. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward started...]
07:34:41.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1442. SUCCESS]
07:34:41.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1443. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testMissedEndEvent started...]
07:34:41.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1443. SUCCESS]
07:34:41.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1444. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep started...]
07:34:41.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1444. SUCCESS]
07:34:41.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1445. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps started...]
07:34:41.652 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1445. SUCCESS]
07:34:41.652 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1446. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep started...]
07:34:41.652 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1446. SUCCESS]
07:34:41.652 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1447. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler started...]
07:34:41.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1447. SUCCESS]
07:34:41.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1448. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks started...]
07:34:41.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1448. SUCCESS]
07:34:41.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1449. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize started...]
07:34:41.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1449. SUCCESS]
07:34:41.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1450. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency started...]
07:34:41.663 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1450. SUCCESS]
07:34:41.663 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1451. org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization started...]
07:34:41.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1451. SUCCESS]
07:34:41.786 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1452. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep started...]
07:34:41.787 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1452. SUCCESS]
07:34:41.787 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1453. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck started...]
07:34:41.787 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1453. SUCCESS]
07:34:41.787 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1454. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward started...]
07:34:41.788 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1454. SUCCESS]
07:34:41.789 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1455. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps started...]
07:34:41.790 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1455. SUCCESS]
07:34:41.790 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1456. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep started...]
07:34:41.790 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1456. SUCCESS]
07:34:41.790 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1457. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents started...]
07:34:41.793 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1457. SUCCESS]
07:34:41.793 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1458. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler started...]
07:34:41.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1458. SUCCESS]
07:34:41.798 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1459. org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance started...]
07:34:41.807 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1459. SUCCESS]
07:34:41.807 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1460. org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency started...]
07:34:41.808 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1460. SUCCESS]
07:34:41.808 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1461. org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone started...]
07:34:41.813 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1461. SUCCESS]
07:34:41.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1462. org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization started...]
07:34:41.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1462. SUCCESS]
07:34:41.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1463. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck started...]
07:34:41.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1463. SUCCESS]
07:34:41.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1464. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward started...]
07:34:41.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1464. SUCCESS]
07:34:41.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1465. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps started...]
07:34:41.836 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1465. SUCCESS]
07:34:41.836 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1466. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMissedEndEvent started...]
07:34:41.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1466. SUCCESS]
07:34:41.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1467. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep started...]
07:34:41.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1467. SUCCESS]
07:34:41.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1468. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative started...]
07:34:41.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1468. SUCCESS]
07:34:41.837 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1469. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck started...]
07:34:41.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1469. SUCCESS]
07:34:41.838 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1470. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents started...]
07:34:41.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1470. SUCCESS]
07:34:41.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1471. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler started...]
07:34:41.842 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1471. SUCCESS]
07:34:41.843 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1472. org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance started...]
07:34:41.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1472. SUCCESS]
07:34:41.848 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1473. org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency started...]
07:34:41.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1473. SUCCESS]
07:34:41.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1474. org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone started...]
07:34:41.853 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1474. SUCCESS]
07:34:41.853 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1475. org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization started...]
07:34:41.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1475. SUCCESS]
07:34:41.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1476. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck started...]
07:34:41.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1476. SUCCESS]
07:34:41.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1477. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward started...]
07:34:41.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1477. SUCCESS]
07:34:41.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1478. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep started...]
07:34:41.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1478. SUCCESS]
07:34:41.910 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1479. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps started...]
07:34:41.945 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1479. SUCCESS]
07:34:41.945 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1480. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep started...]
07:34:41.945 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1480. SUCCESS]
07:34:41.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1481. org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize started...]
07:34:41.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1481. SUCCESS]
07:34:41.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1482. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds started...]
07:34:41.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1482. SUCCESS]
07:34:41.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1483. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency started...]
07:34:41.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1483. SUCCESS]
07:34:41.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1484. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside started...]
07:34:41.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1484. SUCCESS]
07:34:41.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1485. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization started...]
07:34:41.976 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1485. SUCCESS]
07:34:41.976 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1486. org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset started...]
07:34:41.976 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1486. SUCCESS]
07:34:41.976 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1487. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck started...]
07:34:41.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1487. SUCCESS]
07:34:41.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1488. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward started...]
07:34:42.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1488. SUCCESS]
07:34:42.003 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1489. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep started...]
07:34:42.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1489. SUCCESS]
07:34:42.007 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1490. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps started...]
07:34:42.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1490. SUCCESS]
07:34:42.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1491. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep started...]
07:34:42.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1491. SUCCESS]
07:34:42.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1492. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative started...]
07:34:42.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1492. SUCCESS]
07:34:42.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1493. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler started...]
07:34:42.052 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1493. SUCCESS]
07:34:42.052 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1494. org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize started...]
07:34:42.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1494. SUCCESS]
07:34:42.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1495. org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency started...]
07:34:42.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1495. SUCCESS]
07:34:42.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1496. org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization started...]
07:34:42.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1496. SUCCESS]
07:34:42.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1497. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck started...]
07:34:42.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1497. SUCCESS]
07:34:42.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1498. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward started...]
07:34:42.105 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1498. SUCCESS]
07:34:42.105 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1499. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps started...]
07:34:42.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1499. SUCCESS]
07:34:42.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1500. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls started...]
07:34:42.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1500. SUCCESS]
07:34:42.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1501. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep started...]
07:34:42.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1501. SUCCESS]
07:34:42.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1502. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative started...]
07:34:42.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1502. SUCCESS]
07:34:42.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1503. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck started...]
07:34:42.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1503. SUCCESS]
07:34:42.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1504. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents started...]
07:34:42.293 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1504. SUCCESS]
07:34:42.293 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1505. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIssue596 started...]
07:34:42.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1505. SUCCESS]
07:34:42.294 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1506. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler started...]
07:34:42.306 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1506. SUCCESS]
07:34:42.306 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1507. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance started...]
07:34:42.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1507. SUCCESS]
07:34:42.309 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1508. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency started...]
07:34:42.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1508. SUCCESS]
07:34:42.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1509. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone started...]
07:34:42.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1509. SUCCESS]
07:34:42.321 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1510. org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization started...]
07:34:42.335 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1510. SUCCESS]
07:34:42.335 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1511. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward started...]
07:34:42.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1511. SUCCESS]
07:34:42.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1512. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative started...]
07:34:42.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1512. SUCCESS]
07:34:42.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1513. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep started...]
07:34:42.338 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1513. SUCCESS]
07:34:42.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1514. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents started...]
07:34:42.344 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1514. SUCCESS]
07:34:42.344 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1515. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors started...]
07:34:42.345 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1515. SUCCESS]
07:34:42.346 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1516. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler started...]
07:34:42.372 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1516. SUCCESS]
07:34:42.372 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1517. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance started...]
07:34:42.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1517. SUCCESS]
07:34:42.378 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1518. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence started...]
07:34:42.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1518. SUCCESS]
07:34:42.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1519. org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks started...]
07:34:42.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1519. SUCCESS]
07:34:42.379 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1520. org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency started...]
07:34:42.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1520. SUCCESS]
07:34:42.383 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1521. org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone started...]
07:34:42.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1521. SUCCESS]
07:34:42.395 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1522. org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization started...]
07:34:42.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1522. SUCCESS]
07:34:42.416 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1523. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck started...]
07:34:42.417 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1523. SUCCESS]
07:34:42.417 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1524. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward started...]
07:34:42.424 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1524. SUCCESS]
07:34:42.424 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1525. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep started...]
07:34:42.427 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1525. SUCCESS]
07:34:42.427 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1526. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps started...]
07:34:42.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1526. SUCCESS]
07:34:42.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1527. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep started...]
07:34:42.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1527. SUCCESS]
07:34:42.456 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1528. org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize started...]
07:34:42.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1528. SUCCESS]
07:34:42.457 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1529. org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency started...]
07:34:42.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1529. SUCCESS]
07:34:42.458 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1530. org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization started...]
07:34:42.468 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1530. SUCCESS]
07:34:42.468 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1531. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck started...]
07:34:42.468 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1531. SUCCESS]
07:34:42.469 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1532. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward started...]
07:34:42.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1532. SUCCESS]
07:34:42.498 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1533. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep started...]
07:34:42.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1533. SUCCESS]
07:34:42.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1534. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps started...]
07:34:42.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1534. SUCCESS]
07:34:42.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1535. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep started...]
07:34:42.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1535. SUCCESS]
07:34:42.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1536. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler started...]
07:34:42.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1536. SUCCESS]
07:34:42.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1537. org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize started...]
07:34:42.538 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1537. SUCCESS]
07:34:42.539 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1538. org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency started...]
07:34:42.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1538. SUCCESS]
07:34:42.540 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1539. org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization started...]
07:34:42.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1539. SUCCESS]
07:34:42.554 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1540. org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization started...]
07:34:42.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1540. SUCCESS]
07:34:42.555 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1541. org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization started...]
07:34:42.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1541. SUCCESS]
07:34:42.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1542. org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState started...]
07:34:42.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1542. SUCCESS]
07:34:42.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1543. org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset started...]
07:34:42.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1543. SUCCESS]
07:34:42.558 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1544. org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency started...]
07:34:42.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1544. SUCCESS]
07:34:42.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1545. org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization started...]
07:34:42.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1545. SUCCESS]
07:34:42.579 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1546. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeitherRev started...]
07:34:42.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1546. SUCCESS]
07:34:42.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1547. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeither started...]
07:34:42.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1547. SUCCESS]
07:34:42.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1548. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLastRev started...]
07:34:42.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1548. SUCCESS]
07:34:42.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1549. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBothRev started...]
07:34:42.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1549. SUCCESS]
07:34:42.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1550. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirstRev started...]
07:34:42.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1550. SUCCESS]
07:34:42.582 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1551. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirst started...]
07:34:42.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1551. SUCCESS]
07:34:42.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1552. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBoth started...]
07:34:42.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1552. SUCCESS]
07:34:42.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1553. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLast started...]
07:34:42.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1553. SUCCESS]
07:34:42.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1554. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeither started...]
07:34:42.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1554. SUCCESS]
07:34:42.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1555. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLastRev started...]
07:34:42.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1555. SUCCESS]
07:34:42.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1556. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirst started...]
07:34:42.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1556. SUCCESS]
07:34:42.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1557. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBothRev started...]
07:34:42.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1557. SUCCESS]
07:34:42.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1558. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirstRev started...]
07:34:42.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1558. SUCCESS]
07:34:42.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1559. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBoth started...]
07:34:42.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1559. SUCCESS]
07:34:42.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1560. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLast started...]
07:34:42.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1560. SUCCESS]
07:34:42.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1561. org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeitherRev started...]
07:34:42.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1561. SUCCESS]
07:34:42.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1562. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeitherRev started...]
07:34:42.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1562. SUCCESS]
07:34:42.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1563. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeither started...]
07:34:42.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1563. SUCCESS]
07:34:42.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1564. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLastRev started...]
07:34:42.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1564. SUCCESS]
07:34:42.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1565. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBothRev started...]
07:34:42.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1565. SUCCESS]
07:34:42.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1566. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirstRev started...]
07:34:42.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1566. SUCCESS]
07:34:42.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1567. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirst started...]
07:34:42.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1567. SUCCESS]
07:34:42.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1568. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBoth started...]
07:34:42.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1568. SUCCESS]
07:34:42.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1569. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLast started...]
07:34:42.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1569. SUCCESS]
07:34:42.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1570. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeither started...]
07:34:42.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1570. SUCCESS]
07:34:42.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1571. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLastRev started...]
07:34:42.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1571. SUCCESS]
07:34:42.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1572. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirst started...]
07:34:42.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1572. SUCCESS]
07:34:42.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1573. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBothRev started...]
07:34:42.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1573. SUCCESS]
07:34:42.591 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1574. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirstRev started...]
07:34:42.592 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1574. SUCCESS]
07:34:42.592 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1575. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBoth started...]
07:34:42.592 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1575. SUCCESS]
07:34:42.592 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1576. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLast started...]
07:34:42.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1576. SUCCESS]
07:34:42.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1577. org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeitherRev started...]
07:34:42.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1577. SUCCESS]
07:34:42.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1578. org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries started...]
07:34:42.595 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1578. SUCCESS]
07:34:42.595 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1579. org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd started...]
07:34:42.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1579. SUCCESS]
07:34:42.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1580. org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting started...]
07:34:42.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1580. SUCCESS]
07:34:42.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1581. org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial started...]
07:34:42.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1581. SUCCESS]
07:34:42.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1582. org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum started...]
07:34:42.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1582. SUCCESS]
07:34:42.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1583. org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock started...]
07:34:42.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1583. SUCCESS]
07:34:42.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1584. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testConstrainedRosen started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen END
07:34:43.794 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1584. SUCCESS]
07:34:43.794 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1585. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testElliRotated started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$ElliRotated BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$ElliRotated END
07:34:45.287 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1585. SUCCESS]
07:34:45.287 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1586. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testEllipse started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Elli BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Elli END
07:34:45.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1586. SUCCESS]
07:34:45.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1587. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testInitOutOfBounds started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
07:34:45.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1587. SUCCESS]
07:34:45.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1588. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTwoAxes started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$TwoAxes BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$TwoAxes END
07:34:45.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1588. SUCCESS]
07:34:45.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1589. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testProblemDimensionTooSmall started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
07:34:45.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1589. SUCCESS]
07:34:45.327 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1590. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigar started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Cigar BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Cigar END
07:34:45.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1590. SUCCESS]
07:34:45.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1591. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRosen started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen END
07:34:45.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1591. SUCCESS]
07:34:45.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1592. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRastrigin started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rastrigin BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rastrigin END
07:34:45.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1592. SUCCESS]
07:34:45.608 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1593. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSsDiffPow started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$SsDiffPow BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$SsDiffPow END
07:34:45.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1593. SUCCESS]
07:34:45.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1594. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaximize started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli END
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$MinusElli END
07:34:45.932 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1594. SUCCESS]
07:34:45.932 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1595. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testAckley started...]
07:34:45.932 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1595. SUCCESS]
07:34:45.932 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1596. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigTab started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$CigTab BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$CigTab END
07:34:45.940 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1596. SUCCESS]
07:34:45.940 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1597. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testDiffPow started...]
07:34:45.940 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1597. SUCCESS]
07:34:45.940 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1598. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testBoundariesDimensionMismatch started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
07:34:45.940 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1598. SUCCESS]
07:34:45.941 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1599. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSphere started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Sphere BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Sphere END
07:34:45.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1599. SUCCESS]
07:34:45.946 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1600. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTablet started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Tablet BEGIN
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Tablet END
07:34:45.952 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1600. SUCCESS]
07:34:45.952 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1601. org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaxEvaluations started...]
org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest$Rosen BEGIN
07:34:45.952 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1601. SUCCESS]
07:34:45.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1602. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testConstrainedRosen started...]
07:34:46.453 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1602. SUCCESS]
07:34:46.453 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1603. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testElliRotated started...]
07:34:46.915 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1603. SUCCESS]
07:34:46.915 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1604. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testEllipse started...]
07:34:47.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1604. SUCCESS]
07:34:47.312 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1605. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTwoAxes started...]
07:34:47.991 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1605. SUCCESS]
07:34:47.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1606. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigar started...]
07:34:48.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1606. SUCCESS]
07:34:48.256 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1607. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRosen started...]
07:34:48.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1607. SUCCESS]
07:34:48.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1608. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInitOutofbounds started...]
07:34:48.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1608. SUCCESS]
07:34:48.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1609. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaOutOfRange started...]
07:34:48.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1609. SUCCESS]
07:34:48.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1610. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaNegative started...]
07:34:48.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1610. SUCCESS]
07:34:48.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1611. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaDimensionMismatch started...]
07:34:48.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1611. SUCCESS]
07:34:48.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1612. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesNoData started...]
07:34:48.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1612. SUCCESS]
07:34:48.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1613. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRastrigin started...]
07:34:50.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1613. SUCCESS]
07:34:50.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1614. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiagonalRosen started...]
07:34:50.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1614. SUCCESS]
07:34:50.987 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1615. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSsDiffPow started...]
07:34:51.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1615. SUCCESS]
07:34:51.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1616. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testMaximize started...]
07:34:51.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1616. SUCCESS]
07:34:51.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1617. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testAckley started...]
07:34:51.793 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1617. SUCCESS]
07:34:51.793 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1618. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigTab started...]
07:34:52.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1618. SUCCESS]
07:34:52.064 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1619. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiffPow started...]
07:34:52.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1619. SUCCESS]
07:34:52.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1620. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesDimensionMismatch started...]
07:34:52.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1620. SUCCESS]
07:34:52.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1621. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSphere started...]
07:34:52.428 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1621. SUCCESS]
07:34:52.429 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1622. org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTablet started...]
07:34:52.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1622. SUCCESS]
07:34:52.729 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1623. org.apache.commons.math.optimization.direct.PowellOptimizerTest#testQuadratic started...]
07:34:52.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1623. SUCCESS]
07:34:52.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1624. org.apache.commons.math.optimization.direct.PowellOptimizerTest#testMaximizeQuadratic started...]
07:34:52.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1624. SUCCESS]
07:34:52.733 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1625. org.apache.commons.math.optimization.direct.PowellOptimizerTest#testSumSinc started...]
07:34:52.734 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1625. SUCCESS]
07:34:52.734 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1626. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMath283 started...]
07:34:52.735 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1626. SUCCESS]
07:34:52.735 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1627. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize1 started...]
07:34:52.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1627. SUCCESS]
07:34:52.736 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1628. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize2 started...]
07:34:52.738 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1628. SUCCESS]
07:34:52.738 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1629. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testRosenbrock started...]
07:34:52.738 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1629. SUCCESS]
07:34:52.738 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1630. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize1 started...]
07:34:52.739 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1630. SUCCESS]
07:34:52.739 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1631. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize2 started...]
07:34:52.740 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1631. SUCCESS]
07:34:52.740 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1632. org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testPowell started...]
07:34:52.743 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1632. SUCCESS]
07:34:52.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1633. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaxIterations started...]
07:34:52.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1633. SUCCESS]
07:34:52.744 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1634. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize1 started...]
07:34:52.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1634. SUCCESS]
07:34:52.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1635. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize2 started...]
07:34:52.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1635. SUCCESS]
07:34:52.745 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1636. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testRosenbrock started...]
07:34:52.746 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1636. SUCCESS]
07:34:52.746 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1637. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares1 started...]
07:34:52.747 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1637. SUCCESS]
07:34:52.747 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1638. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares2 started...]
07:34:52.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1638. SUCCESS]
07:34:52.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1639. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares3 started...]
07:34:52.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1639. SUCCESS]
07:34:52.748 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1640. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize1 started...]
07:34:52.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1640. SUCCESS]
07:34:52.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1641. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize2 started...]
07:34:52.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1641. SUCCESS]
07:34:52.749 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1642. org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testPowell started...]
07:34:52.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1642. SUCCESS]
07:34:52.750 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1643. org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath303 started...]
07:34:52.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1643. SUCCESS]
07:34:52.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1644. org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath304 started...]
07:34:52.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1644. SUCCESS]
07:34:52.752 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1645. org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath372 started...]
07:34:52.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1645. SUCCESS]
07:34:52.753 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1646. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit01 started...]
07:34:52.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1646. SUCCESS]
07:34:52.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1647. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit02 started...]
07:34:52.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1647. SUCCESS]
07:34:52.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1648. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit03 started...]
07:34:52.755 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1648. SUCCESS]
07:34:52.756 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1649. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit04 started...]
07:34:52.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1649. SUCCESS]
07:34:52.758 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1650. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit05 started...]
07:34:52.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1650. SUCCESS]
07:34:52.759 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1651. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit06 started...]
07:34:52.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1651. SUCCESS]
07:34:52.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1652. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit07 started...]
07:34:52.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1652. SUCCESS]
07:34:52.760 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1653. org.apache.commons.math.optimization.fitting.GaussianFitterTest#testMath519 started...]
07:34:52.811 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1653. SUCCESS]
07:34:52.811 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1654. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError started...]
07:34:52.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1654. SUCCESS]
07:34:52.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1655. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testTinyVariationsData started...]
07:34:52.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1655. SUCCESS]
07:34:52.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1656. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testPreconditions1 started...]
07:34:52.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1656. SUCCESS]
07:34:52.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1657. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess started...]
07:34:52.825 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1657. SUCCESS]
07:34:52.825 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1658. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted started...]
07:34:52.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1658. SUCCESS]
07:34:52.827 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1659. org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError started...]
07:34:52.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1659. SUCCESS]
07:34:52.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1660. org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError started...]
07:34:52.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1660. SUCCESS]
07:34:52.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1661. org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable started...]
07:34:52.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1661. SUCCESS]
07:34:52.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1662. org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError started...]
07:34:52.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1662. SUCCESS]
07:34:52.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1663. org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable started...]
07:34:52.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1663. SUCCESS]
07:34:52.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1664. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingGoodInit started...]
07:34:52.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1664. SUCCESS]
07:34:52.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1665. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency started...]
07:34:52.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1665. SUCCESS]
07:34:52.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1666. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations started...]
07:34:52.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1666. SUCCESS]
07:34:52.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1667. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial started...]
07:34:52.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1667. SUCCESS]
07:34:52.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1668. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes1 started...]
07:34:52.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1668. SUCCESS]
07:34:52.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1669. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes2 started...]
07:34:52.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1669. SUCCESS]
07:34:52.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1670. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets started...]
07:34:52.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1670. SUCCESS]
07:34:52.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1671. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple started...]
07:34:52.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1671. SUCCESS]
07:34:52.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1672. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted started...]
07:34:52.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1672. SUCCESS]
07:34:52.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1673. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned started...]
07:34:52.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1673. SUCCESS]
07:34:52.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1674. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation started...]
07:34:52.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1674. SUCCESS]
07:34:52.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1675. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible started...]
07:34:52.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1675. SUCCESS]
07:34:52.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1676. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations started...]
07:34:52.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1676. SUCCESS]
07:34:52.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1677. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting started...]
07:34:52.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1677. SUCCESS]
07:34:52.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1678. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet started...]
07:34:52.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1678. SUCCESS]
07:34:52.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1679. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxEvaluations started...]
07:34:52.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1679. SUCCESS]
07:34:52.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1680. org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit started...]
07:34:52.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1680. SUCCESS]
07:34:52.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1681. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency started...]
07:34:52.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1681. SUCCESS]
07:34:52.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1682. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes started...]
07:34:52.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1682. SUCCESS]
07:34:52.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1683. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations started...]
07:34:52.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1683. SUCCESS]
07:34:52.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1684. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial started...]
07:34:52.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1684. SUCCESS]
07:34:52.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1685. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation started...]
07:34:52.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1685. SUCCESS]
07:34:52.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1686. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets started...]
07:34:52.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1686. SUCCESS]
07:34:52.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1687. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple started...]
07:34:52.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1687. SUCCESS]
07:34:52.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1688. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted started...]
07:34:52.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1688. SUCCESS]
07:34:52.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1689. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned started...]
07:34:52.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1689. SUCCESS]
07:34:52.884 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1690. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199 started...]
07:34:52.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1690. SUCCESS]
07:34:52.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1691. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInvertible started...]
07:34:52.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1691. SUCCESS]
07:34:52.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1692. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations started...]
07:34:52.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1692. SUCCESS]
07:34:52.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1693. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting started...]
07:34:52.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1693. SUCCESS]
07:34:52.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1694. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters started...]
07:34:52.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1694. SUCCESS]
07:34:52.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1695. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet started...]
07:34:52.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1695. SUCCESS]
07:34:52.892 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1696. org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit started...]
07:34:52.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1696. SUCCESS]
07:34:52.894 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1697. org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1 started...]
07:34:52.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1697. SUCCESS]
07:34:52.895 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1698. org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis started...]
07:34:52.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1698. SUCCESS]
07:34:52.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1699. org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson started...]
07:34:52.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1699. SUCCESS]
07:34:52.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1700. org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok started...]
07:34:52.931 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1700. SUCCESS]
07:34:52.931 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1701. org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional started...]
07:34:52.931 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1701. SUCCESS]
07:34:52.931 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1702. org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley started...]
07:34:52.932 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1702. SUCCESS]
07:34:52.932 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1703. org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer started...]
07:34:52.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1703. SUCCESS]
07:34:52.994 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1704. org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank started...]
07:34:52.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1704. SUCCESS]
07:34:52.995 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1705. org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth started...]
07:34:52.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1705. SUCCESS]
07:34:52.996 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1706. org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1 started...]
07:34:52.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1706. SUCCESS]
07:34:52.998 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1707. org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2 started...]
07:34:53.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1707. SUCCESS]
07:34:53.002 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1708. org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson started...]
07:34:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1708. SUCCESS]
07:34:53.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1709. org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne started...]
07:34:53.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1709. SUCCESS]
07:34:53.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1710. org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular started...]
07:34:53.057 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1710. SUCCESS]
07:34:53.057 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1711. org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad started...]
07:34:53.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1711. SUCCESS]
07:34:53.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1712. org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows started...]
07:34:53.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1712. SUCCESS]
07:34:53.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1713. org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard started...]
07:34:53.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1713. SUCCESS]
07:34:53.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1714. org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear started...]
07:34:53.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1714. SUCCESS]
07:34:53.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1715. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency started...]
07:34:53.072 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1715. SUCCESS]
07:34:53.072 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1716. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations started...]
07:34:53.072 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1716. SUCCESS]
07:34:53.072 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1717. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial started...]
07:34:53.072 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1717. SUCCESS]
07:34:53.072 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1718. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets started...]
07:34:53.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1718. SUCCESS]
07:34:53.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1719. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple started...]
07:34:53.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1719. SUCCESS]
07:34:53.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1720. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted started...]
07:34:53.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1720. SUCCESS]
07:34:53.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1721. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned started...]
07:34:53.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1721. SUCCESS]
07:34:53.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1722. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation started...]
07:34:53.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1722. SUCCESS]
07:34:53.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1723. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible started...]
07:34:53.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1723. SUCCESS]
07:34:53.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1724. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations started...]
07:34:53.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1724. SUCCESS]
07:34:53.075 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1725. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting started...]
07:34:53.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1725. SUCCESS]
07:34:53.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1726. org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet started...]
07:34:53.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1726. SUCCESS]
07:34:53.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1727. org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative started...]
07:34:53.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1727. SUCCESS]
07:34:53.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1728. org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon started...]
07:34:53.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1728. SUCCESS]
07:34:53.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1729. org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution started...]
07:34:53.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1729. SUCCESS]
07:34:53.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1730. org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint started...]
07:34:53.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1730. SUCCESS]
07:34:53.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1731. org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver started...]
07:34:53.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1731. SUCCESS]
07:34:53.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1732. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290GEQ started...]
07:34:53.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1732. SUCCESS]
07:34:53.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1733. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290LEQ started...]
07:34:53.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1733. SUCCESS]
07:34:53.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1734. org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel started...]
07:34:53.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1734. SUCCESS]
07:34:53.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1735. org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution started...]
07:34:53.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1735. SUCCESS]
07:34:53.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1736. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272 started...]
07:34:53.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1736. SUCCESS]
07:34:53.083 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1737. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286 started...]
07:34:53.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1737. SUCCESS]
07:34:53.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1738. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath288 started...]
07:34:53.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1738. SUCCESS]
07:34:53.084 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1739. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath293 started...]
07:34:53.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1739. SUCCESS]
07:34:53.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1740. org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars started...]
07:34:53.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1740. SUCCESS]
07:34:53.085 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1741. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization started...]
07:34:53.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1741. SUCCESS]
07:34:53.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1742. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection2 started...]
07:34:53.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1742. SUCCESS]
07:34:53.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1743. org.apache.commons.math.optimization.linear.SimplexSolverTest#testDegeneracy started...]
07:34:53.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1743. SUCCESS]
07:34:53.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1744. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection started...]
07:34:53.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1744. SUCCESS]
07:34:53.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1745. org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel started...]
07:34:53.298 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1745. SUCCESS]
07:34:53.298 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1746. org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable started...]
07:34:53.298 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1746. SUCCESS]
07:34:53.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1747. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434UnfeasibleSolution started...]
07:34:53.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1747. SUCCESS]
07:34:53.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1748. org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434NegativeVariable started...]
07:34:53.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1748. SUCCESS]
07:34:53.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1749. org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization started...]
07:34:53.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1749. SUCCESS]
07:34:53.299 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1750. org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars started...]
07:34:53.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1750. SUCCESS]
07:34:53.300 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1751. org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial started...]
07:34:53.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1751. SUCCESS]
07:34:53.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1752. org.apache.commons.math.optimization.linear.SimplexTableauTest#testDropPhase1Objective started...]
07:34:53.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1752. SUCCESS]
07:34:53.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1753. org.apache.commons.math.optimization.univariate.BracketFinderTest#testMinimumIsOnIntervalBoundary started...]
07:34:53.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1753. SUCCESS]
07:34:53.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1754. org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMax started...]
07:34:53.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1754. SUCCESS]
07:34:53.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1755. org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMin started...]
07:34:53.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1755. SUCCESS]
07:34:53.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1756. org.apache.commons.math.optimization.univariate.BracketFinderTest#testIntervalBoundsOrdering started...]
07:34:53.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1756. SUCCESS]
07:34:53.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1757. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMax started...]
07:34:53.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1757. SUCCESS]
07:34:53.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1758. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMin started...]
07:34:53.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1758. SUCCESS]
07:34:53.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1759. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testMinEndpoints started...]
07:34:53.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1759. SUCCESS]
07:34:53.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1760. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMinStatistics started...]
07:34:53.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1760. SUCCESS]
07:34:53.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1761. org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testSinMin started...]
07:34:53.314 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1761. SUCCESS]
07:34:53.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1762. org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testQuinticMin started...]
07:34:53.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1762. SUCCESS]
07:34:53.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1763. org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testBadFunction started...]
07:34:53.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1763. SUCCESS]
07:34:53.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1764. org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testSinMin started...]
07:34:53.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1764. SUCCESS]
07:34:53.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1765. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntDirect started...]
07:34:53.958 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1765. SUCCESS]
07:34:53.959 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1766. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloatDirect started...]
07:34:53.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1766. SUCCESS]
07:34:53.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1767. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBooleanDirect started...]
07:34:53.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1767. SUCCESS]
07:34:53.962 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1768. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongDirect started...]
07:34:53.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1768. SUCCESS]
07:34:53.965 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1769. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBoolean2 started...]
07:34:53.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1769. SUCCESS]
07:34:53.967 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1770. org.apache.commons.math.random.AbstractRandomGeneratorTest#testFloatDirect started...]
07:34:53.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1770. SUCCESS]
07:34:53.969 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1771. org.apache.commons.math.random.AbstractRandomGeneratorTest#testDoubleDirect started...]
07:34:53.982 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1771. SUCCESS]
07:34:53.982 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1772. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong2 started...]
07:34:53.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1772. SUCCESS]
07:34:53.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1773. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntIAE started...]
07:34:53.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1773. SUCCESS]
07:34:53.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1774. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntNeg started...]
07:34:53.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1774. SUCCESS]
07:34:53.983 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1775. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBytes started...]
07:34:54.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1775. SUCCESS]
07:34:54.014 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1776. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt2 started...]
07:34:54.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1776. SUCCESS]
07:34:54.015 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1777. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPascal started...]
07:34:54.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1777. SUCCESS]
07:34:54.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1778. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample started...]
07:34:54.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1778. SUCCESS]
07:34:54.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1779. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues started...]
07:34:54.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1779. SUCCESS]
07:34:54.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1780. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints started...]
07:34:54.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1780. SUCCESS]
07:34:54.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1781. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian started...]
07:34:54.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1781. SUCCESS]
07:34:54.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1782. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextF started...]
07:34:54.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1782. SUCCESS]
07:34:54.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1783. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextT started...]
07:34:54.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1783. SUCCESS]
07:34:54.122 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1784. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextChiSquare started...]
07:34:54.137 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1784. SUCCESS]
07:34:54.137 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1785. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureLong started...]
07:34:54.137 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1785. SUCCESS]
07:34:54.137 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1786. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureHex started...]
07:34:54.137 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1786. SUCCESS]
07:34:54.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1787. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureInt started...]
07:34:54.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1787. SUCCESS]
07:34:54.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1788. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoissonConsistency started...]
07:34:55.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1788. SUCCESS]
07:34:55.489 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1789. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHypergeometric started...]
07:34:55.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1789. SUCCESS]
07:34:55.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1790. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues started...]
07:34:55.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1790. SUCCESS]
07:34:55.499 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1791. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential started...]
07:34:55.501 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1791. SUCCESS]
07:34:55.502 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1792. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson started...]
07:34:55.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1792. SUCCESS]
07:34:55.505 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1793. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform started...]
07:34:55.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1793. SUCCESS]
07:34:55.506 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1794. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation started...]
07:34:55.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1794. SUCCESS]
07:34:55.507 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1795. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBinomial started...]
07:34:55.517 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1795. SUCCESS]
07:34:55.518 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1796. org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig started...]
07:34:55.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1796. SUCCESS]
07:34:55.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1797. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInversionDeviate started...]
07:34:55.519 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1797. SUCCESS]
07:34:55.520 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1798. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex started...]
07:34:55.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1798. SUCCESS]
07:34:55.556 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1799. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt started...]
07:34:55.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1799. SUCCESS]
07:34:55.557 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1800. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextCauchy started...]
07:34:55.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1800. SUCCESS]
07:34:55.560 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1801. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGamma started...]
07:34:55.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1801. SUCCESS]
07:34:55.562 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1802. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextWeibull started...]
07:34:55.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1802. SUCCESS]
07:34:55.563 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1803. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBeta started...]
07:34:55.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1803. SUCCESS]
07:34:55.576 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1804. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong started...]
07:34:55.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1804. SUCCESS]
07:34:55.577 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1805. org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextZipf started...]
07:34:55.593 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1805. SUCCESS]
07:34:55.594 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1806. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntDirect started...]
07:34:56.193 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1806. SUCCESS]
07:34:56.194 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1807. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextFloatDirect started...]
07:34:56.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1807. SUCCESS]
07:34:56.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1808. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBooleanDirect started...]
07:34:56.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1808. SUCCESS]
07:34:56.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1809. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongDirect started...]
07:34:56.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1809. SUCCESS]
07:34:56.219 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1810. org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBoolean2 started...]
07:34:56.220 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1810. SUCCESS]
07:34:56.220 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1811. org.apache.commons.math.random.BitsStreamGeneratorTest#testFloatDirect started...]
07:34:56.221 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1811. SUCCESS]
07:34:56.221 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1812. org.apache.commons.math.random.BitsStreamGeneratorTest#testDoubleDirect started...]
07:34:56.224 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1812. SUCCESS]
07:34:56.224 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1813. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong2 started...]
07:34:56.224 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1813. SUCCESS]
07:34:56.225 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1814. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntIAE started...]
07:34:56.225 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1814. SUCCESS]
07:34:56.225 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1815. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntNeg started...]
07:34:56.225 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1815. SUCCESS]
07:34:56.225 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1816. org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBytes started...]
07:34:56.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1816. SUCCESS]
07:34:56.266 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1817. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt2 started...]
07:34:56.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1817. SUCCESS]
07:34:56.267 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1818. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPascal started...]
07:34:56.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1818. SUCCESS]
07:34:56.302 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1819. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextSample started...]
07:34:56.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1819. SUCCESS]
07:34:56.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1820. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntExtremeValues started...]
07:34:56.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1820. SUCCESS]
07:34:56.315 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1821. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniformExclusiveEndpoints started...]
07:34:56.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1821. SUCCESS]
07:34:56.316 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1822. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGaussian started...]
07:34:56.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1822. SUCCESS]
07:34:56.320 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1823. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextF started...]
07:34:56.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1823. SUCCESS]
07:34:56.339 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1824. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextT started...]
07:34:56.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1824. SUCCESS]
07:34:56.356 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1825. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextChiSquare started...]
07:34:56.368 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1825. SUCCESS]
07:34:56.368 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1826. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextSecureLong started...]
07:34:56.368 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1826. SUCCESS]
07:34:56.368 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1827. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextSecureHex started...]
07:34:56.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1827. SUCCESS]
07:34:56.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1828. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextSecureInt started...]
07:34:56.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1828. SUCCESS]
07:34:56.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1829. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoissonConsistency started...]
07:34:57.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1829. SUCCESS]
07:34:57.804 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1830. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHypergeometric started...]
07:34:57.811 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1830. SUCCESS]
07:34:57.811 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1831. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongExtremeValues started...]
07:34:57.811 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1831. SUCCESS]
07:34:57.811 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1832. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextExponential started...]
07:34:57.813 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1832. SUCCESS]
07:34:57.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1833. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoisson started...]
07:34:57.819 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1833. SUCCESS]
07:34:57.819 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1834. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniform started...]
07:34:57.819 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1834. SUCCESS]
07:34:57.819 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1835. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPermutation started...]
07:34:57.820 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1835. SUCCESS]
07:34:57.820 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1836. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBinomial started...]
07:34:57.830 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1836. SUCCESS]
07:34:57.830 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1837. org.apache.commons.math.random.BitsStreamGeneratorTest#testConfig started...]
07:34:57.831 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1837. SUCCESS]
07:34:57.831 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1838. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInversionDeviate started...]
07:34:57.831 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1838. SUCCESS]
07:34:57.831 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1839. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHex started...]
07:34:57.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1839. SUCCESS]
07:34:57.858 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1840. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt started...]
07:34:57.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1840. SUCCESS]
07:34:57.859 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1841. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextCauchy started...]
07:34:57.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1841. SUCCESS]
07:34:57.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1842. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGamma started...]
07:34:57.863 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1842. SUCCESS]
07:34:57.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1843. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextWeibull started...]
07:34:57.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1843. SUCCESS]
07:34:57.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1844. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBeta started...]
07:34:57.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1844. SUCCESS]
07:34:57.873 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1845. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong started...]
07:34:57.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1845. SUCCESS]
07:34:57.874 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1846. org.apache.commons.math.random.BitsStreamGeneratorTest#testNextZipf started...]
07:34:57.889 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1846. SUCCESS]
07:34:57.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1847. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank started...]
07:34:57.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1847. SUCCESS]
07:34:57.891 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1848. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance started...]
07:34:57.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1848. SUCCESS]
07:34:57.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1849. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226 started...]
07:34:57.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1849. SUCCESS]
07:34:57.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1850. org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix started...]
07:34:57.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1850. SUCCESS]
07:34:57.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1851. org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow started...]
07:34:57.929 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1851. SUCCESS]
07:34:57.930 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1852. org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization started...]
07:34:57.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1852. SUCCESS]
07:34:57.953 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1853. org.apache.commons.math.random.EmpiricalDistributionTest#testLoad started...]
07:34:57.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1853. SUCCESS]
07:34:57.961 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1854. org.apache.commons.math.random.EmpiricalDistributionTest#testNext started...]
07:34:57.976 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1854. SUCCESS]
07:34:57.976 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1855. org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray started...]
07:34:57.978 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1855. SUCCESS]
07:34:57.978 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1856. org.apache.commons.math.random.EmpiricalDistributionTest#testGeneratorConfig started...]
07:34:57.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1856. SUCCESS]
07:34:57.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1857. org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat started...]
07:34:57.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1857. SUCCESS]
07:34:57.989 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1858. org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad started...]
07:34:57.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1858. SUCCESS]
07:34:57.992 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1859. org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine started...]
07:34:58.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1859. SUCCESS]
07:34:58.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1860. org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile started...]
07:34:58.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1860. SUCCESS]
07:34:58.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1861. org.apache.commons.math.random.EmpiricalDistributionTest#testGetBinUpperBounds started...]
07:34:58.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1861. SUCCESS]
07:34:58.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1862. org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL started...]
07:34:58.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1862. SUCCESS]
07:34:58.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1863. org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail started...]
07:34:58.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1863. SUCCESS]
07:34:58.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1864. org.apache.commons.math.random.EmpiricalDistributionTest#testReSeed started...]
07:34:58.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1864. SUCCESS]
07:34:58.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1865. org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation started...]
07:34:58.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1865. SUCCESS]
07:34:58.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1866. org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura started...]
07:34:58.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1866. SUCCESS]
07:34:58.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1867. org.apache.commons.math.random.MersenneTwisterTest#testNextIntDirect started...]
07:34:58.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1867. SUCCESS]
07:34:58.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1868. org.apache.commons.math.random.MersenneTwisterTest#testNextFloatDirect started...]
07:34:58.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1868. SUCCESS]
07:34:58.527 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1869. org.apache.commons.math.random.MersenneTwisterTest#testNextBooleanDirect started...]
07:34:58.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1869. SUCCESS]
07:34:58.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1870. org.apache.commons.math.random.MersenneTwisterTest#testNextLongDirect started...]
07:34:58.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1870. SUCCESS]
07:34:58.528 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1871. org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean2 started...]
07:34:58.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1871. SUCCESS]
07:34:58.530 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1872. org.apache.commons.math.random.MersenneTwisterTest#testFloatDirect started...]
07:34:58.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1872. SUCCESS]
07:34:58.531 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1873. org.apache.commons.math.random.MersenneTwisterTest#testDoubleDirect started...]
07:34:58.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1873. SUCCESS]
07:34:58.532 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1874. org.apache.commons.math.random.MersenneTwisterTest#testNextLong2 started...]
07:34:58.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1874. SUCCESS]
07:34:58.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1875. org.apache.commons.math.random.MersenneTwisterTest#testNextIntIAE started...]
07:34:58.533 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1875. SUCCESS]
07:34:58.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1876. org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg started...]
07:34:58.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1876. SUCCESS]
07:34:58.534 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1877. org.apache.commons.math.random.MersenneTwisterTest#testNexBytes started...]
07:34:58.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1877. SUCCESS]
07:34:58.546 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1878. org.apache.commons.math.random.MersenneTwisterTest#testNextInt2 started...]
07:34:58.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1878. SUCCESS]
07:34:58.548 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1879. org.apache.commons.math.random.MersenneTwisterTest#testNextPascal started...]
07:34:58.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1879. SUCCESS]
07:34:58.581 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1880. org.apache.commons.math.random.MersenneTwisterTest#testNextSample started...]
07:34:58.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1880. SUCCESS]
07:34:58.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1881. org.apache.commons.math.random.MersenneTwisterTest#testNextIntExtremeValues started...]
07:34:58.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1881. SUCCESS]
07:34:58.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1882. org.apache.commons.math.random.MersenneTwisterTest#testNextUniformExclusiveEndpoints started...]
07:34:58.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1882. SUCCESS]
07:34:58.586 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1883. org.apache.commons.math.random.MersenneTwisterTest#testNextGaussian started...]
07:34:58.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1883. SUCCESS]
07:34:58.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1884. org.apache.commons.math.random.MersenneTwisterTest#testNextF started...]
07:34:58.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1884. SUCCESS]
07:34:58.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1885. org.apache.commons.math.random.MersenneTwisterTest#testNextT started...]
07:34:58.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1885. SUCCESS]
07:34:58.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1886. org.apache.commons.math.random.MersenneTwisterTest#testNextChiSquare started...]
07:34:58.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1886. SUCCESS]
07:34:58.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1887. org.apache.commons.math.random.MersenneTwisterTest#testNextSecureLong started...]
07:34:58.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1887. SUCCESS]
07:34:58.630 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1888. org.apache.commons.math.random.MersenneTwisterTest#testNextSecureHex started...]
07:34:58.630 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1888. SUCCESS]
07:34:58.630 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1889. org.apache.commons.math.random.MersenneTwisterTest#testNextSecureInt started...]
07:34:58.630 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1889. SUCCESS]
07:34:58.630 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1890. org.apache.commons.math.random.MersenneTwisterTest#testNextPoissonConsistency started...]
07:34:59.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1890. SUCCESS]
07:34:59.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1891. org.apache.commons.math.random.MersenneTwisterTest#testNextHypergeometric started...]
07:34:59.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1891. SUCCESS]
07:34:59.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1892. org.apache.commons.math.random.MersenneTwisterTest#testNextLongExtremeValues started...]
07:34:59.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1892. SUCCESS]
07:34:59.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1893. org.apache.commons.math.random.MersenneTwisterTest#testNextExponential started...]
07:34:59.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1893. SUCCESS]
07:34:59.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1894. org.apache.commons.math.random.MersenneTwisterTest#testNextPoisson started...]
07:34:59.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1894. SUCCESS]
07:34:59.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1895. org.apache.commons.math.random.MersenneTwisterTest#testNextUniform started...]
07:34:59.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1895. SUCCESS]
07:34:59.875 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1896. org.apache.commons.math.random.MersenneTwisterTest#testNextPermutation started...]
07:34:59.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1896. SUCCESS]
07:34:59.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1897. org.apache.commons.math.random.MersenneTwisterTest#testNextBinomial started...]
07:34:59.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1897. SUCCESS]
07:34:59.885 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1898. org.apache.commons.math.random.MersenneTwisterTest#testConfig started...]
07:34:59.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1898. SUCCESS]
07:34:59.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1899. org.apache.commons.math.random.MersenneTwisterTest#testNextInversionDeviate started...]
07:34:59.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1899. SUCCESS]
07:34:59.886 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1900. org.apache.commons.math.random.MersenneTwisterTest#testNextHex started...]
07:34:59.912 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1900. SUCCESS]
07:34:59.913 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1901. org.apache.commons.math.random.MersenneTwisterTest#testNextInt started...]
07:34:59.913 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1901. SUCCESS]
07:34:59.913 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1902. org.apache.commons.math.random.MersenneTwisterTest#testNextCauchy started...]
07:34:59.916 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1902. SUCCESS]
07:34:59.916 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1903. org.apache.commons.math.random.MersenneTwisterTest#testNextGamma started...]
07:34:59.917 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1903. SUCCESS]
07:34:59.918 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1904. org.apache.commons.math.random.MersenneTwisterTest#testNextWeibull started...]
07:34:59.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1904. SUCCESS]
07:34:59.919 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1905. org.apache.commons.math.random.MersenneTwisterTest#testNextBeta started...]
07:34:59.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1905. SUCCESS]
07:34:59.927 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1906. org.apache.commons.math.random.MersenneTwisterTest#testNextLong started...]
07:34:59.928 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1906. SUCCESS]
07:34:59.928 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1907. org.apache.commons.math.random.MersenneTwisterTest#testNextZipf started...]
07:34:59.943 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1907. SUCCESS]
07:34:59.943 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1908. org.apache.commons.math.random.RandomAdaptorTest#testAdaptor started...]
07:34:59.943 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1908. SUCCESS]
07:34:59.943 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1909. org.apache.commons.math.random.RandomDataTest#testNextPascal started...]
07:34:59.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1909. SUCCESS]
07:34:59.977 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1910. org.apache.commons.math.random.RandomDataTest#testNextSample started...]
07:34:59.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1910. SUCCESS]
07:34:59.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1911. org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues started...]
07:34:59.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1911. SUCCESS]
07:34:59.979 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1912. org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints started...]
07:34:59.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1912. SUCCESS]
07:34:59.980 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1913. org.apache.commons.math.random.RandomDataTest#testNextGaussian started...]
07:34:59.982 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1913. SUCCESS]
07:34:59.982 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1914. org.apache.commons.math.random.RandomDataTest#testNextF started...]
07:34:59.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1914. SUCCESS]
07:34:59.997 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1915. org.apache.commons.math.random.RandomDataTest#testNextT started...]
07:35:00.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1915. SUCCESS]
07:35:00.011 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1916. org.apache.commons.math.random.RandomDataTest#testNextChiSquare started...]
07:35:00.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1916. SUCCESS]
07:35:00.022 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1917. org.apache.commons.math.random.RandomDataTest#testNextSecureLong started...]
07:35:00.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1917. SUCCESS]
07:35:00.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1918. org.apache.commons.math.random.RandomDataTest#testNextSecureHex started...]
07:35:00.148 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1918. SUCCESS]
07:35:00.148 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1919. org.apache.commons.math.random.RandomDataTest#testNextSecureInt started...]
07:35:00.153 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1919. SUCCESS]
07:35:00.153 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1920. org.apache.commons.math.random.RandomDataTest#testNextPoissonConsistency started...]
07:35:01.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1920. SUCCESS]
07:35:01.590 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1921. org.apache.commons.math.random.RandomDataTest#testNextHypergeometric started...]
07:35:01.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1921. SUCCESS]
07:35:01.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1922. org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues started...]
07:35:01.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1922. SUCCESS]
07:35:01.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1923. org.apache.commons.math.random.RandomDataTest#testNextExponential started...]
07:35:01.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1923. SUCCESS]
07:35:01.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1924. org.apache.commons.math.random.RandomDataTest#testNextPoisson started...]
07:35:01.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1924. SUCCESS]
07:35:01.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1925. org.apache.commons.math.random.RandomDataTest#testNextUniform started...]
07:35:01.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1925. SUCCESS]
07:35:01.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1926. org.apache.commons.math.random.RandomDataTest#testNextPermutation started...]
07:35:01.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1926. SUCCESS]
07:35:01.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1927. org.apache.commons.math.random.RandomDataTest#testNextBinomial started...]
07:35:01.628 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1927. SUCCESS]
07:35:01.628 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1928. org.apache.commons.math.random.RandomDataTest#testConfig started...]
07:35:01.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1928. SUCCESS]
07:35:01.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1929. org.apache.commons.math.random.RandomDataTest#testNextInversionDeviate started...]
07:35:01.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1929. SUCCESS]
07:35:01.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1930. org.apache.commons.math.random.RandomDataTest#testNextHex started...]
07:35:01.646 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1930. SUCCESS]
07:35:01.646 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1931. org.apache.commons.math.random.RandomDataTest#testNextInt started...]
07:35:01.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1931. SUCCESS]
07:35:01.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1932. org.apache.commons.math.random.RandomDataTest#testNextCauchy started...]
07:35:01.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1932. SUCCESS]
07:35:01.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1933. org.apache.commons.math.random.RandomDataTest#testNextGamma started...]
07:35:01.651 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1933. SUCCESS]
07:35:01.651 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1934. org.apache.commons.math.random.RandomDataTest#testNextWeibull started...]
07:35:01.652 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1934. SUCCESS]
07:35:01.652 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1935. org.apache.commons.math.random.RandomDataTest#testNextBeta started...]
07:35:01.661 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1935. SUCCESS]
07:35:01.661 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1936. org.apache.commons.math.random.RandomDataTest#testNextLong started...]
07:35:01.661 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1936. SUCCESS]
07:35:01.661 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1937. org.apache.commons.math.random.RandomDataTest#testNextZipf started...]
07:35:01.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1937. SUCCESS]
07:35:01.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1938. org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation started...]
07:35:01.685 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1938. SUCCESS]
07:35:01.685 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1939. org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation started...]
07:35:01.688 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1939. SUCCESS]
07:35:01.689 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1940. org.apache.commons.math.random.ValueServerTest#testProperties started...]
07:35:01.689 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1940. SUCCESS]
07:35:01.689 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1941. org.apache.commons.math.random.ValueServerTest#testModes started...]
07:35:01.689 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1941. SUCCESS]
07:35:01.689 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1942. org.apache.commons.math.random.ValueServerTest#testFill started...]
07:35:01.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1942. SUCCESS]
07:35:01.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1943. org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile started...]
07:35:01.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1943. SUCCESS]
07:35:01.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1944. org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile started...]
07:35:01.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1944. SUCCESS]
07:35:01.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1945. org.apache.commons.math.random.ValueServerTest#testNextDigestFail started...]
07:35:01.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1945. SUCCESS]
07:35:01.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1946. org.apache.commons.math.random.ValueServerTest#testFixedSeed started...]
07:35:01.697 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1946. SUCCESS]
07:35:01.697 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1947. org.apache.commons.math.random.ValueServerTest#testReplay started...]
07:35:01.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1947. SUCCESS]
07:35:01.698 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1948. org.apache.commons.math.random.ValueServerTest#testNextDigest started...]
07:35:01.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1948. SUCCESS]
07:35:01.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1949. org.apache.commons.math.random.Well1024aTest#testReferenceCode started...]
07:35:01.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1949. SUCCESS]
07:35:01.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1950. org.apache.commons.math.random.Well1024aTest#testNextIntDirect started...]
07:35:02.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1950. SUCCESS]
07:35:02.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1951. org.apache.commons.math.random.Well1024aTest#testNextFloatDirect started...]
07:35:02.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1951. SUCCESS]
07:35:02.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1952. org.apache.commons.math.random.Well1024aTest#testNextBooleanDirect started...]
07:35:02.197 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1952. SUCCESS]
07:35:02.197 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1953. org.apache.commons.math.random.Well1024aTest#testNextLongDirect started...]
07:35:02.197 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1953. SUCCESS]
07:35:02.197 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1954. org.apache.commons.math.random.Well1024aTest#testNexBoolean2 started...]
07:35:02.199 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1954. SUCCESS]
07:35:02.199 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1955. org.apache.commons.math.random.Well1024aTest#testFloatDirect started...]
07:35:02.199 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1955. SUCCESS]
07:35:02.199 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1956. org.apache.commons.math.random.Well1024aTest#testDoubleDirect started...]
07:35:02.200 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1956. SUCCESS]
07:35:02.200 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1957. org.apache.commons.math.random.Well1024aTest#testNextLong2 started...]
07:35:02.201 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1957. SUCCESS]
07:35:02.201 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1958. org.apache.commons.math.random.Well1024aTest#testNextIntIAE started...]
07:35:02.201 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1958. SUCCESS]
07:35:02.201 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1959. org.apache.commons.math.random.Well1024aTest#testNextIntNeg started...]
07:35:02.201 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1959. SUCCESS]
07:35:02.201 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1960. org.apache.commons.math.random.Well1024aTest#testNexBytes started...]
07:35:02.209 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1960. SUCCESS]
07:35:02.210 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1961. org.apache.commons.math.random.Well1024aTest#testNextInt2 started...]
07:35:02.211 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1961. SUCCESS]
07:35:02.211 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1962. org.apache.commons.math.random.Well1024aTest#testNextPascal started...]
07:35:02.244 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1962. SUCCESS]
07:35:02.244 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1963. org.apache.commons.math.random.Well1024aTest#testNextSample started...]
07:35:02.246 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1963. SUCCESS]
07:35:02.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1964. org.apache.commons.math.random.Well1024aTest#testNextIntExtremeValues started...]
07:35:02.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1964. SUCCESS]
07:35:02.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1965. org.apache.commons.math.random.Well1024aTest#testNextUniformExclusiveEndpoints started...]
07:35:02.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1965. SUCCESS]
07:35:02.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1966. org.apache.commons.math.random.Well1024aTest#testNextGaussian started...]
07:35:02.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1966. SUCCESS]
07:35:02.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1967. org.apache.commons.math.random.Well1024aTest#testNextF started...]
07:35:02.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1967. SUCCESS]
07:35:02.264 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1968. org.apache.commons.math.random.Well1024aTest#testNextT started...]
07:35:02.279 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1968. SUCCESS]
07:35:02.279 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1969. org.apache.commons.math.random.Well1024aTest#testNextChiSquare started...]
07:35:02.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1969. SUCCESS]
07:35:02.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1970. org.apache.commons.math.random.Well1024aTest#testNextSecureLong started...]
07:35:02.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1970. SUCCESS]
07:35:02.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1971. org.apache.commons.math.random.Well1024aTest#testNextSecureHex started...]
07:35:02.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1971. SUCCESS]
07:35:02.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1972. org.apache.commons.math.random.Well1024aTest#testNextSecureInt started...]
07:35:02.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1972. SUCCESS]
07:35:02.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1973. org.apache.commons.math.random.Well1024aTest#testNextPoissonConsistency started...]
07:35:03.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1973. SUCCESS]
07:35:03.578 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1974. org.apache.commons.math.random.Well1024aTest#testNextHypergeometric started...]
07:35:03.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1974. SUCCESS]
07:35:03.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1975. org.apache.commons.math.random.Well1024aTest#testNextLongExtremeValues started...]
07:35:03.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1975. SUCCESS]
07:35:03.583 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1976. org.apache.commons.math.random.Well1024aTest#testNextExponential started...]
07:35:03.584 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1976. SUCCESS]
07:35:03.585 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1977. org.apache.commons.math.random.Well1024aTest#testNextPoisson started...]
07:35:03.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1977. SUCCESS]
07:35:03.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1978. org.apache.commons.math.random.Well1024aTest#testNextUniform started...]
07:35:03.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1978. SUCCESS]
07:35:03.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1979. org.apache.commons.math.random.Well1024aTest#testNextPermutation started...]
07:35:03.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1979. SUCCESS]
07:35:03.589 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1980. org.apache.commons.math.random.Well1024aTest#testNextBinomial started...]
07:35:03.597 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1980. SUCCESS]
07:35:03.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1981. org.apache.commons.math.random.Well1024aTest#testConfig started...]
07:35:03.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1981. SUCCESS]
07:35:03.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1982. org.apache.commons.math.random.Well1024aTest#testNextInversionDeviate started...]
07:35:03.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1982. SUCCESS]
07:35:03.598 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1983. org.apache.commons.math.random.Well1024aTest#testNextHex started...]
07:35:03.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1983. SUCCESS]
07:35:03.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1984. org.apache.commons.math.random.Well1024aTest#testNextInt started...]
07:35:03.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1984. SUCCESS]
07:35:03.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1985. org.apache.commons.math.random.Well1024aTest#testNextCauchy started...]
07:35:03.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1985. SUCCESS]
07:35:03.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1986. org.apache.commons.math.random.Well1024aTest#testNextGamma started...]
07:35:03.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1986. SUCCESS]
07:35:03.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1987. org.apache.commons.math.random.Well1024aTest#testNextWeibull started...]
07:35:03.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1987. SUCCESS]
07:35:03.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1988. org.apache.commons.math.random.Well1024aTest#testNextBeta started...]
07:35:03.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1988. SUCCESS]
07:35:03.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1989. org.apache.commons.math.random.Well1024aTest#testNextLong started...]
07:35:03.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1989. SUCCESS]
07:35:03.629 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1990. org.apache.commons.math.random.Well1024aTest#testNextZipf started...]
07:35:03.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1990. SUCCESS]
07:35:03.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1991. org.apache.commons.math.random.Well19937aTest#testReferenceCode started...]
07:35:03.646 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1991. SUCCESS]
07:35:03.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1992. org.apache.commons.math.random.Well19937aTest#testNextIntDirect started...]
07:35:04.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1992. SUCCESS]
07:35:04.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1993. org.apache.commons.math.random.Well19937aTest#testNextFloatDirect started...]
07:35:04.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1993. SUCCESS]
07:35:04.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1994. org.apache.commons.math.random.Well19937aTest#testNextBooleanDirect started...]
07:35:04.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1994. SUCCESS]
07:35:04.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1995. org.apache.commons.math.random.Well19937aTest#testNextLongDirect started...]
07:35:04.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1995. SUCCESS]
07:35:04.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1996. org.apache.commons.math.random.Well19937aTest#testNexBoolean2 started...]
07:35:04.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1996. SUCCESS]
07:35:04.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1997. org.apache.commons.math.random.Well19937aTest#testFloatDirect started...]
07:35:04.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1997. SUCCESS]
07:35:04.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1998. org.apache.commons.math.random.Well19937aTest#testDoubleDirect started...]
07:35:04.102 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1998. SUCCESS]
07:35:04.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1999. org.apache.commons.math.random.Well19937aTest#testNextLong2 started...]
07:35:04.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#1999. SUCCESS]
07:35:04.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2000. org.apache.commons.math.random.Well19937aTest#testNextIntIAE started...]
07:35:04.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2000. SUCCESS]
07:35:04.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2001. org.apache.commons.math.random.Well19937aTest#testNextIntNeg started...]
07:35:04.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2001. SUCCESS]
07:35:04.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2002. org.apache.commons.math.random.Well19937aTest#testNexBytes started...]
07:35:04.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2002. SUCCESS]
07:35:04.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2003. org.apache.commons.math.random.Well19937aTest#testNextInt2 started...]
07:35:04.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2003. SUCCESS]
07:35:04.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2004. org.apache.commons.math.random.Well19937aTest#testNextPascal started...]
07:35:04.147 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2004. SUCCESS]
07:35:04.147 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2005. org.apache.commons.math.random.Well19937aTest#testNextSample started...]
07:35:04.149 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2005. SUCCESS]
07:35:04.149 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2006. org.apache.commons.math.random.Well19937aTest#testNextIntExtremeValues started...]
07:35:04.149 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2006. SUCCESS]
07:35:04.149 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2007. org.apache.commons.math.random.Well19937aTest#testNextUniformExclusiveEndpoints started...]
07:35:04.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2007. SUCCESS]
07:35:04.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2008. org.apache.commons.math.random.Well19937aTest#testNextGaussian started...]
07:35:04.152 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2008. SUCCESS]
07:35:04.152 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2009. org.apache.commons.math.random.Well19937aTest#testNextF started...]
07:35:04.166 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2009. SUCCESS]
07:35:04.166 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2010. org.apache.commons.math.random.Well19937aTest#testNextT started...]
07:35:04.180 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2010. SUCCESS]
07:35:04.181 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2011. org.apache.commons.math.random.Well19937aTest#testNextChiSquare started...]
07:35:04.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2011. SUCCESS]
07:35:04.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2012. org.apache.commons.math.random.Well19937aTest#testNextSecureLong started...]
07:35:04.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2012. SUCCESS]
07:35:04.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2013. org.apache.commons.math.random.Well19937aTest#testNextSecureHex started...]
07:35:04.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2013. SUCCESS]
07:35:04.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2014. org.apache.commons.math.random.Well19937aTest#testNextSecureInt started...]
07:35:04.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2014. SUCCESS]
07:35:04.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2015. org.apache.commons.math.random.Well19937aTest#testNextPoissonConsistency started...]
07:35:05.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2015. SUCCESS]
07:35:05.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2016. org.apache.commons.math.random.Well19937aTest#testNextHypergeometric started...]
07:35:05.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2016. SUCCESS]
07:35:05.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2017. org.apache.commons.math.random.Well19937aTest#testNextLongExtremeValues started...]
07:35:05.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2017. SUCCESS]
07:35:05.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2018. org.apache.commons.math.random.Well19937aTest#testNextExponential started...]
07:35:05.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2018. SUCCESS]
07:35:05.646 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2019. org.apache.commons.math.random.Well19937aTest#testNextPoisson started...]
07:35:05.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2019. SUCCESS]
07:35:05.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2020. org.apache.commons.math.random.Well19937aTest#testNextUniform started...]
07:35:05.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2020. SUCCESS]
07:35:05.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2021. org.apache.commons.math.random.Well19937aTest#testNextPermutation started...]
07:35:05.650 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2021. SUCCESS]
07:35:05.650 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2022. org.apache.commons.math.random.Well19937aTest#testNextBinomial started...]
07:35:05.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2022. SUCCESS]
07:35:05.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2023. org.apache.commons.math.random.Well19937aTest#testConfig started...]
07:35:05.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2023. SUCCESS]
07:35:05.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2024. org.apache.commons.math.random.Well19937aTest#testNextInversionDeviate started...]
07:35:05.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2024. SUCCESS]
07:35:05.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2025. org.apache.commons.math.random.Well19937aTest#testNextHex started...]
07:35:05.675 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2025. SUCCESS]
07:35:05.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2026. org.apache.commons.math.random.Well19937aTest#testNextInt started...]
07:35:05.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2026. SUCCESS]
07:35:05.676 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2027. org.apache.commons.math.random.Well19937aTest#testNextCauchy started...]
07:35:05.679 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2027. SUCCESS]
07:35:05.679 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2028. org.apache.commons.math.random.Well19937aTest#testNextGamma started...]
07:35:05.680 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2028. SUCCESS]
07:35:05.680 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2029. org.apache.commons.math.random.Well19937aTest#testNextWeibull started...]
07:35:05.681 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2029. SUCCESS]
07:35:05.681 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2030. org.apache.commons.math.random.Well19937aTest#testNextBeta started...]
07:35:05.689 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2030. SUCCESS]
07:35:05.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2031. org.apache.commons.math.random.Well19937aTest#testNextLong started...]
07:35:05.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2031. SUCCESS]
07:35:05.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2032. org.apache.commons.math.random.Well19937aTest#testNextZipf started...]
07:35:05.705 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2032. SUCCESS]
07:35:05.706 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2033. org.apache.commons.math.random.Well19937cTest#testReferenceCode started...]
07:35:05.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2033. SUCCESS]
07:35:05.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2034. org.apache.commons.math.random.Well19937cTest#testNextIntDirect started...]
07:35:06.240 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2034. SUCCESS]
07:35:06.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2035. org.apache.commons.math.random.Well19937cTest#testNextFloatDirect started...]
07:35:06.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2035. SUCCESS]
07:35:06.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2036. org.apache.commons.math.random.Well19937cTest#testNextBooleanDirect started...]
07:35:06.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2036. SUCCESS]
07:35:06.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2037. org.apache.commons.math.random.Well19937cTest#testNextLongDirect started...]
07:35:06.242 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2037. SUCCESS]
07:35:06.242 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2038. org.apache.commons.math.random.Well19937cTest#testNexBoolean2 started...]
07:35:06.242 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2038. SUCCESS]
07:35:06.242 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2039. org.apache.commons.math.random.Well19937cTest#testFloatDirect started...]
07:35:06.243 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2039. SUCCESS]
07:35:06.243 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2040. org.apache.commons.math.random.Well19937cTest#testDoubleDirect started...]
07:35:06.244 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2040. SUCCESS]
07:35:06.244 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2041. org.apache.commons.math.random.Well19937cTest#testNextLong2 started...]
07:35:06.245 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2041. SUCCESS]
07:35:06.245 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2042. org.apache.commons.math.random.Well19937cTest#testNextIntIAE started...]
07:35:06.245 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2042. SUCCESS]
07:35:06.245 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2043. org.apache.commons.math.random.Well19937cTest#testNextIntNeg started...]
07:35:06.245 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2043. SUCCESS]
07:35:06.245 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2044. org.apache.commons.math.random.Well19937cTest#testNexBytes started...]
07:35:06.254 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2044. SUCCESS]
07:35:06.254 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2045. org.apache.commons.math.random.Well19937cTest#testNextInt2 started...]
07:35:06.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2045. SUCCESS]
07:35:06.255 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2046. org.apache.commons.math.random.Well19937cTest#testNextPascal started...]
07:35:06.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2046. SUCCESS]
07:35:06.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2047. org.apache.commons.math.random.Well19937cTest#testNextSample started...]
07:35:06.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2047. SUCCESS]
07:35:06.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2048. org.apache.commons.math.random.Well19937cTest#testNextIntExtremeValues started...]
07:35:06.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2048. SUCCESS]
07:35:06.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2049. org.apache.commons.math.random.Well19937cTest#testNextUniformExclusiveEndpoints started...]
07:35:06.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2049. SUCCESS]
07:35:06.291 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2050. org.apache.commons.math.random.Well19937cTest#testNextGaussian started...]
07:35:06.293 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2050. SUCCESS]
07:35:06.293 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2051. org.apache.commons.math.random.Well19937cTest#testNextF started...]
07:35:06.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2051. SUCCESS]
07:35:06.308 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2052. org.apache.commons.math.random.Well19937cTest#testNextT started...]
07:35:06.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2052. SUCCESS]
07:35:06.322 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2053. org.apache.commons.math.random.Well19937cTest#testNextChiSquare started...]
07:35:06.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2053. SUCCESS]
07:35:06.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2054. org.apache.commons.math.random.Well19937cTest#testNextSecureLong started...]
07:35:06.333 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2054. SUCCESS]
07:35:06.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2055. org.apache.commons.math.random.Well19937cTest#testNextSecureHex started...]
07:35:06.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2055. SUCCESS]
07:35:06.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2056. org.apache.commons.math.random.Well19937cTest#testNextSecureInt started...]
07:35:06.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2056. SUCCESS]
07:35:06.334 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2057. org.apache.commons.math.random.Well19937cTest#testNextPoissonConsistency started...]
07:35:07.628 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2057. SUCCESS]
07:35:07.628 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2058. org.apache.commons.math.random.Well19937cTest#testNextHypergeometric started...]
07:35:07.632 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2058. SUCCESS]
07:35:07.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2059. org.apache.commons.math.random.Well19937cTest#testNextLongExtremeValues started...]
07:35:07.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2059. SUCCESS]
07:35:07.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2060. org.apache.commons.math.random.Well19937cTest#testNextExponential started...]
07:35:07.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2060. SUCCESS]
07:35:07.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2061. org.apache.commons.math.random.Well19937cTest#testNextPoisson started...]
07:35:07.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2061. SUCCESS]
07:35:07.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2062. org.apache.commons.math.random.Well19937cTest#testNextUniform started...]
07:35:07.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2062. SUCCESS]
07:35:07.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2063. org.apache.commons.math.random.Well19937cTest#testNextPermutation started...]
07:35:07.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2063. SUCCESS]
07:35:07.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2064. org.apache.commons.math.random.Well19937cTest#testNextBinomial started...]
07:35:07.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2064. SUCCESS]
07:35:07.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2065. org.apache.commons.math.random.Well19937cTest#testConfig started...]
07:35:07.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2065. SUCCESS]
07:35:07.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2066. org.apache.commons.math.random.Well19937cTest#testNextInversionDeviate started...]
07:35:07.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2066. SUCCESS]
07:35:07.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2067. org.apache.commons.math.random.Well19937cTest#testNextHex started...]
07:35:07.664 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2067. SUCCESS]
07:35:07.664 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2068. org.apache.commons.math.random.Well19937cTest#testNextInt started...]
07:35:07.665 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2068. SUCCESS]
07:35:07.665 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2069. org.apache.commons.math.random.Well19937cTest#testNextCauchy started...]
07:35:07.667 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2069. SUCCESS]
07:35:07.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2070. org.apache.commons.math.random.Well19937cTest#testNextGamma started...]
07:35:07.669 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2070. SUCCESS]
07:35:07.669 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2071. org.apache.commons.math.random.Well19937cTest#testNextWeibull started...]
07:35:07.670 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2071. SUCCESS]
07:35:07.670 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2072. org.apache.commons.math.random.Well19937cTest#testNextBeta started...]
07:35:07.678 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2072. SUCCESS]
07:35:07.678 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2073. org.apache.commons.math.random.Well19937cTest#testNextLong started...]
07:35:07.679 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2073. SUCCESS]
07:35:07.679 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2074. org.apache.commons.math.random.Well19937cTest#testNextZipf started...]
07:35:07.694 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2074. SUCCESS]
07:35:07.695 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2075. org.apache.commons.math.random.Well44497aTest#testReferenceCode started...]
07:35:07.696 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2075. SUCCESS]
07:35:07.696 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2076. org.apache.commons.math.random.Well44497aTest#testNextIntDirect started...]
07:35:08.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2076. SUCCESS]
07:35:08.190 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2077. org.apache.commons.math.random.Well44497aTest#testNextFloatDirect started...]
07:35:08.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2077. SUCCESS]
07:35:08.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2078. org.apache.commons.math.random.Well44497aTest#testNextBooleanDirect started...]
07:35:08.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2078. SUCCESS]
07:35:08.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2079. org.apache.commons.math.random.Well44497aTest#testNextLongDirect started...]
07:35:08.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2079. SUCCESS]
07:35:08.191 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2080. org.apache.commons.math.random.Well44497aTest#testNexBoolean2 started...]
07:35:08.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2080. SUCCESS]
07:35:08.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2081. org.apache.commons.math.random.Well44497aTest#testFloatDirect started...]
07:35:08.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2081. SUCCESS]
07:35:08.192 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2082. org.apache.commons.math.random.Well44497aTest#testDoubleDirect started...]
07:35:08.194 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2082. SUCCESS]
07:35:08.194 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2083. org.apache.commons.math.random.Well44497aTest#testNextLong2 started...]
07:35:08.194 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2083. SUCCESS]
07:35:08.194 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2084. org.apache.commons.math.random.Well44497aTest#testNextIntIAE started...]
07:35:08.194 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2084. SUCCESS]
07:35:08.194 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2085. org.apache.commons.math.random.Well44497aTest#testNextIntNeg started...]
07:35:08.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2085. SUCCESS]
07:35:08.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2086. org.apache.commons.math.random.Well44497aTest#testNexBytes started...]
07:35:08.204 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2086. SUCCESS]
07:35:08.204 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2087. org.apache.commons.math.random.Well44497aTest#testNextInt2 started...]
07:35:08.204 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2087. SUCCESS]
07:35:08.204 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2088. org.apache.commons.math.random.Well44497aTest#testNextPascal started...]
07:35:08.238 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2088. SUCCESS]
07:35:08.238 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2089. org.apache.commons.math.random.Well44497aTest#testNextSample started...]
07:35:08.240 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2089. SUCCESS]
07:35:08.240 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2090. org.apache.commons.math.random.Well44497aTest#testNextIntExtremeValues started...]
07:35:08.240 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2090. SUCCESS]
07:35:08.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2091. org.apache.commons.math.random.Well44497aTest#testNextUniformExclusiveEndpoints started...]
07:35:08.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2091. SUCCESS]
07:35:08.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2092. org.apache.commons.math.random.Well44497aTest#testNextGaussian started...]
07:35:08.243 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2092. SUCCESS]
07:35:08.243 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2093. org.apache.commons.math.random.Well44497aTest#testNextF started...]
07:35:08.258 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2093. SUCCESS]
07:35:08.258 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2094. org.apache.commons.math.random.Well44497aTest#testNextT started...]
07:35:08.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2094. SUCCESS]
07:35:08.272 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2095. org.apache.commons.math.random.Well44497aTest#testNextChiSquare started...]
07:35:08.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2095. SUCCESS]
07:35:08.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2096. org.apache.commons.math.random.Well44497aTest#testNextSecureLong started...]
07:35:08.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2096. SUCCESS]
07:35:08.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2097. org.apache.commons.math.random.Well44497aTest#testNextSecureHex started...]
07:35:08.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2097. SUCCESS]
07:35:08.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2098. org.apache.commons.math.random.Well44497aTest#testNextSecureInt started...]
07:35:08.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2098. SUCCESS]
07:35:08.284 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2099. org.apache.commons.math.random.Well44497aTest#testNextPoissonConsistency started...]
07:35:09.599 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2099. SUCCESS]
07:35:09.599 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2100. org.apache.commons.math.random.Well44497aTest#testNextHypergeometric started...]
07:35:09.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2100. SUCCESS]
07:35:09.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2101. org.apache.commons.math.random.Well44497aTest#testNextLongExtremeValues started...]
07:35:09.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2101. SUCCESS]
07:35:09.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2102. org.apache.commons.math.random.Well44497aTest#testNextExponential started...]
07:35:09.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2102. SUCCESS]
07:35:09.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2103. org.apache.commons.math.random.Well44497aTest#testNextPoisson started...]
07:35:09.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2103. SUCCESS]
07:35:09.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2104. org.apache.commons.math.random.Well44497aTest#testNextUniform started...]
07:35:09.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2104. SUCCESS]
07:35:09.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2105. org.apache.commons.math.random.Well44497aTest#testNextPermutation started...]
07:35:09.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2105. SUCCESS]
07:35:09.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2106. org.apache.commons.math.random.Well44497aTest#testNextBinomial started...]
07:35:09.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2106. SUCCESS]
07:35:09.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2107. org.apache.commons.math.random.Well44497aTest#testConfig started...]
07:35:09.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2107. SUCCESS]
07:35:09.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2108. org.apache.commons.math.random.Well44497aTest#testNextInversionDeviate started...]
07:35:09.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2108. SUCCESS]
07:35:09.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2109. org.apache.commons.math.random.Well44497aTest#testNextHex started...]
07:35:09.636 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2109. SUCCESS]
07:35:09.636 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2110. org.apache.commons.math.random.Well44497aTest#testNextInt started...]
07:35:09.637 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2110. SUCCESS]
07:35:09.637 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2111. org.apache.commons.math.random.Well44497aTest#testNextCauchy started...]
07:35:09.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2111. SUCCESS]
07:35:09.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2112. org.apache.commons.math.random.Well44497aTest#testNextGamma started...]
07:35:09.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2112. SUCCESS]
07:35:09.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2113. org.apache.commons.math.random.Well44497aTest#testNextWeibull started...]
07:35:09.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2113. SUCCESS]
07:35:09.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2114. org.apache.commons.math.random.Well44497aTest#testNextBeta started...]
07:35:09.650 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2114. SUCCESS]
07:35:09.650 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2115. org.apache.commons.math.random.Well44497aTest#testNextLong started...]
07:35:09.651 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2115. SUCCESS]
07:35:09.651 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2116. org.apache.commons.math.random.Well44497aTest#testNextZipf started...]
07:35:09.666 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2116. SUCCESS]
07:35:09.667 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2117. org.apache.commons.math.random.Well44497bTest#testReferenceCode started...]
07:35:09.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2117. SUCCESS]
07:35:09.668 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2118. org.apache.commons.math.random.Well44497bTest#testNextIntDirect started...]
07:35:10.237 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2118. SUCCESS]
07:35:10.237 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2119. org.apache.commons.math.random.Well44497bTest#testNextFloatDirect started...]
07:35:10.238 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2119. SUCCESS]
07:35:10.238 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2120. org.apache.commons.math.random.Well44497bTest#testNextBooleanDirect started...]
07:35:10.238 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2120. SUCCESS]
07:35:10.238 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2121. org.apache.commons.math.random.Well44497bTest#testNextLongDirect started...]
07:35:10.238 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2121. SUCCESS]
07:35:10.238 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2122. org.apache.commons.math.random.Well44497bTest#testNexBoolean2 started...]
07:35:10.239 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2122. SUCCESS]
07:35:10.239 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2123. org.apache.commons.math.random.Well44497bTest#testFloatDirect started...]
07:35:10.239 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2123. SUCCESS]
07:35:10.239 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2124. org.apache.commons.math.random.Well44497bTest#testDoubleDirect started...]
07:35:10.240 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2124. SUCCESS]
07:35:10.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2125. org.apache.commons.math.random.Well44497bTest#testNextLong2 started...]
07:35:10.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2125. SUCCESS]
07:35:10.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2126. org.apache.commons.math.random.Well44497bTest#testNextIntIAE started...]
07:35:10.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2126. SUCCESS]
07:35:10.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2127. org.apache.commons.math.random.Well44497bTest#testNextIntNeg started...]
07:35:10.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2127. SUCCESS]
07:35:10.241 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2128. org.apache.commons.math.random.Well44497bTest#testNexBytes started...]
07:35:10.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2128. SUCCESS]
07:35:10.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2129. org.apache.commons.math.random.Well44497bTest#testNextInt2 started...]
07:35:10.251 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2129. SUCCESS]
07:35:10.252 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2130. org.apache.commons.math.random.Well44497bTest#testNextPascal started...]
07:35:10.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2130. SUCCESS]
07:35:10.285 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2131. org.apache.commons.math.random.Well44497bTest#testNextSample started...]
07:35:10.287 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2131. SUCCESS]
07:35:10.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2132. org.apache.commons.math.random.Well44497bTest#testNextIntExtremeValues started...]
07:35:10.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2132. SUCCESS]
07:35:10.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2133. org.apache.commons.math.random.Well44497bTest#testNextUniformExclusiveEndpoints started...]
07:35:10.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2133. SUCCESS]
07:35:10.288 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2134. org.apache.commons.math.random.Well44497bTest#testNextGaussian started...]
07:35:10.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2134. SUCCESS]
07:35:10.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2135. org.apache.commons.math.random.Well44497bTest#testNextF started...]
07:35:10.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2135. SUCCESS]
07:35:10.305 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2136. org.apache.commons.math.random.Well44497bTest#testNextT started...]
07:35:10.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2136. SUCCESS]
07:35:10.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2137. org.apache.commons.math.random.Well44497bTest#testNextChiSquare started...]
07:35:10.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2137. SUCCESS]
07:35:10.330 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2138. org.apache.commons.math.random.Well44497bTest#testNextSecureLong started...]
07:35:10.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2138. SUCCESS]
07:35:10.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2139. org.apache.commons.math.random.Well44497bTest#testNextSecureHex started...]
07:35:10.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2139. SUCCESS]
07:35:10.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2140. org.apache.commons.math.random.Well44497bTest#testNextSecureInt started...]
07:35:10.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2140. SUCCESS]
07:35:10.331 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2141. org.apache.commons.math.random.Well44497bTest#testNextPoissonConsistency started...]
07:35:11.828 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2141. SUCCESS]
07:35:11.829 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2142. org.apache.commons.math.random.Well44497bTest#testNextHypergeometric started...]
07:35:11.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2142. SUCCESS]
07:35:11.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2143. org.apache.commons.math.random.Well44497bTest#testNextLongExtremeValues started...]
07:35:11.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2143. SUCCESS]
07:35:11.834 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2144. org.apache.commons.math.random.Well44497bTest#testNextExponential started...]
07:35:11.836 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2144. SUCCESS]
07:35:11.836 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2145. org.apache.commons.math.random.Well44497bTest#testNextPoisson started...]
07:35:11.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2145. SUCCESS]
07:35:11.839 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2146. org.apache.commons.math.random.Well44497bTest#testNextUniform started...]
07:35:11.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2146. SUCCESS]
07:35:11.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2147. org.apache.commons.math.random.Well44497bTest#testNextPermutation started...]
07:35:11.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2147. SUCCESS]
07:35:11.840 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2148. org.apache.commons.math.random.Well44497bTest#testNextBinomial started...]
07:35:11.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2148. SUCCESS]
07:35:11.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2149. org.apache.commons.math.random.Well44497bTest#testConfig started...]
07:35:11.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2149. SUCCESS]
07:35:11.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2150. org.apache.commons.math.random.Well44497bTest#testNextInversionDeviate started...]
07:35:11.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2150. SUCCESS]
07:35:11.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2151. org.apache.commons.math.random.Well44497bTest#testNextHex started...]
07:35:11.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2151. SUCCESS]
07:35:11.866 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2152. org.apache.commons.math.random.Well44497bTest#testNextInt started...]
07:35:11.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2152. SUCCESS]
07:35:11.867 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2153. org.apache.commons.math.random.Well44497bTest#testNextCauchy started...]
07:35:11.869 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2153. SUCCESS]
07:35:11.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2154. org.apache.commons.math.random.Well44497bTest#testNextGamma started...]
07:35:11.870 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2154. SUCCESS]
07:35:11.871 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2155. org.apache.commons.math.random.Well44497bTest#testNextWeibull started...]
07:35:11.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2155. SUCCESS]
07:35:11.872 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2156. org.apache.commons.math.random.Well44497bTest#testNextBeta started...]
07:35:11.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2156. SUCCESS]
07:35:11.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2157. org.apache.commons.math.random.Well44497bTest#testNextLong started...]
07:35:11.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2157. SUCCESS]
07:35:11.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2158. org.apache.commons.math.random.Well44497bTest#testNextZipf started...]
07:35:11.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2158. SUCCESS]
07:35:11.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2159. org.apache.commons.math.random.Well512aTest#testReferenceCode started...]
07:35:11.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2159. SUCCESS]
07:35:11.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2160. org.apache.commons.math.random.Well512aTest#testNextIntDirect started...]
07:35:12.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2160. SUCCESS]
07:35:12.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2161. org.apache.commons.math.random.Well512aTest#testNextFloatDirect started...]
07:35:12.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2161. SUCCESS]
07:35:12.358 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2162. org.apache.commons.math.random.Well512aTest#testNextBooleanDirect started...]
07:35:12.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2162. SUCCESS]
07:35:12.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2163. org.apache.commons.math.random.Well512aTest#testNextLongDirect started...]
07:35:12.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2163. SUCCESS]
07:35:12.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2164. org.apache.commons.math.random.Well512aTest#testNexBoolean2 started...]
07:35:12.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2164. SUCCESS]
07:35:12.359 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2165. org.apache.commons.math.random.Well512aTest#testFloatDirect started...]
07:35:12.360 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2165. SUCCESS]
07:35:12.360 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2166. org.apache.commons.math.random.Well512aTest#testDoubleDirect started...]
07:35:12.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2166. SUCCESS]
07:35:12.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2167. org.apache.commons.math.random.Well512aTest#testNextLong2 started...]
07:35:12.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2167. SUCCESS]
07:35:12.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2168. org.apache.commons.math.random.Well512aTest#testNextIntIAE started...]
07:35:12.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2168. SUCCESS]
07:35:12.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2169. org.apache.commons.math.random.Well512aTest#testNextIntNeg started...]
07:35:12.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2169. SUCCESS]
07:35:12.361 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2170. org.apache.commons.math.random.Well512aTest#testNexBytes started...]
07:35:12.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2170. SUCCESS]
07:35:12.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2171. org.apache.commons.math.random.Well512aTest#testNextInt2 started...]
07:35:12.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2171. SUCCESS]
07:35:12.369 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2172. org.apache.commons.math.random.Well512aTest#testNextPascal started...]
07:35:12.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2172. SUCCESS]
07:35:12.402 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2173. org.apache.commons.math.random.Well512aTest#testNextSample started...]
07:35:12.404 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2173. SUCCESS]
07:35:12.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2174. org.apache.commons.math.random.Well512aTest#testNextIntExtremeValues started...]
07:35:12.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2174. SUCCESS]
07:35:12.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2175. org.apache.commons.math.random.Well512aTest#testNextUniformExclusiveEndpoints started...]
07:35:12.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2175. SUCCESS]
07:35:12.405 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2176. org.apache.commons.math.random.Well512aTest#testNextGaussian started...]
07:35:12.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2176. SUCCESS]
07:35:12.407 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2177. org.apache.commons.math.random.Well512aTest#testNextF started...]
07:35:12.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2177. SUCCESS]
07:35:12.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2178. org.apache.commons.math.random.Well512aTest#testNextT started...]
07:35:12.435 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2178. SUCCESS]
07:35:12.435 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2179. org.apache.commons.math.random.Well512aTest#testNextChiSquare started...]
07:35:12.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2179. SUCCESS]
07:35:12.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2180. org.apache.commons.math.random.Well512aTest#testNextSecureLong started...]
07:35:12.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2180. SUCCESS]
07:35:12.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2181. org.apache.commons.math.random.Well512aTest#testNextSecureHex started...]
07:35:12.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2181. SUCCESS]
07:35:12.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2182. org.apache.commons.math.random.Well512aTest#testNextSecureInt started...]
07:35:12.446 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2182. SUCCESS]
07:35:12.447 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2183. org.apache.commons.math.random.Well512aTest#testNextPoissonConsistency started...]
07:35:13.813 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2183. SUCCESS]
07:35:13.814 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2184. org.apache.commons.math.random.Well512aTest#testNextHypergeometric started...]
07:35:13.818 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2184. SUCCESS]
07:35:13.818 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2185. org.apache.commons.math.random.Well512aTest#testNextLongExtremeValues started...]
07:35:13.819 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2185. SUCCESS]
07:35:13.819 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2186. org.apache.commons.math.random.Well512aTest#testNextExponential started...]
07:35:13.820 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2186. SUCCESS]
07:35:13.820 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2187. org.apache.commons.math.random.Well512aTest#testNextPoisson started...]
07:35:13.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2187. SUCCESS]
07:35:13.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2188. org.apache.commons.math.random.Well512aTest#testNextUniform started...]
07:35:13.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2188. SUCCESS]
07:35:13.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2189. org.apache.commons.math.random.Well512aTest#testNextPermutation started...]
07:35:13.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2189. SUCCESS]
07:35:13.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2190. org.apache.commons.math.random.Well512aTest#testNextBinomial started...]
07:35:13.832 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2190. SUCCESS]
07:35:13.832 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2191. org.apache.commons.math.random.Well512aTest#testConfig started...]
07:35:13.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2191. SUCCESS]
07:35:13.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2192. org.apache.commons.math.random.Well512aTest#testNextInversionDeviate started...]
07:35:13.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2192. SUCCESS]
07:35:13.833 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2193. org.apache.commons.math.random.Well512aTest#testNextHex started...]
07:35:13.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2193. SUCCESS]
07:35:13.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2194. org.apache.commons.math.random.Well512aTest#testNextInt started...]
07:35:13.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2194. SUCCESS]
07:35:13.849 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2195. org.apache.commons.math.random.Well512aTest#testNextCauchy started...]
07:35:13.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2195. SUCCESS]
07:35:13.850 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2196. org.apache.commons.math.random.Well512aTest#testNextGamma started...]
07:35:13.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2196. SUCCESS]
07:35:13.851 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2197. org.apache.commons.math.random.Well512aTest#testNextWeibull started...]
07:35:13.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2197. SUCCESS]
07:35:13.852 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2198. org.apache.commons.math.random.Well512aTest#testNextBeta started...]
07:35:13.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2198. SUCCESS]
07:35:13.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2199. org.apache.commons.math.random.Well512aTest#testNextLong started...]
07:35:13.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2199. SUCCESS]
07:35:13.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2200. org.apache.commons.math.random.Well512aTest#testNextZipf started...]
07:35:13.876 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2200. SUCCESS]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2201. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive started...]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2201. SUCCESS]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2202. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive started...]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2202. SUCCESS]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2203. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative started...]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2203. SUCCESS]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2204. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive started...]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2204. SUCCESS]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2205. org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive started...]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2205. SUCCESS]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2206. org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative started...]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2206. SUCCESS]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2207. org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan started...]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2207. SUCCESS]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2208. org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive started...]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2208. SUCCESS]
07:35:13.877 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2209. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan started...]
07:35:13.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2209. SUCCESS]
07:35:13.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2210. org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive started...]
07:35:13.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2210. SUCCESS]
07:35:13.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2211. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero started...]
07:35:13.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2211. SUCCESS]
07:35:13.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2212. org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive started...]
07:35:13.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2212. SUCCESS]
07:35:13.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2213. org.apache.commons.math.special.BetaTest#testLogBetaNanPositive started...]
07:35:13.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2213. SUCCESS]
07:35:13.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2214. org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive started...]
07:35:13.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2214. SUCCESS]
07:35:13.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2215. org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero started...]
07:35:13.878 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2215. SUCCESS]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2216. org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive started...]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2216. SUCCESS]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2217. org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive started...]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2217. SUCCESS]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2218. org.apache.commons.math.special.ErfTest#testLargeValues started...]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2218. SUCCESS]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2219. org.apache.commons.math.special.ErfTest#testErf1960 started...]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2219. SUCCESS]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2220. org.apache.commons.math.special.ErfTest#testErf2576 started...]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2220. SUCCESS]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2221. org.apache.commons.math.special.ErfTest#testErf2807 started...]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2221. SUCCESS]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2222. org.apache.commons.math.special.ErfTest#testErf3291 started...]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2222. SUCCESS]
07:35:13.879 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2223. org.apache.commons.math.special.ErfTest#testErfcGnu started...]
07:35:13.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2223. SUCCESS]
07:35:13.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2224. org.apache.commons.math.special.ErfTest#testErfcMaple started...]
07:35:13.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2224. SUCCESS]
07:35:13.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2225. org.apache.commons.math.special.ErfTest#testErf0 started...]
07:35:13.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2225. SUCCESS]
07:35:13.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2226. org.apache.commons.math.special.ErfTest#testTwoArgumentErf started...]
07:35:13.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2226. SUCCESS]
07:35:13.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2227. org.apache.commons.math.special.ErfTest#testErfGnu started...]
07:35:13.880 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2227. SUCCESS]
07:35:13.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2228. org.apache.commons.math.special.GammaTest#testTrigamma started...]
07:35:13.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2228. SUCCESS]
07:35:13.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2229. org.apache.commons.math.special.GammaTest#testLogGammaPositive started...]
07:35:13.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2229. SUCCESS]
07:35:13.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2230. org.apache.commons.math.special.GammaTest#testLogGammaNegative started...]
07:35:13.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2230. SUCCESS]
07:35:13.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2231. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive started...]
07:35:13.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2231. SUCCESS]
07:35:13.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2232. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative started...]
07:35:13.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2232. SUCCESS]
07:35:13.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2233. org.apache.commons.math.special.GammaTest#testLogGammaNan started...]
07:35:13.881 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2233. SUCCESS]
07:35:13.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2234. org.apache.commons.math.special.GammaTest#testDigammaLargeArgs started...]
07:35:13.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2234. SUCCESS]
07:35:13.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2235. org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive started...]
07:35:13.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2235. SUCCESS]
07:35:13.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2236. org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive started...]
07:35:13.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2236. SUCCESS]
07:35:13.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2237. org.apache.commons.math.special.GammaTest#testLogGammaZero started...]
07:35:13.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2237. SUCCESS]
07:35:13.882 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2238. org.apache.commons.math.special.GammaTest#testDigammaSmallArgs started...]
07:35:13.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2238. SUCCESS]
07:35:13.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2239. org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive started...]
07:35:13.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2239. SUCCESS]
07:35:13.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2240. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan started...]
07:35:13.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2240. SUCCESS]
07:35:13.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2241. org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero started...]
07:35:13.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2241. SUCCESS]
07:35:13.883 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2242. org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics started...]
07:35:13.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2242. SUCCESS]
07:35:13.893 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2243. org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics started...]
07:35:13.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2243. SUCCESS]
07:35:13.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2244. org.apache.commons.math.stat.FrequencyTest#testEmptyTable started...]
07:35:13.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2244. SUCCESS]
07:35:13.898 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2245. org.apache.commons.math.stat.FrequencyTest#testAdd started...]
07:35:13.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2245. SUCCESS]
07:35:13.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2246. org.apache.commons.math.stat.FrequencyTest#testPcts started...]
07:35:13.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2246. SUCCESS]
07:35:13.899 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2247. org.apache.commons.math.stat.FrequencyTest#testToString started...]
07:35:13.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2247. SUCCESS]
07:35:13.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2248. org.apache.commons.math.stat.FrequencyTest#testGetUniqueCount started...]
07:35:13.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2248. SUCCESS]
07:35:13.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2249. org.apache.commons.math.stat.FrequencyTest#testIntegerValues started...]
07:35:13.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2249. SUCCESS]
07:35:13.900 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2250. org.apache.commons.math.stat.FrequencyTest#testCounts started...]
07:35:13.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2250. SUCCESS]
07:35:13.901 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2251. org.apache.commons.math.stat.FrequencyTest#testSerial started...]
07:35:13.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2251. SUCCESS]
07:35:13.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2252. org.apache.commons.math.stat.StatUtilsTest#testNormalize1 started...]
07:35:13.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2252. SUCCESS]
07:35:13.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2253. org.apache.commons.math.stat.StatUtilsTest#testNormalize2 started...]
07:35:13.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2253. SUCCESS]
07:35:13.903 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2254. org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats started...]
07:35:13.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2254. SUCCESS]
07:35:13.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2255. org.apache.commons.math.stat.StatUtilsTest#testPercentile started...]
07:35:13.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2255. SUCCESS]
07:35:13.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2256. org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions started...]
07:35:13.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2256. SUCCESS]
07:35:13.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2257. org.apache.commons.math.stat.StatUtilsTest#testMax started...]
07:35:13.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2257. SUCCESS]
07:35:13.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2258. org.apache.commons.math.stat.StatUtilsTest#testMin started...]
07:35:13.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2258. SUCCESS]
07:35:13.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2259. org.apache.commons.math.stat.StatUtilsTest#testStats started...]
07:35:13.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2259. SUCCESS]
07:35:13.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2260. org.apache.commons.math.stat.StatUtilsTest#testSumSq started...]
07:35:13.904 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2260. SUCCESS]
07:35:13.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2261. org.apache.commons.math.stat.StatUtilsTest#testMean started...]
07:35:13.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2261. SUCCESS]
07:35:13.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2262. org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions started...]
07:35:13.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2262. SUCCESS]
07:35:13.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2263. org.apache.commons.math.stat.StatUtilsTest#testProduct started...]
07:35:13.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2263. SUCCESS]
07:35:13.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2264. org.apache.commons.math.stat.StatUtilsTest#testGeometricMean started...]
07:35:13.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2264. SUCCESS]
07:35:13.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2265. org.apache.commons.math.stat.StatUtilsTest#testVariance started...]
07:35:13.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2265. SUCCESS]
07:35:13.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2266. org.apache.commons.math.stat.StatUtilsTest#testSumLog started...]
07:35:13.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2266. SUCCESS]
07:35:13.905 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2267. org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid started...]
07:35:13.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2267. SUCCESS]
07:35:13.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2268. org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance started...]
07:35:13.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2268. SUCCESS]
07:35:13.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2269. org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference started...]
07:35:13.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2269. SUCCESS]
07:35:13.906 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2270. org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial started...]
07:35:13.907 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2270. SUCCESS]
07:35:13.907 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2271. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisDegenerate started...]
07:35:13.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2271. SUCCESS]
07:35:13.909 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2272. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testCertainSpace started...]
07:35:14.000 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2272. SUCCESS]
07:35:14.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2273. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisToManyClusters started...]
07:35:14.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2273. SUCCESS]
07:35:14.001 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2274. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testSmallDistances started...]
07:35:14.031 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2274. SUCCESS]
07:35:14.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2275. org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2 started...]
07:35:14.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2275. SUCCESS]
07:35:14.032 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2276. org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData started...]
07:35:14.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2276. SUCCESS]
07:35:14.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2277. org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility started...]
07:35:14.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2277. SUCCESS]
07:35:14.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2278. org.apache.commons.math.stat.correlation.CovarianceTest#testConstant started...]
07:35:14.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2278. SUCCESS]
07:35:14.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2279. org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency started...]
07:35:14.033 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2279. SUCCESS]
07:35:14.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2280. org.apache.commons.math.stat.correlation.CovarianceTest#testLongly started...]
07:35:14.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2280. SUCCESS]
07:35:14.034 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2281. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData started...]
07:35:14.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2281. SUCCESS]
07:35:14.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2282. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency started...]
07:35:14.035 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2282. SUCCESS]
07:35:14.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2283. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility started...]
07:35:14.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2283. SUCCESS]
07:35:14.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2284. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testPValueNearZero started...]
07:35:14.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2284. SUCCESS]
07:35:14.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2285. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant started...]
07:35:14.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2285. SUCCESS]
07:35:14.036 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2286. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency started...]
07:35:14.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2286. SUCCESS]
07:35:14.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2287. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency started...]
07:35:14.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2287. SUCCESS]
07:35:14.037 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2288. org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly started...]
07:35:14.038 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2288. SUCCESS]
07:35:14.038 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2289. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData started...]
07:35:14.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2289. SUCCESS]
07:35:14.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2290. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency started...]
07:35:14.040 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2290. SUCCESS]
07:35:14.041 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2291. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss started...]
07:35:14.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2291. SUCCESS]
07:35:14.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2292. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant started...]
07:35:14.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2292. SUCCESS]
07:35:14.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2293. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency started...]
07:35:14.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2293. SUCCESS]
07:35:14.042 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2294. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency started...]
07:35:14.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2294. SUCCESS]
07:35:14.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2295. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly started...]
07:35:14.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2295. SUCCESS]
07:35:14.043 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2296. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility started...]
07:35:14.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2296. SUCCESS]
07:35:14.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2297. org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testPValueNearZero started...]
07:35:14.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2297. SUCCESS]
07:35:14.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2298. org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleCov started...]
07:35:14.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2298. SUCCESS]
07:35:14.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2299. org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleVar started...]
07:35:14.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2299. SUCCESS]
07:35:14.044 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2300. org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByEntry started...]
07:35:14.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2300. SUCCESS]
07:35:14.045 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2301. org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByEntry started...]
07:35:14.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2301. SUCCESS]
07:35:14.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2302. org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByRow started...]
07:35:14.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2302. SUCCESS]
07:35:14.046 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2303. org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByRow started...]
07:35:14.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2303. SUCCESS]
07:35:14.047 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2304. org.apache.commons.math.stat.data.LewTest#testCertifiedValues started...]
07:35:14.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2304. SUCCESS]
07:35:14.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2305. org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues started...]
07:35:14.048 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2305. SUCCESS]
07:35:14.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2306. org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive started...]
07:35:14.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2306. SUCCESS]
07:35:14.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2307. org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative started...]
07:35:14.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2307. SUCCESS]
07:35:14.049 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2308. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation started...]
07:35:14.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2308. SUCCESS]
07:35:14.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2309. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues started...]
07:35:14.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2309. SUCCESS]
07:35:14.050 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2310. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency started...]
07:35:14.051 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2310. SUCCESS]
07:35:14.051 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2311. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate started...]
07:35:14.051 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2311. SUCCESS]
07:35:14.051 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2312. org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate started...]
07:35:14.051 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2312. SUCCESS]
07:35:14.051 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2313. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter started...]
07:35:14.052 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2313. SUCCESS]
07:35:14.052 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2314. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720 started...]
07:35:14.052 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2314. SUCCESS]
07:35:14.052 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2315. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy started...]
07:35:14.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2315. SUCCESS]
07:35:14.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2316. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString started...]
07:35:14.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2316. SUCCESS]
07:35:14.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2317. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics started...]
07:35:14.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2317. SUCCESS]
07:35:14.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2318. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection started...]
07:35:14.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2318. SUCCESS]
07:35:14.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2319. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval started...]
07:35:14.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2319. SUCCESS]
07:35:14.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2320. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize started...]
07:35:14.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2320. SUCCESS]
07:35:14.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2321. org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues started...]
07:35:14.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2321. SUCCESS]
07:35:14.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2322. org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction started...]
07:35:14.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2322. SUCCESS]
07:35:14.054 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2323. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean started...]
07:35:14.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2323. SUCCESS]
07:35:14.055 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2324. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization started...]
07:35:14.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2324. SUCCESS]
07:35:14.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2325. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats started...]
07:35:14.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2325. SUCCESS]
07:35:14.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2326. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions started...]
07:35:14.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2326. SUCCESS]
07:35:14.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2327. org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis started...]
07:35:14.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2327. SUCCESS]
07:35:14.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2328. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean started...]
07:35:14.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2328. SUCCESS]
07:35:14.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2329. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats started...]
07:35:14.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2329. SUCCESS]
07:35:14.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2330. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions started...]
07:35:14.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2330. SUCCESS]
07:35:14.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2331. org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis started...]
07:35:14.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2331. SUCCESS]
07:35:14.063 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2332. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization started...]
07:35:14.068 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2332. SUCCESS]
07:35:14.068 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2333. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats started...]
07:35:14.068 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2333. SUCCESS]
07:35:14.068 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2334. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString started...]
07:35:14.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2334. SUCCESS]
07:35:14.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2335. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts started...]
07:35:14.069 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2335. SUCCESS]
07:35:14.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2336. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions started...]
07:35:14.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2336. SUCCESS]
07:35:14.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2337. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics started...]
07:35:14.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2337. SUCCESS]
07:35:14.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2338. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension started...]
07:35:14.070 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2338. SUCCESS]
07:35:14.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2339. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection started...]
07:35:14.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2339. SUCCESS]
07:35:14.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2340. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState started...]
07:35:14.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2340. SUCCESS]
07:35:14.071 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2341. org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode started...]
07:35:14.072 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2341. SUCCESS]
07:35:14.072 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2342. org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization started...]
07:35:14.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2342. SUCCESS]
07:35:14.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2343. org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testToString started...]
07:35:14.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2343. SUCCESS]
07:35:14.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2344. org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode started...]
07:35:14.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2344. SUCCESS]
07:35:14.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2345. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean started...]
07:35:14.073 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2345. SUCCESS]
07:35:14.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2346. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary started...]
07:35:14.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2346. SUCCESS]
07:35:14.074 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2347. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization started...]
07:35:14.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2347. SUCCESS]
07:35:14.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2348. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats started...]
07:35:14.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2348. SUCCESS]
07:35:14.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2349. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy started...]
07:35:14.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2349. SUCCESS]
07:35:14.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2350. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts started...]
07:35:14.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2350. SUCCESS]
07:35:14.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2351. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions started...]
07:35:14.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2351. SUCCESS]
07:35:14.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2352. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection started...]
07:35:14.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2352. SUCCESS]
07:35:14.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2353. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState started...]
07:35:14.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2353. SUCCESS]
07:35:14.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2354. org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode started...]
07:35:14.079 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2354. SUCCESS]
07:35:14.079 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2355. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter started...]
07:35:14.079 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2355. SUCCESS]
07:35:14.079 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2356. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720 started...]
07:35:14.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2356. SUCCESS]
07:35:14.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2357. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy started...]
07:35:14.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2357. SUCCESS]
07:35:14.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2358. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString started...]
07:35:14.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2358. SUCCESS]
07:35:14.080 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2359. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics started...]
07:35:14.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2359. SUCCESS]
07:35:14.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2360. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection started...]
07:35:14.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2360. SUCCESS]
07:35:14.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2361. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval started...]
07:35:14.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2361. SUCCESS]
07:35:14.081 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2362. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize started...]
07:35:14.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2362. SUCCESS]
07:35:14.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2363. org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues started...]
07:35:14.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2363. SUCCESS]
07:35:14.082 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2364. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization started...]
07:35:14.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2364. SUCCESS]
07:35:14.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2365. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats started...]
07:35:14.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2365. SUCCESS]
07:35:14.086 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2366. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString started...]
07:35:14.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2366. SUCCESS]
07:35:14.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2367. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts started...]
07:35:14.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2367. SUCCESS]
07:35:14.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2368. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions started...]
07:35:14.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2368. SUCCESS]
07:35:14.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2369. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics started...]
07:35:14.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2369. SUCCESS]
07:35:14.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2370. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension started...]
07:35:14.087 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2370. SUCCESS]
07:35:14.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2371. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection started...]
07:35:14.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2371. SUCCESS]
07:35:14.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2372. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState started...]
07:35:14.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2372. SUCCESS]
07:35:14.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2373. org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode started...]
07:35:14.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2373. SUCCESS]
07:35:14.088 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2374. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean started...]
07:35:14.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2374. SUCCESS]
07:35:14.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2375. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary started...]
07:35:14.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2375. SUCCESS]
07:35:14.089 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2376. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization started...]
07:35:14.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2376. SUCCESS]
07:35:14.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2377. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats started...]
07:35:14.092 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2377. SUCCESS]
07:35:14.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2378. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy started...]
07:35:14.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2378. SUCCESS]
07:35:14.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2379. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts started...]
07:35:14.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2379. SUCCESS]
07:35:14.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2380. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions started...]
07:35:14.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2380. SUCCESS]
07:35:14.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2381. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection started...]
07:35:14.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2381. SUCCESS]
07:35:14.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2382. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState started...]
07:35:14.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2382. SUCCESS]
07:35:14.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2383. org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode started...]
07:35:14.093 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2383. SUCCESS]
07:35:14.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2384. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples started...]
07:35:14.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2384. SUCCESS]
07:35:14.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2385. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization started...]
07:35:14.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2385. SUCCESS]
07:35:14.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2386. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation started...]
07:35:14.094 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2386. SUCCESS]
07:35:14.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2387. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency started...]
07:35:14.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2387. SUCCESS]
07:35:14.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2388. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode started...]
07:35:14.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2388. SUCCESS]
07:35:14.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2389. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency started...]
07:35:14.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2389. SUCCESS]
07:35:14.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2390. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial started...]
07:35:14.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2390. SUCCESS]
07:35:14.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2391. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy started...]
07:35:14.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2391. SUCCESS]
07:35:14.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2392. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation started...]
07:35:14.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2392. SUCCESS]
07:35:14.095 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2393. org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testWeightedConsistency started...]
07:35:14.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2393. SUCCESS]
07:35:14.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2394. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples started...]
07:35:14.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2394. SUCCESS]
07:35:14.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2395. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization started...]
07:35:14.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2395. SUCCESS]
07:35:14.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2396. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation started...]
07:35:14.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2396. SUCCESS]
07:35:14.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2397. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency started...]
07:35:14.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2397. SUCCESS]
07:35:14.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2398. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode started...]
07:35:14.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2398. SUCCESS]
07:35:14.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2399. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency started...]
07:35:14.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2399. SUCCESS]
07:35:14.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2400. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial started...]
07:35:14.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2400. SUCCESS]
07:35:14.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2401. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy started...]
07:35:14.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2401. SUCCESS]
07:35:14.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2402. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation started...]
07:35:14.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2402. SUCCESS]
07:35:14.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2403. org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testWeightedConsistency started...]
07:35:14.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2403. SUCCESS]
07:35:14.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2404. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues started...]
07:35:14.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2404. SUCCESS]
07:35:14.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2405. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples started...]
07:35:14.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2405. SUCCESS]
07:35:14.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2406. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization started...]
07:35:14.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2406. SUCCESS]
07:35:14.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2407. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation started...]
07:35:14.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2407. SUCCESS]
07:35:14.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2408. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency started...]
07:35:14.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2408. SUCCESS]
07:35:14.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2409. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode started...]
07:35:14.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2409. SUCCESS]
07:35:14.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2410. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency started...]
07:35:14.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2410. SUCCESS]
07:35:14.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2411. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial started...]
07:35:14.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2411. SUCCESS]
07:35:14.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2412. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy started...]
07:35:14.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2412. SUCCESS]
07:35:14.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2413. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation started...]
07:35:14.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2413. SUCCESS]
07:35:14.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2414. org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testWeightedConsistency started...]
07:35:14.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2414. SUCCESS]
07:35:14.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2415. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN started...]
07:35:14.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2415. SUCCESS]
07:35:14.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2416. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples started...]
07:35:14.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2416. SUCCESS]
07:35:14.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2417. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization started...]
07:35:14.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2417. SUCCESS]
07:35:14.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2418. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation started...]
07:35:14.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2418. SUCCESS]
07:35:14.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2419. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency started...]
07:35:14.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2419. SUCCESS]
07:35:14.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2420. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode started...]
07:35:14.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2420. SUCCESS]
07:35:14.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2421. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency started...]
07:35:14.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2421. SUCCESS]
07:35:14.103 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2422. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial started...]
07:35:14.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2422. SUCCESS]
07:35:14.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2423. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy started...]
07:35:14.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2423. SUCCESS]
07:35:14.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2424. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation started...]
07:35:14.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2424. SUCCESS]
07:35:14.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2425. org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testWeightedConsistency started...]
07:35:14.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2425. SUCCESS]
07:35:14.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2426. org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples started...]
07:35:14.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2426. SUCCESS]
07:35:14.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2427. org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedMean started...]
07:35:14.104 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2427. SUCCESS]
07:35:14.105 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2428. org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples started...]
07:35:14.105 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2428. SUCCESS]
07:35:14.105 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2429. org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization started...]
07:35:14.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2429. SUCCESS]
07:35:14.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2430. org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation started...]
07:35:14.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2430. SUCCESS]
07:35:14.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2431. org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency started...]
07:35:14.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2431. SUCCESS]
07:35:14.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2432. org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode started...]
07:35:14.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2432. SUCCESS]
07:35:14.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2433. org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency started...]
07:35:14.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2433. SUCCESS]
07:35:14.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2434. org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial started...]
07:35:14.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2434. SUCCESS]
07:35:14.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2435. org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy started...]
07:35:14.106 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2435. SUCCESS]
07:35:14.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2436. org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation started...]
07:35:14.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2436. SUCCESS]
07:35:14.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2437. org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedConsistency started...]
07:35:14.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2437. SUCCESS]
07:35:14.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2438. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples started...]
07:35:14.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2438. SUCCESS]
07:35:14.107 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2439. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization started...]
07:35:14.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2439. SUCCESS]
07:35:14.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2440. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation started...]
07:35:14.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2440. SUCCESS]
07:35:14.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2441. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency started...]
07:35:14.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2441. SUCCESS]
07:35:14.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2442. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode started...]
07:35:14.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2442. SUCCESS]
07:35:14.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2443. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency started...]
07:35:14.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2443. SUCCESS]
07:35:14.108 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2444. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial started...]
07:35:14.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2444. SUCCESS]
07:35:14.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2445. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy started...]
07:35:14.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2445. SUCCESS]
07:35:14.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2446. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation started...]
07:35:14.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2446. SUCCESS]
07:35:14.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2447. org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testWeightedConsistency started...]
07:35:14.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2447. SUCCESS]
07:35:14.109 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2448. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testInsufficientData started...]
07:35:14.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2448. SUCCESS]
07:35:14.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2449. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompNonMeanCutoff started...]
07:35:14.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2449. SUCCESS]
07:35:14.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2450. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNoVariance started...]
07:35:14.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2450. SUCCESS]
07:35:14.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2451. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleDown started...]
07:35:14.110 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2451. SUCCESS]
07:35:14.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2452. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNonMeanCutoffs started...]
07:35:14.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2452. SUCCESS]
07:35:14.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2453. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleUp started...]
07:35:14.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2453. SUCCESS]
07:35:14.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2454. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testPopulation started...]
07:35:14.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2454. SUCCESS]
07:35:14.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2455. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompMeanCutoff started...]
07:35:14.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2455. SUCCESS]
07:35:14.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2456. org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSample started...]
07:35:14.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2456. SUCCESS]
07:35:14.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2457. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN started...]
07:35:14.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2457. SUCCESS]
07:35:14.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2458. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples started...]
07:35:14.111 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2458. SUCCESS]
07:35:14.112 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2459. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization started...]
07:35:14.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2459. SUCCESS]
07:35:14.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2460. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation started...]
07:35:14.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2460. SUCCESS]
07:35:14.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2461. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency started...]
07:35:14.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2461. SUCCESS]
07:35:14.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2462. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode started...]
07:35:14.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2462. SUCCESS]
07:35:14.113 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2463. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency started...]
07:35:14.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2463. SUCCESS]
07:35:14.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2464. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial started...]
07:35:14.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2464. SUCCESS]
07:35:14.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2465. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy started...]
07:35:14.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2465. SUCCESS]
07:35:14.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2466. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation started...]
07:35:14.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2466. SUCCESS]
07:35:14.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2467. org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testWeightedConsistency started...]
07:35:14.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2467. SUCCESS]
07:35:14.114 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2468. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN started...]
07:35:14.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2468. SUCCESS]
07:35:14.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2469. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation started...]
07:35:14.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2469. SUCCESS]
07:35:14.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2470. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples started...]
07:35:14.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2470. SUCCESS]
07:35:14.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2471. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization started...]
07:35:14.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2471. SUCCESS]
07:35:14.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2472. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation started...]
07:35:14.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2472. SUCCESS]
07:35:14.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2473. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency started...]
07:35:14.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2473. SUCCESS]
07:35:14.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2474. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode started...]
07:35:14.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2474. SUCCESS]
07:35:14.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2475. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency started...]
07:35:14.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2475. SUCCESS]
07:35:14.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2476. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial started...]
07:35:14.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2476. SUCCESS]
07:35:14.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2477. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy started...]
07:35:14.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2477. SUCCESS]
07:35:14.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2478. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation started...]
07:35:14.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2478. SUCCESS]
07:35:14.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2479. org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testWeightedConsistency started...]
07:35:14.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2479. SUCCESS]
07:35:14.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2480. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples started...]
07:35:14.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2480. SUCCESS]
07:35:14.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2481. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization started...]
07:35:14.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2481. SUCCESS]
07:35:14.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2482. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation started...]
07:35:14.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2482. SUCCESS]
07:35:14.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2483. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency started...]
07:35:14.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2483. SUCCESS]
07:35:14.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2484. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode started...]
07:35:14.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2484. SUCCESS]
07:35:14.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2485. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency started...]
07:35:14.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2485. SUCCESS]
07:35:14.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2486. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial started...]
07:35:14.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2486. SUCCESS]
07:35:14.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2487. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy started...]
07:35:14.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2487. SUCCESS]
07:35:14.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2488. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation started...]
07:35:14.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2488. SUCCESS]
07:35:14.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2489. org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testWeightedConsistency started...]
07:35:14.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2489. SUCCESS]
07:35:14.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2490. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN started...]
07:35:14.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2490. SUCCESS]
07:35:14.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2491. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedVariance started...]
07:35:14.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2491. SUCCESS]
07:35:14.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2492. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation started...]
07:35:14.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2492. SUCCESS]
07:35:14.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2493. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples started...]
07:35:14.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2493. SUCCESS]
07:35:14.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2494. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization started...]
07:35:14.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2494. SUCCESS]
07:35:14.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2495. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation started...]
07:35:14.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2495. SUCCESS]
07:35:14.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2496. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency started...]
07:35:14.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2496. SUCCESS]
07:35:14.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2497. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode started...]
07:35:14.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2497. SUCCESS]
07:35:14.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2498. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency started...]
07:35:14.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2498. SUCCESS]
07:35:14.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2499. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial started...]
07:35:14.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2499. SUCCESS]
07:35:14.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2500. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy started...]
07:35:14.123 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2500. SUCCESS]
07:35:14.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2501. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation started...]
07:35:14.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2501. SUCCESS]
07:35:14.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2502. org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedConsistency started...]
07:35:14.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2502. SUCCESS]
07:35:14.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2503. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic started...]
07:35:14.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2503. SUCCESS]
07:35:14.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2504. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats started...]
07:35:14.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2504. SUCCESS]
07:35:14.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2505. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch started...]
07:35:14.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2505. SUCCESS]
07:35:14.124 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2506. org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial started...]
07:35:14.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2506. SUCCESS]
07:35:14.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2507. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic started...]
07:35:14.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2507. SUCCESS]
07:35:14.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2508. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats started...]
07:35:14.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2508. SUCCESS]
07:35:14.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2509. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch started...]
07:35:14.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2509. SUCCESS]
07:35:14.125 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2510. org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial started...]
07:35:14.126 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2510. SUCCESS]
07:35:14.126 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2511. org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs started...]
07:35:14.126 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2511. SUCCESS]
07:35:14.126 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2512. org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues started...]
07:35:14.126 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2512. SUCCESS]
07:35:14.126 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2513. org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples started...]
07:35:14.126 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2513. SUCCESS]
07:35:14.126 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2514. org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization started...]
07:35:14.127 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2514. SUCCESS]
07:35:14.127 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2515. org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation started...]
07:35:14.127 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2515. SUCCESS]
07:35:14.127 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2516. org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency started...]
07:35:14.127 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2516. SUCCESS]
07:35:14.127 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2517. org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode started...]
07:35:14.127 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2517. SUCCESS]
07:35:14.127 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2518. org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency started...]
07:35:14.127 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2518. SUCCESS]
07:35:14.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2519. org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial started...]
07:35:14.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2519. SUCCESS]
07:35:14.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2520. org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy started...]
07:35:14.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2520. SUCCESS]
07:35:14.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2521. org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation started...]
07:35:14.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2521. SUCCESS]
07:35:14.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2522. org.apache.commons.math.stat.descriptive.rank.MaxTest#testWeightedConsistency started...]
07:35:14.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2522. SUCCESS]
07:35:14.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2523. org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy started...]
07:35:14.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2523. SUCCESS]
07:35:14.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2524. org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation started...]
07:35:14.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2524. SUCCESS]
07:35:14.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2525. org.apache.commons.math.stat.descriptive.rank.MedianTest#testWeightedConsistency started...]
07:35:14.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2525. SUCCESS]
07:35:14.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2526. org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs started...]
07:35:14.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2526. SUCCESS]
07:35:14.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2527. org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues started...]
07:35:14.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2527. SUCCESS]
07:35:14.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2528. org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples started...]
07:35:14.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2528. SUCCESS]
07:35:14.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2529. org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization started...]
07:35:14.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2529. SUCCESS]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2530. org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation started...]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2530. SUCCESS]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2531. org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency started...]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2531. SUCCESS]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2532. org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode started...]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2532. SUCCESS]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2533. org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency started...]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2533. SUCCESS]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2534. org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial started...]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2534. SUCCESS]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2535. org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy started...]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2535. SUCCESS]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2536. org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation started...]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2536. SUCCESS]
07:35:14.130 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2537. org.apache.commons.math.stat.descriptive.rank.MinTest#testWeightedConsistency started...]
07:35:14.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2537. SUCCESS]
07:35:14.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2538. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile started...]
07:35:14.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2538. SUCCESS]
07:35:14.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2539. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample started...]
07:35:14.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2539. SUCCESS]
07:35:14.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2540. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton started...]
07:35:14.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2540. SUCCESS]
07:35:14.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2541. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testLowPercentile started...]
07:35:14.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2541. SUCCESS]
07:35:14.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2542. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile started...]
07:35:14.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2542. SUCCESS]
07:35:14.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2543. org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5 started...]
07:35:14.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2543. SUCCESS]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2544. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile started...]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2544. SUCCESS]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2545. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues started...]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2545. SUCCESS]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2546. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty started...]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2546. SUCCESS]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2547. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy started...]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2547. SUCCESS]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2548. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation started...]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2548. SUCCESS]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2549. org.apache.commons.math.stat.descriptive.rank.PercentileTest#testWeightedConsistency started...]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2549. SUCCESS]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2550. org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues started...]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2550. SUCCESS]
07:35:14.132 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2551. org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedProduct started...]
07:35:14.133 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2551. SUCCESS]
07:35:14.133 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2552. org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples started...]
07:35:14.133 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2552. SUCCESS]
07:35:14.133 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2553. org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization started...]
07:35:14.134 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2553. SUCCESS]
07:35:14.134 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2554. org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation started...]
07:35:14.134 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2554. SUCCESS]
07:35:14.134 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2555. org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency started...]
07:35:14.134 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2555. SUCCESS]
07:35:14.134 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2556. org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode started...]
07:35:14.134 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2556. SUCCESS]
07:35:14.134 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2557. org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency started...]
07:35:14.134 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2557. SUCCESS]
07:35:14.134 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2558. org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial started...]
07:35:14.134 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2558. SUCCESS]
07:35:14.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2559. org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy started...]
07:35:14.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2559. SUCCESS]
07:35:14.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2560. org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation started...]
07:35:14.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2560. SUCCESS]
07:35:14.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2561. org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedConsistency started...]
07:35:14.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2561. SUCCESS]
07:35:14.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2562. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues started...]
07:35:14.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2562. SUCCESS]
07:35:14.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2563. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples started...]
07:35:14.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2563. SUCCESS]
07:35:14.135 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2564. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization started...]
07:35:14.136 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2564. SUCCESS]
07:35:14.136 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2565. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation started...]
07:35:14.136 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2565. SUCCESS]
07:35:14.136 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2566. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency started...]
07:35:14.136 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2566. SUCCESS]
07:35:14.136 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2567. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode started...]
07:35:14.136 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2567. SUCCESS]
07:35:14.136 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2568. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency started...]
07:35:14.136 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2568. SUCCESS]
07:35:14.136 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2569. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial started...]
07:35:14.136 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2569. SUCCESS]
07:35:14.137 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2570. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy started...]
07:35:14.137 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2570. SUCCESS]
07:35:14.137 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2571. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation started...]
07:35:14.137 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2571. SUCCESS]
07:35:14.137 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2572. org.apache.commons.math.stat.descriptive.summary.SumLogTest#testWeightedConsistency started...]
07:35:14.137 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2572. SUCCESS]
07:35:14.137 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2573. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues started...]
07:35:14.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2573. SUCCESS]
07:35:14.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2574. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples started...]
07:35:14.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2574. SUCCESS]
07:35:14.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2575. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization started...]
07:35:14.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2575. SUCCESS]
07:35:14.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2576. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation started...]
07:35:14.138 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2576. SUCCESS]
07:35:14.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2577. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency started...]
07:35:14.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2577. SUCCESS]
07:35:14.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2578. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode started...]
07:35:14.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2578. SUCCESS]
07:35:14.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2579. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency started...]
07:35:14.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2579. SUCCESS]
07:35:14.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2580. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial started...]
07:35:14.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2580. SUCCESS]
07:35:14.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2581. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy started...]
07:35:14.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2581. SUCCESS]
07:35:14.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2582. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation started...]
07:35:14.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2582. SUCCESS]
07:35:14.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2583. org.apache.commons.math.stat.descriptive.summary.SumSqTest#testWeightedConsistency started...]
07:35:14.139 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2583. SUCCESS]
07:35:14.140 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2584. org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues started...]
07:35:14.140 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2584. SUCCESS]
07:35:14.140 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2585. org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedSum started...]
07:35:14.140 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2585. SUCCESS]
07:35:14.140 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2586. org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples started...]
07:35:14.140 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2586. SUCCESS]
07:35:14.140 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2587. org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization started...]
07:35:14.141 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2587. SUCCESS]
07:35:14.141 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2588. org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation started...]
07:35:14.141 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2588. SUCCESS]
07:35:14.141 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2589. org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency started...]
07:35:14.141 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2589. SUCCESS]
07:35:14.141 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2590. org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode started...]
07:35:14.142 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2590. SUCCESS]
07:35:14.142 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2591. org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency started...]
07:35:14.142 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2591. SUCCESS]
07:35:14.142 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2592. org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial started...]
07:35:14.142 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2592. SUCCESS]
07:35:14.142 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2593. org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy started...]
07:35:14.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2593. SUCCESS]
07:35:14.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2594. org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation started...]
07:35:14.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2594. SUCCESS]
07:35:14.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2595. org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency started...]
07:35:14.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2595. SUCCESS]
07:35:14.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2596. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts started...]
07:35:14.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2596. SUCCESS]
07:35:14.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2597. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence started...]
07:35:14.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2597. SUCCESS]
07:35:14.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2598. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts started...]
07:35:14.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2598. SUCCESS]
07:35:14.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2599. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount started...]
07:35:14.143 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2599. SUCCESS]
07:35:14.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2600. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic started...]
07:35:14.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2600. SUCCESS]
07:35:14.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2601. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare started...]
07:35:14.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2601. SUCCESS]
07:35:14.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2602. org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts started...]
07:35:14.144 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2602. SUCCESS]
07:35:14.145 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2603. org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUInputValidation started...]
07:35:14.145 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2603. SUCCESS]
07:35:14.145 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2604. org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUSimple started...]
07:35:14.145 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2604. SUCCESS]
07:35:14.145 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2605. org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest started...]
07:35:14.146 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2605. SUCCESS]
07:35:14.146 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2606. org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue started...]
07:35:14.146 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2606. SUCCESS]
07:35:14.146 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2607. org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue started...]
07:35:14.146 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2607. SUCCESS]
07:35:14.147 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2608. org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest started...]
07:35:14.147 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2608. SUCCESS]
07:35:14.147 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2609. org.apache.commons.math.stat.inference.TTestTest#testSmallSamples started...]
07:35:14.147 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2609. SUCCESS]
07:35:14.148 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2610. org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic started...]
07:35:14.148 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2610. SUCCESS]
07:35:14.148 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2611. org.apache.commons.math.stat.inference.TTestTest#testOneSampleT started...]
07:35:14.148 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2611. SUCCESS]
07:35:14.148 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2612. org.apache.commons.math.stat.inference.TTestTest#testPaired started...]
07:35:14.148 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2612. SUCCESS]
07:35:14.148 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2613. org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic started...]
07:35:14.148 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2613. SUCCESS]
07:35:14.149 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2614. org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest started...]
07:35:14.149 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2614. SUCCESS]
07:35:14.149 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2615. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence started...]
07:35:14.149 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2615. SUCCESS]
07:35:14.149 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2616. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount started...]
07:35:14.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2616. SUCCESS]
07:35:14.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2617. org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples started...]
07:35:14.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2617. SUCCESS]
07:35:14.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2618. org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic started...]
07:35:14.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2618. SUCCESS]
07:35:14.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2619. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic started...]
07:35:14.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2619. SUCCESS]
07:35:14.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2620. org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare started...]
07:35:14.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2620. SUCCESS]
07:35:14.150 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2621. org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT started...]
07:35:14.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2621. SUCCESS]
07:35:14.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2622. org.apache.commons.math.stat.inference.TestUtilsTest#testPaired started...]
07:35:14.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2622. SUCCESS]
07:35:14.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2623. org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic started...]
07:35:14.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2623. SUCCESS]
07:35:14.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2624. org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils started...]
07:35:14.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2624. SUCCESS]
07:35:14.152 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2625. org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankInputValidation started...]
07:35:14.152 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2625. SUCCESS]
07:35:14.152 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2626. org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankSimple started...]
07:35:14.152 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2626. SUCCESS]
07:35:14.152 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2627. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage started...]
07:35:14.152 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2627. SUCCESS]
07:35:14.152 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2628. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom started...]
07:35:14.153 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2628. SUCCESS]
07:35:14.153 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2629. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential started...]
07:35:14.153 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2629. SUCCESS]
07:35:14.153 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2630. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum started...]
07:35:14.153 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2630. SUCCESS]
07:35:14.153 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2631. org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault started...]
07:35:14.153 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2631. SUCCESS]
07:35:14.153 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2632. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs started...]
07:35:14.153 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2632. SUCCESS]
07:35:14.153 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2633. org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum started...]
07:35:14.154 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2633. SUCCESS]
07:35:14.154 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2634. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSEfficiency started...]
07:35:14.568 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2634. SUCCESS]
07:35:14.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2635. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData started...]
07:35:14.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2635. SUCCESS]
07:35:14.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2636. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare started...]
07:35:14.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2636. SUCCESS]
07:35:14.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2637. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData started...]
07:35:14.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2637. SUCCESS]
07:35:14.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2638. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSOLSConsistency started...]
07:35:14.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2638. SUCCESS]
07:35:14.569 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2639. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData started...]
07:35:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2639. SUCCESS]
07:35:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2640. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch started...]
07:35:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2640. SUCCESS]
07:35:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2641. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYVariance started...]
07:35:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2641. SUCCESS]
07:35:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2642. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch started...]
07:35:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2642. SUCCESS]
07:35:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2643. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData started...]
07:35:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2643. SUCCESS]
07:35:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2644. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample2 started...]
07:35:14.570 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2644. SUCCESS]
07:35:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2645. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals started...]
07:35:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2645. SUCCESS]
07:35:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2646. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance started...]
07:35:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2646. SUCCESS]
07:35:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2647. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInsufficientData started...]
07:35:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2647. SUCCESS]
07:35:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2648. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample started...]
07:35:14.571 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2648. SUCCESS]
07:35:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2649. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters started...]
07:35:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2649. SUCCESS]
07:35:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2650. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance started...]
07:35:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2650. SUCCESS]
07:35:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2651. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleNullData started...]
07:35:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2651. SUCCESS]
07:35:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2652. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testXSampleDataNull started...]
07:35:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2652. SUCCESS]
07:35:14.572 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2653. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInvalidData started...]
07:35:14.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2653. SUCCESS]
07:35:14.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2654. org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYSampleDataNull started...]
07:35:14.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2654. SUCCESS]
07:35:14.573 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2655. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiagConstant started...]
07:35:14.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2655. SUCCESS]
07:35:14.587 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2656. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantInternal started...]
07:35:14.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2656. SUCCESS]
07:35:14.588 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2657. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiag started...]
07:35:14.600 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2657. SUCCESS]
07:35:14.600 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2658. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testPCorr started...]
07:35:14.601 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2658. SUCCESS]
07:35:14.601 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2659. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testOneRedundantColumn started...]
07:35:14.602 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2659. SUCCESS]
07:35:14.602 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2660. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testThreeRedundantColumn started...]
07:35:14.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2660. SUCCESS]
07:35:14.603 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2661. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddObs started...]
07:35:14.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2661. SUCCESS]
07:35:14.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2662. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testSubsetRegression started...]
07:35:14.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2662. SUCCESS]
07:35:14.604 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2663. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantExternal started...]
07:35:14.605 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2663. SUCCESS]
07:35:14.605 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2664. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHasIntercept started...]
07:35:14.605 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2664. SUCCESS]
07:35:14.605 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2665. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testAddObsGetNClear started...]
07:35:14.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2665. SUCCESS]
07:35:14.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2666. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler1 started...]
07:35:14.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2666. SUCCESS]
07:35:14.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2667. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler2 started...]
07:35:14.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2667. SUCCESS]
07:35:14.606 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2668. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler3 started...]
07:35:14.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2668. SUCCESS]
07:35:14.607 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2669. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testFilippelli started...]
07:35:14.608 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2669. SUCCESS]
07:35:14.608 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2670. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testLongly started...]
07:35:14.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2670. SUCCESS]
07:35:14.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2671. org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddMultipleObs started...]
07:35:14.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2671. SUCCESS]
07:35:14.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2672. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat started...]
07:35:14.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2672. SUCCESS]
07:35:14.609 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2673. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility started...]
07:35:14.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2673. SUCCESS]
07:35:14.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2674. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataXNull started...]
07:35:14.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2674. SUCCESS]
07:35:14.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2675. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataYNull started...]
07:35:14.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2675. SUCCESS]
07:35:14.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2676. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYVariance started...]
07:35:14.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2676. SUCCESS]
07:35:14.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2677. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch started...]
07:35:14.610 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2677. SUCCESS]
07:35:14.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2678. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit started...]
07:35:14.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2678. SUCCESS]
07:35:14.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2679. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler1 started...]
07:35:14.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2679. SUCCESS]
07:35:14.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2680. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler2 started...]
07:35:14.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2680. SUCCESS]
07:35:14.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2681. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler3 started...]
07:35:14.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2681. SUCCESS]
07:35:14.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2682. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler4 started...]
07:35:14.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2682. SUCCESS]
07:35:14.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2683. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly started...]
07:35:14.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2683. SUCCESS]
07:35:14.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2684. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample2 started...]
07:35:14.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2684. SUCCESS]
07:35:14.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2685. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals started...]
07:35:14.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2685. SUCCESS]
07:35:14.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2686. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance started...]
07:35:14.612 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2686. SUCCESS]
07:35:14.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2687. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInsufficientData started...]
07:35:14.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2687. SUCCESS]
07:35:14.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2688. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample started...]
07:35:14.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2688. SUCCESS]
07:35:14.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2689. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters started...]
07:35:14.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2689. SUCCESS]
07:35:14.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2690. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance started...]
07:35:14.613 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2690. SUCCESS]
07:35:14.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2691. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleNullData started...]
07:35:14.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2691. SUCCESS]
07:35:14.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2692. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testXSampleDataNull started...]
07:35:14.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2692. SUCCESS]
07:35:14.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2693. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInvalidData started...]
07:35:14.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2693. SUCCESS]
07:35:14.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2694. org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYSampleDataNull started...]
07:35:14.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2694. SUCCESS]
07:35:14.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2695. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty started...]
07:35:14.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2695. SUCCESS]
07:35:14.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2696. org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear started...]
07:35:14.614 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2696. SUCCESS]
07:35:14.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2697. org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr started...]
07:35:14.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2697. SUCCESS]
07:35:14.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2698. org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs started...]
07:35:14.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2698. SUCCESS]
07:35:14.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2699. org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect started...]
07:35:14.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2699. SUCCESS]
07:35:14.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2700. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty started...]
07:35:14.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2700. SUCCESS]
07:35:14.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2701. org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative started...]
07:35:14.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2701. SUCCESS]
07:35:14.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2702. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle started...]
07:35:14.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2702. SUCCESS]
07:35:14.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2703. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty started...]
07:35:14.615 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2703. SUCCESS]
07:35:14.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2704. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle started...]
07:35:14.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2704. SUCCESS]
07:35:14.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2705. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY started...]
07:35:14.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2705. SUCCESS]
07:35:14.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2706. org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative started...]
07:35:14.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2706. SUCCESS]
07:35:14.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2707. org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris started...]
07:35:14.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2707. SUCCESS]
07:35:14.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2708. org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference started...]
07:35:14.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2708. SUCCESS]
07:35:14.616 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2709. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom started...]
07:35:14.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2709. SUCCESS]
07:35:14.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2710. org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple started...]
07:35:14.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2710. SUCCESS]
07:35:14.617 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2711. org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData started...]
07:35:14.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2711. SUCCESS]
07:35:14.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2712. org.apache.commons.math.transform.FastCosineTransformerTest#testParameters started...]
07:35:14.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2712. SUCCESS]
07:35:14.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2713. org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction started...]
07:35:14.619 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2713. SUCCESS]
07:35:14.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2714. org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData started...]
07:35:14.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2714. SUCCESS]
07:35:14.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2715. org.apache.commons.math.transform.FastFourierTransformerTest#testParameters started...]
07:35:14.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2715. SUCCESS]
07:35:14.620 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2716. org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction started...]
07:35:14.624 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2716. SUCCESS]
07:35:14.625 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2717. org.apache.commons.math.transform.FastFourierTransformerTest#test2DData started...]
07:35:14.625 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2717. SUCCESS]
07:35:14.625 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2718. org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points started...]
07:35:14.626 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2718. SUCCESS]
07:35:14.626 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2719. org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points started...]
07:35:14.626 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2719. SUCCESS]
07:35:14.626 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2720. org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points started...]
07:35:14.626 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2720. SUCCESS]
07:35:14.626 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2721. org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse started...]
07:35:14.626 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2721. SUCCESS]
07:35:14.626 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2722. org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData started...]
07:35:14.627 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2722. SUCCESS]
07:35:14.627 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2723. org.apache.commons.math.transform.FastSineTransformerTest#testParameters started...]
07:35:14.627 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2723. SUCCESS]
07:35:14.627 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2724. org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction started...]
07:35:14.630 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2724. SUCCESS]
07:35:14.631 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2725. org.apache.commons.math.util.BigRealFieldTest#testOne started...]
07:35:14.632 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2725. SUCCESS]
07:35:14.632 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2726. org.apache.commons.math.util.BigRealFieldTest#testZero started...]
07:35:14.632 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2726. SUCCESS]
07:35:14.632 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2727. org.apache.commons.math.util.BigRealFieldTest#testSerial started...]
07:35:14.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2727. SUCCESS]
07:35:14.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2728. org.apache.commons.math.util.BigRealTest#testAdd started...]
07:35:14.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2728. SUCCESS]
07:35:14.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2729. org.apache.commons.math.util.BigRealTest#testSubtract started...]
07:35:14.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2729. SUCCESS]
07:35:14.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2730. org.apache.commons.math.util.BigRealTest#testCompareTo started...]
07:35:14.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2730. SUCCESS]
07:35:14.633 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2731. org.apache.commons.math.util.BigRealTest#testBigDecimalValue started...]
07:35:14.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2731. SUCCESS]
07:35:14.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2732. org.apache.commons.math.util.BigRealTest#testDivide started...]
07:35:14.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2732. SUCCESS]
07:35:14.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2733. org.apache.commons.math.util.BigRealTest#testMultiply started...]
07:35:14.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2733. SUCCESS]
07:35:14.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2734. org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode started...]
07:35:14.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2734. SUCCESS]
07:35:14.634 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2735. org.apache.commons.math.util.BigRealTest#testSerial started...]
07:35:14.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2735. SUCCESS]
07:35:14.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2736. org.apache.commons.math.util.BigRealTest#testDoubleValue started...]
07:35:14.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2736. SUCCESS]
07:35:14.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2737. org.apache.commons.math.util.BigRealTest#testConstructor started...]
07:35:14.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2737. SUCCESS]
07:35:14.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2738. org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio started...]
07:35:14.638 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2738. SUCCESS]
07:35:14.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2739. org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble started...]
07:35:14.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2739. SUCCESS]
07:35:14.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2740. org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal started...]
07:35:14.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2740. SUCCESS]
07:35:14.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2741. org.apache.commons.math.util.DefaultTransformerTest#testTransformObject started...]
07:35:14.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2741. SUCCESS]
07:35:14.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2742. org.apache.commons.math.util.DefaultTransformerTest#testTransformString started...]
07:35:14.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2742. SUCCESS]
07:35:14.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2743. org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger started...]
07:35:14.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2743. SUCCESS]
07:35:14.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2744. org.apache.commons.math.util.DefaultTransformerTest#testTransformNull started...]
07:35:14.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2744. SUCCESS]
07:35:14.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2745. org.apache.commons.math.util.DefaultTransformerTest#testSerial started...]
07:35:14.639 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2745. SUCCESS]
07:35:14.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2746. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[0] started...]
07:35:14.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2746. SUCCESS]
07:35:14.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2747. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[1] started...]
07:35:14.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2747. SUCCESS]
07:35:14.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2748. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[2] started...]
07:35:14.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2748. SUCCESS]
07:35:14.640 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2749. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[3] started...]
07:35:14.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2749. SUCCESS]
07:35:14.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2750. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[4] started...]
07:35:14.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2750. SUCCESS]
07:35:14.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2751. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[5] started...]
07:35:14.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2751. SUCCESS]
07:35:14.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2752. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[6] started...]
07:35:14.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2752. SUCCESS]
07:35:14.641 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2753. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[7] started...]
07:35:14.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2753. SUCCESS]
07:35:14.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2754. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[8] started...]
07:35:14.642 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2754. SUCCESS]
07:35:14.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2755. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[9] started...]
07:35:14.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2755. SUCCESS]
07:35:14.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2756. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[10] started...]
07:35:14.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2756. SUCCESS]
07:35:14.643 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2757. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[11] started...]
07:35:14.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2757. SUCCESS]
07:35:14.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2758. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[12] started...]
07:35:14.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2758. SUCCESS]
07:35:14.644 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2759. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[13] started...]
07:35:14.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2759. SUCCESS]
07:35:14.645 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2760. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[14] started...]
07:35:14.646 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2760. SUCCESS]
07:35:14.646 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2761. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[15] started...]
07:35:14.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2761. SUCCESS]
07:35:14.647 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2762. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[16] started...]
07:35:14.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2762. SUCCESS]
07:35:14.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2763. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[17] started...]
07:35:14.648 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2763. SUCCESS]
07:35:14.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2764. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[18] started...]
07:35:14.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2764. SUCCESS]
07:35:14.650 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2765. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[19] started...]
07:35:14.650 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2765. SUCCESS]
07:35:14.650 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2766. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[20] started...]
07:35:14.651 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2766. SUCCESS]
07:35:14.651 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2767. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[21] started...]
07:35:14.652 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2767. SUCCESS]
07:35:14.652 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2768. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[22] started...]
07:35:14.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2768. SUCCESS]
07:35:14.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2769. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[23] started...]
07:35:14.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2769. SUCCESS]
07:35:14.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2770. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[24] started...]
07:35:14.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2770. SUCCESS]
07:35:14.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2771. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[25] started...]
07:35:14.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2771. SUCCESS]
07:35:14.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2772. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[26] started...]
07:35:14.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2772. SUCCESS]
07:35:14.653 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2773. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[27] started...]
07:35:14.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2773. SUCCESS]
07:35:14.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2774. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[28] started...]
07:35:14.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2774. SUCCESS]
07:35:14.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2775. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[29] started...]
07:35:14.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2775. SUCCESS]
07:35:14.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2776. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[30] started...]
07:35:14.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2776. SUCCESS]
07:35:14.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2777. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[31] started...]
07:35:14.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2777. SUCCESS]
07:35:14.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2778. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[32] started...]
07:35:14.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2778. SUCCESS]
07:35:14.654 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2779. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[33] started...]
07:35:14.655 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2779. SUCCESS]
07:35:14.655 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2780. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[34] started...]
07:35:14.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2780. SUCCESS]
07:35:14.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2781. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[35] started...]
07:35:14.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2781. SUCCESS]
07:35:14.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2782. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[36] started...]
07:35:14.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2782. SUCCESS]
07:35:14.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2783. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[37] started...]
07:35:14.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2783. SUCCESS]
07:35:14.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2784. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[38] started...]
07:35:14.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2784. SUCCESS]
07:35:14.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2785. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[39] started...]
07:35:14.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2785. SUCCESS]
07:35:14.656 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2786. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[40] started...]
07:35:14.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2786. SUCCESS]
07:35:14.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2787. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[41] started...]
07:35:14.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2787. SUCCESS]
07:35:14.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2788. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[42] started...]
07:35:14.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2788. SUCCESS]
07:35:14.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2789. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[43] started...]
07:35:14.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2789. SUCCESS]
07:35:14.657 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2790. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[44] started...]
07:35:14.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2790. SUCCESS]
07:35:14.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2791. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[45] started...]
07:35:14.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2791. SUCCESS]
07:35:14.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2792. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[46] started...]
07:35:14.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2792. SUCCESS]
07:35:14.659 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2793. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[47] started...]
07:35:14.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2793. SUCCESS]
07:35:14.660 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2794. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[48] started...]
07:35:14.661 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2794. SUCCESS]
07:35:14.661 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2795. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[49] started...]
07:35:14.662 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2795. SUCCESS]
07:35:14.662 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2796. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[50] started...]
07:35:14.663 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2796. SUCCESS]
07:35:14.663 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2797. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[51] started...]
07:35:14.663 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2797. SUCCESS]
07:35:14.663 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2798. org.apache.commons.math.util.FastMathStrictComparisonTest#test1[52] started...]
07:35:14.663 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2798. SUCCESS]
07:35:14.663 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2799. org.apache.commons.math.util.FastMathTest#testLogSpecialCases started...]
07:35:14.664 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2799. SUCCESS]
07:35:14.664 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2800. org.apache.commons.math.util.FastMathTest#testDoubleNextAfterSpecialCases started...]
07:35:14.664 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2800. SUCCESS]
07:35:14.664 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2801. org.apache.commons.math.util.FastMathTest#testAtan2SpecialCases started...]
07:35:14.664 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2801. SUCCESS]
07:35:14.664 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2802. org.apache.commons.math.util.FastMathTest#testCbrtAccuracy started...]
07:35:16.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2802. SUCCESS]
07:35:16.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2803. org.apache.commons.math.util.FastMathTest#testAtan2 started...]
07:35:16.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2803. SUCCESS]
07:35:16.195 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2804. org.apache.commons.math.util.FastMathTest#checkMissingFastMathClasses started...]
07:35:16.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2804. SUCCESS]
07:35:16.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2805. org.apache.commons.math.util.FastMathTest#testLogAccuracy started...]
07:35:16.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2805. SUCCESS]
07:35:16.317 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2806. org.apache.commons.math.util.FastMathTest#testAcosAccuracy started...]
07:35:17.774 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2806. SUCCESS]
07:35:17.775 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2807. org.apache.commons.math.util.FastMathTest#testMinMaxDouble started...]
07:35:17.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2807. SUCCESS]
07:35:17.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2808. org.apache.commons.math.util.FastMathTest#testPowSpecialCases started...]
07:35:17.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2808. SUCCESS]
07:35:17.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2809. org.apache.commons.math.util.FastMathTest#testDoubleScalbSpecialCases started...]
07:35:17.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2809. SUCCESS]
07:35:17.776 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2810. org.apache.commons.math.util.FastMathTest#testTanhAccuracy started...]
07:35:20.170 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2810. SUCCESS]
07:35:20.171 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2811. org.apache.commons.math.util.FastMathTest#testToRadians started...]
07:35:20.205 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2811. SUCCESS]
07:35:20.205 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2812. org.apache.commons.math.util.FastMathTest#testConstants started...]
07:35:20.205 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2812. SUCCESS]
07:35:20.206 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2813. org.apache.commons.math.util.FastMathTest#testTanAccuracy started...]
07:35:20.318 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2813. SUCCESS]
07:35:20.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2814. org.apache.commons.math.util.FastMathTest#testFloatScalbSpecialCases started...]
07:35:20.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2814. SUCCESS]
07:35:20.319 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2815. org.apache.commons.math.util.FastMathTest#testToDegrees started...]
07:35:20.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2815. SUCCESS]
07:35:20.353 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2816. org.apache.commons.math.util.FastMathTest#testSinAccuracy started...]
07:35:20.421 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2816. SUCCESS]
07:35:20.422 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2817. org.apache.commons.math.util.FastMathTest#testAtan2Accuracy started...]
07:35:20.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2817. SUCCESS]
07:35:20.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2818. org.apache.commons.math.util.FastMathTest#testFloatNextAfterSpecialCases started...]
07:35:20.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2818. SUCCESS]
07:35:20.535 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2819. org.apache.commons.math.util.FastMathTest#testExpm1Accuracy started...]
07:35:20.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2819. SUCCESS]
07:35:20.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2820. org.apache.commons.math.util.FastMathTest#testMinMaxFloat started...]
07:35:20.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2820. SUCCESS]
07:35:20.611 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2821. org.apache.commons.math.util.FastMathTest#testHyperbolic started...]
07:35:20.655 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2821. SUCCESS]
07:35:20.655 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2822. org.apache.commons.math.util.FastMathTest#testCoshAccuracy started...]
07:35:21.864 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2822. SUCCESS]
07:35:21.865 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2823. org.apache.commons.math.util.FastMathTest#testPowAccuracy started...]
07:35:22.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2823. SUCCESS]
07:35:22.077 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2824. org.apache.commons.math.util.FastMathTest#testExpSpecialCases started...]
07:35:22.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2824. SUCCESS]
07:35:22.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2825. org.apache.commons.math.util.FastMathTest#testLog10Accuracy started...]
07:35:22.268 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2825. SUCCESS]
07:35:22.269 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2826. org.apache.commons.math.util.FastMathTest#testAtanAccuracy started...]
07:35:22.365 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2826. SUCCESS]
07:35:22.365 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2827. org.apache.commons.math.util.FastMathTest#testNextAfter started...]
07:35:22.365 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2827. SUCCESS]
07:35:22.365 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2828. org.apache.commons.math.util.FastMathTest#testLog1pAccuracy started...]
07:35:22.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2828. SUCCESS]
07:35:22.451 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2829. org.apache.commons.math.util.FastMathTest#testHyperbolicInverses started...]
07:35:22.478 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2829. SUCCESS]
07:35:22.479 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2830. org.apache.commons.math.util.FastMathTest#testAsinAccuracy started...]
07:35:23.861 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2830. SUCCESS]
07:35:23.862 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2831. org.apache.commons.math.util.FastMathTest#testCosAccuracy started...]
07:35:23.929 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2831. SUCCESS]
07:35:23.929 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2832. org.apache.commons.math.util.FastMathTest#testExpAccuracy started...]
07:35:24.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2832. SUCCESS]
07:35:24.078 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2833. org.apache.commons.math.util.FastMathTest#testSinhAccuracy started...]
07:35:25.303 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2833. SUCCESS]
Name     StrictMath      FastMath          Math Runs=10000000 Java 1.7.0_65 (1.7.0_65-b32) OpenJDK 64-Bit Server VM (24.65-b04)
07:35:25.304 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2834. org.apache.commons.math.util.FastMathTestPerformance#testAbs started...]
abs        0    1.0      4 5.5237      2 3.3525
07:35:25.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2834. SUCCESS]
07:35:25.390 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2835. org.apache.commons.math.util.FastMathTestPerformance#testCos started...]
cos       52    1.0     44 0.8593     40 0.7790
07:35:26.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2835. SUCCESS]
07:35:26.767 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2836. org.apache.commons.math.util.FastMathTestPerformance#testExp started...]
exp       66    1.0     33 0.5118     60 0.9182
07:35:28.377 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2836. SUCCESS]
07:35:28.377 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2837. org.apache.commons.math.util.FastMathTestPerformance#testLog started...]
log       78    1.0     50 0.6436     22 0.2927
07:35:29.896 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2837. SUCCESS]
07:35:29.897 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2838. org.apache.commons.math.util.FastMathTestPerformance#testPow started...]
pow      238    1.0    168 0.7063     85 0.3578
07:35:34.822 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2838. SUCCESS]
07:35:34.823 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2839. org.apache.commons.math.util.FastMathTestPerformance#testSin started...]
sin       48    1.0     41 0.8492     38 0.7907
07:35:36.105 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2839. SUCCESS]
07:35:36.105 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2840. org.apache.commons.math.util.FastMathTestPerformance#testTan started...]
tan       76    1.0     76 0.9909     53 0.6979
07:35:38.171 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2840. SUCCESS]
07:35:38.171 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2841. org.apache.commons.math.util.FastMathTestPerformance#testAtan2 started...]
atan2    115    1.0    113 0.9846    115 1.0011
07:35:41.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2841. SUCCESS]
07:35:41.618 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2842. org.apache.commons.math.util.FastMathTestPerformance#testExpm1 started...]
expm1     76    1.0     82 1.0767     77 1.0180
07:35:43.978 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2842. SUCCESS]
07:35:43.978 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2843. org.apache.commons.math.util.FastMathTestPerformance#testHypot started...]
hypot    688    1.0     32 0.0471    687 0.9987
07:35:58.061 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2843. SUCCESS]
07:35:58.062 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2844. org.apache.commons.math.util.FastMathTestPerformance#testLog10 started...]
log10    103    1.0    132 1.2817     22 0.2216
07:36:00.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2844. SUCCESS]
07:36:00.658 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2845. org.apache.commons.math.util.FastMathTestPerformance#testLog1p started...]
log1p     83    1.0    132 1.5723     83 0.9892
07:36:03.649 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2845. SUCCESS]
07:36:03.650 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2846. org.apache.commons.math.util.FastMathTestPerformance#testAcos started...]
acos     380    1.0    166 0.4387    380 1.0022
07:36:12.928 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2846. SUCCESS]
07:36:12.928 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2847. org.apache.commons.math.util.FastMathTestPerformance#testAsin started...]
asin     388    1.0    152 0.3928    389 1.0044
07:36:22.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2847. SUCCESS]
07:36:22.247 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2848. org.apache.commons.math.util.FastMathTestPerformance#testAtan started...]
atan      60    1.0     78 1.3022     61 1.0227
07:36:24.248 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2848. SUCCESS]
07:36:24.249 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2849. org.apache.commons.math.util.FastMathTestPerformance#testCbrt started...]
cbrt     101    1.0     85 0.8413    104 1.0299
07:36:27.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2849. SUCCESS]
07:36:27.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2850. org.apache.commons.math.util.FastMathTestPerformance#testCosh started...]
cosh     107    1.0     75 0.7072    107 0.9980
07:36:30.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2850. SUCCESS]
07:36:30.053 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2851. org.apache.commons.math.util.FastMathTestPerformance#testSinh started...]
sinh     116    1.0     81 0.6998    117 1.0077
07:36:33.207 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2851. SUCCESS]
07:36:33.207 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2852. org.apache.commons.math.util.FastMathTestPerformance#testSqrt started...]
sqrt       1    1.0      0 0.0000      6 4.0443
07:36:33.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2852. SUCCESS]
07:36:33.290 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2853. org.apache.commons.math.util.FastMathTestPerformance#testTanh started...]
tanh     122    1.0     96 0.7893    121 0.9912
07:36:36.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2853. SUCCESS]
07:36:36.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2854. org.apache.commons.math.util.IncrementorTest#testAboveMaxCount started...]
07:36:36.690 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2854. SUCCESS]
07:36:36.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2855. org.apache.commons.math.util.IncrementorTest#testBelowMaxCount started...]
07:36:36.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2855. SUCCESS]
07:36:36.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2856. org.apache.commons.math.util.IncrementorTest#testAccessor started...]
07:36:36.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2856. SUCCESS]
07:36:36.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2857. org.apache.commons.math.util.IncrementorTest#testReset started...]
07:36:36.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2857. SUCCESS]
07:36:36.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2858. org.apache.commons.math.util.IncrementorTest#testBulkIncrement started...]
07:36:36.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2858. SUCCESS]
07:36:36.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2859. org.apache.commons.math.util.MathUtilsTest#testCopyOfInt started...]
07:36:36.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2859. SUCCESS]
07:36:36.691 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2860. org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficient started...]
07:36:36.707 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2860. SUCCESS]
07:36:36.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2861. org.apache.commons.math.util.MathUtilsTest#testFactorialFail started...]
07:36:36.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2861. SUCCESS]
07:36:36.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2862. org.apache.commons.math.util.MathUtilsTest#testGcdConsistency started...]
07:36:36.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2862. SUCCESS]
07:36:36.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2863. org.apache.commons.math.util.MathUtilsTest#testCopyOfDouble2 started...]
07:36:36.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2863. SUCCESS]
07:36:36.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2864. org.apache.commons.math.util.MathUtilsTest#testCopyOfDouble3 started...]
07:36:36.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2864. SUCCESS]
07:36:36.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2865. org.apache.commons.math.util.MathUtilsTest#testSortInPlace started...]
07:36:36.708 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2865. SUCCESS]
07:36:36.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2866. org.apache.commons.math.util.MathUtilsTest#testCopyOfInt2 started...]
07:36:36.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2866. SUCCESS]
07:36:36.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2867. org.apache.commons.math.util.MathUtilsTest#testCopyOfInt3 started...]
07:36:36.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2867. SUCCESS]
07:36:36.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2868. org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble started...]
07:36:36.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2868. SUCCESS]
07:36:36.709 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2869. org.apache.commons.math.util.MathUtilsTest#testRoundDouble started...]
07:36:36.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2869. SUCCESS]
07:36:36.710 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2870. org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle started...]
07:36:36.719 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2870. SUCCESS]
07:36:36.719 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2871. org.apache.commons.math.util.MathUtilsTest#testNormalizeArray started...]
07:36:36.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2871. SUCCESS]
07:36:36.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2872. org.apache.commons.math.util.MathUtilsTest#testIndicatorInt started...]
07:36:36.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2872. SUCCESS]
07:36:36.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2873. org.apache.commons.math.util.MathUtilsTest#testReduceComparedWithNormalizeAngle started...]
07:36:36.720 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2873. SUCCESS]
07:36:36.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2874. org.apache.commons.math.util.MathUtilsTest#testL1DistanceDouble started...]
07:36:36.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2874. SUCCESS]
07:36:36.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2875. org.apache.commons.math.util.MathUtilsTest#testGcd started...]
07:36:36.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2875. SUCCESS]
07:36:36.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2876. org.apache.commons.math.util.MathUtilsTest#testLcm started...]
07:36:36.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2876. SUCCESS]
07:36:36.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2877. org.apache.commons.math.util.MathUtilsTest#testLog started...]
07:36:36.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2877. SUCCESS]
07:36:36.721 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2878. org.apache.commons.math.util.MathUtilsTest#testPow started...]
07:36:36.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2878. SUCCESS]
07:36:36.722 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2879. org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientLarge started...]
07:36:37.096 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2879. SUCCESS]
07:36:37.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2880. org.apache.commons.math.util.MathUtilsTest#testCheckOrder started...]
07:36:37.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2880. SUCCESS]
07:36:37.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2881. org.apache.commons.math.util.MathUtilsTest#testCosh started...]
07:36:37.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2881. SUCCESS]
07:36:37.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2882. org.apache.commons.math.util.MathUtilsTest#testHash started...]
07:36:37.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2882. SUCCESS]
07:36:37.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2883. org.apache.commons.math.util.MathUtilsTest#testSinh started...]
07:36:37.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2883. SUCCESS]
07:36:37.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2884. org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash started...]
07:36:37.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2884. SUCCESS]
07:36:37.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2885. org.apache.commons.math.util.MathUtilsTest#testL1DistanceInt started...]
07:36:37.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2885. SUCCESS]
07:36:37.097 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2886. org.apache.commons.math.util.MathUtilsTest#testSubAndCheckLong started...]
07:36:37.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2886. SUCCESS]
07:36:37.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2887. org.apache.commons.math.util.MathUtilsTest#testL2DistanceInt started...]
07:36:37.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2887. SUCCESS]
07:36:37.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2888. org.apache.commons.math.util.MathUtilsTest#testCompareToEpsilon started...]
07:36:37.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2888. SUCCESS]
07:36:37.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2889. org.apache.commons.math.util.MathUtilsTest#testLInfDistanceDouble started...]
07:36:37.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2889. SUCCESS]
07:36:37.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2890. org.apache.commons.math.util.MathUtilsTest#testRoundFloat started...]
07:36:37.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2890. SUCCESS]
07:36:37.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2891. org.apache.commons.math.util.MathUtilsTest#testArrayEqualsIncludingNaN started...]
07:36:37.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2891. SUCCESS]
07:36:37.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2892. org.apache.commons.math.util.MathUtilsTest#testArrayHash started...]
07:36:37.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2892. SUCCESS]
07:36:37.098 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2893. org.apache.commons.math.util.MathUtilsTest#testFactorial started...]
07:36:37.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2893. SUCCESS]
07:36:37.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2894. org.apache.commons.math.util.MathUtilsTest#testEqualsIncludingNaNWithAllowedDelta started...]
07:36:37.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2894. SUCCESS]
07:36:37.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2895. org.apache.commons.math.util.MathUtilsTest#testGcdLong started...]
07:36:37.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2895. SUCCESS]
07:36:37.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2896. org.apache.commons.math.util.MathUtilsTest#testEqualsIncludingNaNWithAllowedUlps started...]
07:36:37.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2896. SUCCESS]
07:36:37.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2897. org.apache.commons.math.util.MathUtilsTest#testLcmLong started...]
07:36:37.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2897. SUCCESS]
07:36:37.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2898. org.apache.commons.math.util.MathUtilsTest#testArrayEquals started...]
07:36:37.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2898. SUCCESS]
07:36:37.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2899. org.apache.commons.math.util.MathUtilsTest#testSubAndCheck started...]
07:36:37.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2899. SUCCESS]
07:36:37.099 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2900. org.apache.commons.math.util.MathUtilsTest#testCheckFinite started...]
07:36:37.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2900. SUCCESS]
07:36:37.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2901. org.apache.commons.math.util.MathUtilsTest#testFloatEqualsWithAllowedUlps started...]
07:36:37.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2901. SUCCESS]
07:36:37.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2902. org.apache.commons.math.util.MathUtilsTest#testMulAndCheckLong started...]
07:36:37.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2902. SUCCESS]
07:36:37.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2903. org.apache.commons.math.util.MathUtilsTest#testL2DistanceDouble started...]
07:36:37.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2903. SUCCESS]
07:36:37.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2904. org.apache.commons.math.util.MathUtilsTest#testLInfDistanceInt started...]
07:36:37.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2904. SUCCESS]
07:36:37.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2905. org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientFail started...]
07:36:37.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2905. SUCCESS]
07:36:37.100 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2906. org.apache.commons.math.util.MathUtilsTest#testLinearCombinationInfinite started...]
07:36:37.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2906. SUCCESS]
07:36:37.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2907. org.apache.commons.math.util.MathUtilsTest#testMath475 started...]
07:36:37.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2907. SUCCESS]
07:36:37.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2908. org.apache.commons.math.util.MathUtilsTest#testCoshNaN started...]
07:36:37.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2908. SUCCESS]
07:36:37.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2909. org.apache.commons.math.util.MathUtilsTest#testLinearCombination1 started...]
07:36:37.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2909. SUCCESS]
07:36:37.101 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2910. org.apache.commons.math.util.MathUtilsTest#testLinearCombination2 started...]
07:36:37.115 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2910. SUCCESS]
07:36:37.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2911. org.apache.commons.math.util.MathUtilsTest#testSubAndCheckErrorMessage started...]
07:36:37.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2911. SUCCESS]
07:36:37.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2912. org.apache.commons.math.util.MathUtilsTest#test0Choose0 started...]
07:36:37.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2912. SUCCESS]
07:36:37.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2913. org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedUlps started...]
07:36:37.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2913. SUCCESS]
07:36:37.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2914. org.apache.commons.math.util.MathUtilsTest#testMulAndCheck started...]
07:36:37.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2914. SUCCESS]
07:36:37.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2915. org.apache.commons.math.util.MathUtilsTest#testSignByte started...]
07:36:37.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2915. SUCCESS]
07:36:37.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2916. org.apache.commons.math.util.MathUtilsTest#testSignLong started...]
07:36:37.116 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2916. SUCCESS]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2917. org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedDelta started...]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2917. SUCCESS]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2918. org.apache.commons.math.util.MathUtilsTest#testAddAndCheckLong started...]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2918. SUCCESS]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2919. org.apache.commons.math.util.MathUtilsTest#testCopyOfDouble started...]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2919. SUCCESS]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2920. org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat started...]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2920. SUCCESS]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2921. org.apache.commons.math.util.MathUtilsTest#testCompareToMaxUlps started...]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2921. SUCCESS]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2922. org.apache.commons.math.util.MathUtilsTest#testIndicatorShort started...]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2922. SUCCESS]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2923. org.apache.commons.math.util.MathUtilsTest#testIndicatorByte started...]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2923. SUCCESS]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2924. org.apache.commons.math.util.MathUtilsTest#testIndicatorLong started...]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2924. SUCCESS]
07:36:37.117 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2925. org.apache.commons.math.util.MathUtilsTest#testCheckNotNull1 started...]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2925. SUCCESS]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2926. org.apache.commons.math.util.MathUtilsTest#testCheckNotNull2 started...]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2926. SUCCESS]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2927. org.apache.commons.math.util.MathUtilsTest#testEqualsIncludingNaN started...]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2927. SUCCESS]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2928. org.apache.commons.math.util.MathUtilsTest#testSignDouble started...]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2928. SUCCESS]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2929. org.apache.commons.math.util.MathUtilsTest#testAddAndCheck started...]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2929. SUCCESS]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2930. org.apache.commons.math.util.MathUtilsTest#testReduce started...]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2930. SUCCESS]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2931. org.apache.commons.math.util.MathUtilsTest#testSignInt started...]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2931. SUCCESS]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2932. org.apache.commons.math.util.MathUtilsTest#testSinhNaN started...]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2932. SUCCESS]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2933. org.apache.commons.math.util.MathUtilsTest#testSignFloat started...]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2933. SUCCESS]
07:36:37.118 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2934. org.apache.commons.math.util.MathUtilsTest#testSignShort started...]
07:36:37.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2934. SUCCESS]
07:36:37.119 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2935. org.apache.commons.math.util.MultidimensionalCounterTest#testIterationConsistency started...]
07:36:37.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2935. SUCCESS]
07:36:37.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2936. org.apache.commons.math.util.MultidimensionalCounterTest#testIteratorPreconditions started...]
07:36:37.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2936. SUCCESS]
07:36:37.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2937. org.apache.commons.math.util.MultidimensionalCounterTest#testAccessors started...]
07:36:37.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2937. SUCCESS]
07:36:37.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2938. org.apache.commons.math.util.MultidimensionalCounterTest#testMulti2UniConversion started...]
07:36:37.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2938. SUCCESS]
07:36:37.120 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2939. org.apache.commons.math.util.MultidimensionalCounterTest#testPreconditions started...]
07:36:37.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2939. SUCCESS]
07:36:37.121 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2940. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting started...]
07:36:37.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2940. SUCCESS]
07:36:37.128 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2941. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2 started...]
07:36:37.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2941. SUCCESS]
07:36:37.129 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2942. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions started...]
07:36:37.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2942. SUCCESS]
07:36:37.131 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2943. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy started...]
07:36:37.133 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2943. SUCCESS]
07:36:37.133 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2944. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey started...]
07:36:37.145 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2944. SUCCESS]
07:36:37.145 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2945. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent started...]
07:36:37.148 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2945. SUCCESS]
07:36:37.149 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2946. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet started...]
07:36:37.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2946. SUCCESS]
07:36:37.151 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2947. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize started...]
07:36:37.153 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2947. SUCCESS]
07:36:37.153 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2948. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2 started...]
07:36:37.156 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2948. SUCCESS]
07:36:37.156 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2949. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification started...]
07:36:37.157 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2949. SUCCESS]
07:36:37.157 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2950. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent started...]
07:36:37.160 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2950. SUCCESS]
07:36:37.160 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2951. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty started...]
07:36:37.160 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2951. SUCCESS]
07:36:37.160 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2952. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting started...]
07:36:37.162 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2952. SUCCESS]
07:36:37.162 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2953. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove started...]
07:36:37.166 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2953. SUCCESS]
07:36:37.166 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2954. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator started...]
07:36:37.169 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2954. SUCCESS]
07:36:37.169 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2955. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize started...]
07:36:37.171 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2955. SUCCESS]
07:36:37.171 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2956. org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty started...]
07:36:37.172 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2956. SUCCESS]
07:36:37.172 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2957. org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting started...]
07:36:37.187 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2957. SUCCESS]
07:36:37.187 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2958. org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2 started...]
07:36:37.187 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2958. SUCCESS]
07:36:37.187 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2959. org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions started...]
07:36:37.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2959. SUCCESS]
07:36:37.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2960. org.apache.commons.math.util.OpenIntToFieldTest#testCopy started...]
07:36:37.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2960. SUCCESS]
07:36:37.188 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2961. org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey started...]
07:36:37.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2961. SUCCESS]
07:36:37.196 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2962. org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent started...]
07:36:37.203 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2962. SUCCESS]
07:36:37.203 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2963. org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet started...]
07:36:37.203 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2963. SUCCESS]
07:36:37.203 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2964. org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize started...]
07:36:37.204 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2964. SUCCESS]
07:36:37.204 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2965. org.apache.commons.math.util.OpenIntToFieldTest#testRemove2 started...]
07:36:37.204 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2965. SUCCESS]
07:36:37.204 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2966. org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification started...]
07:36:37.204 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2966. SUCCESS]
07:36:37.204 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2967. org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent started...]
07:36:37.212 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2967. SUCCESS]
07:36:37.212 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2968. org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty started...]
07:36:37.212 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2968. SUCCESS]
07:36:37.212 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2969. org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting started...]
07:36:37.212 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2969. SUCCESS]
07:36:37.212 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2970. org.apache.commons.math.util.OpenIntToFieldTest#testRemove started...]
07:36:37.212 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2970. SUCCESS]
07:36:37.213 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2971. org.apache.commons.math.util.OpenIntToFieldTest#testIterator started...]
07:36:37.213 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2971. SUCCESS]
07:36:37.213 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2972. org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize started...]
07:36:37.213 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2972. SUCCESS]
07:36:37.213 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2973. org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty started...]
07:36:37.214 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2973. SUCCESS]
07:36:37.214 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2974. org.apache.commons.math.util.PairTest#testAccessor started...]
07:36:37.214 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2974. SUCCESS]
07:36:37.214 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2975. org.apache.commons.math.util.PairTest#testEquals started...]
07:36:37.214 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2975. SUCCESS]
07:36:37.214 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2976. org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElements started...]
07:36:37.214 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2976. SUCCESS]
07:36:37.214 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2977. org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000 started...]
07:36:37.214 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2977. SUCCESS]
07:36:37.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2978. org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute started...]
07:36:37.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2978. SUCCESS]
07:36:37.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2979. org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors started...]
07:36:37.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2979. SUCCESS]
07:36:37.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2980. org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling started...]
07:36:37.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2980. SUCCESS]
07:36:37.215 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2981. org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor started...]
07:36:37.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2981. SUCCESS]
07:36:37.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2982. org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements started...]
07:36:37.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2982. SUCCESS]
07:36:37.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2983. org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity started...]
07:36:37.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2983. SUCCESS]
07:36:37.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2984. org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard started...]
07:36:37.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2984. SUCCESS]
07:36:37.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2985. org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode started...]
07:36:37.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2985. SUCCESS]
07:36:37.216 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2986. org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators started...]
07:36:37.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2986. SUCCESS]
07:36:37.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2987. org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion started...]
07:36:37.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2987. SUCCESS]
07:36:37.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2988. org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues started...]
07:36:37.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2988. SUCCESS]
07:36:37.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2989. org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax started...]
07:36:37.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2989. SUCCESS]
07:36:37.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2990. org.apache.commons.math.util.TransformerMapTest#testClear started...]
07:36:37.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2990. SUCCESS]
07:36:37.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2991. org.apache.commons.math.util.TransformerMapTest#testContainsTransformer started...]
07:36:37.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2991. SUCCESS]
07:36:37.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2992. org.apache.commons.math.util.TransformerMapTest#testTransformers started...]
07:36:37.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2992. SUCCESS]
07:36:37.217 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2993. org.apache.commons.math.util.TransformerMapTest#testPutTransformer started...]
07:36:37.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2993. SUCCESS]
07:36:37.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2994. org.apache.commons.math.util.TransformerMapTest#testContainsClass started...]
07:36:37.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2994. SUCCESS]
07:36:37.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2995. org.apache.commons.math.util.TransformerMapTest#testClasses started...]
07:36:37.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2995. SUCCESS]
07:36:37.218 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2996. org.apache.commons.math.util.TransformerMapTest#testSerial started...]
07:36:37.219 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2996. SUCCESS]
07:36:37.219 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2997. org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer started...]
07:36:37.219 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - [#2997. SUCCESS]
07:36:37.220 [Thread-2] DEBUG xxl.java.junit.TestCasesListener - Tests run finished (121789 ms)
<> Total tests run: 2997
<> Ignored tests: 1
<> Failed tests: 2
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:37.220 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=1177, Suspiciousness=0.21566554640687682]
07:36:37.223 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:37,223 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:37.234 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:37.251 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:37.766 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:37.767 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:1177.
07:36:37.767 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=1177, Suspiciousness=0.21566554640687682]
07:36:37.767 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=258, Suspiciousness=0.15249857033260467]
07:36:37.767 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:37,768 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:37.775 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:37.788 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:37.936 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:37.939 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:37,960 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:37,961 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:38,032 DEBUG spoon.support.StandardEnvironment - built in 71 ms
2015-03-02 07:36:38,032 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:38,032 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:38.033 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:38,033 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:38.050 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return org.apache.commons.math.complex.Complex.NaN ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return org.apache.commons.math.complex.Complex.NaN;
}
07:36:38.052 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return org.apache.commons.math.complex.Complex.NaN ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return org.apache.commons.math.complex.Complex.NaN;
    
}
07:36:38.054 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:38.066 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:38.231 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:38.245 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:38.253 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:38.253 [Thread-3] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:38.259 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:38.343 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:38.343 [Thread-4] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (84 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:38.348 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:38.349 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:38.349 [Thread-5] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:38.354 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:38.355 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:38.355 [Thread-6] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:38.356 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:258
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:38.356 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:38.356 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:38.356 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:258 otherwise the patch would be "true" or "false"
07:36:38.357 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=258, Suspiciousness=0.15249857033260467]
07:36:38.357 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=581, Suspiciousness=0.08804509063256238]
07:36:38.357 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:38,357 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:38.365 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:38.375 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:38.480 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:38.481 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:581.
07:36:38.481 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=581, Suspiciousness=0.08804509063256238]
07:36:38.481 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=255, Suspiciousness=0.07874992309581577]
07:36:38.481 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:38,481 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:38.488 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:38.498 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:38.589 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:38.589 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:255.
07:36:38.589 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=255, Suspiciousness=0.07874992309581577]
07:36:38.589 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=256, Suspiciousness=0.07874992309581577]
07:36:38.590 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:38,590 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:38.595 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:38.605 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:38.683 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:38.683 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:256.
07:36:38.683 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=256, Suspiciousness=0.07874992309581577]
07:36:38.683 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=257, Suspiciousness=0.07874992309581577]
07:36:38.683 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:38,683 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:38.688 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:38.698 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:38.778 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:38.778 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:38,800 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:38,801 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:38,866 DEBUG spoon.support.StandardEnvironment - built in 66 ms
2015-03-02 07:36:38,867 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:38,867 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:38.867 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:38,868 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:38.875 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((c == 0.0) && (d == 0.0)) {
    return org.apache.commons.math.complex.Complex.NaN;
} 
07:36:38.876 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:38.886 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:38.978 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:38.988 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:39.183 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:39.184 [Thread-7] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (196 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:39.189 [Thread-8] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:39.201 [Thread-8] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:39.201 [Thread-8] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:39.207 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:39.207 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:39.207 [Thread-9] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:39.232 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
07:36:39.244 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:39.245 [Thread-10] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:39.245 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:257
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:39.245 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:39.245 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:39.245 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:257 otherwise the patch would be "true" or "false"
07:36:39.245 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=257, Suspiciousness=0.07874992309581577]
07:36:39.245 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2994, Suspiciousness=0.07624928516630233]
07:36:39.246 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:39,246 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:39.263 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:39.383 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:39.645 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:39.645 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:39,667 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:39,667 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:39,949 DEBUG spoon.support.StandardEnvironment - built in 282 ms
2015-03-02 07:36:39,949 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:39,949 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:39.950 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:39,950 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:39.954 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return java.lang.Math.PI ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invx",invx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invy",invy);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return java.lang.Math.PI;
}
07:36:39.955 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return java.lang.Math.PI ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invx",invx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invy",invy);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return java.lang.Math.PI;
    
}
07:36:39.961 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:40.034 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:40.239 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:40.250 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:40.254 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:40.254 [Thread-11] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:40.261 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:40.344 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:40.345 [Thread-12] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (83 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:40.350 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:40.350 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:40.350 [Thread-13] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:40.355 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:40.358 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:40.358 [Thread-14] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:40.359 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:2994
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:40.359 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:40.359 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:40.359 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:2994 otherwise the patch would be "true" or "false"
07:36:40.359 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2994, Suspiciousness=0.07624928516630233]
07:36:40.359 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=577, Suspiciousness=0.07624928516630233]
07:36:40.359 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:40,359 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:40.361 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:40.366 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:40.418 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:40.418 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:40,440 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:40,440 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:40,498 DEBUG spoon.support.StandardEnvironment - built in 58 ms
2015-03-02 07:36:40,498 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:40,498 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:40.499 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:40,499 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:40.503 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (isNaN) {
    return org.apache.commons.math.complex.Complex.NaN;
} 
07:36:40.504 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:40.510 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:40.565 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:40.576 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:40.580 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:40.580 [Thread-15] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:40.585 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:40.669 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:40.669 [Thread-16] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (84 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:40.674 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:40.674 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:40.674 [Thread-17] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:40.680 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
07:36:40.683 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:40.683 [Thread-18] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:40.684 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:577
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:40.684 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:40.684 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:40.684 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:577 otherwise the patch would be "true" or "false"
07:36:40.684 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=577, Suspiciousness=0.07624928516630233]
07:36:40.684 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=250, Suspiciousness=0.07397267214553091]
07:36:40.684 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:40,684 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:40.685 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:40.691 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:40.734 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:40.734 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:40,752 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:40,752 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:40,807 DEBUG spoon.support.StandardEnvironment - built in 55 ms
2015-03-02 07:36:40,807 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:40,807 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:40.808 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:40,808 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:40.813 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(divisor) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.util.MathUtils.checkNotNull(divisor);
    if ((isNaN) || (divisor.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    final double c = divisor.getReal();
    final double d = divisor.getImaginary();
    if ((c == 0.0) && (d == 0.0)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    if ((divisor.isInfinite()) && (!(isInfinite()))) {
        return org.apache.commons.math.complex.Complex.ZERO;
    } 
    if ((org.apache.commons.math.util.FastMath.abs(c)) < (org.apache.commons.math.util.FastMath.abs(d))) {
        double q = c / d;
        double denominator = (c * q) + d;
        return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator));
    } else {
        double q = d / c;
        double denominator = (d * q) + c;
        return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator));
    }
}
07:36:40.835 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(divisor) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.util.MathUtils.checkNotNull(divisor);
    
    if ((isNaN) || (divisor.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    final double c = divisor.getReal();
    final double d = divisor.getImaginary();
    if ((c == 0.0) && (d == 0.0)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    if ((divisor.isInfinite()) && (!(isInfinite()))) {
        return org.apache.commons.math.complex.Complex.ZERO;
    } 
    if ((org.apache.commons.math.util.FastMath.abs(c)) < (org.apache.commons.math.util.FastMath.abs(d))) {
        double q = c / d;
        double denominator = (c * q) + d;
        return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator));
    } else {
        double q = d / c;
        double denominator = (d * q) + c;
        return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator));
    }
}
07:36:40.836 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:40.842 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:40.892 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:40.903 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:40.907 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:40.907 [Thread-19] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:40.912 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:41.001 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:41.002 [Thread-20] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (90 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:41.007 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:41.007 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:41.007 [Thread-21] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:41.012 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:41.020 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:41.020 [Thread-22] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:41.020 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:250
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:41.020 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:41.020 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:41.020 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:250 otherwise the patch would be "true" or "false"
07:36:41.020 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=250, Suspiciousness=0.07397267214553091]
07:36:41.020 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=251, Suspiciousness=0.07397267214553091]
07:36:41.021 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:41,021 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:41.022 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:41.027 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:41.066 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:41.067 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:41,085 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:41,085 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:41,142 DEBUG spoon.support.StandardEnvironment - built in 57 ms
2015-03-02 07:36:41,142 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:41,142 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:41.143 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:41,143 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:41.147 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((isNaN) || (divisor.isNaN)) {
    return org.apache.commons.math.complex.Complex.NaN;
} 
07:36:41.148 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:41.154 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:41.202 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:41.213 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:41.216 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:41.216 [Thread-23] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:41.222 [Thread-24] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:41.308 [Thread-24] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:41.308 [Thread-24] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (86 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:41.313 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:41.313 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:41.313 [Thread-25] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:41.318 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
07:36:41.324 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:41.324 [Thread-26] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:41.325 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:251
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:41.325 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:41.325 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:41.325 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:251 otherwise the patch would be "true" or "false"
07:36:41.325 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=251, Suspiciousness=0.07397267214553091]
07:36:41.325 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=266, Suspiciousness=0.06819943394704735]
07:36:41.325 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:41,325 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:41.327 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:41.332 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:41.368 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:41.368 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:266.
07:36:41.368 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=266, Suspiciousness=0.06819943394704735]
07:36:41.368 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=267, Suspiciousness=0.06819943394704735]
07:36:41.368 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:41,368 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:41.370 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:41.375 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:41.410 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:41.410 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:267.
07:36:41.410 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=267, Suspiciousness=0.06819943394704735]
07:36:41.410 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=268, Suspiciousness=0.06819943394704735]
07:36:41.410 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:41,410 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:41.412 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:41.417 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:41.452 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:41.452 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:41,469 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:41,470 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:41,526 DEBUG spoon.support.StandardEnvironment - built in 57 ms
2015-03-02 07:36:41,526 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:41,526 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:41.527 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:41,527 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:41.532 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator)) ##### Before:
{
    double q = c / d;
    double denominator = (c * q) + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("denominator",denominator);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator));
}
07:36:41.532 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator)) ##### After:
{
    double q = c / d;
    double denominator = (c * q) + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("denominator",denominator);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator));
    
}
07:36:41.533 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:41.538 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:41.575 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:317: error: missing return statement
    }
    ^
07:36:41.577 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=745, Suspiciousness=0.0576390417704235]
07:36:41.577 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:41,577 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:41.578 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:41.584 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:41.619 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:41.620 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:41,637 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:41,637 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:41,711 DEBUG spoon.support.StandardEnvironment - built in 74 ms
2015-03-02 07:36:41,711 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:41,711 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:41.712 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:41,712 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:41.716 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return org.apache.commons.math.complex.Complex.NaN ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return org.apache.commons.math.complex.Complex.NaN;
}
07:36:41.717 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return org.apache.commons.math.complex.Complex.NaN ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return org.apache.commons.math.complex.Complex.NaN;
    
}
07:36:41.717 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:41.722 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:41.765 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:41.776 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:41.780 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:41.780 [Thread-27] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:41.785 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:41.867 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:41.867 [Thread-28] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (82 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:41.872 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:41.872 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:41.872 [Thread-29] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:41.877 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:41.878 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:41.878 [Thread-30] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:41.879 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:745
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:41.879 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:41.879 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:41.879 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:745 otherwise the patch would be "true" or "false"
07:36:41.879 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=745, Suspiciousness=0.0576390417704235]
07:36:41.879 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=271, Suspiciousness=0.05083285677753489]
07:36:41.879 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:41,879 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:41.881 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:41.885 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:41.919 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:41.920 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:271.
07:36:41.920 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=271, Suspiciousness=0.05083285677753489]
07:36:41.920 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=272, Suspiciousness=0.05083285677753489]
07:36:41.920 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:41,920 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:41.921 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:41.926 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:41.960 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:41.960 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:272.
07:36:41.960 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=272, Suspiciousness=0.05083285677753489]
07:36:41.960 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=273, Suspiciousness=0.05083285677753489]
07:36:41.960 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:41,960 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:41.962 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:41.967 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:42.000 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:42.000 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:42,018 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:42,018 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:42,073 DEBUG spoon.support.StandardEnvironment - built in 55 ms
2015-03-02 07:36:42,073 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:42,074 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:42.074 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:42,074 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:42.079 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator)) ##### Before:
{
    double q = d / c;
    double denominator = (d * q) + c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("denominator",denominator);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator));
}
07:36:42.079 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator)) ##### After:
{
    double q = d / c;
    double denominator = (d * q) + c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.real",divisor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.imaginary",divisor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("denominator",denominator);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor",divisor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isNaN",divisor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("divisor.isInfinite",divisor.isInfinite);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator));
    
}
07:36:42.080 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:42.085 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:42.114 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:317: error: missing return statement
    }
    ^
07:36:42.114 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=261, Suspiciousness=0.04402254531628119]
07:36:42.115 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:42,115 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:42.116 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:42.121 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:42.152 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:42.153 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:42,170 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:42,170 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:42,225 DEBUG spoon.support.StandardEnvironment - built in 55 ms
2015-03-02 07:36:42,225 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:42,225 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:42.226 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:42,226 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:42.230 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((divisor.isInfinite()) && (!(isInfinite()))) {
    return org.apache.commons.math.complex.Complex.ZERO;
} 
07:36:42.231 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:42.235 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:42.274 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:42.285 [Thread-31] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:42.288 [Thread-31] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:42.288 [Thread-31] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:42.293 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:42.378 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:42.378 [Thread-32] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (85 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:42.383 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:42.383 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:42.383 [Thread-33] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:42.388 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(NaN, NaN)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
07:36:42.392 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:42.392 [Thread-34] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:42.392 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:261
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:42.392 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:42.392 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:42.392 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:261 otherwise the patch would be "true" or "false"
07:36:42.392 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=261, Suspiciousness=0.04402254531628119]
07:36:42.393 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=265, Suspiciousness=0.04402254531628119]
07:36:42.393 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:42,393 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:42.394 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:42.399 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:42.429 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:42.430 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:42,447 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:42,447 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:42,501 DEBUG spoon.support.StandardEnvironment - built in 54 ms
2015-03-02 07:36:42,501 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:42,501 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:42.502 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:42,502 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:42.506 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((org.apache.commons.math.util.FastMath.abs(c)) < (org.apache.commons.math.util.FastMath.abs(d))) {
    double q = c / d;
    double denominator = (c * q) + d;
    return createComplex(((((real) * q) + (imaginary)) / denominator), ((((imaginary) * q) - (real)) / denominator));
} else {
    double q = d / c;
    double denominator = (d * q) + c;
    return createComplex(((((imaginary) * q) + (real)) / denominator), (((imaginary) - ((real) * q)) / denominator));
}
07:36:42.507 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:42.511 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:42.549 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:42.559 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:42.562 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:42.563 [Thread-35] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:42.567 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
07:36:42.650 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:42.650 [Thread-36] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (83 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:42.655 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:42.655 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:42.656 [Thread-37] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:42.661 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
07:36:42.664 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:42.664 [Thread-38] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:42.665 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:265
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:42.665 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:42.665 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:42.665 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:265 otherwise the patch would be "true" or "false"
07:36:42.665 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=265, Suspiciousness=0.04402254531628119]
07:36:42.665 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=417, Suspiciousness=0.04402254531628119]
07:36:42.666 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:42,666 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:42.667 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:42.671 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:42.701 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:42.701 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:42,718 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:42,718 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:42,773 DEBUG spoon.support.StandardEnvironment - built in 55 ms
2015-03-02 07:36:42,773 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:42,773 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:42.774 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:42,774 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:42.778 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return org.apache.commons.math.complex.Complex.NaN ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.real",factor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.imaginary",factor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isInfinite",factor.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isNaN",factor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor",factor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return org.apache.commons.math.complex.Complex.NaN;
}
07:36:42.779 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return org.apache.commons.math.complex.Complex.NaN ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.real",factor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.imaginary",factor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isInfinite",factor.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isNaN",factor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor",factor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return org.apache.commons.math.complex.Complex.NaN;
    
}
07:36:42.779 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:42.784 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:42.821 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:42.831 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:42.834 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:42.834 [Thread-39] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:42.839 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:42.920 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:42.920 [Thread-40] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (81 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:42.925 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:42.925 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:42.925 [Thread-41] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:42.929 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:42.930 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:42.931 [Thread-42] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:42.931 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:417
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:42.931 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:42.931 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:42.931 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:417 otherwise the patch would be "true" or "false"
07:36:42.931 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=417, Suspiciousness=0.04402254531628119]
07:36:42.931 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.RetryRunner, LineNumber=39, Suspiciousness=0.04075695729696112]
07:36:42.932 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.RetryRunner, LineNumber=40, Suspiciousness=0.04075695729696112]
07:36:42.935 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=748, Suspiciousness=0.039374961547907886]
07:36:42.935 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:42,935 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:42.937 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:42.941 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:42.970 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:42.970 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:748.
07:36:42.970 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=748, Suspiciousness=0.039374961547907886]
07:36:42.970 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=131, Suspiciousness=0.038124642583151166]
07:36:42.970 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:42,970 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:42.972 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:42.975 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:43.004 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:43.004 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:131.
07:36:43.004 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=131, Suspiciousness=0.038124642583151166]
07:36:43.005 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=132, Suspiciousness=0.038124642583151166]
07:36:43.005 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:43,005 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:43.006 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:43.010 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:43.038 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:43.039 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:43,056 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:43,056 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:43,111 DEBUG spoon.support.StandardEnvironment - built in 55 ms
2015-03-02 07:36:43,111 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:43,111 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:43.112 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:43,112 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:43.115 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return (org.apache.commons.math.util.FastMath.abs(real)) * (org.apache.commons.math.util.FastMath.sqrt((1 + (q * q)))) ##### Before:
{
    if ((real) == 0.0) {
        return org.apache.commons.math.util.FastMath.abs(imaginary);
    } 
    double q = (imaginary) / (real);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return (org.apache.commons.math.util.FastMath.abs(real)) * (org.apache.commons.math.util.FastMath.sqrt((1 + (q * q))));
}
07:36:43.116 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return (org.apache.commons.math.util.FastMath.abs(real)) * (org.apache.commons.math.util.FastMath.sqrt((1 + (q * q)))) ##### After:
{
    if ((real) == 0.0) {
        return org.apache.commons.math.util.FastMath.abs(imaginary);
    } 
    double q = (imaginary) / (real);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("q",q);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return (org.apache.commons.math.util.FastMath.abs(real)) * (org.apache.commons.math.util.FastMath.sqrt((1 + (q * q))));
    
}
07:36:43.116 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:43.120 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:43.146 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:177: error: missing return statement
    }
    ^
07:36:43.147 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=128, Suspiciousness=0.036986336072765455]
07:36:43.147 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:43,147 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:43.149 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:43.152 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:43.181 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:43.182 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:43,199 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:43,199 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:43,253 DEBUG spoon.support.StandardEnvironment - built in 53 ms
2015-03-02 07:36:43,253 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:43,253 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:43.253 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:43,254 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:43.257 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((real) == 0.0) {
    return org.apache.commons.math.util.FastMath.abs(imaginary);
} 
07:36:43.258 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:43.262 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:43.297 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:43.307 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:43.310 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:43.310 [Thread-43] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:43.315 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(NaN, NaN)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
07:36:43.398 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:43.398 [Thread-44] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (83 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:43.403 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:43.403 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:43.403 [Thread-45] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:43.408 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:43.410 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:43.410 [Thread-46] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:43.410 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:128
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:43.410 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:43.410 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:43.410 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:128 otherwise the patch would be "true" or "false"
07:36:43.410 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=128, Suspiciousness=0.036986336072765455]
07:36:43.410 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=161, Suspiciousness=0.03498557142706598]
07:36:43.410 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:43,410 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:43.411 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:43.415 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:43.444 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:43.444 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:161.
07:36:43.444 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=161, Suspiciousness=0.03498557142706598]
07:36:43.444 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=744, Suspiciousness=0.033277916281986085]
07:36:43.444 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:43,444 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:43.445 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:43.449 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:43.478 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:43.478 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:43,495 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:43,496 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:43,549 DEBUG spoon.support.StandardEnvironment - built in 54 ms
2015-03-02 07:36:43,549 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:43,549 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:43.550 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:43,551 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:43.554 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (isNaN) {
    return org.apache.commons.math.complex.Complex.NaN;
} 
07:36:43.554 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:43.558 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:43.593 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:43.603 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:43.606 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:43.606 [Thread-47] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:43.611 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:43.694 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:43.694 [Thread-48] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (83 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:43.699 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:43.699 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:43.699 [Thread-49] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:43.704 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
07:36:43.705 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:43.705 [Thread-50] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:43.706 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:744
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:43.706 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:43.706 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:43.706 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:744 otherwise the patch would be "true" or "false"
07:36:43.706 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=744, Suspiciousness=0.033277916281986085]
07:36:43.706 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=426, Suspiciousness=0.03251280443811776]
07:36:43.706 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:43,706 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:43.707 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:43.711 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:43.739 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:43.740 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:426.
07:36:43.740 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=426, Suspiciousness=0.03251280443811776]
07:36:43.740 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=491, Suspiciousness=0.03251280443811776]
07:36:43.740 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:43,740 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:43.741 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:43.745 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:43.772 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:43.773 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:491.
07:36:43.773 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=491, Suspiciousness=0.03251280443811776]
07:36:43.773 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=156, Suspiciousness=0.03179815003744467]
07:36:43.773 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:43,773 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:43.774 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:43.778 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:43.805 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:43.805 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:43,822 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:43,823 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:43,876 DEBUG spoon.support.StandardEnvironment - built in 54 ms
2015-03-02 07:36:43,876 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:43,876 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:43.877 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:43,877 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:43.881 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(addend) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.isNaN",addend.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend",addend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.real",addend.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.isInfinite",addend.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.imaginary",addend.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.util.MathUtils.checkNotNull(addend);
    if ((isNaN) || (addend.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    return createComplex(((real) + (addend.getReal())), ((imaginary) + (addend.getImaginary())));
}
07:36:43.881 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(addend) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.isNaN",addend.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend",addend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.real",addend.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.isInfinite",addend.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("addend.imaginary",addend.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.util.MathUtils.checkNotNull(addend);
    
    if ((isNaN) || (addend.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    return createComplex(((real) + (addend.getReal())), ((imaginary) + (addend.getImaginary())));
}
07:36:43.882 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:43.886 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:43.919 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:43.929 [Thread-51] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:43.932 [Thread-51] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:43.932 [Thread-51] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:43.961 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:44.044 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:44.044 [Thread-52] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (84 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:44.049 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:44.049 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:44.049 [Thread-53] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:44.054 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:44.056 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:44.056 [Thread-54] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:44.056 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:156
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:44.056 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:44.056 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:44.056 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:156 otherwise the patch would be "true" or "false"
07:36:44.056 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=156, Suspiciousness=0.03179815003744467]
07:36:44.057 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=157, Suspiciousness=0.03179815003744467]
07:36:44.057 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:44,057 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:44.058 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:44.062 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:44.088 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:44.089 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:44,106 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:44,106 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:44,160 DEBUG spoon.support.StandardEnvironment - built in 54 ms
2015-03-02 07:36:44,160 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:44,160 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:44.161 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:44,161 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:44.164 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((isNaN) || (addend.isNaN)) {
    return org.apache.commons.math.complex.Complex.NaN;
} 
07:36:44.165 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:44.169 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:44.203 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:44.213 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:44.216 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:44.216 [Thread-55] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:44.221 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:44.304 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:44.304 [Thread-56] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (83 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:44.309 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:44.309 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:44.309 [Thread-57] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:44.313 [Thread-58] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
07:36:44.315 [Thread-58] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:44.315 [Thread-58] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:44.315 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:157
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:44.316 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:44.316 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:44.316 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:157 otherwise the patch would be "true" or "false"
07:36:44.316 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=157, Suspiciousness=0.03179815003744467]
07:36:44.316 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=486, Suspiciousness=0.030499714066520935]
07:36:44.316 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:44,316 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:44.317 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:44.321 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:44.347 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:44.348 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:44,365 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:44,365 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:44,419 DEBUG spoon.support.StandardEnvironment - built in 54 ms
2015-03-02 07:36:44,419 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:44,419 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:44.420 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:44,420 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:44.424 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(subtrahend) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.imaginary",subtrahend.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.real",subtrahend.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend",subtrahend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.isInfinite",subtrahend.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.isNaN",subtrahend.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.util.MathUtils.checkNotNull(subtrahend);
    if ((isNaN) || (subtrahend.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    return createComplex(((real) - (subtrahend.getReal())), ((imaginary) - (subtrahend.getImaginary())));
}
07:36:44.425 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(subtrahend) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.imaginary",subtrahend.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.real",subtrahend.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend",subtrahend);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.isInfinite",subtrahend.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("subtrahend.isNaN",subtrahend.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.util.MathUtils.checkNotNull(subtrahend);
    
    if ((isNaN) || (subtrahend.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    return createComplex(((real) - (subtrahend.getReal())), ((imaginary) - (subtrahend.getImaginary())));
}
07:36:44.425 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:44.429 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:44.462 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:44.471 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:44.475 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:44.475 [Thread-59] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:44.479 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:44.563 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:44.563 [Thread-60] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (84 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:44.568 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:44.568 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:44.568 [Thread-61] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:44.572 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:44.574 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:44.574 [Thread-62] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:44.574 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:486
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:44.574 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:44.574 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:44.574 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:486 otherwise the patch would be "true" or "false"
07:36:44.575 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=486, Suspiciousness=0.030499714066520935]
07:36:44.575 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=487, Suspiciousness=0.030499714066520935]
07:36:44.575 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:44,575 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:44.576 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:44.579 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:44.606 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:44.606 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:44,623 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:44,624 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:44,677 DEBUG spoon.support.StandardEnvironment - built in 54 ms
2015-03-02 07:36:44,677 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:44,677 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:44.678 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:44,678 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:44.682 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((isNaN) || (subtrahend.isNaN)) {
    return org.apache.commons.math.complex.Complex.NaN;
} 
07:36:44.682 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:44.686 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:44.719 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:44.728 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:44.732 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:44.732 [Thread-63] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:44.736 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:44.820 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:44.820 [Thread-64] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (84 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:44.824 [Thread-65] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:44.824 [Thread-65] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:44.825 [Thread-65] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:44.829 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
07:36:44.831 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:44.831 [Thread-66] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:44.831 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:487
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:44.831 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:44.831 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:44.831 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:487 otherwise the patch would be "true" or "false"
07:36:44.831 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=487, Suspiciousness=0.030499714066520935]
07:36:44.831 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=419, Suspiciousness=0.02934836354418746]
07:36:44.831 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:44,831 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:44.832 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:44.836 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:44.862 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:44.862 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:44,879 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:44,880 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:44,933 DEBUG spoon.support.StandardEnvironment - built in 54 ms
2015-03-02 07:36:44,934 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:44,934 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:44.934 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:44,934 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:44.938 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) || (java.lang.Double.isInfinite(factor.real))) || (java.lang.Double.isInfinite(factor.imaginary))) {
    return org.apache.commons.math.complex.Complex.INF;
} 
07:36:44.939 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:44.942 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:44.975 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:44.984 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:44.987 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:44.988 [Thread-67] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:44.992 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(NaN, NaN)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
07:36:45.073 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:45.074 [Thread-68] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (82 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:45.078 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:45.078 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:45.078 [Thread-69] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:45.083 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:45.085 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:45.085 [Thread-70] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:45.085 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:419
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:45.085 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:45.085 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:45.085 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:419 otherwise the patch would be "true" or "false"
07:36:45.085 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=419, Suspiciousness=0.02934836354418746]
07:36:45.085 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=362, Suspiciousness=0.02869171750210899]
07:36:45.085 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:45,085 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:45.087 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:45.090 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:45.116 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:45.116 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:362.
07:36:45.116 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=362, Suspiciousness=0.02869171750210899]
07:36:45.116 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=353, Suspiciousness=0.028565599452002117]
07:36:45.116 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:45,116 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:45.118 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:45.121 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:45.146 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:45.146 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:353.
07:36:45.146 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=353, Suspiciousness=0.028565599452002117]
07:36:45.146 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=121, Suspiciousness=0.02831827358942995]
07:36:45.146 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:45,146 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:45.148 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:45.151 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:45.176 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:45.176 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:45,193 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:45,193 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:45,247 DEBUG spoon.support.StandardEnvironment - built in 54 ms
2015-03-02 07:36:45,247 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:45,247 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:45.248 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:45,248 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:45.251 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((org.apache.commons.math.util.FastMath.abs(real)) < (org.apache.commons.math.util.FastMath.abs(imaginary))) {
    if ((imaginary) == 0.0) {
        return org.apache.commons.math.util.FastMath.abs(real);
    } 
    double q = (real) / (imaginary);
    return (org.apache.commons.math.util.FastMath.abs(imaginary)) * (org.apache.commons.math.util.FastMath.sqrt((1 + (q * q))));
} else {
    if ((real) == 0.0) {
        return org.apache.commons.math.util.FastMath.abs(imaginary);
    } 
    double q = (imaginary) / (real);
    return (org.apache.commons.math.util.FastMath.abs(real)) * (org.apache.commons.math.util.FastMath.sqrt((1 + (q * q))));
}
07:36:45.252 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:45.255 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:45.286 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:45.295 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:45.299 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:45.299 [Thread-71] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:45.304 [Thread-72] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:45.453 [Thread-72] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:45.453 [Thread-72] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (149 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:45.457 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:45.457 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:45.457 [Thread-73] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:45.460 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:45.462 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:45.462 [Thread-74] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:45.462 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:121
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:45.462 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:45.462 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:45.462 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:121 otherwise the patch would be "true" or "false"
07:36:45.463 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=121, Suspiciousness=0.02831827358942995]
07:36:45.463 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2991, Suspiciousness=0.02831827358942995]
07:36:45.463 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:45,463 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:45.471 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:45.507 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:45.600 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:45.600 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:45,617 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:45,618 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:45,832 DEBUG spoon.support.StandardEnvironment - built in 214 ms
2015-03-02 07:36:45,833 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:45,843 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:45.844 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:45,844 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:45.847 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((y < 0.0) || (invy < 0.0)) {
    return -(java.lang.Math.PI);
} else {
    return java.lang.Math.PI;
}
07:36:45.852 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:45.888 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:46.015 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:46.024 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:46.027 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:46.028 [Thread-75] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:46.030 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(1.5707963267948966, 0.5493061443340549)
(1.5707963267948966, 0.5850356263251273)
(1.5707963267948966, 0.6263814842476839)
(1.5707963267948966, 0.6749633584745077)
(1.5707963267948966, 0.7331685343967135)
(1.5707963267948966, 0.8047189562170501)
(1.5707963267948966, 0.8958797346140276)
(1.5707963267948966, 1.0184409636305198)
(1.5707963267948966, 1.1989476363991853)
(1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:46.123 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:46.123 [Thread-76] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (94 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:46.125 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:46.125 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:46.125 [Thread-77] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:46.127 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:46.129 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:46.129 [Thread-78] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:46.130 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:2991
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:46.130 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:46.130 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:46.130 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:2991 otherwise the patch would be "true" or "false"
07:36:46.130 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2991, Suspiciousness=0.02831827358942995]
07:36:46.130 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2997, Suspiciousness=0.027842302319485226]
07:36:46.130 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:46,130 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:46.138 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:46.170 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:46.247 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:46.247 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:46,265 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:46,265 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:46,479 DEBUG spoon.support.StandardEnvironment - built in 214 ms
2015-03-02 07:36:46,480 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:46,480 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:46.480 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:46,481 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:46.484 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return result ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invx",invx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invy",invy);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return result;
}
07:36:46.484 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return result ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("result",result);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invx",invx);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("invy",invy);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("y",y);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return result;
    
}
07:36:46.489 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:46.520 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:46.597 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:46.605 [Thread-79] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:46.608 [Thread-79] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:46.608 [Thread-79] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:46.610 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:46.692 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:46.692 [Thread-80] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (82 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:46.694 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:46.694 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:46.694 [Thread-81] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:46.696 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:46.698 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:46.698 [Thread-82] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:46.698 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:2997
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:46.698 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:46.698 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:46.698 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:2997 otherwise the patch would be "true" or "false"
07:36:46.698 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2997, Suspiciousness=0.027842302319485226]
07:36:46.698 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=118, Suspiciousness=0.026153289048297074]
07:36:46.698 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:46,698 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:46.700 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:46.703 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:46.726 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:46.726 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:46,743 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:46,743 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:46,795 DEBUG spoon.support.StandardEnvironment - built in 52 ms
2015-03-02 07:36:46,796 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:46,796 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:46.796 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:46,797 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:46.800 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (isInfinite()) {
    return java.lang.Double.POSITIVE_INFINITY;
} 
07:36:46.800 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:46.804 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:46.831 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:46.839 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:46.842 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:46.843 [Thread-83] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:46.844 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(NaN, NaN)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
07:36:46.927 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:46.927 [Thread-84] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (83 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:46.929 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:46.929 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:46.929 [Thread-85] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:46.931 [Thread-86] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:46.933 [Thread-86] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:46.933 [Thread-86] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:46.933 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:118
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:46.933 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:46.933 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:46.933 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:118 otherwise the patch would be "true" or "false"
07:36:46.933 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=118, Suspiciousness=0.026153289048297074]
07:36:46.933 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=115, Suspiciousness=0.02577696311132335]
07:36:46.934 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:46,934 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:46.935 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:46.938 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:46.960 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:46.960 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:46,977 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:46,978 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:47,030 DEBUG spoon.support.StandardEnvironment - built in 52 ms
2015-03-02 07:36:47,030 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:47,030 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:47.031 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:47,031 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:47.034 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (isNaN) {
    return java.lang.Double.NaN;
} 
07:36:47.034 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:47.038 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:47.065 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:47.073 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:47.076 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:47.076 [Thread-87] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:47.078 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:47.160 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:47.160 [Thread-88] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (82 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:47.162 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:47.162 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:47.162 [Thread-89] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:47.164 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
07:36:47.166 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:47.166 [Thread-90] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:47.166 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:115
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:47.166 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:47.166 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:47.167 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:115 otherwise the patch would be "true" or "false"
07:36:47.167 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=115, Suspiciousness=0.02577696311132335]
07:36:47.167 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=415, Suspiciousness=0.02577696311132335]
07:36:47.167 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:47,167 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:47.168 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:47.171 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:47.194 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:47.194 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:47,211 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:47,211 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:47,263 DEBUG spoon.support.StandardEnvironment - built in 52 ms
2015-03-02 07:36:47,263 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:47,263 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:47.264 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:47,264 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:47.268 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(factor) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.real",factor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.imaginary",factor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isInfinite",factor.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isNaN",factor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor",factor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    org.apache.commons.math.util.MathUtils.checkNotNull(factor);
    if ((isNaN) || (factor.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    if ((((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) || (java.lang.Double.isInfinite(factor.real))) || (java.lang.Double.isInfinite(factor.imaginary))) {
        return org.apache.commons.math.complex.Complex.INF;
    } 
    return createComplex((((real) * (factor.real)) - ((imaginary) * (factor.imaginary))), (((real) * (factor.imaginary)) + ((imaginary) * (factor.real))));
}
07:36:47.269 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### org.apache.commons.math.util.MathUtils.checkNotNull(factor) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.real",factor.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.imaginary",factor.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isInfinite",factor.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor.isNaN",factor.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("factor",factor);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        org.apache.commons.math.util.MathUtils.checkNotNull(factor);
    
    if ((isNaN) || (factor.isNaN)) {
        return org.apache.commons.math.complex.Complex.NaN;
    } 
    if ((((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) || (java.lang.Double.isInfinite(factor.real))) || (java.lang.Double.isInfinite(factor.imaginary))) {
        return org.apache.commons.math.complex.Complex.INF;
    } 
    return createComplex((((real) * (factor.real)) - ((imaginary) * (factor.imaginary))), (((real) * (factor.imaginary)) + ((imaginary) * (factor.real))));
}
07:36:47.269 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:47.272 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:47.300 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:47.309 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:47.313 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:47.313 [Thread-91] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:47.315 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:47.404 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:47.404 [Thread-92] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (89 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:47.406 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:47.406 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:47.407 [Thread-93] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:47.408 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:47.410 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:47.410 [Thread-94] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:47.410 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:415
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:47.410 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:47.411 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:47.411 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:415 otherwise the patch would be "true" or "false"
07:36:47.411 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=415, Suspiciousness=0.02577696311132335]
07:36:47.411 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=416, Suspiciousness=0.02577696311132335]
07:36:47.411 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:47,411 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:47.412 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:47.415 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:47.437 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:47.438 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:47,455 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:47,455 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:47,507 DEBUG spoon.support.StandardEnvironment - built in 52 ms
2015-03-02 07:36:47,507 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:47,507 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:47.508 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:47,508 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:47.512 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((isNaN) || (factor.isNaN)) {
    return org.apache.commons.math.complex.Complex.NaN;
} 
07:36:47.512 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:47.515 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:47.542 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:47.549 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:47.552 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:47.552 [Thread-95] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:47.554 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:47.668 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:47.668 [Thread-96] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (114 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:47.670 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:47.670 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:47.670 [Thread-97] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:47.672 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
07:36:47.674 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:47.674 [Thread-98] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:47.674 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:416
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:47.674 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:47.674 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:47.675 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:416 otherwise the patch would be "true" or "false"
07:36:47.675 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=416, Suspiciousness=0.02577696311132335]
07:36:47.675 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=325, Suspiciousness=0.024419314525275217]
07:36:47.675 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:47,675 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:47.676 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:47.679 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:47.700 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:47.701 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:47,718 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:47,718 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:47,770 DEBUG spoon.support.StandardEnvironment - built in 52 ms
2015-03-02 07:36:47,770 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:47,770 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:47.771 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:47,771 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:47.775 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return ((real) == (c.real)) && ((imaginary) == (c.imaginary)) ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("other",other);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    return ((real) == (c.real)) && ((imaginary) == (c.imaginary));
}
07:36:47.775 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### return ((real) == (c.real)) && ((imaginary) == (c.imaginary)) ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I",org.apache.commons.math.complex.Complex.I);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isNaN",org.apache.commons.math.complex.Complex.this.isNaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.imaginary",org.apache.commons.math.complex.Complex.this.imaginary);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("other",other);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF",org.apache.commons.math.complex.Complex.INF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO",org.apache.commons.math.complex.Complex.ZERO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE",org.apache.commons.math.complex.Complex.ONE);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.real",org.apache.commons.math.complex.Complex.this.real);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.this.isInfinite",org.apache.commons.math.complex.Complex.this.isInfinite);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN",org.apache.commons.math.complex.Complex.NaN);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.serialVersionUID",org.apache.commons.math.complex.Complex.serialVersionUID);
        if (org.apache.commons.math.complex.Complex.I!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getImaginary()",org.apache.commons.math.complex.Complex.I.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.getReal()",org.apache.commons.math.complex.Complex.I.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isNaN()",org.apache.commons.math.complex.Complex.I.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.I.isInfinite()",org.apache.commons.math.complex.Complex.I.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.INF!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getImaginary()",org.apache.commons.math.complex.Complex.INF.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.getReal()",org.apache.commons.math.complex.Complex.INF.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isNaN()",org.apache.commons.math.complex.Complex.INF.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.INF.isInfinite()",org.apache.commons.math.complex.Complex.INF.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ONE!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getImaginary()",org.apache.commons.math.complex.Complex.ONE.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.getReal()",org.apache.commons.math.complex.Complex.ONE.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isNaN()",org.apache.commons.math.complex.Complex.ONE.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ONE.isInfinite()",org.apache.commons.math.complex.Complex.ONE.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.ZERO!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getImaginary()",org.apache.commons.math.complex.Complex.ZERO.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.getReal()",org.apache.commons.math.complex.Complex.ZERO.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isNaN()",org.apache.commons.math.complex.Complex.ZERO.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.ZERO.isInfinite()",org.apache.commons.math.complex.Complex.ZERO.isInfinite());
        } 
        if (org.apache.commons.math.complex.Complex.NaN!=null) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getImaginary()",org.apache.commons.math.complex.Complex.NaN.getImaginary());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.getReal()",org.apache.commons.math.complex.Complex.NaN.getReal());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isNaN()",org.apache.commons.math.complex.Complex.NaN.isNaN());
            fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.complex.Complex.NaN.isInfinite()",org.apache.commons.math.complex.Complex.NaN.isInfinite());
        } 
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        return ((real) == (c.real)) && ((imaginary) == (c.imaginary));
    
}
07:36:47.776 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:47.779 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:47.805 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:47.812 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:47.815 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:47.815 [Thread-99] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:47.817 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:47.899 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:47.899 [Thread-100] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (82 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:47.900 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:47.901 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:47.901 [Thread-101] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:47.903 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:47.904 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:47.904 [Thread-102] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:47.904 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:325
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:47.904 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:47.904 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:47.904 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:325 otherwise the patch would be "true" or "false"
07:36:47.904 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=325, Suspiciousness=0.024419314525275217]
07:36:47.904 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2990, Suspiciousness=0.024419314525275217]
07:36:47.904 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:47,904 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:47.912 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:47.967 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:48.031 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:48.031 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:48,048 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:48,048 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:48,257 DEBUG spoon.support.StandardEnvironment - built in 209 ms
2015-03-02 07:36:48,257 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:48,258 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:48.258 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:48,258 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:48.262 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((x < 0.0) || (invx < 0.0)) {
    if ((y < 0.0) || (invy < 0.0)) {
        return -(java.lang.Math.PI);
    } else {
        return java.lang.Math.PI;
    }
} else {
    return result;
}
07:36:48.267 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:48.296 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:48.364 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:48.372 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:48.375 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:48.375 [Thread-103] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:48.377 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(0.0, 0.5493061443340549)
(0.0, 0.5850356263251273)
(0.0, 0.6263814842476839)
(0.0, 0.6749633584745077)
(0.0, 0.7331685343967135)
(0.0, 0.8047189562170501)
(0.0, 0.8958797346140276)
(0.0, 1.0184409636305198)
(0.0, 1.1989476363991853)
(0.0, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:48.459 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:48.460 [Thread-104] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (83 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:48.462 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:48.462 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:48.462 [Thread-105] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:48.463 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(-1.5707963267948966, 1.4722194895832204)
(-1.5707963267948966, 1.0986122886681098)
(-1.5707963267948966, 0.8673005276940532)
(-1.5707963267948966, 0.6931471805599453)
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.4236489301936017)
(-1.5707963267948966, 0.3095196042031116)
(-1.5707963267948966, 0.2027325540540821)
(-1.5707963267948966, 0.10033534773107562)
07:36:48.466 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:48.466 [Thread-106] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:48.466 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:2990
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:48.466 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:48.466 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:48.466 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:2990 otherwise the patch would be "true" or "false"
07:36:48.466 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2990, Suspiciousness=0.024419314525275217]
07:36:48.466 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2978, Suspiciousness=0.023816275411477048]
07:36:48.466 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:48,466 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:48.474 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:48.501 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:48.562 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:48.562 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:2978.
07:36:48.562 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2978, Suspiciousness=0.023816275411477048]
07:36:48.562 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2979, Suspiciousness=0.023816275411477048]
07:36:48.562 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:48,562 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:48.570 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:48.596 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:48.656 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:48.656 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:2979.
07:36:48.656 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2979, Suspiciousness=0.023816275411477048]
07:36:48.656 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2980, Suspiciousness=0.023816275411477048]
07:36:48.657 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:48,657 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:48.664 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:48.690 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:48.748 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:48.749 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:2980.
07:36:48.749 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2980, Suspiciousness=0.023816275411477048]
07:36:48.749 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2982, Suspiciousness=0.023816275411477048]
07:36:48.749 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:48,749 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:48.757 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:48.784 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:48.841 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:48.841 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:48,859 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:48,859 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:49,067 DEBUG spoon.support.StandardEnvironment - built in 208 ms
2015-03-02 07:36:49,067 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:49,067 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:49.068 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:49,068 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:49.071 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (invx == 0.0) {
    if (x > 0) {
        return y;
    } else {
        return org.apache.commons.math.util.FastMath.copySign(java.lang.Math.PI, y);
    }
} 
07:36:49.076 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:49.104 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:49.166 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:49.172 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:49.176 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:49.176 [Thread-107] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:49.178 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:49.273 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:49.274 [Thread-108] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (96 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:49.276 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:49.276 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:49.276 [Thread-109] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:49.278 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:49.280 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:49.280 [Thread-110] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:49.280 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:2982
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:49.280 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:49.280 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:49.280 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:2982 otherwise the patch would be "true" or "false"
07:36:49.280 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2982, Suspiciousness=0.023816275411477048]
07:36:49.280 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=321, Suspiciousness=0.023531040266750583]
07:36:49.280 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:49,280 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:49.282 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:49.285 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:49.305 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:49.305 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:321.
07:36:49.305 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=321, Suspiciousness=0.023531040266750583]
07:36:49.305 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=322, Suspiciousness=0.023531040266750583]
07:36:49.305 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:49,305 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:49.306 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:49.332 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:49.353 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:49.353 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:49,370 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:49,370 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:49,422 DEBUG spoon.support.StandardEnvironment - built in 52 ms
2015-03-02 07:36:49,422 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:49,422 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:49.423 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:49,423 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:49.426 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (c.isNaN) {
    return isNaN;
} else {
    return ((real) == (c.real)) && ((imaginary) == (c.imaginary));
}
07:36:49.427 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:49.430 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:49.454 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:49.462 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:49.465 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:49.465 [Thread-111] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:49.467 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:49.547 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:49.547 [Thread-112] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (80 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:49.549 [Thread-113] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:49.549 [Thread-113] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. SUCCESS]
07:36:49.549 [Thread-113] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from org.apache.commons.math.complex.ComplexTest#testDivideZero
07:36:49.549 [Thread-113] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
07:36:49.551 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:49.552 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:49.552 [Thread-114] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:49.552 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:322
[testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:49.552 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:49.552 [main] DEBUG tests.output - Second set: 
[testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:49.553 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 1 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:322 otherwise the patch would be "true" or "false"
07:36:49.553 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=322, Suspiciousness=0.023531040266750583]
07:36:49.553 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=386, Suspiciousness=0.022990024493585143]
07:36:49.553 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:49,553 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:49.554 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:49.557 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:49.577 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:49.577 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:386.
07:36:49.577 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=386, Suspiciousness=0.022990024493585143]
07:36:49.577 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=320, Suspiciousness=0.022990024493585143]
07:36:49.577 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:49,577 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:49.578 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:49.581 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:49.602 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:49.602 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:49,619 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:49,619 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:49,671 DEBUG spoon.support.StandardEnvironment - built in 52 ms
2015-03-02 07:36:49,671 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:49,671 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:49.671 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:49,672 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:49.675 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (other instanceof org.apache.commons.math.complex.Complex) {
    org.apache.commons.math.complex.Complex c = ((org.apache.commons.math.complex.Complex)(other));
    if (c.isNaN) {
        return isNaN;
    } else {
        return ((real) == (c.real)) && ((imaginary) == (c.imaginary));
    }
} 
07:36:49.675 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:49.679 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:49.703 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:49.710 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:49.714 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:49.714 [Thread-115] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:49.716 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:49.795 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:49.795 [Thread-116] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (79 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:49.797 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:49.797 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:49.797 [Thread-117] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:49.799 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:49.800 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:49.800 [Thread-118] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:49.800 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:320
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:49.800 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:49.800 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:49.800 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:320 otherwise the patch would be "true" or "false"
07:36:49.800 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=320, Suspiciousness=0.022990024493585143]
07:36:49.800 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=97, Suspiciousness=0.022484687520664393]
07:36:49.801 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:49,801 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:49.802 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:49.805 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:49.825 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:49.825 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:97.
07:36:49.825 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=97, Suspiciousness=0.022484687520664393]
07:36:49.825 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=98, Suspiciousness=0.022484687520664393]
07:36:49.825 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:49,825 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:49.826 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:49.829 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:49.849 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:49.849 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:49,866 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:49,866 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:49,918 DEBUG spoon.support.StandardEnvironment - built in 52 ms
2015-03-02 07:36:49,918 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:49,918 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:49.918 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:49,919 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:49.919 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.real = real ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    this.real = real;
    this.imaginary = imaginary;
    isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
}
07:36:49.919 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.real = real ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        this.real = real;
    
    this.imaginary = imaginary;
    isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
}
07:36:49.920 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:49.923 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:49.941 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:106: error: variable real might not have been initialized
    }
    ^
07:36:49.942 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=99, Suspiciousness=0.022484687520664393]
07:36:49.943 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:49,943 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:49.944 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:49.947 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:49.968 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:49.969 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:49,986 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:49,986 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:50,037 DEBUG spoon.support.StandardEnvironment - built in 51 ms
2015-03-02 07:36:50,037 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:50,038 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:50.038 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:50,038 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:50.039 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.imaginary = imaginary ##### Before:
{
    this.real = real;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    this.imaginary = imaginary;
    isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
}
07:36:50.039 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### this.imaginary = imaginary ##### After:
{
    this.real = real;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        this.imaginary = imaginary;
    
    isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
}
07:36:50.040 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:50.043 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:50.061 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:106: error: variable imaginary might not have been initialized
    }
    ^
07:36:50.062 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=101, Suspiciousness=0.022484687520664393]
07:36:50.062 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:50,062 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:50.063 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:50.066 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:50.086 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:50.087 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:50,104 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:50,104 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:50,155 DEBUG spoon.support.StandardEnvironment - built in 51 ms
2015-03-02 07:36:50,155 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:50,155 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:50.156 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:50,156 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:50.157 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary)) ##### Before:
{
    this.real = real;
    this.imaginary = imaginary;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
}
07:36:50.157 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary)) ##### After:
{
    this.real = real;
    this.imaginary = imaginary;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    
    isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
}
07:36:50.157 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:50.160 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:50.178 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:105: error: variable isNaN might not have been initialized
        isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
                        ^
07:36:50.179 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=102, Suspiciousness=0.022484687520664393]
07:36:50.179 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:50,179 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:50.180 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:50.183 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:50.203 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:50.203 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:50,220 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:50,221 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:50,273 DEBUG spoon.support.StandardEnvironment - built in 52 ms
2015-03-02 07:36:50,273 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:50,273 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:50.274 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:50,274 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:50.275 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) ##### Before:
{
    this.real = real;
    this.imaginary = imaginary;
    isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
}
07:36:50.275 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary))) ##### After:
{
    this.real = real;
    this.imaginary = imaginary;
    isNaN = (java.lang.Double.isNaN(real)) || (java.lang.Double.isNaN(imaginary));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        isInfinite = (!(isNaN)) && ((java.lang.Double.isInfinite(real)) || (java.lang.Double.isInfinite(imaginary)));
    
}
07:36:50.275 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:50.279 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:50.297 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation errors]
Complex.java:106: error: variable isInfinite might not have been initialized
    }
    ^
07:36:50.297 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=104, Suspiciousness=0.022484687520664393]
07:36:50.297 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:50,297 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:50.298 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:50.302 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:50.321 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:50.321 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:104.
07:36:50.321 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=104, Suspiciousness=0.022484687520664393]
07:36:50.322 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=317, Suspiciousness=0.020024043286581833]
07:36:50.322 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:50,322 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:50.323 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:50.326 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:50.345 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:50.346 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:50,363 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:50,363 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/complex/Complex.java]
2015-03-02 07:36:50,414 DEBUG spoon.support.StandardEnvironment - built in 51 ms
2015-03-02 07:36:50,415 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:50,415 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:50.415 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:50,415 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:50.419 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (this == other) {
    return true;
} 
07:36:50.419 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:50.422 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:50.447 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:50.454 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:50.458 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:50.458 [Thread-119] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:50.460 [Thread-120] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:50.539 [Thread-120] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:50.539 [Thread-120] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (79 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:50.541 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:50.541 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. SUCCESS]
07:36:50.541 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Collecting specifications from org.apache.commons.math.complex.ComplexTest#testDivideZero
07:36:50.541 [Thread-121] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0
07:36:50.542 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:50.543 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:50.543 [Thread-122] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:50.543 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.complex.Complex:317
[testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:50.543 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:50.543 [main] DEBUG tests.output - Second set: 
[testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:50.543 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 1 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.complex.Complex:317 otherwise the patch would be "true" or "false"
07:36:50.544 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=317, Suspiciousness=0.020024043286581833]
07:36:50.544 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2977, Suspiciousness=0.01784860761749785]
07:36:50.544 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:50,544 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:50.552 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:50.577 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:50.631 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:50.631 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:50,648 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:50,648 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:50,856 DEBUG spoon.support.StandardEnvironment - built in 208 ms
2015-03-02 07:36:50,857 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:50,868 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:50.868 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:50,868 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:50.872 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (y == 0.0) {
    double result = x * y;
    double invx = 1.0 / x;
    double invy = 1.0 / y;
    if (invx == 0.0) {
        if (x > 0) {
            return y;
        } else {
            return org.apache.commons.math.util.FastMath.copySign(java.lang.Math.PI, y);
        }
    } 
    if ((x < 0.0) || (invx < 0.0)) {
        if ((y < 0.0) || (invy < 0.0)) {
            return -(java.lang.Math.PI);
        } else {
            return java.lang.Math.PI;
        }
    } else {
        return result;
    }
} 
07:36:50.876 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:50.904 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:50.992 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:50.999 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:51.003 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:51.003 [Thread-123] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:51.005 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:51.086 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:51.086 [Thread-124] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (82 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:51.088 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:51.088 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:51.088 [Thread-125] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:51.090 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:51.092 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:51.092 [Thread-126] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:51.092 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:2977
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:51.092 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:51.092 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:51.092 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:2977 otherwise the patch would be "true" or "false"
07:36:51.092 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2977, Suspiciousness=0.01784860761749785]
07:36:51.092 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2973, Suspiciousness=0.017727598712973542]
07:36:51.092 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:51,092 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:51.100 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:51.126 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:51.177 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:51.177 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:51,194 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:51,194 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:51,402 DEBUG spoon.support.StandardEnvironment - built in 208 ms
2015-03-02 07:36:51,402 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:51,402 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:51.403 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:51,403 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:51.406 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((x != x) || (y != y)) {
    return java.lang.Double.NaN;
} 
07:36:51.411 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:51.439 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:51.494 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:51.501 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:51.504 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:51.504 [Thread-127] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:51.506 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:51.598 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:51.598 [Thread-128] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (92 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:51.600 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:51.600 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:51.600 [Thread-129] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:51.601 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
07:36:51.603 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:51.604 [Thread-130] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:51.604 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:2973
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:51.604 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:51.604 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:51.604 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:2973 otherwise the patch would be "true" or "false"
07:36:51.604 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=2973, Suspiciousness=0.017727598712973542]
07:36:51.604 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=1125, Suspiciousness=0.017049858486761837]
07:36:51.604 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.complex.Complex]
2015-03-02 07:36:51,604 DEBUG spoon.support.StandardEnvironment - processing 'Complex' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:51.605 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.complex.Complex]
07:36:51.608 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:51.628 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:51.628 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.complex.Complex:1125.
07:36:51.628 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.complex.Complex, LineNumber=1125, Suspiciousness=0.017049858486761837]
07:36:51.628 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.MathUtils, LineNumber=2337, Suspiciousness=0.012620871481070599]
07:36:51.628 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.MathUtils]
2015-03-02 07:36:51,628 DEBUG spoon.support.StandardEnvironment - processing 'MathUtils' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:51.632 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.MathUtils]
07:36:51.644 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:51.770 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (4 classes)]
07:36:51.770 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.MathUtils:2337.
07:36:51.770 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.MathUtils, LineNumber=2337, Suspiciousness=0.012620871481070599]
07:36:51.770 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.MathUtils, LineNumber=2334, Suspiciousness=0.012567188245474982]
07:36:51.770 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.MathUtils]
2015-03-02 07:36:51,770 DEBUG spoon.support.StandardEnvironment - processing 'MathUtils' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:51.774 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.MathUtils]
07:36:51.788 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:51.884 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (4 classes)]
07:36:51.884 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/MathUtils.java]
2015-03-02 07:36:51,901 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/MathUtils.java]
2015-03-02 07:36:51,902 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/MathUtils.java]
2015-03-02 07:36:52,012 DEBUG spoon.support.StandardEnvironment - built in 111 ms
2015-03-02 07:36:52,012 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:52,012 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:52.013 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.MathUtils]
2015-03-02 07:36:52,013 DEBUG spoon.support.StandardEnvironment - processing 'MathUtils' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:52.017 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (o == null) {
    throw new org.apache.commons.math.exception.NullArgumentException();
} 
07:36:52.017 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.MathUtils]
07:36:52.032 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:52.096 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (4 classes)]
07:36:52.104 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:52.113 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:52.115 [Thread-131] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[null is not allowed]
org.apache.commons.math.exception.NullArgumentException: null is not allowed
    at org.apache.commons.math.util.MathUtils.checkNotNull(MathUtils.java:2166)
    at org.apache.commons.math.complex.Complex.divide(Complex.java:239)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:231)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
07:36:52.116 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
07:36:52.117 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:52.117 [Thread-132] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null is not allowed]
org.apache.commons.math.exception.NullArgumentException: null is not allowed
    at org.apache.commons.math.util.MathUtils.checkNotNull(MathUtils.java:2166)
    at org.apache.commons.math.complex.Complex.add(Complex.java:150)
    at org.apache.commons.math.complex.Complex.atan(Complex.java:545)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:577)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:52.119 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:52.119 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:52.119 [Thread-133] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:52.121 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:52.205 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:52.205 [Thread-134] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (84 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:52.205 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.MathUtils:2334
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:52.205 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): null is not allowed, testAtanI(org.apache.commons.math.complex.ComplexTest): null is not allowed]
07:36:52.205 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:52.205 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.MathUtils:2334 otherwise the patch would be "true" or "false"
07:36:52.205 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.MathUtils, LineNumber=2334, Suspiciousness=0.012567188245474982]
07:36:52.205 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1315, Suspiciousness=0.007311746800347169]
07:36:52.206 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:52,206 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:52.213 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:52.243 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:52.309 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:52.309 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:52,326 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:52,327 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:52,560 DEBUG spoon.support.StandardEnvironment - built in 234 ms
2015-03-02 07:36:52,560 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:52,560 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:52.561 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:52,561 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:52.566 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
    double xa = x - 1.0;
    double xb = (xa - x) + 1.0;
    double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
    double aa = (xa + tmp) - tmp;
    double ab = xa - aa;
    xa = aa;
    xb = ab;
    double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
    double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
    for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
        ya = (aa + tmp) - tmp;
        yb = (aa - ya) + ab;
        aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
        ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
        tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
        ya = (aa + tmp) - tmp;
        yb = (aa - ya) + ab;
    }
    aa = ya * xa;
    ab = ((ya * xb) + (yb * xa)) + (yb * xb);
    tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
    ya = (aa + tmp) - tmp;
    yb = (aa - ya) + ab;
    return ya + yb;
} 
07:36:52.569 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:52.595 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:52.664 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:52.672 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:52.674 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:52.674 [Thread-135] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:52.676 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:52.758 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:52.758 [Thread-136] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (82 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:52.760 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:52.761 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:52.761 [Thread-137] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:52.763 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3155450954010183)
(0.0, 0.20276612896226132)
(0.0, 0.10033535989281407)
07:36:52.764 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:52.764 [Thread-138] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:52.764 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1315
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:52.764 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:52.764 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:52.764 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1315 otherwise the patch would be "true" or "false"
07:36:52.764 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1315, Suspiciousness=0.007311746800347169]
07:36:52.764 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1429, Suspiciousness=0.007311746800347169]
07:36:52.764 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:52,764 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:52.772 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:52.798 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:52.858 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:52.858 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:52,875 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:52,875 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:53,079 DEBUG spoon.support.StandardEnvironment - built in 204 ms
2015-03-02 07:36:53,079 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:53,079 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:53.080 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:53,080 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:53.085 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = -0.16624882440418567 ##### Before:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
07:36:53.085 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = -0.16624882440418567 ##### After:
{
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lnza = -0.16624882440418567;
    
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
07:36:53.088 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:53.117 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:53.181 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:53.188 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:53.190 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:53.190 [Thread-139] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:53.192 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:53.310 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:53.310 [Thread-140] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (118 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:53.312 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:53.312 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:53.312 [Thread-141] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:53.314 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:53.316 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:53.317 [Thread-142] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:53.317 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1429
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:53.317 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:53.317 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:53.317 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1429 otherwise the patch would be "true" or "false"
07:36:53.317 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1429, Suspiciousness=0.007311746800347169]
07:36:53.317 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1430, Suspiciousness=0.007311746800347169]
07:36:53.317 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:53,317 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:53.325 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:53.351 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:53.408 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:53.408 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:53,425 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:53,425 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:53,629 DEBUG spoon.support.StandardEnvironment - built in 204 ms
2015-03-02 07:36:53,629 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:53,629 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:53.630 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:53,630 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:53.635 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + 0.19999954120254515 ##### Before:
{
    lnza = -0.16624882440418567;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
07:36:53.636 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + 0.19999954120254515 ##### After:
{
    lnza = -0.16624882440418567;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lnza = (lnza * epsilon) + 0.19999954120254515;
    
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
07:36:53.639 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:53.666 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:53.758 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:53.765 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:53.767 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:53.768 [Thread-143] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:53.770 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:53.853 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:53.854 [Thread-144] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (83 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:53.856 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:53.856 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:53.856 [Thread-145] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:53.858 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:53.860 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:53.860 [Thread-146] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:53.861 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1430
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:53.861 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:53.861 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:53.861 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1430 otherwise the patch would be "true" or "false"
07:36:53.861 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1430, Suspiciousness=0.007311746800347169]
07:36:53.861 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1431, Suspiciousness=0.007311746800347169]
07:36:53.861 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:53,861 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:53.869 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:53.893 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:53.947 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:53.947 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:53,964 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:53,965 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:54,169 DEBUG spoon.support.StandardEnvironment - built in 204 ms
2015-03-02 07:36:54,169 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:54,169 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:54.170 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:54,170 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:54.175 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + (-0.2499999997677497) ##### Before:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
07:36:54.175 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + (-0.2499999997677497) ##### After:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lnza = (lnza * epsilon) + (-0.2499999997677497);
    
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
07:36:54.178 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:54.205 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:54.266 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:54.274 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:54.276 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:54.276 [Thread-147] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:54.278 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:54.362 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:54.362 [Thread-148] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (84 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:54.364 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:54.364 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:54.364 [Thread-149] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:54.366 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251385)
(-1.5707963267948966, 0.6263814842477058)
(-1.5707963267948966, 0.6749633584745157)
(-1.5707963267948966, 0.7331685343967154)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.018440963630523)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.5222612188617801)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940632)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936236)
(0.0, 0.3095196042031161)
(0.0, 0.20273255405412263)
(0.0, 0.10033534773108436)
07:36:54.368 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:54.368 [Thread-150] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:54.368 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1431
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:54.368 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:54.368 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:54.369 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1431 otherwise the patch would be "true" or "false"
07:36:54.369 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1431, Suspiciousness=0.007311746800347169]
07:36:54.369 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1432, Suspiciousness=0.007311746800347169]
07:36:54.369 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:54,369 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:54.376 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:54.400 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:54.454 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:54.454 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:54,471 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:54,472 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:54,672 DEBUG spoon.support.StandardEnvironment - built in 200 ms
2015-03-02 07:36:54,672 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:54,673 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:54.673 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:54,673 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:54.678 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + 0.3333333333332802 ##### Before:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
07:36:54.679 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + 0.3333333333332802 ##### After:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lnza = (lnza * epsilon) + 0.3333333333332802;
    
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
07:36:54.682 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:54.708 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:54.766 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:54.772 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:54.775 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:54.775 [Thread-151] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:54.777 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356262945335)
(-1.5707963267948966, 0.6263814841969366)
(-1.5707963267948966, 0.6749633584506374)
(-1.5707963267948966, 0.7331685343887953)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636190805)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.5222612187413713)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276657161)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.42364893014285443)
(0.0, 0.30951960418764374)
(0.0, 0.20273255397348056)
(0.0, 0.10033534770553987)
07:36:54.860 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:54.860 [Thread-152] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (83 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:54.862 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:54.862 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:54.862 [Thread-153] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:54.891 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:54.894 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:54.894 [Thread-154] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:54.894 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1432
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:54.894 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:54.894 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:54.894 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1432 otherwise the patch would be "true" or "false"
07:36:54.894 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1432, Suspiciousness=0.007311746800347169]
07:36:54.895 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1433, Suspiciousness=0.007311746800347169]
07:36:54.895 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:54,895 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:54.902 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:54.928 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:54.980 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:54.981 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:54,998 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:54,998 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:55,201 DEBUG spoon.support.StandardEnvironment - built in 203 ms
2015-03-02 07:36:55,201 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:55,201 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:55.202 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:55,202 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:55.207 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + (-0.5) ##### Before:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
07:36:55.207 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + (-0.5) ##### After:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lnza = (lnza * epsilon) + (-0.5);
    
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
07:36:55.211 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:55.238 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:55.297 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:55.304 [Thread-155] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:55.306 [Thread-155] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:55.306 [Thread-155] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:55.308 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:55.393 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:55.393 [Thread-156] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (85 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:55.395 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:55.396 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:55.396 [Thread-157] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:55.398 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.585035718990003)
(-1.5707963267948966, 0.6263816140934777)
(-1.5707963267948966, 0.6749634370105302)
(-1.5707963267948966, 0.7331685720317024)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.018441011726076)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.5222614497545377)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673006157442822)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.42364906003939545)
(0.0, 0.3095196630135265)
(0.0, 0.2027327308100164)
(0.0, 0.10033542987853723)
07:36:55.400 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:55.400 [Thread-158] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:55.400 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1433
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:55.400 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:55.400 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:55.400 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1433 otherwise the patch would be "true" or "false"
07:36:55.401 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1433, Suspiciousness=0.007311746800347169]
07:36:55.401 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1434, Suspiciousness=0.007311746800347169]
07:36:55.401 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:55,401 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:55.408 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:55.434 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:55.486 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:55.487 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:55,504 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:55,504 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:55,704 DEBUG spoon.support.StandardEnvironment - built in 200 ms
2015-03-02 07:36:55,705 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:55,705 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:55.705 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:55,705 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:55.710 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + 1.0 ##### Before:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
07:36:55.711 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = (lnza * epsilon) + 1.0 ##### After:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lnza = (lnza * epsilon) + 1.0;
    
    lnza = lnza * epsilon;
}
07:36:55.714 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:55.742 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:55.799 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:55.805 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:55.807 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:55.807 [Thread-159] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:55.809 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5846819692426813)
(-1.5707963267948966, 0.625962853624466)
(-1.5707963267948966, 0.6746377748307648)
(-1.5707963267948966, 0.7329431437179063)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140275)
(-1.5707963267948966, 1.018186169728115)
(-1.5707963267948966, 1.1989476363991851)
(-1.5707963267948966, 1.5217029985259456)
(NaN, NaN)
(0.0, 1.4722194895832201)
(0.0, 1.0986122886681096)
(0.0, 0.8669557881580753)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.42323029957038383)
(0.0, 0.30923785644555496)
(0.0, 0.20224413146148232)
(0.0, 0.1000023629987077)
07:36:55.893 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:55.893 [Thread-160] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (84 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:55.903 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:55.903 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:55.903 [Thread-161] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:55.905 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:55.907 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:55.907 [Thread-162] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:55.907 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1434
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:55.907 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:55.907 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:55.907 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1434 otherwise the patch would be "true" or "false"
07:36:55.907 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1434, Suspiciousness=0.007311746800347169]
07:36:55.907 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1435, Suspiciousness=0.007311746800347169]
07:36:55.908 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:55,908 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:55.915 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:55.943 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:55.993 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:55.993 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:56,011 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:56,011 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:56,243 DEBUG spoon.support.StandardEnvironment - built in 232 ms
2015-03-02 07:36:56,244 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:56,244 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:56.244 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:56,245 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:56.249 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = lnza * epsilon ##### Before:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    lnza = lnza * epsilon;
}
07:36:56.250 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### lnza = lnza * epsilon ##### After:
{
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        lnza = lnza * epsilon;
    
}
07:36:56.253 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:56.280 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:56.336 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:56.343 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:56.345 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:56.345 [Thread-163] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:56.347 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:56.431 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:56.432 [Thread-164] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (85 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:56.434 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:56.434 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:56.434 [Thread-165] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:56.436 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 1.0493061443340548)
(-1.5707963267948966, 1.0846819692426812)
(-1.5707963267948966, 1.1259628536244661)
(-1.5707963267948966, 1.1746377748307648)
(-1.5707963267948966, 1.2329431437179064)
(-1.5707963267948966, 1.3047189562170503)
(-1.5707963267948966, 1.3958797346140275)
(-1.5707963267948966, 1.518186169728115)
(-1.5707963267948966, 1.6989476363991851)
(-1.5707963267948966, 2.021702998525946)
(NaN, NaN)
(0.0, 1.9722194895832201)
(0.0, 1.5986122886681096)
(0.0, 1.3669557881580754)
(0.0, 1.1931471805599454)
(0.0, 1.0493061443340548)
(0.0, 0.9232302995703838)
(0.0, 0.8092378564455549)
(0.0, 0.7022441314614823)
(0.0, 0.6000023629987077)
07:36:56.438 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:56.438 [Thread-166] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:56.438 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1435
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:56.438 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:56.438 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:56.438 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1435 otherwise the patch would be "true" or "false"
07:36:56.438 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1435, Suspiciousness=0.007311746800347169]
07:36:56.438 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1256, Suspiciousness=0.007196852497114987]
07:36:56.439 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:56,439 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:56.446 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:56.471 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:56.521 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:56.521 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1256.
07:36:56.521 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1256, Suspiciousness=0.007196852497114987]
07:36:56.521 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1362, Suspiciousness=0.006310435740535299]
07:36:56.522 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:56,522 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:56.529 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:56.554 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:56.604 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:56.604 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1362.
07:36:56.604 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1362, Suspiciousness=0.006310435740535299]
07:36:56.604 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1373, Suspiciousness=0.006310435740535299]
07:36:56.604 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:56,604 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:56.612 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:56.637 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:56.687 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:56.687 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1373.
07:36:56.687 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1373, Suspiciousness=0.006310435740535299]
07:36:56.687 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1375, Suspiciousness=0.006310435740535299]
07:36:56.687 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:56,687 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:56.695 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:56.719 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:56.768 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:56.769 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1375.
07:36:56.769 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1375, Suspiciousness=0.006310435740535299]
07:36:56.769 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1376, Suspiciousness=0.006310435740535299]
07:36:56.769 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:56,769 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:56.776 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:56.801 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:56.850 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:56.850 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1376.
07:36:56.850 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1376, Suspiciousness=0.006310435740535299]
07:36:56.850 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1378, Suspiciousness=0.006310435740535299]
07:36:56.850 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:56,850 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:56.858 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:56.883 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:56.931 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:56.931 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:56,948 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:56,949 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:57,182 DEBUG spoon.support.StandardEnvironment - built in 233 ms
2015-03-02 07:36:57,183 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:57,183 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:57.183 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:57,183 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:57.188 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (hiPrec != null) {
    double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
    double aa = (epsilon + tmp) - tmp;
    double ab = epsilon - aa;
    double xa = aa;
    double xb = ab;
    double numer = bits & 4398046511103L;
    double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
    aa = (numer - (xa * denom)) - (xb * denom);
    xb += aa / denom;
    double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
    double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
    for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
        ya = (aa + tmp) - tmp;
        yb = (aa - ya) + ab;
        aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
        ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
        tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
        ya = (aa + tmp) - tmp;
        yb = (aa - ya) + ab;
    }
    aa = ya * xa;
    ab = ((ya * xb) + (yb * xa)) + (yb * xb);
    lnza = aa + ab;
    lnzb = -((lnza - aa) - ab);
} else {
    lnza = -0.16624882440418567;
    lnza = (lnza * epsilon) + 0.19999954120254515;
    lnza = (lnza * epsilon) + (-0.2499999997677497);
    lnza = (lnza * epsilon) + 0.3333333333332802;
    lnza = (lnza * epsilon) + (-0.5);
    lnza = (lnza * epsilon) + 1.0;
    lnza = lnza * epsilon;
}
07:36:57.191 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:57.216 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:57.270 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:57.277 [Thread-167] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:57.279 [Thread-167] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:57.279 [Thread-167] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:57.281 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:57.364 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:57.364 [Thread-168] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (83 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:57.365 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:57.366 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:57.366 [Thread-169] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:57.367 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:57.370 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:57.370 [Thread-170] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:57.370 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1378
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:57.370 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:57.370 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:57.370 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1378 otherwise the patch would be "true" or "false"
07:36:57.370 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1378, Suspiciousness=0.006310435740535299]
07:36:57.370 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1452, Suspiciousness=0.006310435740535299]
07:36:57.370 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:57,370 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:57.378 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:57.403 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:57.451 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:57.451 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1452.
07:36:57.451 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1452, Suspiciousness=0.006310435740535299]
07:36:57.451 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1453, Suspiciousness=0.006310435740535299]
07:36:57.451 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:57,451 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:57.459 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:57.483 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:57.531 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:57.531 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1453.
07:36:57.531 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1453, Suspiciousness=0.006310435740535299]
07:36:57.531 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1454, Suspiciousness=0.006310435740535299]
07:36:57.531 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:57,531 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:57.539 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:57.564 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:57.612 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:57.612 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1454.
07:36:57.612 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1454, Suspiciousness=0.006310435740535299]
07:36:57.612 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1455, Suspiciousness=0.006310435740535299]
07:36:57.612 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:57,612 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:57.620 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:57.644 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:57.692 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:57.692 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1455.
07:36:57.693 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1455, Suspiciousness=0.006310435740535299]
07:36:57.693 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1456, Suspiciousness=0.006310435740535299]
07:36:57.693 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:57,693 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:57.700 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:57.725 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:57.774 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:57.774 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:57,791 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:57,791 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:57,993 DEBUG spoon.support.StandardEnvironment - built in 202 ms
2015-03-02 07:36:57,993 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:57,993 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:57.994 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:57,994 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:57.999 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:36:58.000 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        a = c;
    
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:36:58.003 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:58.030 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:58.084 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:58.090 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:58.093 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:58.093 [Thread-171] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:58.095 [Thread-172] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:58.178 [Thread-172] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:58.178 [Thread-172] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (84 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:58.180 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:58.180 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:58.180 [Thread-173] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:58.182 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.346573581315256)
(-1.5707963267948966, 0.34680936160993264)
(-1.5707963267948966, 0.3468526875748629)
(-1.5707963267948966, 0.34679067475868747)
(-1.5707963267948966, 0.6932974452362711)
(-1.5707963267948966, 0.6931471823303695)
(-1.5707963267948966, 0.6931471715952288)
(-1.5707963267948966, 0.6933170574949609)
(-1.5707963267948966, 1.0397207718228456)
(-1.5707963267948966, 1.3866665230552078)
(NaN, NaN)
(0.0, 1.3862943575470112)
(0.0, 1.0397207687639731)
(0.0, 0.6933770054600902)
(0.0, 0.6931471805599453)
(0.0, 0.346573581315256)
(0.0, 0.3468526816384183)
(0.0, 1.8782949150272628E-4)
(0.0, 3.256410120136356E-4)
(0.0, 2.2200055833849943E-4)
07:36:58.184 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:58.184 [Thread-174] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:58.185 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1456
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:58.185 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:58.185 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:58.185 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1456 otherwise the patch would be "true" or "false"
07:36:58.185 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1456, Suspiciousness=0.006310435740535299]
07:36:58.185 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1457, Suspiciousness=0.006310435740535299]
07:36:58.185 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:58,185 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:58.192 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:58.218 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:58.266 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:58.267 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:58,284 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:58,284 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:58,518 DEBUG spoon.support.StandardEnvironment - built in 234 ms
2015-03-02 07:36:58,518 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:58,518 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:58.519 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:58,519 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:58.524 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:36:58.525 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        b = b + d;
    
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:36:58.528 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:58.555 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:58.609 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:58.616 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:58.618 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:58.618 [Thread-175] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:58.620 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:58.701 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:58.701 [Thread-176] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (81 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:58.703 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:58.703 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:58.704 [Thread-177] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:58.706 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:58.707 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:58.708 [Thread-178] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:58.708 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1457
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:58.708 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:58.708 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:58.708 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1457 otherwise the patch would be "true" or "false"
07:36:58.708 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1457, Suspiciousness=0.006310435740535299]
07:36:58.708 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1459, Suspiciousness=0.006310435740535299]
07:36:58.708 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:58,708 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:58.716 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:58.740 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:58.788 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:58.788 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:58,806 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:58,806 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:59,007 DEBUG spoon.support.StandardEnvironment - built in 201 ms
2015-03-02 07:36:59,007 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:59,007 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:59.008 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:59,008 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:59.013 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + lnza ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:36:59.014 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + lnza ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        c = a + lnza;
    
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:36:59.018 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:59.044 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:59.097 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:59.105 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:59.107 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:59.107 [Thread-179] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:59.109 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:59.191 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:59.191 [Thread-180] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (82 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:59.193 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:59.193 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:59.193 [Thread-181] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:59.195 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:59.197 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:59.197 [Thread-182] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:59.197 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1459
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:59.197 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:59.197 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:59.197 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1459 otherwise the patch would be "true" or "false"
07:36:59.197 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1459, Suspiciousness=0.006310435740535299]
07:36:59.197 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1460, Suspiciousness=0.006310435740535299]
07:36:59.197 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:59,197 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:59.205 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:59.230 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:59.276 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:59.276 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:59,294 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:59,294 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:59,528 DEBUG spoon.support.StandardEnvironment - built in 234 ms
2015-03-02 07:36:59,528 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:36:59,528 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:36:59.529 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:59,529 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:36:59.534 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - lnza) ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:36:59.535 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - lnza) ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        d = -((c - a) - lnza);
    
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:36:59.538 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:59.565 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:59.617 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:59.624 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:59.627 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:36:59.627 [Thread-183] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:59.629 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745078)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.01844096363052)
(-1.5707963267948966, 1.1989476363991856)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832201)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940531)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936018)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:59.711 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:36:59.711 [Thread-184] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (83 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:59.713 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:36:59.713 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:36:59.713 [Thread-185] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:36:59.715 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:36:59.717 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:36:59.717 [Thread-186] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:36:59.717 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1460
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:36:59.717 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:59.717 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:36:59.717 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1460 otherwise the patch would be "true" or "false"
07:36:59.717 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1460, Suspiciousness=0.006310435740535299]
07:36:59.717 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1461, Suspiciousness=0.006310435740535299]
07:36:59.717 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:36:59,717 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:36:59.725 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:36:59.749 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:36:59.796 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:36:59.796 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:59,813 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:36:59,813 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:00,013 DEBUG spoon.support.StandardEnvironment - built in 200 ms
2015-03-02 07:37:00,013 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:00,013 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:00.014 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:00,014 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:00.020 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:00.021 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        a = c;
    
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:00.024 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:00.050 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:00.102 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:00.109 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:00.111 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:00.111 [Thread-187] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:00.113 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:00.193 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:00.193 [Thread-188] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (80 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:00.195 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:00.195 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:00.195 [Thread-189] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:00.197 [Thread-190] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5847998487600455)
(-1.5707963267948966, 0.626102388510602)
(-1.5707963267948966, 0.6747462974769595)
(-1.5707963267948966, 0.7330182714354023)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140275)
(-1.5707963267948966, 1.0182710978228728)
(-1.5707963267948966, 1.1989476363991851)
(-1.5707963267948966, 1.5218890565817829)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8670706954675289)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.42336983445651977)
(0.0, 0.309331768444488)
(0.0, 0.2024069272109222)
(0.0, 0.10011335243372903)
07:37:00.199 [Thread-190] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:00.199 [Thread-190] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:00.199 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1461
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:00.199 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:00.199 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:00.199 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1461 otherwise the patch would be "true" or "false"
07:37:00.199 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1461, Suspiciousness=0.006310435740535299]
07:37:00.199 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1462, Suspiciousness=0.006310435740535299]
07:37:00.199 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:00,199 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:00.207 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:00.231 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:00.278 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:00.278 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:00,295 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:00,295 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:00,530 DEBUG spoon.support.StandardEnvironment - built in 235 ms
2015-03-02 07:37:00,530 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:00,531 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:00.531 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:00,531 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:00.537 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:00.538 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        b = b + d;
    
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:00.541 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:00.567 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:00.619 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:00.626 [Thread-191] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:00.628 [Thread-191] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:00.628 [Thread-191] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:00.630 [Thread-192] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745078)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.01844096363052)
(-1.5707963267948966, 1.1989476363991856)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832201)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940531)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936018)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:00.711 [Thread-192] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:00.712 [Thread-192] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (81 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:00.713 [Thread-193] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:00.714 [Thread-193] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:00.714 [Thread-193] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:00.715 [Thread-194] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:00.717 [Thread-194] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:00.717 [Thread-194] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:00.717 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1462
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:00.717 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:00.717 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:00.718 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1462 otherwise the patch would be "true" or "false"
07:37:00.718 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1462, Suspiciousness=0.006310435740535299]
07:37:00.718 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1464, Suspiciousness=0.006310435740535299]
07:37:00.718 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:00,718 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:00.725 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:00.750 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:00.796 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:00.796 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:00,813 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:00,813 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:01,012 DEBUG spoon.support.StandardEnvironment - built in 199 ms
2015-03-02 07:37:01,012 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:01,025 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:01.026 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:01,026 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:01.032 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp) ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:01.033 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp) ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:01.036 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:01.062 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:01.114 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:01.121 [Thread-195] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:01.124 [Thread-195] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:01.124 [Thread-195] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:01.126 [Thread-196] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:01.211 [Thread-196] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:01.211 [Thread-196] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (85 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:01.213 [Thread-197] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:01.214 [Thread-197] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:01.214 [Thread-197] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:01.215 [Thread-198] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:01.217 [Thread-198] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:01.217 [Thread-198] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:01.217 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1464
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:01.217 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:01.217 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:01.217 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1464 otherwise the patch would be "true" or "false"
07:37:01.217 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1464, Suspiciousness=0.006310435740535299]
07:37:01.217 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1465, Suspiciousness=0.006310435740535299]
07:37:01.218 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:01,218 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:01.225 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:01.250 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:01.295 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:01.296 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:01,313 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:01,313 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:01,999 DEBUG spoon.support.StandardEnvironment - built in 686 ms
2015-03-02 07:37:01,999 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:01,999 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:02.000 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:02,000 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:02.005 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp)) ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:02.006 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp)) ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:02.010 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:02.035 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:02.086 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:02.094 [Thread-199] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:02.096 [Thread-199] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:02.097 [Thread-199] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:02.099 [Thread-200] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251274)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745078)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140275)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:02.181 [Thread-200] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:02.182 [Thread-200] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (82 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:02.184 [Thread-201] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:02.184 [Thread-201] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:02.184 [Thread-201] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:02.186 [Thread-202] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:02.187 [Thread-202] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:02.188 [Thread-202] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:02.188 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1465
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:02.188 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:02.188 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:02.188 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1465 otherwise the patch would be "true" or "false"
07:37:02.188 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1465, Suspiciousness=0.006310435740535299]
07:37:02.188 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1466, Suspiciousness=0.006310435740535299]
07:37:02.188 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:02,188 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:02.196 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:02.220 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:02.265 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:02.265 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:02,282 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:02,282 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:02,481 DEBUG spoon.support.StandardEnvironment - built in 199 ms
2015-03-02 07:37:02,481 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:02,481 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:02.482 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:02,482 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:02.488 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:02.489 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        a = c;
    
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:02.492 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:02.519 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:02.568 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:02.575 [Thread-203] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:02.577 [Thread-203] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:02.577 [Thread-203] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:02.580 [Thread-204] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:02.660 [Thread-204] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:02.660 [Thread-204] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (81 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:02.662 [Thread-205] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:02.662 [Thread-205] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:02.662 [Thread-205] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:02.664 [Thread-206] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493060856817372)
(-1.5707963267948966, 0.5850355676728096)
(-1.5707963267948966, 0.6263814255953662)
(-1.5707963267948966, 0.67496329982219)
(-1.5707963267948966, 0.7331684170920783)
(-1.5707963267948966, 0.8047188389124149)
(-1.5707963267948966, 0.8958796173093924)
(-1.5707963267948966, 1.0184408463258845)
(-1.5707963267948966, 1.1989474604422325)
(-1.5707963267948966, 1.5222609842524406)
(NaN, NaN)
(0.0, 1.47221925497395)
(0.0, 1.098612112711157)
(0.0, 0.867300410389418)
(0.0, 0.6931470632553101)
(0.0, 0.5493060856817372)
(0.0, 0.4236488715412841)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:02.666 [Thread-206] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:02.666 [Thread-206] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:02.666 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1466
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:02.666 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:02.666 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:02.666 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1466 otherwise the patch would be "true" or "false"
07:37:02.666 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1466, Suspiciousness=0.006310435740535299]
07:37:02.666 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1467, Suspiciousness=0.006310435740535299]
07:37:02.667 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:02,667 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:02.674 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:02.698 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:02.743 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:02.744 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:02,761 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:02,761 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:03,001 DEBUG spoon.support.StandardEnvironment - built in 240 ms
2015-03-02 07:37:03,001 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:03,001 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:03.002 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:03,002 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:03.007 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:03.008 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        b = b + d;
    
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:03.011 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:03.038 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:03.088 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:03.095 [Thread-207] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:03.098 [Thread-207] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:03.098 [Thread-207] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:03.100 [Thread-208] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251274)
(-1.5707963267948966, 0.626381484247684)
(-1.5707963267948966, 0.6749633584745078)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.01844096363052)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940531)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:03.180 [Thread-208] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:03.180 [Thread-208] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (80 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:03.182 [Thread-209] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:03.182 [Thread-209] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:03.182 [Thread-209] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:03.185 [Thread-210] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:03.186 [Thread-210] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:03.187 [Thread-210] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:03.187 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1467
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:03.187 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:03.187 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:03.187 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1467 otherwise the patch would be "true" or "false"
07:37:03.187 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1467, Suspiciousness=0.006310435740535299]
07:37:03.187 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1469, Suspiciousness=0.006310435740535299]
07:37:03.187 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:03,187 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:03.195 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:03.219 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:03.264 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:03.264 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:03,281 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:03,282 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:03,480 DEBUG spoon.support.StandardEnvironment - built in 199 ms
2015-03-02 07:37:03,480 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:03,480 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:03.481 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:03,481 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:03.487 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + (lnm[1]) ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:03.488 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + (lnm[1]) ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        c = a + (lnm[1]);
    
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:03.491 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:03.518 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:03.568 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:03.575 [Thread-211] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:03.577 [Thread-211] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:03.577 [Thread-211] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:03.580 [Thread-212] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:03.661 [Thread-212] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:03.661 [Thread-212] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (82 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:03.663 [Thread-213] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:03.663 [Thread-213] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:03.663 [Thread-213] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:03.665 [Thread-214] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:03.667 [Thread-214] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:03.667 [Thread-214] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:03.667 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1469
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:03.667 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:03.667 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:03.667 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1469 otherwise the patch would be "true" or "false"
07:37:03.667 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1469, Suspiciousness=0.006310435740535299]
07:37:03.667 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1470, Suspiciousness=0.006310435740535299]
07:37:03.668 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:03,668 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:03.675 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:03.700 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:03.745 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:03.745 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:03,762 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:03,762 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:03,980 DEBUG spoon.support.StandardEnvironment - built in 218 ms
2015-03-02 07:37:03,981 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:03,981 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:03.981 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:03,981 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:03.987 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - (lnm[1])) ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:03.988 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - (lnm[1])) ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        d = -((c - a) - (lnm[1]));
    
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:03.991 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:04.017 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:04.067 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:04.075 [Thread-215] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:04.077 [Thread-215] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:04.077 [Thread-215] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:04.079 [Thread-216] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340548)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991856)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340548)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:04.160 [Thread-216] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:04.160 [Thread-216] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (81 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:04.163 [Thread-217] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:04.163 [Thread-217] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:04.163 [Thread-217] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:04.165 [Thread-218] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:04.167 [Thread-218] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:04.167 [Thread-218] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:04.167 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1470
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:04.167 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:04.167 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:04.167 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1470 otherwise the patch would be "true" or "false"
07:37:04.167 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1470, Suspiciousness=0.006310435740535299]
07:37:04.167 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1471, Suspiciousness=0.006310435740535299]
07:37:04.167 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:04,167 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:04.175 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:04.199 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:04.244 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:04.244 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:04,261 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:04,261 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:04,458 DEBUG spoon.support.StandardEnvironment - built in 197 ms
2015-03-02 07:37:04,458 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:04,458 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:04.459 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:04,459 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:04.465 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:04.466 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        a = c;
    
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:04.469 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:04.495 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:04.544 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:04.551 [Thread-219] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:04.553 [Thread-219] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:04.554 [Thread-219] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:04.556 [Thread-220] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:04.636 [Thread-220] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:04.636 [Thread-220] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (81 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:04.639 [Thread-221] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:04.639 [Thread-221] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:04.639 [Thread-221] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:04.641 [Thread-222] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061532987715)
(-1.5707963267948966, 0.585035632560249)
(-1.5707963267948966, 0.6263814826898756)
(-1.5707963267948966, 0.6749633349933412)
(-1.5707963267948966, 0.7331685326816989)
(-1.5707963267948966, 0.8047189544466259)
(-1.5707963267948966, 0.8958797435787442)
(-1.5707963267948966, 1.0184409525031513)
(-1.5707963267948966, 1.1989476354162578)
(-1.5707963267948966, 1.522261219206322)
(NaN, NaN)
(0.0, 1.4722194931561)
(0.0, 1.0986122907440548)
(0.0, 0.8673005350204327)
(0.0, 0.6931471805599453)
(0.0, 0.5493061532987715)
(0.0, 0.423648934572238)
(0.0, 0.30951961047023246)
(0.0, 0.20273253988522838)
(0.0, 0.10033534247008372)
07:37:04.642 [Thread-222] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:04.643 [Thread-222] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:04.643 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1471
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:04.643 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:04.643 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:04.643 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1471 otherwise the patch would be "true" or "false"
07:37:04.643 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1471, Suspiciousness=0.006310435740535299]
07:37:04.643 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1472, Suspiciousness=0.006310435740535299]
07:37:04.643 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:04,643 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:04.651 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:04.675 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:04.719 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:04.719 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:04,736 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:04,737 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:04,956 DEBUG spoon.support.StandardEnvironment - built in 219 ms
2015-03-02 07:37:04,956 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:04,956 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:04.957 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:04,957 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:04.962 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:04.963 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        b = b + d;
    
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:04.966 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:04.993 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:05.042 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:05.050 [Thread-223] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:05.052 [Thread-223] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:05.052 [Thread-223] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:05.055 [Thread-224] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251274)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:05.136 [Thread-224] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:05.136 [Thread-224] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (82 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:05.138 [Thread-225] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:05.139 [Thread-225] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:05.139 [Thread-225] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:05.141 [Thread-226] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:05.142 [Thread-226] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:05.142 [Thread-226] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:05.143 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1472
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:05.143 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:05.143 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:05.143 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1472 otherwise the patch would be "true" or "false"
07:37:05.143 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1472, Suspiciousness=0.006310435740535299]
07:37:05.143 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1474, Suspiciousness=0.006310435740535299]
07:37:05.143 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:05,143 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:05.150 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:05.178 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:05.222 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:05.222 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:05,239 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:05,240 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:05,433 DEBUG spoon.support.StandardEnvironment - built in 194 ms
2015-03-02 07:37:05,433 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:05,433 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:05.434 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:05,434 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:05.440 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + lnzb ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:05.441 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### c = a + lnzb ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        c = a + lnzb;
    
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:05.444 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:05.470 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:05.521 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:05.527 [Thread-227] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:05.529 [Thread-227] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:05.530 [Thread-227] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:05.531 [Thread-228] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:05.613 [Thread-228] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:05.614 [Thread-228] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (83 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:05.616 [Thread-229] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:05.616 [Thread-229] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:05.616 [Thread-229] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:05.618 [Thread-230] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:05.620 [Thread-230] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:05.620 [Thread-230] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:05.620 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1474
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:05.620 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:05.620 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:05.620 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1474 otherwise the patch would be "true" or "false"
07:37:05.620 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1474, Suspiciousness=0.006310435740535299]
07:37:05.620 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1475, Suspiciousness=0.006310435740535299]
07:37:05.620 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:05,620 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:05.628 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:05.652 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:05.696 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:05.696 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:05,713 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:05,714 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:05,922 DEBUG spoon.support.StandardEnvironment - built in 209 ms
2015-03-02 07:37:05,922 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:05,922 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:05.923 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:05,923 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:05.928 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - lnzb) ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    d = -((c - a) - lnzb);
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:05.929 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### d = -((c - a) - lnzb) ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        d = -((c - a) - lnzb);
    
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:05.932 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:05.958 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:06.008 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:06.015 [Thread-231] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:06.018 [Thread-231] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:06.025 [Thread-231] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:06.027 [Thread-232] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745078)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170503)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991856)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940531)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936018)
(0.0, 0.30951960420311164)
(0.0, 0.20273255405408214)
(0.0, 0.10033534773107562)
07:37:06.116 [Thread-232] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:06.116 [Thread-232] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (89 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:06.118 [Thread-233] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:06.119 [Thread-233] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:06.119 [Thread-233] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:06.121 [Thread-234] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:06.122 [Thread-234] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:06.123 [Thread-234] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:06.123 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1475
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:06.123 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:06.123 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:06.123 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1475 otherwise the patch would be "true" or "false"
07:37:06.123 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1475, Suspiciousness=0.006310435740535299]
07:37:06.123 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1476, Suspiciousness=0.006310435740535299]
07:37:06.123 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:06,123 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:06.131 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:06.155 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:06.199 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:06.199 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:06,216 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:06,216 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:06,408 DEBUG spoon.support.StandardEnvironment - built in 192 ms
2015-03-02 07:37:06,408 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:06,409 DEBUG spoon.support.StandardEnvironment - built in 1 ms
07:37:06.409 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:06,409 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:06.415 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    a = c;
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:06.416 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### a = c ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        a = c;
    
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:06.419 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:06.445 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:06.494 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:06.501 [Thread-235] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:06.503 [Thread-235] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:06.503 [Thread-235] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:06.505 [Thread-236] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:06.585 [Thread-236] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:06.585 [Thread-236] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (80 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:06.587 [Thread-237] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:06.587 [Thread-237] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:06.588 [Thread-237] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:06.590 [Thread-238] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:06.592 [Thread-238] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:06.592 [Thread-238] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:06.592 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1476
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:06.592 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:06.592 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:06.592 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1476 otherwise the patch would be "true" or "false"
07:37:06.592 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1476, Suspiciousness=0.006310435740535299]
07:37:06.592 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1477, Suspiciousness=0.006310435740535299]
07:37:06.592 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:06,592 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:06.600 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:06.624 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:06.668 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:06.668 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:06,685 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:06,685 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:06,895 DEBUG spoon.support.StandardEnvironment - built in 210 ms
2015-03-02 07:37:06,895 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:06,895 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:06.896 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:06,896 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:06.901 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### Before:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    b = b + d;
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:06.902 [main] DEBUG f.i.l.r.nopol.spoon.ConditionalAdder - ##### b = b + d ##### After:
{
    if (x == 0) {
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    long bits = java.lang.Double.doubleToLongBits(x);
    if (((bits & -9223372036854775808L) != 0) || (x != x)) {
        if (x != 0.0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            } 
            return java.lang.Double.NaN;
        } 
    } 
    if (x == (java.lang.Double.POSITIVE_INFINITY)) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
        } 
        return java.lang.Double.POSITIVE_INFINITY;
    } 
    int exp = ((int)((bits >> 52))) - 1023;
    if ((bits & 9218868437227405312L) == 0) {
        if (x == 0) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
            } 
            return java.lang.Double.NEGATIVE_INFINITY;
        } 
        bits <<= 1;
        while ((bits & 4503599627370496L) == 0) {
            exp--;
            bits <<= 1;
        }
    } 
    if ((exp == (-1)) || (exp == 0)) {
        if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
            double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
            for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
                ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
                tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        } 
    } 
    double[] lnm = org.apache.commons.math.util.FastMath.LN_MANT[((int)((bits & 4499201580859392L) >> 42))];
    double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
    double lnza = 0.0;
    double lnzb = 0.0;
    if (hiPrec != null) {
        double tmp = epsilon * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (epsilon + tmp) - tmp;
        double ab = epsilon - aa;
        double xa = aa;
        double xb = ab;
        double numer = bits & 4398046511103L;
        double denom = (org.apache.commons.math.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
        aa = (numer - (xa * denom)) - (xb * denom);
        xb += aa / denom;
        double ya = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        lnza = aa + ab;
        lnzb = -((lnza - aa) - ab);
    } else {
        lnza = -0.16624882440418567;
        lnza = (lnza * epsilon) + 0.19999954120254515;
        lnza = (lnza * epsilon) + (-0.2499999997677497);
        lnza = (lnza * epsilon) + 0.3333333333332802;
        lnza = (lnza * epsilon) + (-0.5);
        lnza = (lnza * epsilon) + 1.0;
        lnza = lnza * epsilon;
    }
    double a = (org.apache.commons.math.util.FastMath.LN_2_A) * exp;
    double b = 0.0;
    double c = a + (lnm[0]);
    double d = -((c - a) - (lnm[0]));
    a = c;
    b = b + d;
    c = a + lnza;
    d = -((c - a) - lnza);
    a = c;
    b = b + d;
    c = a + ((org.apache.commons.math.util.FastMath.LN_2_B) * exp);
    d = -((c - a) - ((org.apache.commons.math.util.FastMath.LN_2_B) * exp));
    a = c;
    b = b + d;
    c = a + (lnm[1]);
    d = -((c - a) - (lnm[1]));
    a = c;
    b = b + d;
    c = a + lnzb;
    d = -((c - a) - lnzb);
    a = c;
    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(true);
    if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_A",org.apache.commons.math.util.FastMath.LN_2_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnm",lnm);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI_O_4_BITS",org.apache.commons.math.util.FastMath.PI_O_4_BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.RECIP_2PI",org.apache.commons.math.util.FastMath.RECIP_2PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B",org.apache.commons.math.util.FastMath.EXP_INT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_A",org.apache.commons.math.util.FastMath.SINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.SINE_TABLE_B",org.apache.commons.math.util.FastMath.SINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("bits",bits);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.E",org.apache.commons.math.util.FastMath.E);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math.util.FastMath.TANGENT_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("epsilon",epsilon);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math.util.FastMath.TANGENT_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_SPLIT_COEF",org.apache.commons.math.util.FastMath.LN_SPLIT_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("hiPrec",hiPrec);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.CBRTTWO",org.apache.commons.math.util.FastMath.CBRTTWO);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.FACT",org.apache.commons.math.util.FastMath.FACT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math.util.FastMath.LN_HI_PREC_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("d",d);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.TWO_POWER_52",org.apache.commons.math.util.FastMath.TWO_POWER_52);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("c",c);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_QUICK_COEF",org.apache.commons.math.util.FastMath.LN_QUICK_COEF);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.PI",org.apache.commons.math.util.FastMath.PI);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.MASK_30BITS",org.apache.commons.math.util.FastMath.MASK_30BITS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_MANT",org.apache.commons.math.util.FastMath.LN_MANT);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_A",org.apache.commons.math.util.FastMath.COSINE_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.COSINE_TABLE_B",org.apache.commons.math.util.FastMath.COSINE_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_A);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EIGHTHS",org.apache.commons.math.util.FastMath.EIGHTHS);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("exp",exp);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B",org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnza",lnza);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.HEX_40000000",org.apache.commons.math.util.FastMath.HEX_40000000);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("lnzb",lnzb);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("org.apache.commons.math.util.FastMath.LN_2_B",org.apache.commons.math.util.FastMath.LN_2_B);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("x",x);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
        fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
    } 
    if (runtimeAngelicValue)
        b = b + d;
    
    if (hiPrec != null) {
        hiPrec[0] = a;
        hiPrec[1] = b;
    } 
    return a + b;
}
07:37:06.905 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:06.931 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:06.980 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:06.988 [Thread-239] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:06.990 [Thread-239] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:06.990 [Thread-239] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:06.992 [Thread-240] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:07.073 [Thread-240] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:07.073 [Thread-240] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (81 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:07.075 [Thread-241] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:07.076 [Thread-241] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:07.076 [Thread-241] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:07.078 [Thread-242] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:07.079 [Thread-242] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:07.079 [Thread-242] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:07.080 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1477
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:07.080 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:07.080 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:07.080 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1477 otherwise the patch would be "true" or "false"
07:37:07.080 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1477, Suspiciousness=0.006310435740535299]
07:37:07.080 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1479, Suspiciousness=0.006310435740535299]
07:37:07.080 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:07,080 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:07.087 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:07.112 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:07.155 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:07.156 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:07,173 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:07,173 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:07,366 DEBUG spoon.support.StandardEnvironment - built in 193 ms
2015-03-02 07:37:07,366 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:07,366 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:07.367 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:07,367 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:07.372 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (hiPrec != null) {
    hiPrec[0] = a;
    hiPrec[1] = b;
} 
07:37:07.375 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:07.401 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:07.450 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:07.457 [Thread-243] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:07.460 [Thread-243] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:07.460 [Thread-243] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:07.462 [Thread-244] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
07:37:07.543 [Thread-244] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:07.543 [Thread-244] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (81 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.NullPointerException
    at org.apache.commons.math.util.FastMath.log(FastMath.java:1177)
    at org.apache.commons.math.util.FastMath.log(FastMath.java:994)
    at org.apache.commons.math.complex.Complex.log(Complex.java:704)
    at org.apache.commons.math.complex.Complex.atan(Complex.java:545)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:577)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:07.546 [Thread-245] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:07.546 [Thread-245] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:07.546 [Thread-245] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:07.548 [Thread-246] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:07.550 [Thread-246] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
07:37:07.550 [Thread-246] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:07.550 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1479
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
07:37:07.550 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:07.550 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
07:37:07.550 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1479 otherwise the patch would be "true" or "false"
07:37:07.550 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1479, Suspiciousness=0.006310435740535299]
07:37:07.550 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1484, Suspiciousness=0.006310435740535299]
07:37:07.550 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:07,550 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:07.558 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:07.582 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:07.626 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:07.626 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1484.
07:37:07.626 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1484, Suspiciousness=0.006310435740535299]
07:37:07.626 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1292, Suspiciousness=0.006246584832499385]
07:37:07.626 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:07,626 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:07.633 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:07.657 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:07.701 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:07.701 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1292.
07:37:07.701 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1292, Suspiciousness=0.006246584832499385]
07:37:07.701 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1294, Suspiciousness=0.006246584832499385]
07:37:07.701 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:07,701 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
07:37:07.709 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:07.733 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:07.777 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:07.777 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:07,795 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:07,795 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 07:37:08,003 DEBUG spoon.support.StandardEnvironment - built in 208 ms
2015-03-02 07:37:08,003 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 07:37:08,004 DEBUG spoon.support.StandardEnvironment - built in 0 ms
07:37:08.004 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 07:37:08,004 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
07:37:08.009 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((bits & 9218868437227405312L) == 0) {
    if (x == 0) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
        } 
        return java.lang.Double.NEGATIVE_INFINITY;
    } 
    bits <<= 1;
    while ((bits & 4503599627370496L) == 0) {
        exp--;
        bits <<= 1;
    }
} 
07:37:08.012 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
07:37:08.038 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
07:37:08.087 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
07:37:08.094 [Thread-247] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:08.096 [Thread-247] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
07:37:08.097 [Thread-247] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:08.099 [Thread-248] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
07:37:08.182 [Thread-248] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
07:37:08.182 [Thread-248] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (83 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
07:37:08.184 [Thread-249] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
07:37:08.184 [Thread-249] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
07:37:08.184 [Thread-249] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
07:37:08.186 [Thread-250] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.34657359027997264)
(-1.5707963267948966, 0.44690893801104825)
(-1.5707963267948966, 0.5493061443340547)
(-1.5707963267948966, 0.6560931944830841)
(-1.5707963267948966, -0.20273255405408264)
(-1.5707963267948966, 0.34657359027997264)
(-1.5707963267948966, 0.6931471805599455)
(-1.5707963267948966, 0.9962150823451029)
(-1.5707963267948966, 0.8958797346140281)
(-1.5707963267948966, 1.1512925464970212)
(NaN, NaN)
(0.0, 0.8958797346140281)
(0.0, 0.34657359027997353)
(0.0, 0.6019864021629678)
08:37:08.185 [main] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 3600 seconds. Infinite loop?
08:37:08.186 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1314, Suspiciousness=0.006246584832499385]
08:37:08.187 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 08:37:08,187 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:37:08.194 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
08:37:08.218 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:37:08.262 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
08:37:08.262 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 08:37:08,279 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 08:37:08,279 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 08:37:08,471 DEBUG spoon.support.StandardEnvironment - built in 192 ms
2015-03-02 08:37:08,471 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 08:37:08,471 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:37:08.472 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 08:37:08,472 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:37:08.477 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if ((exp == (-1)) || (exp == 0)) {
    if (((x < 1.01) && (x > 0.99)) && (hiPrec == null)) {
        double xa = x - 1.0;
        double xb = (xa - x) + 1.0;
        double tmp = xa * (org.apache.commons.math.util.FastMath.HEX_40000000);
        double aa = (xa + tmp) - tmp;
        double ab = xa - aa;
        xa = aa;
        xb = ab;
        double ya = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][0];
        double yb = org.apache.commons.math.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 1)][1];
        for (int i = (org.apache.commons.math.util.FastMath.LN_QUICK_COEF.length) - 2 ; i >= 0 ; i--) {
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            aa = ya + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][0]);
            ab = yb + (org.apache.commons.math.util.FastMath.LN_QUICK_COEF[i][1]);
            tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
        }
        aa = ya * xa;
        ab = ((ya * xb) + (yb * xa)) + (yb * xb);
        tmp = aa * (org.apache.commons.math.util.FastMath.HEX_40000000);
        ya = (aa + tmp) - tmp;
        yb = (aa - ya) + ab;
        return ya + yb;
    } 
} 
08:37:08.480 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
08:37:08.506 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:37:08.555 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
08:37:08.562 [Thread-251] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
08:37:08.564 [Thread-251] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:37:08.565 [Thread-251] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:37:08.567 [Thread-252] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
08:37:08.647 [Thread-252] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:37:08.647 [Thread-252] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (81 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
08:37:08.649 [Thread-253] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
08:37:08.649 [Thread-253] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
08:37:08.649 [Thread-253] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:37:08.651 [Thread-254] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
08:37:08.653 [Thread-254] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
08:37:08.653 [Thread-254] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
08:37:08.653 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1314
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
08:37:08.653 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
08:37:08.653 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
08:37:08.653 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1314 otherwise the patch would be "true" or "false"
08:37:08.653 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1314, Suspiciousness=0.006246584832499385]
08:37:08.653 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1269, Suspiciousness=0.006241350994267897]
08:37:08.653 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 08:37:08,653 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:37:08.661 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
08:37:08.685 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:37:08.728 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
08:37:08.728 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:1269.
08:37:08.728 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1269, Suspiciousness=0.006241350994267897]
08:37:08.728 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1272, Suspiciousness=0.006241350994267897]
08:37:08.729 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 08:37:08,729 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:37:08.736 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
08:37:08.777 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:37:08.821 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
08:37:08.821 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 08:37:08,838 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 08:37:08,838 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 08:37:09,030 DEBUG spoon.support.StandardEnvironment - built in 192 ms
2015-03-02 08:37:09,030 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 08:37:09,030 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:37:09.031 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 08:37:09,031 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:37:09.036 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (((bits & -9223372036854775808L) != 0) || (x != x)) {
    if (x != 0.0) {
        if (hiPrec != null) {
            hiPrec[0] = java.lang.Double.NaN;
        } 
        return java.lang.Double.NaN;
    } 
} 
08:37:09.039 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
08:37:09.065 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:37:09.114 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
08:37:09.121 [Thread-255] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
08:37:09.123 [Thread-255] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:37:09.124 [Thread-255] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:37:09.125 [Thread-256] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
08:37:09.207 [Thread-256] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:37:09.207 [Thread-256] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (82 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
08:37:09.209 [Thread-257] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
08:37:09.209 [Thread-257] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
08:37:09.209 [Thread-257] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:37:09.211 [Thread-258] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
(NaN, NaN)
08:37:09.212 [Thread-258] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
08:37:09.213 [Thread-258] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
08:37:09.213 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1272
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
08:37:09.213 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
08:37:09.213 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
08:37:09.213 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1272 otherwise the patch would be "true" or "false"
08:37:09.213 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1272, Suspiciousness=0.006241350994267897]
08:37:09.213 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1283, Suspiciousness=0.006241350994267897]
08:37:09.213 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 08:37:09,213 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:37:09.221 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
08:37:09.245 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:37:09.288 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
08:37:09.288 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 08:37:09,305 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 08:37:09,306 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 08:37:09,497 DEBUG spoon.support.StandardEnvironment - built in 192 ms
2015-03-02 08:37:09,497 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 08:37:09,497 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:37:09.498 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 08:37:09,498 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:37:09.503 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (x == (java.lang.Double.POSITIVE_INFINITY)) {
    if (hiPrec != null) {
        hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
    } 
    return java.lang.Double.POSITIVE_INFINITY;
} 
08:37:09.506 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
08:37:09.532 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:37:09.580 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
08:37:09.587 [Thread-259] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
08:37:09.589 [Thread-259] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:37:09.589 [Thread-259] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:37:09.591 [Thread-260] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(NaN, NaN)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
08:37:09.671 [Thread-260] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:37:09.672 [Thread-260] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (81 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
08:37:09.673 [Thread-261] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
08:37:09.674 [Thread-261] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
08:37:09.674 [Thread-261] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:37:09.675 [Thread-262] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
08:37:09.677 [Thread-262] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
08:37:09.677 [Thread-262] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
08:37:09.677 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1283
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
08:37:09.677 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
08:37:09.677 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
08:37:09.677 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1283 otherwise the patch would be "true" or "false"
08:37:09.677 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1283, Suspiciousness=0.006241350994267897]
08:37:09.677 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1266, Suspiciousness=0.00623613028988775]
08:37:09.678 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 08:37:09,678 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:37:09.685 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
08:37:09.709 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:37:09.753 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
08:37:09.753 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Building Spoon model from /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 08:37:09,770 DEBUG spoon.support.StandardEnvironment - building sources: [/tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 08:37:09,771 DEBUG spoon.support.StandardEnvironment - build args: [-1.7, -preserveAllLocals, -enableJavadoc, -noExit, -cp, /tmp/math_47/target/classes/:/tmp/math_47/target/test-classes/:/tmp/math_47/lib/commons-discovery-0.5.jar:/tmp/math_47/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar, /tmp/math_47/src/main/java/org/apache/commons/math/util/FastMath.java]
2015-03-02 08:37:09,979 DEBUG spoon.support.StandardEnvironment - built in 209 ms
2015-03-02 08:37:09,979 DEBUG spoon.support.StandardEnvironment - building templates: []
2015-03-02 08:37:09,979 DEBUG spoon.support.StandardEnvironment - built in 0 ms
08:37:09.980 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 08:37:09,980 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter'...
08:37:09.984 [main] DEBUG f.i.l.r.n.spoon.ConditionalReplacer - Replacing:
if (x == 0) {
    return java.lang.Double.NEGATIVE_INFINITY;
} 
08:37:09.988 [main] DEBUG f.i.lille.commons.spoon.SpoonedClass - [Scanning source code of org.apache.commons.math.util.FastMath]
08:37:10.014 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:37:10.062 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
08:37:10.069 [Thread-263] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
08:37:10.072 [Thread-263] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#1. FAILED]
08:37:10.072 [Thread-263] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:37:10.074 [Thread-264] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(-1.5707963267948966, 0.5493061443340549)
(-1.5707963267948966, 0.5850356263251273)
(-1.5707963267948966, 0.6263814842476839)
(-1.5707963267948966, 0.6749633584745077)
(-1.5707963267948966, 0.7331685343967135)
(-1.5707963267948966, 0.8047189562170501)
(-1.5707963267948966, 0.8958797346140276)
(-1.5707963267948966, 1.0184409636305198)
(-1.5707963267948966, 1.1989476363991853)
(-1.5707963267948966, 1.522261218861711)
(NaN, NaN)
(0.0, 1.4722194895832204)
(0.0, 1.0986122886681098)
(0.0, 0.8673005276940532)
(0.0, 0.6931471805599453)
(0.0, 0.5493061443340549)
(0.0, 0.4236489301936017)
(0.0, 0.3095196042031116)
(0.0, 0.2027325540540821)
(0.0, 0.10033534773107562)
08:37:10.156 [Thread-264] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#2. FAILED]
08:37:10.156 [Thread-264] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (82 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
08:37:10.158 [Thread-265] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. org.apache.commons.math.complex.ComplexTest#testDivideZero started...]
08:37:10.158 [Thread-265] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#3. FAILED]
08:37:10.158 [Thread-265] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testDivideZero(org.apache.commons.math.complex.ComplexTest)
[expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>]
java.lang.AssertionError: expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:144)
    at org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:37:10.160 [Thread-266] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. org.apache.commons.math.complex.ComplexTest#testAtanI started...]
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(NaN, NaN)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
(Infinity, Infinity)
08:37:10.162 [Thread-266] DEBUG f.i.l.c.t.SpecificationTestCasesListener - [#4. FAILED]
08:37:10.162 [Thread-266] DEBUG f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testAtanI(org.apache.commons.math.complex.ComplexTest)
[null]
java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
08:37:10.162 [main] DEBUG f.i.l.r.n.s.ConstraintModelBuilder - Failing test(s): SourceLocation org.apache.commons.math.util.FastMath:1266
[testDivideZero(org.apache.commons.math.complex.ComplexTest), testAtanI(org.apache.commons.math.complex.ComplexTest)]
08:37:10.162 [main] DEBUG tests.output - First set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
08:37:10.162 [main] DEBUG tests.output - Second set: 
[testDivideZero(org.apache.commons.math.complex.ComplexTest): expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>, testAtanI(org.apache.commons.math.complex.ComplexTest): null]
08:37:10.162 [main] INFO  f.i.l.r.n.synth.DefaultSynthesizer - 0 input values set(s). There are not enough tests for SourceLocation org.apache.commons.math.util.FastMath:1266 otherwise the patch would be "true" or "false"
08:37:10.162 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=1266, Suspiciousness=0.00623613028988775]
08:37:10.162 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=302, Suspiciousness=0.005123289667095406]
08:37:10.162 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 08:37:10,162 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
08:37:10.170 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Scanning source code of org.apache.commons.math.util.FastMath]
08:37:10.194 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compiling 1 source files]
08:37:10.237 [main] DEBUG x.java.compiler.DynamicClassCompiler - [Compilation finished successfully (1 classes)]
08:37:10.237 [main] DEBUG f.i.l.r.n.synth.SynthesizerFactory - No synthetizer found for SourceLocation org.apache.commons.math.util.FastMath:302.
08:37:10.237 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Could not find a patch in GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=302, Suspiciousness=0.005123289667095406]
08:37:10.237 [main] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing GZoltarStatement [ContainingClass=org.apache.commons.math.util.FastMath, LineNumber=3410, Suspiciousness=0.004481377120091212]
08:37:10.238 [main] DEBUG f.i.l.commons.spoon.SpoonedProject - [Spoon processing of org.apache.commons.math.util.FastMath]
2015-03-02 08:37:10,238 DEBUG spoon.support.StandardEnvironment - processing 'FastMath' with 'fr.inria.lille.repair.nopol.synth.BugKindDetector'...
----INFORMATION----
Nb Statements Analyzed : 113
Nb Statements with Angelic Value Found : 0
Nopol Execution time : 3926717ms
